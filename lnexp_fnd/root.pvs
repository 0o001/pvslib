% Define positive roots of non-negative numbers using logarithms and
% prove equivalence betwen root, nn_root, and root_pos

root : THEORY
BEGIN

  IMPORTING ln_exp,
            power@nn_root,
	    reals@root

  nnr,
  nnx : VAR nnreal
  p   : VAR posnat

  root(nnr,p) : {nnx | nnx^p = nnr} =
    IF p = 1 THEN nnr
    ELSIF nnr = 0 THEN 0
    ELSE exp(ln(nnr)/p)
    ENDIF

  root_eq_nn_root : LEMMA
    root(nnr,p) = nn_root(nnr,p)

  root_eq_root_pos : LEMMA
    root(nnr,p) = root_pos(nnr,p)

  root_odd(r:real,(p|r >= 0 OR odd?(p))): {x : real | x = root_real(r)(p)} =
    IF r=0 THEN 0
    ELSIF r>0 THEN root(r,p)
    ELSE -1*root(-r,p) ENDIF

  root_odd_j : JUDGEMENT
    root_odd(r:real,(p|r >= 0 OR odd?(p))) HAS_TYPE
    {x : real | (x=0 IFF r = 0) AND
  	      	(x>0 IFF r>0) AND
		(x<0 IFF r<0) AND
		(x>=0 IFF r>=0) AND
		(x<=0 IFF r<=0) AND
		x^p = r}

END root
