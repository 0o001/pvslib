%% -----------------------------------------------------------------------------
%% segments_2d_trig.pvs              Dependable Computing
%% PVS theory for trig properties of line segments
%% -----------------------------------------------------------------------------

% This theory formalizes a few properties of line segments that
% involve vector-based sine and cosine functions. Most of them
% use trig relationships to identify when a point cannot be found
% on a line segment.

segments_2d_trig: THEORY
  BEGIN

  IMPORTING segments_2d_props;

  subsegment_preserves_sin_cos_1: LEMMA
    FORALL (s, e, h: segment_2d):
      subsegment?(h, s) AND h`p1 = s`p1 IMPLIES
        vsin(^(s`p2 - s`p1), ^(e`p2 - e`p1)) =
          vsin(^(h`p2 - h`p1), ^(e`p2 - e`p1)) AND
        vcos(^(s`p2 - s`p1), ^(e`p2 - e`p1)) =
          vcos(^(h`p2 - h`p1), ^(e`p2 - e`p1))

  subsegment_preserves_sin_cos_2: LEMMA
    FORALL (s, e, h: segment_2d):
      subsegment?(h, e) AND h`p1 = e`p1 IMPLIES
        vsin(^(s`p2 - s`p1), ^(e`p2 - e`p1)) =
          vsin(^(s`p2 - s`p1), ^(h`p2 - h`p1)) AND
        vcos(^(s`p2 - s`p1), ^(e`p2 - e`p1)) =
          vcos(^(s`p2 - s`p1), ^(h`p2 - h`p1))

  subsegment_preserves_sin_cos_both: LEMMA
    FORALL (s, e, g, h: segment_2d):
      subsegment?(g, s) AND g`p1 = s`p1 AND
      subsegment?(h, e) AND h`p1 = e`p1 IMPLIES
        vsin(^(s`p2 - s`p1), ^(e`p2 - e`p1)) =
          vsin(^(g`p2 - g`p1), ^(h`p2 - h`p1)) AND
        vcos(^(s`p2 - s`p1), ^(e`p2 - e`p1)) =
          vcos(^(g`p2 - g`p1), ^(h`p2 - h`p1))

  no_perp_segment_intersection_1: LEMMA     % (u,w), (u,v) in same quadrant
    FORALL (u, v, w: point_2d, q: point_2d, c: posreal):
      u /= v AND v /= w AND w /= u AND q /= u AND
      point_on_segment?(q, (# p1 := u, p2 := v #)) IMPLIES
        LET sin_a = vsin(^(v - u), ^(w - u)),
	    cos_a = vcos(^(v - u), ^(w - u)),
            z = ^(perp_right(v - u)),
            p = q + c * z
	IN  sin_a > 0 AND cos_a > 0 AND
            c < norm(q - u) * sin_a / cos_a 
              IMPLIES NOT point_on_segment?(p, (# p1 := w, p2 := u #))

  no_perp_segment_intersection_2: LEMMA     % (u,w), (u,v) in same quadrant
    FORALL (u, v, w: point_2d, q: point_2d, c: posreal):
      u /= v AND v /= w AND w /= u AND q /= u AND
      point_on_segment?(q, (# p1 := u, p2 := v #)) IMPLIES
        LET sin_a = vsin(^(w - u), ^(v - u)),
	    cos_a = vcos(^(w - u), ^(v - u)),
            z = ^(perp_left(v - u)),
            p = q + c * z
	IN  sin_a > 0 AND cos_a > 0 AND
            c < norm(q - u) * sin_a / cos_a 
              IMPLIES NOT point_on_segment?(p, (# p1 := w, p2 := u #))

  no_perp_segment_intersection_3: LEMMA  % (u,w), (u,v) in different quadrants
    FORALL (u, v, w: point_2d, q: point_2d, c: posreal):
      u /= v AND v /= w AND w /= u AND q /= u AND
      point_on_segment?(q, (# p1 := u, p2 := v #)) IMPLIES
        LET sin_a = vsin(^(v - u), ^(w - u)),
	    cos_a = vcos(^(v - u), ^(w - u)),
            z = ^(perp_right(v - u)),
            p = q + c * z
	IN  (sin_a <= 0 OR cos_a <= 0)
              IMPLIES NOT point_on_segment?(p, (# p1 := w, p2 := u #))

  no_perp_segment_intersection_4: LEMMA  % (u,w), (u,v) in different quadrants
    FORALL (u, v, w: point_2d, q: point_2d, c: posreal):
      u /= v AND v /= w AND w /= u AND q /= u AND
      point_on_segment?(q, (# p1 := u, p2 := v #)) IMPLIES
        LET sin_a = vsin(^(w - u), ^(v - u)),
	    cos_a = vcos(^(w - u), ^(v - u)),
            z = ^(perp_left(v - u)),
            p = q + c * z
	IN  (sin_a <= 0 OR cos_a <= 0)
              IMPLIES NOT point_on_segment?(p, (# p1 := w, p2 := u #))

  no_perp_mid_segment_intersection_1: LEMMA    % (u,w), (u,v) in same quadrant
    FORALL (u, v, w: point_2d, c, d: posreal):
      u /= v AND v /= w AND w /= u AND d <= 1 IMPLIES
        LET sin_a = vsin(^(v - u), ^(w - u)),
	    cos_a = vcos(^(v - u), ^(w - u)),
            m = 1/2 * (u + v),
            z = ^(perp_right(v - u)),
            p = m + d * c * z
	IN  sin_a > 0 AND cos_a > 0 AND
            c < 1/2 * norm(v - u) * sin_a / cos_a 
              IMPLIES NOT point_on_segment?(p, (# p1 := w, p2 := u #))

  no_perp_mid_segment_intersection_2: LEMMA    % (u,w), (u,v) in same quadrant
    FORALL (u, v, w: point_2d, c, d: posreal):
      u /= v AND v /= w AND w /= u AND d <= 1 IMPLIES
        LET sin_a = vsin(^(w - u), ^(v - u)),
	    cos_a = vcos(^(w - u), ^(v - u)),
            m = 1/2 * (u + v),
            z = ^(perp_left(v - u)),
            p = m + d * c * z
	IN  sin_a > 0 AND cos_a > 0 AND
            c < 1/2 * norm(v - u) * sin_a / cos_a 
              IMPLIES NOT point_on_segment?(p, (# p1 := w, p2 := u #))

END segments_2d_trig
