International Allegro CL Enterprise Edition
10.1 [64-bit Linux (x86-64)] (Nov 14, 2020 18:29)
Copyright (C) 1985-2017, Franz Inc., Oakland, CA, USA.  All Rights Reserved.

This dynamic runtime copy of Allegro CL was built by:
   [TC21720] SRI International

;; Optimization settings: safety 1, space 1, speed 3, debug 1.
;; For a complete description of all compiler switches given the
;; current optimization settings evaluate (explain-compiler-settings).
;;---
;; Current reader case mode: :case-sensitive-lower

sklisp exists as a strategy.
Redefining sklisp. 
extra-evalexprs exists as a defined rule.
Redefining extra-evalexprs. 
extra-evalexprs$ exists as a strategy.
Redefining extra-evalexprs$. 
printf exists as a strategy.
Redefining printf. 
commentf exists as a strategy.
Redefining commentf. 
now exists as a strategy.
Redefining now. 
unlabel* exists as a defined rule.
Redefining unlabel*. 
unlabel*$ exists as a strategy.
Redefining unlabel*$. 
delabel exists as a defined rule.
Redefining delabel. 
delabel$ exists as a strategy.
Redefining delabel$. 
relabel__ exists as a defined rule.
Redefining relabel__. 
relabel__$ exists as a strategy.
Redefining relabel__$. 
relabel exists as a defined rule.
Redefining relabel. 
relabel$ exists as a strategy.
Redefining relabel$. 
name-label exists as a defined rule.
Redefining name-label. 
name-label$ exists as a strategy.
Redefining name-label$. 
name-label* exists as a defined rule.
Redefining name-label*. 
name-label*$ exists as a strategy.
Redefining name-label*$. 
name-replace* exists as a defined rule.
Redefining name-replace*. 
name-replace*$ exists as a strategy.
Redefining name-replace*$. 
discriminate exists as a defined rule.
Redefining discriminate. 
discriminate$ exists as a strategy.
Redefining discriminate$. 
mapstep exists as a strategy.
Redefining mapstep. 
mapstep@ exists as a strategy.
Redefining mapstep@. 
with-fresh-labels-tccs__ exists as a defined rule.
Redefining with-fresh-labels-tccs__. 
with-fresh-labels-tccs__$ exists as a strategy.
Redefining with-fresh-labels-tccs__$. 
with-fresh-labels__ exists as a defined rule.
Redefining with-fresh-labels__. 
with-fresh-labels__$ exists as a strategy.
Redefining with-fresh-labels__$. 
with-fresh-labels exists as a strategy.
Redefining with-fresh-labels. 
with-fresh-labels@ exists as a strategy.
Redefining with-fresh-labels@. 
with-fresh-names-expand__ exists as a defined rule.
Redefining with-fresh-names-expand__. 
with-fresh-names-expand__$ exists as a strategy.
Redefining with-fresh-names-expand__$. 
with-fresh-names__ exists as a defined rule.
Redefining with-fresh-names__. 
with-fresh-names__$ exists as a strategy.
Redefining with-fresh-names__$. 
with-fresh-names exists as a strategy.
Redefining with-fresh-names. 
with-fresh-names@ exists as a strategy.
Redefining with-fresh-names@. 
copy__ exists as a defined rule.
Redefining copy__. 
copy__$ exists as a strategy.
Redefining copy__$. 
copy* exists as a defined rule.
Redefining copy*. 
copy*$ exists as a strategy.
Redefining copy*$. 
protect exists as a defined rule.
Redefining protect. 
protect$ exists as a strategy.
Redefining protect$. 
with-focus-on__ exists as a defined rule.
Redefining with-focus-on__. 
with-focus-on__$ exists as a strategy.
Redefining with-focus-on__$. 
with-focus-on exists as a strategy.
Redefining with-focus-on. 
with-focus-on@ exists as a strategy.
Redefining with-focus-on@. 
localtactic__ exists as a defined rule.
Redefining localtactic__. 
localtactic__$ exists as a strategy.
Redefining localtactic__$. 
deftactic exists as a defined rule.
Redefining deftactic. 
Changed rule trust!
trust-branch! exists as a strategy.
Redefining trust-branch!. 
extra-tcc-step exists as a strategy.
Redefining extra-tcc-step. 
relabel-hide__ exists as a defined rule.
Redefining relabel-hide__. 
relabel-hide__$ exists as a strategy.
Redefining relabel-hide__$. 
tccs-expression exists as a defined rule.
Redefining tccs-expression. 
tccs-formula__ exists as a defined rule.
Redefining tccs-formula__. 
tccs-formula__$ exists as a strategy.
Redefining tccs-formula__$. 
tccs-formula*__ exists as a defined rule.
Redefining tccs-formula*__. 
tccs-formula*__$ exists as a strategy.
Redefining tccs-formula*__$. 
tccs-formula* exists as a defined rule.
Redefining tccs-formula*. 
tccs-formula exists as a defined rule.
Redefining tccs-formula. 
tccs-formula$ exists as a strategy.
Redefining tccs-formula$. 
tccs-step exists as a defined rule.
Redefining tccs-step. 
if-tcc-sequent exists as a strategy.
Redefining if-tcc-sequent. 
with-tccs exists as a defined rule.
Redefining with-tccs. 
with-tccs$ exists as a strategy.
Redefining with-tccs$. 
try@ exists as a strategy.
Redefining try@. 
try-then__ exists as a defined rule.
Redefining try-then__. 
try-then__$ exists as a strategy.
Redefining try-then__$. 
try-then exists as a strategy.
Redefining try-then. 
try-then@ exists as a strategy.
Redefining try-then@. 
finalize__ exists as a defined rule.
Redefining finalize__. 
finalize__$ exists as a strategy.
Redefining finalize__$. 
finalize exists as a strategy.
Redefining finalize. 
finalize* exists as a strategy.
Redefining finalize*. 
touch exists as a defined rule.
Redefining touch. 
touch$ exists as a strategy.
Redefining touch$. 
when exists as a strategy.
Redefining when. 
when@ exists as a strategy.
Redefining when@. 
unless exists as a strategy.
Redefining unless. 
unless@ exists as a strategy.
Redefining unless@. 
when-label__ exists as a defined rule.
Redefining when-label__. 
when-label__$ exists as a strategy.
Redefining when-label__$. 
when-label exists as a strategy.
Redefining when-label. 
when-label@ exists as a strategy.
Redefining when-label@. 
unless-label__ exists as a defined rule.
Redefining unless-label__. 
unless-label__$ exists as a strategy.
Redefining unless-label__$. 
unless-label exists as a strategy.
Redefining unless-label. 
unless-label@ exists as a strategy.
Redefining unless-label@. 
if-label exists as a strategy.
Redefining if-label. 
for__ exists as a defined rule.
Redefining for__. 
for__$ exists as a strategy.
Redefining for__$. 
for exists as a defined rule.
Redefining for. 
for$ exists as a strategy.
Redefining for$. 
for@__ exists as a defined rule.
Redefining for@__. 
for@__$ exists as a strategy.
Redefining for@__$. 
for@ exists as a defined rule.
Redefining for@. 
for@$ exists as a strategy.
Redefining for@$. 
skeep exists as a defined rule.
Redefining skeep. 
skeep$ exists as a strategy.
Redefining skeep$. 
skeep* exists as a defined rule.
Redefining skeep*. 
skeep*$ exists as a strategy.
Redefining skeep*$. 
insteep exists as a defined rule.
Redefining insteep. 
insteep$ exists as a strategy.
Redefining insteep$. 
insteep* exists as a defined rule.
Redefining insteep*. 
insteep*$ exists as a strategy.
Redefining insteep*$. 
unroll-inst__ exists as a defined rule.
Redefining unroll-inst__. 
unroll-inst__$ exists as a strategy.
Redefining unroll-inst__$. 
unroll-skl__ exists as a defined rule.
Redefining unroll-skl__. 
unroll-skl__$ exists as a strategy.
Redefining unroll-skl__$. 
unroll exists as a defined rule.
Redefining unroll. 
unroll$ exists as a strategy.
Redefining unroll$. 
skoletin__ exists as a defined rule.
Redefining skoletin__. 
skoletin__$ exists as a strategy.
Redefining skoletin__$. 
skoletin exists as a defined rule.
Redefining skoletin. 
skoletin$ exists as a strategy.
Redefining skoletin$. 
skoletin* exists as a defined rule.
Redefining skoletin*. 
skoletin*$ exists as a strategy.
Redefining skoletin*$. 
redlet__ exists as a defined rule.
Redefining redlet__. 
redlet__$ exists as a strategy.
Redefining redlet__$. 
redlet exists as a defined rule.
Redefining redlet. 
redlet$ exists as a strategy.
Redefining redlet$. 
redlet* exists as a defined rule.
Redefining redlet*. 
redlet*$ exists as a strategy.
Redefining redlet*$. 
skodef__ exists as a defined rule.
Redefining skodef__. 
skodef__$ exists as a strategy.
Redefining skodef__$. 
skodef exists as a defined rule.
Redefining skodef. 
skodef$ exists as a strategy.
Redefining skodef$. 
skodef* exists as a defined rule.
Redefining skodef*. 
skodef*$ exists as a strategy.
Redefining skodef*$. 
cut exists as a defined rule.
Redefining cut. 
cut$ exists as a strategy.
Redefining cut$. 
splash__ exists as a defined rule.
Redefining splash__. 
splash__$ exists as a strategy.
Redefining splash__$. 
splash exists as a defined rule.
Redefining splash. 
splash$ exists as a strategy.
Redefining splash$. 
replaces exists as a defined rule.
Redefining replaces. 
replaces$ exists as a strategy.
Redefining replaces$. 
rewrites exists as a defined rule.
Redefining rewrites. 
rewrites$ exists as a strategy.
Redefining rewrites$. 
rewrite* exists as a defined rule.
Redefining rewrite*. 
rewrite*$ exists as a strategy.
Redefining rewrite*$. 
suffices exists as a defined rule.
Redefining suffices. 
suffices$ exists as a strategy.
Redefining suffices$. 
extrategies-about exists as a strategy.
Redefining extrategies-about. 
eval-expr exists as a defined rule.
Redefining eval-expr. 
eval-formula exists as a defined rule.
Redefining eval-formula. 
eval exists as a defined rule.
Redefining eval. 
eval-formula* exists as a defined rule.
Redefining eval-formula*. 
eval-formula*$ exists as a strategy.
Redefining eval-formula*$. 
skip-steps exists as a defined rule.
Redefining skip-steps. 
skip-steps$ exists as a strategy.
Redefining skip-steps$. 
show-debug-mode exists as a strategy.
Redefining show-debug-mode. 
toggle-debug-mode exists as a strategy.
Redefining toggle-debug-mode. 
Defining metit. 
*** 
*** Processing structures (19:38:18 5/31/2021)
*** Generated by proveit 7.1.0 (Nov 05, 2020)
*** 
Context changed to ~/Documents/3A/Stage/PVS/nasalib/structures/
Parsing top
top parsed in 0.02 seconds
Typechecking top
Parsing const_fun_def
const_fun_def parsed in 0.01 seconds
const_fun_def is already parsed
Typechecking const_fun_def
const_fun_def typechecked in 0.07s: No TCCs generated
Parsing function_image_bis
function_image_bis parsed in 0.03 seconds
function_image_bis is already parsed
Typechecking function_image_bis
function_image_bis typechecked in 0.11s: 1 TCC, 0 proved, 0 subsumed, 1 unproved
Parsing function_inverse_alt_aux
function_inverse_alt_aux parsed in 0.01 seconds
function_inverse_alt_aux is already parsed
Typechecking function_inverse_alt_aux
function_inverse_alt_aux typechecked in 0.04s: 2 TCCs, 0 proved, 0 subsumed, 2 unproved
Parsing function_props_aux
function_props_aux parsed in 0.01 seconds
function_props_aux is already parsed
Typechecking function_props_aux
function_props_aux typechecked in 0.07s: 3 TCCs, 0 proved, 0 subsumed, 3 unproved
Parsing finite_index
finite_index parsed in 0.01 seconds
finite_index is already parsed
Typechecking finite_index

 LET/WHERE variable PI at line 20, col 29 is given type
  set[(S1)] from its value expression.

finite_index typechecked in 0.10s: No TCCs generated; 1 msg
Parsing top_array
top_array parsed in 0.00 seconds
top_array is already parsed
Typechecking top_array
Parsing min_array
min_array parsed in 0.02 seconds
min_array is already parsed
Typechecking min_array
Parsing min_array_def
min_array_def parsed in 0.01 seconds
min_array_def is already parsed
Typechecking min_array_def
Parsing below_arrays
below_arrays parsed in 0.01 seconds
below_arrays is already parsed
Typechecking below_arrays
below_arrays typechecked in 0.01s: No TCCs generated
Parsing max_array_def
max_array_def parsed in 0.02 seconds
max_array_def is already parsed
Typechecking max_array_def
max_array_def typechecked in 0.15s: 6 TCCs, 0 proved, 0 subsumed, 6 unproved
min_array_def typechecked in 0.28s: 4 TCCs, 0 proved, 0 subsumed, 4 unproved
min_array typechecked in 0.43s: 6 TCCs, 0 proved, 2 subsumed, 4 unproved
Parsing max_array
max_array parsed in 0.02 seconds
max_array is already parsed
Typechecking max_array
max_array typechecked in 0.12s: 6 TCCs, 0 proved, 2 subsumed, 4 unproved
Parsing permutations
permutations parsed in 0.01 seconds
permutations is already parsed
Typechecking permutations
permutations typechecked in 0.02s: No TCCs generated
Parsing sort_array
sort_array parsed in 0.02 seconds
sort_array is already parsed
Typechecking sort_array
Parsing sort_array_def
sort_array_def parsed in 0.02 seconds
sort_array_def is already parsed
Typechecking sort_array_def
sort_array_def typechecked in 0.21s: 10 TCCs, 0 proved, 5 subsumed, 5 unproved
sort_array typechecked in 0.37s: 3 TCCs, 0 proved, 0 subsumed, 3 unproved
Parsing sort_array_lems
sort_array_lems parsed in 0.01 seconds
sort_array_lems is already parsed
Typechecking sort_array_lems
sort_array_lems typechecked in 0.09s: 2 TCCs, 0 proved, 0 subsumed, 2 unproved
Parsing array_ops
array_ops parsed in 0.04 seconds
array_ops is already parsed
Typechecking array_ops
Parsing caret_arrays
caret_arrays parsed in 0.01 seconds
caret_arrays is already parsed
Typechecking caret_arrays
Parsing empty_array_def
empty_array_def parsed in 0.00 seconds
empty_array_def is already parsed
Typechecking empty_array_def
empty_array_def typechecked in 0.01s: 1 TCC, 0 proved, 0 subsumed, 1 unproved

 LET/WHERE variable m at line 13, col 28 is given type
  nat from its value expression.


 LET/WHERE variable n at line 13, col 31 is given type
  below[N] from its value expression.


 LET/WHERE variable m at line 13, col 28 is given type
  nat from its value expression.


 LET/WHERE variable n at line 13, col 31 is given type
  below[N] from its value expression.


 LET/WHERE variable m at line 16, col 11 is given type
  nat from its value expression.


 LET/WHERE variable n at line 16, col 14 is given type
  below[N] from its value expression.

caret_arrays typechecked in 0.36s: 9 TCCs, 0 proved, 0 subsumed, 9 unproved; 6 msgs
Parsing concat_arrays
concat_arrays parsed in 0.01 seconds
concat_arrays is already parsed
Typechecking concat_arrays
concat_arrays typechecked in 0.15s: 6 TCCs, 0 proved, 0 subsumed, 6 unproved
array_ops typechecked in 1.83s: 26 TCCs, 0 proved, 2 subsumed, 24 unproved
Parsing majority_array
majority_array parsed in 0.02 seconds
majority_array is already parsed
Typechecking majority_array
Restored theory from /home/cblaudeau/Documents/3A/Stage/PVS/pvs-7.1.0/lib/finite_sets/pvsbin/finite_sets_below.bin in 0.23s (load part took 0.02s)
majority_array typechecked in 0.38s: 2 TCCs, 0 proved, 0 subsumed, 2 unproved
top_array typechecked in 3.41s: No TCCs generated
Parsing top_seq
top_seq parsed in 0.02 seconds
top_seq is already parsed
Typechecking top_seq
Parsing seqs
seqs parsed in 0.01 seconds
seqs is already parsed
Typechecking seqs
seqs typechecked in 0.10s: 2 TCCs, 0 proved, 0 subsumed, 2 unproved
Parsing max_seq
max_seq parsed in 0.02 seconds
max_seq is already parsed
Typechecking max_seq
max_seq typechecked in 0.35s: 10 TCCs, 0 proved, 2 subsumed, 8 unproved
Parsing min_seq
min_seq parsed in 0.02 seconds
min_seq is already parsed
Typechecking min_seq
min_seq typechecked in 0.38s: 10 TCCs, 0 proved, 2 subsumed, 8 unproved
Parsing permutations_seq
permutations_seq parsed in 0.01 seconds
permutations_seq is already parsed
Typechecking permutations_seq
Restored theory from /home/cblaudeau/Documents/3A/Stage/PVS/pvs-7.1.0/lib/finite_sets/pvsbin/func_composition.bin in 0.14s (load part took 0.01s)
Restored theory from /home/cblaudeau/Documents/3A/Stage/PVS/pvs-7.1.0/lib/finite_sets/pvsbin/finite_sets_card_eq.bin in 0.13s (load part took 0.01s)
permutations_seq typechecked in 0.32s: No TCCs generated
Parsing majority_seq
majority_seq parsed in 0.02 seconds
majority_seq is already parsed
Typechecking majority_seq
majority_seq typechecked in 0.18s: 2 TCCs, 0 proved, 0 subsumed, 2 unproved
Parsing bubblesort
bubblesort parsed in 0.01 seconds
bubblesort is already parsed
Typechecking bubblesort
Parsing sort_inversions
sort_inversions parsed in 0.02 seconds
sort_inversions is already parsed
Typechecking sort_inversions
Parsing permutation_ops
permutation_ops parsed in 0.01 seconds
permutation_ops is already parsed
Typechecking permutation_ops
Parsing permutation
permutation parsed in 0.01 seconds
permutation is already parsed
Typechecking permutation
permutation typechecked in 0.13s: 2 TCCs, 0 proved, 0 subsumed, 2 unproved

 In declaration IMPORTING sort_array[N, below(N), <=]:
  added conversion restrict[[real, real], [below(N), below(N)], bool]
             
  to <=, converting
     [[real, real] -> bool]
  to [[below(N), below(N)] -> bool]

permutation_ops typechecked in 0.33s: No TCCs generated; 1 conversion
sort_inversions typechecked in 0.69s: 10 TCCs, 0 proved, 7 subsumed, 3 unproved

 LET/WHERE variable j at line 23, col 28 is given type
  below(N) from a preceding variable declaration.

bubblesort typechecked in 0.94s: 6 TCCs, 0 proved, 2 subsumed, 4 unproved; 1 msg
Parsing sort_seq
sort_seq parsed in 0.02 seconds
sort_seq is already parsed
Typechecking sort_seq
sort_seq typechecked in 0.38s: 10 TCCs, 0 proved, 2 subsumed, 8 unproved
Parsing sort_seq_lems
sort_seq_lems parsed in 0.00 seconds
sort_seq_lems is already parsed
Typechecking sort_seq_lems
sort_seq_lems typechecked in 0.14s: 2 TCCs, 0 proved, 0 subsumed, 2 unproved
Parsing set2seq
set2seq parsed in 0.01 seconds
set2seq is already parsed
Typechecking set2seq
Restored theory from /home/cblaudeau/Documents/3A/Stage/PVS/pvs-7.1.0/lib/finite_sets/pvsbin/finite_sets_inductions.bin in 0.15s (load part took 0.01s)

 In declaration gen_seq_lem:
  added conversion finseq_appl[T]
             
  to  #(x), converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 LET/WHERE variable fs at line 30, col 26 is given type
  finite_sequence[T] from a preceding variable declaration.


 In declaration set2seq_lem:
  added conversion finseq_appl[T]
             
  to fs, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 LET/WHERE variable fs at line 33, col 29 is given type
  finite_sequence[T] from a preceding variable declaration.


 In declaration set2seq_exists:
  added conversion finseq_appl[T]
             
  to fs, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 LET/WHERE variable fs at line 39, col 29 is given type
  finite_sequence[T] from a preceding variable declaration.


 In declaration set2seq_neq:
  added conversion finseq_appl[T]
             
  to fs, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration set2seq_neq:
  added conversion finseq_appl[T]
             
  to fs, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]

set2seq typechecked in 0.30s: 3 TCCs, 0 proved, 0 subsumed, 3 unproved; 5 conversions; 3 msgs
Restored theory from /home/cblaudeau/Documents/3A/Stage/PVS/pvs-7.1.0/lib/finite_sets/pvsbin/finite_sets_minmax.bin in 0.17s (load part took 0.02s)
minmax_set2seq typechecked in 0.36s: 4 TCCs, 0 proved, 2 subsumed, 2 unproved
Parsing seq2set
seq2set parsed in 0.01 seconds
seq2set is already parsed
Typechecking seq2set

 In declaration seq2set:
  added conversion finseq_appl[T]
             
  to fs, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration seq2set_lem:
  added conversion finseq_appl[T]
             
  to fs, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]

seq2set typechecked in 0.05s: 2 TCCs, 0 proved, 0 subsumed, 2 unproved; 2 conversions
minmax_seq2set typechecked in 0.14s: 2 TCCs, 0 proved, 1 subsumed, 1 unproved
Parsing seq_extras
seq_extras parsed in 0.08 seconds
seq_extras is already parsed
Typechecking seq_extras

 In declaration first:
  added conversion finseq_appl[T]
             
  to seq, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration last:
  added conversion finseq_appl[T]
             
  to seq, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration delete:
  added conversion finseq_appl[T]
             
  to seq, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration delete:
  added conversion finseq_appl[T]
             
  to seq, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration insert?:
  added conversion finseq_appl[T]
             
  to seq, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration insert?:
  added conversion finseq_appl[T]
             
  to seq, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration replace:
  added conversion finseq_appl[T]
             
  to seq, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration replace:
  added conversion finseq_appl[T]
             
  to seq, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration replace_seq:
  added conversion finseq_appl[T]
             
  to seq1, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration replace_seq:
  added conversion finseq_appl[T]
             
  to seq2, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration different_elements:
  added conversion finseq_appl[T]
             
  to seq, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration different_elements:
  added conversion finseq_appl[T]
             
  to seq, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration equivalent:
  added conversion finseq_appl[T]
             
  to seq1, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration equivalent:
  added conversion finseq_appl[T]
             
  to seq2, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration nth_add_first:
  added conversion finseq_appl[T]
             
  to add_first(x, seq), converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration nth_add_first:
  added conversion finseq_appl[T]
             
  to add_first(x, seq), converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration nth_add_first:
  added conversion finseq_appl[T]
             
  to seq, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration add_last_delete_is_o:
  added conversion finseq_appl[T]
             
  to seq, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration nth_add_last:
  added conversion finseq_appl[T]
             
  to add_last(seq, x), converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration nth_add_last:
  added conversion finseq_appl[T]
             
  to add_last(seq, x), converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration nth_add_last:
  added conversion finseq_appl[T]
             
  to seq, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration rest_pos:
  added conversion finseq_appl[T]
             
  to rest(seq), converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration rest_pos:
  added conversion finseq_appl[T]
             
  to seq, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration delete_pos:
  added conversion finseq_appl[T]
             
  to delete(seq, length(seq) - 1), converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration delete_pos:
  added conversion finseq_appl[T]
             
  to seq, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration insert_delete:
  added conversion finseq_appl[T]
             
  to seq, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration add_first_delete:
  added conversion finseq_appl[T]
             
  to seq, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration nth_x:
  added conversion finseq_appl[T]
             
  to replace(x, seq, n), converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration replace_nth:
  added conversion finseq_appl[T]
             
  to seq, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration delete_equivalent:
  added conversion finseq_appl[T]
             
  to seq1, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]


 In declaration delete_equivalent:
  added conversion finseq_appl[T]
             
  to seq2, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]

seq_extras typechecked in 1.08s: 40 TCCs, 0 proved, 9 subsumed, 31 unproved; 31 conversions
Parsing seq_pigeon
seq_pigeon parsed in 0.01 seconds
seq_pigeon is already parsed
Typechecking seq_pigeon

 In declaration seq_pigeon_lem:
  added conversion finseq_appl[(S)]
             
  to w, converting
     fs: finseq[(S)]
  to [below[length(fs)] -> (S)]


 In declaration seq_pigeon_lem:
  added conversion finseq_appl[(S)]
             
  to w, converting
     fs: finseq[(S)]
  to [below[length(fs)] -> (S)]


 In declaration seq_pigeon_hole:
  added conversion finseq_appl[(S)]
             
  to w, converting
     fs: finseq[(S)]
  to [below[length(fs)] -> (S)]


 In declaration seq_pigeon_hole:
  added conversion finseq_appl[(S)]
             
  to w, converting
     fs: finseq[(S)]
  to [below[length(fs)] -> (S)]

seq_pigeon typechecked in 0.07s: No TCCs generated; 4 conversions
top_seq typechecked in 5.15s: No TCCs generated
Parsing top_bags
top_bags parsed in 0.00 seconds
top_bags is already parsed
Typechecking top_bags
Parsing bags_aux
bags_aux parsed in 0.01 seconds
bags_aux is already parsed
Typechecking bags_aux
Parsing bags
bags parsed in 0.05 seconds
bags is already parsed
Typechecking bags
bags typechecked in 0.26s: 2 TCCs, 0 proved, 0 subsumed, 2 unproved
Parsing bags_to_sets
bags_to_sets parsed in 0.04 seconds
bags_to_sets is already parsed
Typechecking bags_to_sets
bags_to_sets typechecked in 0.09s: No TCCs generated
bags_aux typechecked in 0.50s: 2 TCCs, 0 proved, 0 subsumed, 2 unproved
Parsing finite_bags_lems
finite_bags_lems parsed in 0.01 seconds
finite_bags_lems is already parsed
Typechecking finite_bags_lems
Parsing finite_bags
finite_bags parsed in 0.05 seconds
finite_bags is already parsed
Typechecking finite_bags
Parsing finite_sets_sum_real
finite_sets_sum_real parsed in 0.04 seconds
finite_sets_sum_real is already parsed
Typechecking finite_sets_sum_real
Parsing finite_sets_sum
finite_sets_sum parsed in 0.04 seconds
finite_sets_sum is already parsed
Typechecking finite_sets_sum
finite_sets_sum typechecked in 0.23s: 3 TCCs, 0 proved, 0 subsumed, 3 unproved

 In declaration IMPORTING finite_sets_sum[T, real, 0, +]:
  added conversion restrict
                       [[numfield, numfield], [real, real], numfield]
             
  to +, converting
     [[numfield, numfield] -> numfield]
  to [[real, real] -> numfield]

Parsing prelude_aux
prelude_aux parsed in 0.00 seconds
prelude_aux is already parsed
Typechecking prelude_aux
prelude_aux typechecked in 0.01s: 1 TCC, 0 proved, 0 subsumed, 1 unproved

 The generated TCCs for judgement sum
might be easier to prove using a RECURSIVE judgement.
(for backward compatibility, this is not generated by default).


 The generated TCCs for judgement sum
might be easier to prove using a RECURSIVE judgement.
(for backward compatibility, this is not generated by default).


 The generated TCCs for judgement sum
might be easier to prove using a RECURSIVE judgement.
(for backward compatibility, this is not generated by default).


 The generated TCCs for judgement sum
might be easier to prove using a RECURSIVE judgement.
(for backward compatibility, this is not generated by default).


 The generated TCCs for judgement sum
might be easier to prove using a RECURSIVE judgement.
(for backward compatibility, this is not generated by default).


 Judgement finite_sets_sum_real.sum (line 107) is not needed;
it is subsumed by finite_sets_sum_real.sum (line 79)


 The generated TCCs for judgement sum
might be easier to prove using a RECURSIVE judgement.
(for backward compatibility, this is not generated by default).

finite_sets_sum_real typechecked in 1.43s: 8 TCCs, 0 proved, 0 subsumed, 8 unproved; 1 conversion; 2 warnings
Saving bin file for theory finite_sets_sum_real

Saving finite_sets_sum_real
Saving bin file for theory prelude_aux

Saving prelude_aux
Saving bin file for theory finite_sets_sum

Saving finite_sets_sum
Context file /home/cblaudeau/Documents/3A/Stage/PVS/pvs-7.1.0/lib/finite_sets/.pvscontext written

 Judgement at line 81 may lead to unprovable TCCs
See language document for details.

finite_bags typechecked in 2.29s: 16 TCCs, 0 proved, 0 subsumed, 16 unproved; 1 warning
Parsing finite_bags_inductions
finite_bags_inductions parsed in 0.01 seconds
finite_bags_inductions is already parsed
Typechecking finite_bags_inductions
Parsing finite_bags_aux
finite_bags_aux parsed in 0.01 seconds
finite_bags_aux is already parsed
Typechecking finite_bags_aux
finite_bags_aux typechecked in 0.17s: 2 TCCs, 0 proved, 0 subsumed, 2 unproved
finite_bags_inductions typechecked in 0.27s: No TCCs generated
finite_bags_lems typechecked in 2.83s: No TCCs generated
Parsing fault_masking_vote
fault_masking_vote parsed in 0.00 seconds
fault_masking_vote is already parsed
Typechecking fault_masking_vote
Parsing majority_vote
majority_vote parsed in 0.01 seconds
majority_vote is already parsed
Typechecking majority_vote
majority_vote typechecked in 0.16s: No TCCs generated
Parsing middle_value_select
middle_value_select parsed in 0.02 seconds
middle_value_select is already parsed
Typechecking middle_value_select
Parsing bag_filters
bag_filters parsed in 0.06 seconds
bag_filters is already parsed
Typechecking bag_filters
Parsing finite_bags_minmax
finite_bags_minmax parsed in 0.02 seconds
finite_bags_minmax is already parsed
Typechecking finite_bags_minmax
finite_bags_minmax typechecked in 0.19s: 2 TCCs, 0 proved, 1 subsumed, 1 unproved
Parsing finite_sets_pred
finite_sets_pred parsed in 0.01 seconds
finite_sets_pred is already parsed
Typechecking finite_sets_pred
finite_sets_pred typechecked in 0.05s: 2 TCCs, 0 proved, 0 subsumed, 2 unproved
Saving bin file for theory finite_sets_pred

Saving finite_sets_pred
Context file /home/cblaudeau/Documents/3A/Stage/PVS/pvs-7.1.0/lib/finite_sets/.pvscontext written
bag_filters typechecked in 0.96s: 2 TCCs, 0 proved, 0 subsumed, 2 unproved
middle_value_select typechecked in 1.25s: No TCCs generated
fault_masking_vote typechecked in 1.60s: No TCCs generated
top_bags typechecked in 5.03s: No TCCs generated
Parsing more_list_props
more_list_props parsed in 0.56 seconds
more_list_props is already parsed
Typechecking more_list_props

 LET/WHERE variable m at line 78, col 9 is given type
  nat from its value expression.


 LET/WHERE variable n at line 78, col 12 is given type
  nat from its value expression.
;;; GC:;;; Finished GC


 In declaration every_parm:
  added conversion restrict[T, (P), bool]
             
  to Q, converting
     [T -> bool]
  to [(P) -> bool]


 LET/WHERE variable FL at line 605, col 9 is given type
  list[T] from its value expression.

more_list_props typechecked in 4.11s: 128 TCCs, 0 proved, 32 subsumed, 96 unproved; 1 conversion; 3 msgs
Parsing list2set_props
list2set_props parsed in 0.01 seconds
list2set_props is already parsed
Typechecking list2set_props
list2set_props typechecked in 0.05s: No TCCs generated
Parsing listn
listn parsed in 0.01 seconds
listn is already parsed
Typechecking listn

 LET/WHERE variable fslist at line 35, col 8 is given type
  list[T] from its value expression.

listn typechecked in 0.23s: 11 TCCs, 0 proved, 0 subsumed, 11 unproved; 1 msg
Parsing array2list
array2list parsed in 0.02 seconds
array2list is already parsed
Typechecking array2list
array2list typechecked in 0.41s: 18 TCCs, 0 proved, 1 subsumed, 17 unproved
Parsing set_as_list
set_as_list parsed in 0.06 seconds
set_as_list is already parsed
Typechecking set_as_list
set_as_list typechecked in 0.90s: 44 TCCs, 0 proved, 10 subsumed, 34 unproved
Parsing set_as_list_props
set_as_list_props parsed in 0.03 seconds
set_as_list_props is already parsed
Typechecking set_as_list_props

 Judgement at line 49 may lead to unprovable TCCs
See language document for details.


 Judgement at line 66 may lead to unprovable TCCs
See language document for details.


 Judgement at line 71 may lead to unprovable TCCs
See language document for details.


 The generated TCCs for judgement reduce_sl_no_rep
might be easier to prove using a RECURSIVE judgement.
(for backward compatibility, this is not generated by default).

set_as_list_props typechecked in 0.60s: 4 TCCs, 0 proved, 0 subsumed, 4 unproved; 4 warnings
Parsing ordered_list
ordered_list parsed in 0.02 seconds
ordered_list is already parsed
Typechecking ordered_list

 Expression judgement ol_is_l at line 24 the expr type:
  ordered_list
 is already known to be a subtype of
  list[T]
This judgement will not be used

ordered_list typechecked in 0.22s: 20 TCCs, 0 proved, 5 subsumed, 15 unproved; 1 warning
Parsing indexed_list
indexed_list parsed in 0.02 seconds
indexed_list is already parsed
Typechecking indexed_list
indexed_list typechecked in 0.30s: 10 TCCs, 0 proved, 0 subsumed, 10 unproved
Parsing list_exp_ol
list_exp_ol parsed in 0.01 seconds
list_exp_ol is already parsed
Typechecking list_exp_ol
list_exp_ol typechecked in 0.06s: 2 TCCs, 0 proved, 1 subsumed, 1 unproved
Parsing subrange_list
subrange_list parsed in 0.01 seconds
subrange_list is already parsed
Typechecking subrange_list
subrange_list typechecked in 0.19s: 9 TCCs, 0 proved, 1 subsumed, 8 unproved
Parsing for_iterate
for_iterate parsed in 0.12 seconds
for_iterate is already parsed
Typechecking for_iterate
for_iterate typechecked in 1.88s: 74 TCCs, 0 proved, 14 subsumed, 60 unproved
Parsing for_examples
for_examples parsed in 0.06 seconds
for_examples is already parsed
Typechecking for_examples
Restored theory from /home/cblaudeau/Documents/3A/Stage/PVS/nasalib/ints/pvsbin/factorial.bin in 0.15s (load part took 0.01s)
Parsing Maybe
Maybe parsed in 0.01 seconds
Maybe is already parsed
Typechecking Maybe
Maybe typechecked in 0.08s: 1 TCC, 0 proved, 0 subsumed, 1 unproved
for_examples typechecked in 1.20s: 23 TCCs, 0 proved, 10 subsumed, 13 unproved
Parsing big_ops_nat
big_ops_nat parsed in 0.09 seconds
big_ops_nat is already parsed
Typechecking big_ops_nat
big_ops_nat typechecked in 0.44s: 9 TCCs, 0 proved, 3 subsumed, 6 unproved
Parsing arrays
arrays parsed in 0.01 seconds
arrays is already parsed
Typechecking arrays
arrays typechecked in 0.03s: 1 TCC, 0 proved, 0 subsumed, 1 unproved
Parsing arrays_examples
arrays_examples parsed in 0.01 seconds
arrays_examples is already parsed
Typechecking arrays_examples
Added 2 proofs from theory arrays_examples to orphaned-proofs.prf
arrays_examples typechecked in 0.17s: No TCCs generated
Parsing runs
runs parsed in 0.04 seconds
runs is already parsed
Typechecking runs
runs typechecked in 0.05s: No TCCs generated
Parsing fseqs
fseqs parsed in 0.04 seconds
fseqs is already parsed
Typechecking fseqs
Parsing fsq
fsq parsed in 0.01 seconds
fsq is already parsed
Typechecking fsq
Added 37 proofs from theory fsq to orphaned-proofs.prf
fsq typechecked in 0.07s: No TCCs generated

 In judgement fseq_subtype, Line 56:
                                            fseq
                                            is already known to be a subtype of
  fsq[T]


 LET/WHERE variable l1 at line 100, col 9 is given type
  nat from its value expression.


 LET/WHERE variable l2 at line 100, col 26 is given type
  nat from its value expression.


 LET/WHERE variable m at line 132, col 9 is given type
  nat from its value expression.


 LET/WHERE variable n at line 132, col 12 is given type
  nat from its value expression.


 LET/WHERE variable len at line 135, col 17 is given type
  nat from its value expression.

fseqs typechecked in 0.50s: 15 TCCs, 0 proved, 0 subsumed, 15 unproved; 1 warning; 5 msgs
Parsing fseqs_def
fseqs_def parsed in 0.03 seconds
fseqs_def is already parsed
Typechecking fseqs_def

 In judgement fseq_subtype, Line 54:
                       fseq
                       is already known to be a subtype of
  fsq[T]


 LET/WHERE variable l1 at line 91, col 9 is given type
  nat from its value expression.


 LET/WHERE variable l2 at line 91, col 26 is given type
  nat from its value expression.


 LET/WHERE variable m at line 123, col 9 is given type
  nat from its value expression.


 LET/WHERE variable n at line 123, col 12 is given type
  nat from its value expression.


 LET/WHERE variable len at line 126, col 17 is given type
  nat from its value expression.

fseqs_def typechecked in 0.42s: 14 TCCs, 0 proved, 0 subsumed, 14 unproved; 1 warning; 5 msgs
Parsing fseqs_ops
fseqs_ops parsed in 0.02 seconds
fseqs_ops is already parsed
Typechecking fseqs_ops

 In declaration delete:
  added conversion cnvfsq[T]
             
  to nefs, converting
     fsq[T]
  to [nat -> T]


 In declaration delete:
  added conversion cnvfsq[T]
             
  to nefs, converting
     fsq[T]
  to [nat -> T]


 In declaration insert:
  added conversion cnvfsq[T]
             
  to fs, converting
     fsq[T]
  to [nat -> T]


 In declaration insert:
  added conversion cnvfsq[T]
             
  to fs, converting
     fsq[T]
  to [nat -> T]


 In declaration every:
  added conversion cnvfsq[T]
             
  to fs, converting
     fsq[T]
  to [nat -> T]


 In declaration every:
  added conversion cnvfsq[T]
             
  to fs, converting
     fsq[T]
  to [nat -> T]


 In declaration some:
  added conversion cnvfsq[T]
             
  to fs, converting
     fsq[T]
  to [nat -> T]


 In declaration some:
  added conversion cnvfsq[T]
             
  to fs, converting
     fsq[T]
  to [nat -> T]

fseqs_ops typechecked in 0.20s: 6 TCCs, 0 proved, 0 subsumed, 6 unproved; 8 conversions
Parsing fseqs_ops_def
fseqs_ops_def parsed in 0.02 seconds
fseqs_ops_def is already parsed
Typechecking fseqs_ops_def

 In declaration delete:
  added conversion cnvfsq[T]
             
  to nefs, converting
     fsq[T]
  to [nat -> T]


 In declaration delete:
  added conversion cnvfsq[T]
             
  to nefs, converting
     fsq[T]
  to [nat -> T]


 In declaration insert:
  added conversion cnvfsq[T]
             
  to fs, converting
     fsq[T]
  to [nat -> T]


 In declaration insert:
  added conversion cnvfsq[T]
             
  to fs, converting
     fsq[T]
  to [nat -> T]


 In declaration every:
  added conversion cnvfsq[T]
             
  to fs, converting
     fsq[T]
  to [nat -> T]


 In declaration every:
  added conversion cnvfsq[T]
             
  to fs, converting
     fsq[T]
  to [nat -> T]


 In declaration some:
  added conversion cnvfsq[T]
             
  to fs, converting
     fsq[T]
  to [nat -> T]


 In declaration some:
  added conversion cnvfsq[T]
             
  to fs, converting
     fsq[T]
  to [nat -> T]

fseqs_ops_def typechecked in 0.21s: 6 TCCs, 0 proved, 0 subsumed, 6 unproved; 8 conversions
Parsing fseqs_ops_real
fseqs_ops_real parsed in 0.02 seconds
fseqs_ops_real is already parsed
Typechecking fseqs_ops_real

 LET/WHERE variable len at line 27, col 23 is given type
  nat from its value expression.


 In declaration +:
  added conversion cnvfsq[real]
             
  to fs, converting
     fsq[real]
  to [nat -> real]


 In declaration +:
  added conversion cnvfsq[real]
             
  to gs, converting
     fsq[real]
  to [nat -> real]


 LET/WHERE variable len at line 35, col 23 is given type
  nat from its value expression.


 In declaration -:
  added conversion cnvfsq[real]
             
  to fs, converting
     fsq[real]
  to [nat -> real]


 In declaration -:
  added conversion cnvfsq[real]
             
  to gs, converting
     fsq[real]
  to [nat -> real]


 LET/WHERE variable len at line 43, col 23 is given type
  nat from its value expression.


 In declaration *:
  added conversion cnvfsq[real]
             
  to fs, converting
     fsq[real]
  to [nat -> real]


 In declaration *:
  added conversion cnvfsq[real]
             
  to gs, converting
     fsq[real]
  to [nat -> real]


 LET/WHERE variable len at line 52, col 25 is given type
  nat from its value expression.


 In declaration /:
  added conversion cnvfsq[real]
             
  to fs, converting
     fsq[real]
  to [nat -> real]


 In declaration /:
  added conversion cnvfsq[real]
             
  to nzgs, converting
     fsq[real]
  to [nat -> real]

fseqs_ops_real typechecked in 0.22s: 5 TCCs, 0 proved, 0 subsumed, 5 unproved; 8 conversions; 4 msgs
Parsing max_fseq
max_fseq parsed in 0.06 seconds
max_fseq is already parsed
Typechecking max_fseq
max_fseq typechecked in 0.42s: 4 TCCs, 0 proved, 0 subsumed, 4 unproved
Parsing min_fseq
min_fseq parsed in 0.02 seconds
min_fseq is already parsed
Typechecking min_fseq
min_fseq typechecked in 0.46s: 4 TCCs, 0 proved, 0 subsumed, 4 unproved
Parsing majority_fseq
majority_fseq parsed in 0.02 seconds
majority_fseq is already parsed
Typechecking majority_fseq
majority_fseq typechecked in 0.19s: 2 TCCs, 0 proved, 0 subsumed, 2 unproved
Parsing sort_fseq
sort_fseq parsed in 0.04 seconds
sort_fseq is already parsed
Typechecking sort_fseq
Parsing permutations_fseq
permutations_fseq parsed in 0.01 seconds
permutations_fseq is already parsed
Typechecking permutations_fseq
permutations_fseq typechecked in 0.08s: No TCCs generated

 In declaration sort_fseq_lt:
  added conversion cnvfsq[T]
             
  to sort(s), converting
     fsq[T]
  to [nat -> T]


 In declaration sort_fseq_lt:
  added conversion cnvfsq[T]
             
  to sort(s), converting
     fsq[T]
  to [nat -> T]


 In declaration sort_fseq_lt:
  added conversion cnvfsq[T]
             
  to sort(s), converting
     fsq[T]
  to [nat -> T]


 In declaration sort_fseq_lt:
  added conversion cnvfsq[T]
             
  to sort(s), converting
     fsq[T]
  to [nat -> T]


 LET/WHERE variable sss at line 85, col 37 is given type
  {ss: fseq |
     strictly_increasing?(ss) AND
      FORALL (x: T):
        member(x, s) IFF member(x, ss)} from its value expression.


 LET/WHERE variable sss at line 89, col 14 is given type
  {ss: fseq |
     strictly_increasing?(ss) AND
      FORALL (x: T):
        member(x, s) IFF member(x, ss)} from its value expression.


 LET/WHERE variable sss at line 94, col 39 is given type
  {ss: fseq |
     strictly_increasing?(ss) AND
      FORALL (x: T):
        member(x, s) IFF member(x, ss)} from its value expression.


 LET/WHERE variable sq at line 100, col 10 is given type
  {sq: [below(strictly_sort(s)`length) -> below(s`length)] |
     (increasing?(s) AND strictly_sort(s)`length >= 1 IMPLIES
       sq(strictly_sort(s)`length - 1) = s`length - 1)
      AND
      FORALL (ii: below(strictly_sort(s)`length)):
        (strictly_sort(s)`seq(ii) = s`seq(sq(ii)) AND
          (increasing?(s) AND ii < strictly_sort(s)`length - 1 IMPLIES
            strictly_sort(s)`seq(1 + ii) =
             s`seq(1 + sq(ii))))} from its value expression.

sort_fseq typechecked in 1.16s: 12 TCCs, 0 proved, 2 subsumed, 10 unproved; 4 conversions; 4 msgs
Parsing sort_fseq_lems
sort_fseq_lems parsed in 0.01 seconds
sort_fseq_lems is already parsed
Typechecking sort_fseq_lems
sort_fseq_lems typechecked in 0.19s: 1 TCC, 0 proved, 0 subsumed, 1 unproved
Parsing fseq2set
fseq2set parsed in 0.09 seconds
fseq2set is already parsed
Typechecking fseq2set
Restored theory from /home/cblaudeau/Documents/3A/Stage/PVS/nasalib/ints/pvsbin/max_below.bin in 0.14s (load part took 0.01s)

 LET/WHERE variable fs at line 53, col 26 is given type
  fseq[T] from a preceding variable declaration.


 LET/WHERE variable fs at line 56, col 29 is given type
  fseq[T] from a preceding variable declaration.


 LET/WHERE variable fs at line 66, col 29 is given type
  fseq[T] from a preceding variable declaration.


 LET/WHERE variable fs at line 70, col 29 is given type
  fseq[T] from a preceding variable declaration.

fseq2set typechecked in 0.78s: 9 TCCs, 0 proved, 3 subsumed, 6 unproved; 4 msgs
Parsing permutations_list
permutations_list parsed in 0.05 seconds
permutations_list is already parsed
Typechecking permutations_list
permutations_list typechecked in 0.15s: 1 TCC, 0 proved, 0 subsumed, 1 unproved
Parsing Unit
Unit parsed in 0.00 seconds
Unit is already parsed
Typechecking Unit
Wrote pvs file Unit_adt
In DATATYPE theory Unit_adt: No TCCs generated
In DATATYPE theory Unit_adt_reduce: No TCCs generated
Unit typechecked in 0.04s: No TCCs generated
Parsing stack
stack parsed in 0.00 seconds
stack is already parsed
Typechecking stack
stack typechecked in 0.01s: 2 TCCs, 0 proved, 1 subsumed, 1 unproved
Parsing branch_and_bound
branch_and_bound parsed in 0.09 seconds
branch_and_bound is already parsed
Typechecking branch_and_bound

 LET/WHERE variable sddom at line 135, col 10 is given type
  [DomainType, DomainType] from its value expression.


 LET/WHERE variable sdobj at line 135, col 36 is given type
  [ObjType, ObjType] from its value expression.


 LET/WHERE variable sddom at line 141, col 8 is given type
  [DomainType, DomainType] from its value expression.


 LET/WHERE variable sdobj at line 141, col 34 is given type
  [ObjType, ObjType] from its value expression.


 LET/WHERE variable nobj at line 150, col 9 is given type
  ObjType from its value expression.


 LET/WHERE variable thisans at line 151, col 2 is given type
  AnsType from its value expression.


 LET/WHERE variable newacc1 at line 152, col 2 is given type
  AnsType from its value expression.


 LET/WHERE variable thisout at line 153, col 9 is given type
  Output from its value expression.


 LET/WHERE variable dir at line 159, col 5 is given type
  bool from its value expression.


 LET/WHERE variable v at line 159, col 9 is given type
  VarType from its value expression.


 LET/WHERE variable funsplit at line 160, col 4 is given type
  [ObjType, ObjType] from its value expression.


 LET/WHERE variable domsplit at line 161, col 4 is given type
  [DomainType, DomainType] from its value expression.


 LET/WHERE variable sp1 at line 162, col 5 is given type
  ObjType from its value expression.


 LET/WHERE variable sp2 at line 162, col 9 is given type
  ObjType from its value expression.


 LET/WHERE variable dom1 at line 163, col 5 is given type
  DomainType from its value expression.


 LET/WHERE variable dom2 at line 163, col 10 is given type
  DomainType from its value expression.


 In declaration branch_and_bound:
  added conversion val2some[AnsType]
             
  to newacc1, converting
     AnsType
  to Maybe[AnsType]


 LET/WHERE variable firstout at line 164, col 4 is given type
  Output from its value expression.


 LET/WHERE variable newacc2 at line 173, col 8 is given type
  AnsType from its value expression.


 In declaration branch_and_bound:
  added conversion val2some[AnsType]
             
  to newacc2, converting
     AnsType
  to Maybe[AnsType]


 LET/WHERE variable secondout at line 174, col 8 is given type
  Output from its value expression.


 LET/WHERE variable real1 at line 177, col 9 is given type
  Output from its value expression.


 LET/WHERE variable real2 at line 177, col 15 is given type
  Output from its value expression.


 In declaration branch_and_bound:
  added conversion val2some[AnsType]
             
  to newacc1, converting
     AnsType
  to Maybe[AnsType]


 In declaration branch_and_bound:
  added conversion val2some[AnsType]
             
  to newacc2, converting
     AnsType
  to Maybe[AnsType]


 LET/WHERE variable bandb at line 197, col 12 is given type
  Output from its value expression.

branch_and_bound typechecked in 0.55s: 13 TCCs, 0 proved, 0 subsumed, 13 unproved; 4 conversions; 22 msgs
Parsing branch_and_bound_X
branch_and_bound_X parsed in 0.10 seconds
branch_and_bound_X is already parsed
Typechecking branch_and_bound_X

 LET/WHERE variable nobj at line 127, col 9 is given type
  ObjType from its value expression.


 LET/WHERE variable sddom at line 156, col 10 is given type
  [DomainType, DomainType] from its value expression.


 LET/WHERE variable sdobj at line 156, col 36 is given type
  [ObjType, ObjType] from its value expression.


 LET/WHERE variable sddom at line 162, col 8 is given type
  [DomainType, DomainType] from its value expression.


 LET/WHERE variable sdobj at line 162, col 34 is given type
  [ObjType, ObjType] from its value expression.


 LET/WHERE variable thisans at line 171, col 10 is given type
  AnsType from its value expression.


 LET/WHERE variable nobj at line 171, col 18 is given type
  ObjType from its value expression.


 LET/WHERE variable newacc1 at line 172, col 2 is given type
  AnsType from its value expression.


 LET/WHERE variable thisout at line 173, col 9 is given type
  Output from its value expression.


 LET/WHERE variable dir at line 179, col 5 is given type
  bool from its value expression.


 LET/WHERE variable v at line 179, col 9 is given type
  VarType from its value expression.


 LET/WHERE variable funsplit at line 180, col 4 is given type
  [ObjType, ObjType] from its value expression.


 LET/WHERE variable domsplit at line 181, col 4 is given type
  [DomainType, DomainType] from its value expression.


 LET/WHERE variable sp1 at line 182, col 5 is given type
  ObjType from its value expression.


 LET/WHERE variable sp2 at line 182, col 9 is given type
  ObjType from its value expression.


 LET/WHERE variable dom1 at line 183, col 5 is given type
  DomainType from its value expression.


 LET/WHERE variable dom2 at line 183, col 10 is given type
  DomainType from its value expression.


 In declaration branch_and_bound:
  added conversion val2some[AnsType]
             
  to newacc1, converting
     AnsType
  to Maybe[AnsType]


 LET/WHERE variable firstout at line 184, col 4 is given type
  Output from its value expression.


 LET/WHERE variable newacc2 at line 193, col 8 is given type
  AnsType from its value expression.


 In declaration branch_and_bound:
  added conversion val2some[AnsType]
             
  to newacc2, converting
     AnsType
  to Maybe[AnsType]


 LET/WHERE variable secondout at line 194, col 8 is given type
  Output from its value expression.


 LET/WHERE variable real1 at line 197, col 9 is given type
  Output from its value expression.


 LET/WHERE variable real2 at line 197, col 15 is given type
  Output from its value expression.


 In declaration branch_and_bound:
  added conversion val2some[AnsType]
             
  to newacc1, converting
     AnsType
  to Maybe[AnsType]


 In declaration branch_and_bound:
  added conversion val2some[AnsType]
             
  to newacc2, converting
     AnsType
  to Maybe[AnsType]


 LET/WHERE variable bandb at line 217, col 12 is given type
  Output from its value expression.

branch_and_bound_X typechecked in 0.63s: 13 TCCs, 0 proved, 0 subsumed, 13 unproved; 4 conversions; 23 msgs
Parsing count_functions
count_functions parsed in 0.03 seconds
count_functions is already parsed
Typechecking count_functions

 LET/WHERE variable g at line 40, col 8 is given type
  FinFun(n, m) from its value expression.

count_functions typechecked in 5.72s: 30 TCCs, 0 proved, 1 subsumed, 29 unproved; 1 msg
Parsing swap_counting
swap_counting parsed in 0.01 seconds
swap_counting is already parsed
Typechecking swap_counting
Restored theory from /home/cblaudeau/Documents/3A/Stage/PVS/nasalib/ints/pvsbin/mod_lems.bin in 0.24s (load part took 0.02s)

 LET/WHERE variable thisans at line 13, col 10 is given type
  nonneg_int from its value expression.

swap_counting typechecked in 0.46s: 3 TCCs, 0 proved, 0 subsumed, 3 unproved; 1 msg
Parsing pairs
pairs parsed in 0.08 seconds
pairs is already parsed
Typechecking pairs

 LET/WHERE variable x at line 13, col 34 is given type
  T from its value expression.


 LET/WHERE variable y at line 13, col 36 is given type
  T from its value expression.


 LET/WHERE variable x at line 17, col 33 is given type
  T from its value expression.


 LET/WHERE variable y at line 17, col 35 is given type
  T from its value expression.


 LET/WHERE variable x at line 20, col 35 is given type
  T from its value expression.


 LET/WHERE variable y at line 20, col 37 is given type
  T from its value expression.

pairs typechecked in 0.02s: No TCCs generated; 6 msgs
Parsing doubletons
doubletons parsed in 0.02 seconds
doubletons is already parsed
Typechecking doubletons
doubletons typechecked in 0.21s: 12 TCCs, 0 proved, 5 subsumed, 7 unproved
Parsing matroids
matroids parsed in 0.03 seconds
matroids is already parsed
Typechecking matroids
Parsing finite_sets_eq
finite_sets_eq parsed in 0.11 seconds
finite_sets_eq is already parsed
Typechecking finite_sets_eq
finite_sets_eq typechecked in 0.03s: No TCCs generated
Saving bin file for theory finite_sets_eq

Saving finite_sets_eq
Context file /home/cblaudeau/Documents/3A/Stage/PVS/pvs-7.1.0/lib/finite_sets/.pvscontext written
matroids typechecked in 0.36s: 4 TCCs, 0 proved, 0 subsumed, 4 unproved
Parsing fun_preds_partial
fun_preds_partial parsed in 0.01 seconds
fun_preds_partial is already parsed
Typechecking fun_preds_partial
fun_preds_partial typechecked in 0.03s: No TCCs generated
Parsing arrays_into_lists
arrays_into_lists parsed in 0.01 seconds
arrays_into_lists is already parsed
Typechecking arrays_into_lists
arrays_into_lists typechecked in 0.03s: No TCCs generated
Parsing map_with_index;;; GC:;;; Finished GC

map_with_index parsed in 0.97 seconds
map_with_index is already parsed
Typechecking map_with_index
map_with_index typechecked in 0.32s: 12 TCCs, 0 proved, 1 subsumed, 11 unproved
Parsing nth_ext
nth_ext parsed in 0.00 seconds
nth_ext is already parsed
Typechecking nth_ext
nth_ext typechecked in 0.02s: No TCCs generated
Parsing Shroeder_Bernstein
Shroeder_Bernstein parsed in 0.03 seconds
Shroeder_Bernstein is already parsed
Typechecking Shroeder_Bernstein
Shroeder_Bernstein typechecked in 0.07s: 4 TCCs, 0 proved, 0 subsumed, 4 unproved
Parsing string_utils
string_utils parsed in 0.00 seconds
string_utils is already parsed
Typechecking string_utils
string_utils typechecked in 0.00s: No TCCs generated
top typechecked in 41.79s: No TCCs generated
Saving bin file for theory seq2set

Saving seq2set
Saving bin file for theory minmax_seq2set

Saving minmax_seq2set
Saving bin file for theory empty_array_def

Saving empty_array_def
Saving bin file for theory middle_value_select

Saving middle_value_select
Saving bin file for theory sort_inversions

Saving sort_inversions
Saving bin file for theory sort_array_def

Saving sort_array_def
Saving bin file for theory count_functions

Saving count_functions
Saving bin file for theory set_as_list_props

Saving set_as_list_props
Saving bin file for theory string_utils

Saving string_utils
Saving bin file for theory seq_pigeon

Saving seq_pigeon
Saving bin file for theory for_iterate

Saving for_iterate
Saving bin file for theory permutation

Saving permutation
Saving bin file for theory Maybe

Saving Maybe
Saving bin file for theory indexed_list

Saving indexed_list
Saving bin file for theory array2list

Saving array2list
Saving bin file for theory pairs

Saving pairs
Saving bin file for theory sort_seq_lems

Saving sort_seq_lems
Saving bin file for theory min_array_def

Saving min_array_def
Saving bin file for theory permutations_fseq

Saving permutations_fseq
Saving bin file for theory caret_arrays

Saving caret_arrays
Saving bin file for theory sort_fseq_lems

Saving sort_fseq_lems
Saving bin file for theory listn

Saving listn
Saving bin file for theory permutation_ops

Saving permutation_ops
Saving bin file for theory permutations_list

Saving permutations_list
Saving bin file for theory finite_bags_inductions

Saving finite_bags_inductions
Saving bin file for theory set2seq

Saving set2seq
Saving bin file for theory minmax_set2seq

Saving minmax_set2seq
Saving bin file for theory fseqs_ops_real

Saving fseqs_ops_real
Saving bin file for theory runs

Saving runs
Saving bin file for theory sort_fseq

Saving sort_fseq
Saving bin file for theory sort_array

Saving sort_array
Saving bin file for theory fsq

Saving fsq
Saving bin file for theory sort_seq

Saving sort_seq
Saving bin file for theory function_inverse_alt_aux

Saving function_inverse_alt_aux
Saving bin file for theory top_array

Saving top_array
Saving bin file for theory function_props_aux

Saving function_props_aux
Saving bin file for theory fseqs_def

Saving fseqs_def
Saving bin file for theory max_array

Saving max_array
Saving bin file for theory majority_seq

Saving majority_seq
Saving bin file for theory fseq2set

Saving fseq2set
Saving bin file for theory set_as_list

Saving set_as_list
Saving bin file for theory bag_filters

Saving bag_filters
Saving bin file for theory doubletons

Saving doubletons
Saving bin file for theory branch_and_bound

Saving branch_and_bound
Saving bin file for theory permutations

Saving permutations
Saving bin file for theory arrays_into_lists

Saving arrays_into_lists
Saving bin file for theory fseqs_ops

Saving fseqs_ops
Saving bin file for theory swap_counting

Saving swap_counting
Saving bin file for theory top

Saving top
Saving bin file for theory ordered_list

Saving ordered_list
Saving bin file for theory min_array

Saving min_array
Saving bin file for theory list2set_props

Saving list2set_props
Saving bin file for theory fun_preds_partial

Saving fun_preds_partial
Saving bin file for theory finite_bags_minmax

Saving finite_bags_minmax
Saving bin file for theory majority_vote

Saving majority_vote
Saving bin file for theory array_ops

Saving array_ops
Saving bin file for theory min_seq

Saving min_seq
Saving bin file for theory more_list_props

Saving more_list_props
Saving bin file for theory fault_masking_vote

Saving fault_masking_vote
Saving bin file for theory bags_aux

Saving bags_aux
Saving bin file for theory branch_and_bound_X

Saving branch_and_bound_X
Saving bin file for theory concat_arrays

Saving concat_arrays
Saving bin file for theory subrange_list

Saving subrange_list
Saving bin file for theory fseqs

Saving fseqs
Saving bin file for theory permutations_seq

Saving permutations_seq
Saving bin file for theory Unit

Saving Unit
Saving bin file for theory function_image_bis

Saving function_image_bis
Saving bin file for theory finite_index

Saving finite_index
Saving bin file for theory big_ops_nat

Saving big_ops_nat
Saving bin file for theory finite_bags_aux

Saving finite_bags_aux
Saving bin file for theory min_fseq

Saving min_fseq
Saving bin file for theory top_seq

Saving top_seq
Saving bin file for theory majority_array

Saving majority_array
Saving bin file for theory max_array_def

Saving max_array_def
Saving bin file for theory sort_array_lems

Saving sort_array_lems
Saving bin file for theory stack

Saving stack
Saving bin file for theory nth_ext

Saving nth_ext
Saving bin file for theory list_exp_ol

Saving list_exp_ol
Saving bin file for theory top_bags

Saving top_bags
Saving bin file for theory Unit_adt

Saving Unit_adt
Saving bin file for theory Unit_adt_reduce

Saving Unit_adt_reduce
Saving bin file for theory max_seq

Saving max_seq
Saving bin file for theory matroids

Saving matroids
Saving bin file for theory arrays_examples

Saving arrays_examples
Saving bin file for theory seqs

Saving seqs
Saving bin file for theory fseqs_ops_def

Saving fseqs_ops_def
Saving bin file for theory map_with_index

Saving map_with_index
Saving bin file for theory for_examples

Saving for_examples
Saving bin file for theory below_arrays

Saving below_arrays
Saving bin file for theory finite_bags_lems

Saving finite_bags_lems
Saving bin file for theory arrays

Saving arrays
Saving bin file for theory bags_to_sets

Saving bags_to_sets
Saving bin file for theory majority_fseq

Saving majority_fseq
Saving bin file for theory finite_bags

Saving finite_bags
Saving bin file for theory seq_extras

Saving seq_extras
Saving bin file for theory max_fseq

Saving max_fseq
Saving bin file for theory const_fun_def

Saving const_fun_def
Saving bin file for theory bubblesort

Saving bubblesort
Saving bin file for theory Shroeder_Bernstein

Saving Shroeder_Bernstein
Saving bin file for theory bags

Saving bags
Context file /home/cblaudeau/Documents/3A/Stage/PVS/nasalib/structures/.pvscontext written
Proving theory top
Proving theory const_fun_def
Rerunning proof of const_fun_def.image_const
const_fun_def.image_const proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of const_fun_def.inverse_image_const
const_fun_def.inverse_image_const proved in 0.07 real, 0.07 cpu seconds
Proving theory function_image_bis
Rerunning proof of function_image_bis.image_emptyset
function_image_bis.image_emptyset proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of function_image_bis.inverse_image_emptyset
function_image_bis.inverse_image_emptyset proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of function_image_bis.surjective_image_inverse_image
function_image_bis.surjective_image_inverse_image proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of function_image_bis.injective_inverse_image_image
function_image_bis.injective_inverse_image_image proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of function_image_bis.bijective_image_iff_inverse_image
function_image_bis.bijective_image_iff_inverse_image proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of function_image_bis.bijective_image_inverse_alt_TCC1
function_image_bis.bijective_image_inverse_alt_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of function_image_bis.bijective_image_inverse_alt
function_image_bis.bijective_image_inverse_alt proved in 0.18 real, 0.18 cpu seconds
Proving theory function_inverse_alt_aux
Rerunning proof of function_inverse_alt_aux.inverse_inverse_alt_TCC1
function_inverse_alt_aux.inverse_inverse_alt_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of function_inverse_alt_aux.inverse_inverse_alt_TCC2
function_inverse_alt_aux.inverse_inverse_alt_TCC2 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of function_inverse_alt_aux.inverse_inverse_alt
function_inverse_alt_aux.inverse_inverse_alt proved in 0.15 real, 0.15 cpu seconds
Proving theory function_props_aux
Rerunning proof of function_props_aux.inverse_image_composition
function_props_aux.inverse_image_composition proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of function_props_aux.composition_inverse_alt_TCC1
function_props_aux.composition_inverse_alt_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of function_props_aux.composition_inverse_alt_TCC2
function_props_aux.composition_inverse_alt_TCC2 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of function_props_aux.composition_inverse_alt_TCC3
function_props_aux.composition_inverse_alt_TCC3 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of function_props_aux.composition_inverse_alt
function_props_aux.composition_inverse_alt proved in 0.14 real, 0.14 cpu seconds
Proving theory finite_index
Rerunning proof of finite_index.finite_index

 LET/WHERE variable PI at line 1, col 22 is given type
  set[(S1)] from its value expression.

finite_index.finite_index proved in 1.98 real, 1.98 cpu seconds
Proving theory top_array
Proving theory min_array
Rerunning proof of min_array.imin_TCC1
min_array.imin_TCC1 proved in 0.36 real, 0.36 cpu seconds
Rerunning proof of min_array.min_TCC1
min_array.min_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of min_array.min_lem
min_array.min_lem proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of min_array.min_in?
min_array.min_in? proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of min_array.min_def
min_array.min_def proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of min_array.min_it_is
min_array.min_it_is proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of min_array.imin_lem
min_array.imin_lem proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of min_array.imin_1
min_array.imin_1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of min_array.min_2_TCC1
min_array.min_2_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of min_array.min_2_TCC2
min_array.min_2_TCC2 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of min_array.min_2
min_array.min_2 proved in 0.12 real, 0.12 cpu seconds
Proving theory min_array_def
Rerunning proof of min_array_def.ge_total
min_array_def.ge_total proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of min_array_def.IMP_max_array_def_TCC1
min_array_def.IMP_max_array_def_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of min_array_def.Imin_TCC1
min_array_def.Imin_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of min_array_def.Imin_TCC2
min_array_def.Imin_TCC2 proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of min_array_def.Imin_1_TCC1
min_array_def.Imin_1_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of min_array_def.Imin_1
min_array_def.Imin_1 proved in 0.14 real, 0.14 cpu seconds
Proving theory below_arrays
Proving theory max_array_def
Rerunning proof of max_array_def.imax_rec_TCC1
max_array_def.imax_rec_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of max_array_def.imax_rec_TCC2
max_array_def.imax_rec_TCC2 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of max_array_def.imax_rec_lem
max_array_def.imax_rec_lem proved in 0.27 real, 0.27 cpu seconds
Rerunning proof of max_array_def.imax_rec_rng
max_array_def.imax_rec_rng proved in 0.21 real, 0.21 cpu seconds
Rerunning proof of max_array_def.Imax_rec_TCC1
max_array_def.Imax_rec_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of max_array_def.Imax_TCC1
max_array_def.Imax_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of max_array_def.Imax_TCC2
max_array_def.Imax_TCC2 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of max_array_def.Imax_1_TCC1
max_array_def.Imax_1_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of max_array_def.Imax_1
max_array_def.Imax_1 proved in 0.08 real, 0.08 cpu seconds
Proving theory max_array
Rerunning proof of max_array.imax_TCC1
max_array.imax_TCC1 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of max_array.max_TCC1
max_array.max_TCC1 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of max_array.max_lem
max_array.max_lem proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of max_array.max_in?
max_array.max_in? proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of max_array.imax_lem
max_array.imax_lem proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of max_array.max_def
max_array.max_def proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of max_array.max_it_is
max_array.max_it_is proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of max_array.imax_1
max_array.imax_1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of max_array.max_2_TCC1
max_array.max_2_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of max_array.max_2_TCC2
max_array.max_2_TCC2 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of max_array.max_2
max_array.max_2 proved in 0.11 real, 0.11 cpu seconds
Proving theory permutations
Rerunning proof of permutations.perm_reflexive
permutations.perm_reflexive proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of permutations.perm_symmetric
permutations.perm_symmetric proved in 0.19 real, 0.19 cpu seconds
Rerunning proof of permutations.perm_tran
permutations.perm_tran proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of permutations.perm_in?
permutations.perm_in? proved in 0.10 real, 0.10 cpu seconds
Proving theory sort_array
Rerunning proof of sort_array.sort_TCC1
sort_array.sort_TCC1 proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of sort_array.sort_lem
sort_array.sort_lem proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of sort_array.sort_in?
sort_array.sort_in? proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of sort_array.sort_map_TCC1
sort_array.sort_map_TCC1 proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of sort_array.sort_map_def
sort_array.sort_map_def proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of sort_array.sort_map_bij
sort_array.sort_map_bij proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of sort_array.isort_map_TCC1
sort_array.isort_map_TCC1 proved in 0.23 real, 0.23 cpu seconds
Rerunning proof of sort_array.isort_map_def
sort_array.isort_map_def proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of sort_array.isort_map_bij
sort_array.isort_map_bij proved in 0.06 real, 0.06 cpu seconds
Proving theory sort_array_def
Rerunning proof of sort_array_def.swap_TCC1
sort_array_def.swap_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of sort_array_def.swap_TCC2
sort_array_def.swap_TCC2 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of sort_array_def.asort_TCC1
sort_array_def.asort_TCC1 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of sort_array_def.asort_TCC2
sort_array_def.asort_TCC2 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of sort_array_def.swap_perm
sort_array_def.swap_perm proved in 0.57 real, 0.57 cpu seconds
Rerunning proof of sort_array_def.asort_perm
sort_array_def.asort_perm proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of sort_array_def.swap_P_and_Q_TCC1
sort_array_def.swap_P_and_Q_TCC1 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of sort_array_def.swap_P_and_Q
sort_array_def.swap_P_and_Q proved in 0.55 real, 0.55 cpu seconds
Rerunning proof of sort_array_def.asort_P_and_Q
sort_array_def.asort_P_and_Q proved in 0.34 real, 0.34 cpu seconds
Proving theory sort_array_lems
Rerunning proof of sort_array_lems.sort_min_TCC1
sort_array_lems.sort_min_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of sort_array_lems.sort_min
sort_array_lems.sort_min proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of sort_array_lems.sort_max_TCC1
sort_array_lems.sort_max_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of sort_array_lems.sort_max
sort_array_lems.sort_max proved in 0.17 real, 0.17 cpu seconds
Proving theory array_ops
Rerunning proof of array_ops.caret_fill0_TCC1
array_ops.caret_fill0_TCC1 proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of array_ops.caret_fill0_TCC2
array_ops.caret_fill0_TCC2 proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of array_ops.caret_fill0
array_ops.caret_fill0 proved in 0.25 real, 0.25 cpu seconds
Rerunning proof of array_ops.caret_fill1
array_ops.caret_fill1 proved in 0.26 real, 0.26 cpu seconds
Rerunning proof of array_ops.caret_concat_bot_TCC1
array_ops.caret_concat_bot_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of array_ops.caret_concat_bot
array_ops.caret_concat_bot proved in 0.27 real, 0.27 cpu seconds
Rerunning proof of array_ops.caret_concat_top_TCC1
array_ops.caret_concat_top_TCC1 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of array_ops.caret_concat_top_TCC2
array_ops.caret_concat_top_TCC2 proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of array_ops.caret_concat_top_TCC3
array_ops.caret_concat_top_TCC3 proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of array_ops.caret_concat_top_TCC4
array_ops.caret_concat_top_TCC4 proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of array_ops.caret_concat_top
array_ops.caret_concat_top proved in 0.38 real, 0.38 cpu seconds
Rerunning proof of array_ops.caret_concat_all_TCC1
array_ops.caret_concat_all_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of array_ops.caret_concat_all_TCC2
array_ops.caret_concat_all_TCC2 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of array_ops.caret_concat_all_TCC3
array_ops.caret_concat_all_TCC3 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of array_ops.caret_concat_all_TCC4
array_ops.caret_concat_all_TCC4 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of array_ops.caret_concat_all_TCC5
array_ops.caret_concat_all_TCC5 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of array_ops.caret_concat_all_TCC6
array_ops.caret_concat_all_TCC6 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of array_ops.caret_concat_all
array_ops.caret_concat_all proved in 0.27 real, 0.27 cpu seconds
Rerunning proof of array_ops.array_decomp_TCC1
array_ops.array_decomp_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of array_ops.array_decomp_TCC2
array_ops.array_decomp_TCC2 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of array_ops.array_decomp_TCC3
array_ops.array_decomp_TCC3 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of array_ops.array_decomp_TCC4
array_ops.array_decomp_TCC4 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of array_ops.array_decomp
array_ops.array_decomp proved in 0.32 real, 0.32 cpu seconds
Rerunning proof of array_ops.caret_bot_all_TCC1
array_ops.caret_bot_all_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of array_ops.caret_bot_all_TCC2
array_ops.caret_bot_all_TCC2 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of array_ops.caret_bot_all
array_ops.caret_bot_all proved in 0.26 real, 0.26 cpu seconds
Rerunning proof of array_ops.caret_top_all_TCC1
array_ops.caret_top_all_TCC1 proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of array_ops.caret_top_all_TCC2
array_ops.caret_top_all_TCC2 proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of array_ops.caret_top_all
array_ops.caret_top_all proved in 0.38 real, 0.38 cpu seconds
Rerunning proof of array_ops.concat_array_bot_TCC1
array_ops.concat_array_bot_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of array_ops.concat_array_bot
array_ops.concat_array_bot proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of array_ops.concat_array_top_TCC1
array_ops.concat_array_top_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of array_ops.concat_array_top_TCC2
array_ops.concat_array_top_TCC2 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of array_ops.concat_array_top
array_ops.concat_array_top proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of array_ops.concat_array_r
array_ops.concat_array_r proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of array_ops.concat_array_l
array_ops.concat_array_l proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of array_ops.concat_array_assoc
array_ops.concat_array_assoc proved in 0.25 real, 0.25 cpu seconds
Proving theory caret_arrays
Rerunning proof of caret_arrays.caret_TCC1
caret_arrays.caret_TCC1 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of caret_arrays.caret_TCC2
caret_arrays.caret_TCC2 proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of caret_arrays.caret_TCC3
caret_arrays.caret_TCC3 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of caret_arrays.caret_TCC4
caret_arrays.caret_TCC4 proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of caret_arrays.caret_TCC5
caret_arrays.caret_TCC5 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of caret_arrays.caret_all_TCC1
caret_arrays.caret_all_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of caret_arrays.caret_all_TCC2
caret_arrays.caret_all_TCC2 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of caret_arrays.caret_all
caret_arrays.caret_all proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of caret_arrays.caret_ii_0
caret_arrays.caret_ii_0 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of caret_arrays.caret_elim_TCC1
caret_arrays.caret_elim_TCC1 proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of caret_arrays.caret_elim_TCC2
caret_arrays.caret_elim_TCC2 proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of caret_arrays.caret_elim
caret_arrays.caret_elim proved in 0.17 real, 0.17 cpu seconds
Proving theory empty_array_def
Rerunning proof of empty_array_def.empty_array_TCC1
empty_array_def.empty_array_TCC1 proved in 0.06 real, 0.06 cpu seconds
Proving theory concat_arrays
Rerunning proof of concat_arrays.oh_TCC1
concat_arrays.oh_TCC1 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of concat_arrays.concat_array_bot0_TCC1
concat_arrays.concat_array_bot0_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of concat_arrays.concat_array_bot0
concat_arrays.concat_array_bot0 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of concat_arrays.concat_array_top0_TCC1
concat_arrays.concat_array_top0_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of concat_arrays.concat_array_top0
concat_arrays.concat_array_top0 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of concat_arrays.concat_array_bot_TCC1
concat_arrays.concat_array_bot_TCC1 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of concat_arrays.concat_array_bot
concat_arrays.concat_array_bot proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of concat_arrays.concat_array_top_TCC1
concat_arrays.concat_array_top_TCC1 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of concat_arrays.concat_array_top_TCC2
concat_arrays.concat_array_top_TCC2 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of concat_arrays.concat_array_top
concat_arrays.concat_array_top proved in 0.06 real, 0.06 cpu seconds
Proving theory majority_array
Rerunning proof of majority_array.is_majority_TCC1
majority_array.is_majority_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of majority_array.maj_TCC1
majority_array.maj_TCC1 proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of majority_array.is_majority_unique
majority_array.is_majority_unique proved in 0.30 real, 0.30 cpu seconds
Rerunning proof of majority_array.maj_lem
majority_array.maj_lem proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of majority_array.maj_subset
majority_array.maj_subset proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of majority_array.maj_in_array
majority_array.maj_in_array proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of majority_array.is_majority_const
majority_array.is_majority_const proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of majority_array.maj_const
majority_array.maj_const proved in 0.06 real, 0.06 cpu seconds
Proving theory top_seq
Proving theory seqs
Rerunning proof of seqs.seq1_def_TCC1
seqs.seq1_def_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of seqs.seq1_def
seqs.seq1_def proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of seqs.rev_TCC1
seqs.rev_TCC1 proved in 0.06 real, 0.06 cpu seconds
Proving theory max_seq
Rerunning proof of max_seq.Imax_TCC1
max_seq.Imax_TCC1 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of max_seq.Imax_TCC2
max_seq.Imax_TCC2 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of max_seq.Imax_TCC3
max_seq.Imax_TCC3 proved in 0.24 real, 0.24 cpu seconds
Rerunning proof of max_seq.Imax_1_TCC1
max_seq.Imax_1_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of max_seq.Imax_1
max_seq.Imax_1 proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of max_seq.imax_TCC1
max_seq.imax_TCC1 proved in 0.19 real, 0.19 cpu seconds
Rerunning proof of max_seq.max_TCC1
max_seq.max_TCC1 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of max_seq.max_seq_lem
max_seq.max_seq_lem proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of max_seq.max_seq_in?
max_seq.max_seq_in? proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of max_seq.imax_seq_lem
max_seq.imax_seq_lem proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of max_seq.max_seq_def
max_seq.max_seq_def proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of max_seq.max_seq_it_is
max_seq.max_seq_it_is proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of max_seq.imax_seq_1
max_seq.imax_seq_1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of max_seq.max_seq_2_TCC1
max_seq.max_seq_2_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of max_seq.max_seq_2_TCC2
max_seq.max_seq_2_TCC2 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of max_seq.max_seq_2
max_seq.max_seq_2 proved in 0.13 real, 0.13 cpu seconds
Proving theory min_seq
Rerunning proof of min_seq.Imin_TCC1
min_seq.Imin_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of min_seq.Imin_TCC2
min_seq.Imin_TCC2 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of min_seq.Imin_TCC3
min_seq.Imin_TCC3 proved in 0.25 real, 0.25 cpu seconds
Rerunning proof of min_seq.Imin_seq_1_TCC1
min_seq.Imin_seq_1_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of min_seq.Imin_seq_1
min_seq.Imin_seq_1 proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of min_seq.imin_TCC1
min_seq.imin_TCC1 proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of min_seq.min_TCC1
min_seq.min_TCC1 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of min_seq.min_seq_lem
min_seq.min_seq_lem proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of min_seq.min_seq_in?
min_seq.min_seq_in? proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of min_seq.min_seq_def
min_seq.min_seq_def proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of min_seq.min_seq_it_is
min_seq.min_seq_it_is proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of min_seq.imin_seq_lem
min_seq.imin_seq_lem proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of min_seq.imin_seq_1
min_seq.imin_seq_1 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of min_seq.min_seq_2_TCC1
min_seq.min_seq_2_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of min_seq.min_seq_2_TCC2
min_seq.min_seq_2_TCC2 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of min_seq.min_seq_2
min_seq.min_seq_2 proved in 0.12 real, 0.12 cpu seconds
Proving theory permutations_seq
Rerunning proof of permutations_seq.perm_length

 In input "f!1":
  added conversion restrict
                       [below(length(A!1)),
                        (fullset[below(length(A!1))]),
                        below(length(B!1))]
             
  to f!1, converting
     [below(length(A!1)) -> below(length(B!1))]
  to [(fullset[below(length(A!1))]) -> below(length(B!1))]


 In input "f!1":
  added conversion restrict
                       [below(length(A!1)),
                        (fullset[below(length(A!1))]),
                        below(length(B!1))]
             
  to f!1, converting
     [below(length(A!1)) -> below(length(B!1))]
  to [(fullset[below(length(A!1))]) -> below(length(B!1))]

permutations_seq.perm_length proved in 0.29 real, 0.29 cpu seconds
Rerunning proof of permutations_seq.perm_reflexive
permutations_seq.perm_reflexive proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of permutations_seq.perm_symmetric
permutations_seq.perm_symmetric proved in 0.35 real, 0.35 cpu seconds
Rerunning proof of permutations_seq.perm_tran
permutations_seq.perm_tran proved in 0.19 real, 0.19 cpu seconds
Rerunning proof of permutations_seq.perm_in?
permutations_seq.perm_in? proved in 0.11 real, 0.11 cpu seconds
Proving theory majority_seq
Rerunning proof of majority_seq.is_majority_TCC1
majority_seq.is_majority_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of majority_seq.maj_TCC1
majority_seq.maj_TCC1 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of majority_seq.is_majority_unique
majority_seq.is_majority_unique proved in 0.28 real, 0.28 cpu seconds
Rerunning proof of majority_seq.maj_lem
majority_seq.maj_lem proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of majority_seq.maj_subset
majority_seq.maj_subset proved in 0.19 real, 0.19 cpu seconds
Rerunning proof of majority_seq.maj_in_seq
majority_seq.maj_in_seq proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of majority_seq.length_eq_1
majority_seq.length_eq_1 proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of majority_seq.is_majority_const
majority_seq.is_majority_const proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of majority_seq.maj_const
majority_seq.maj_const proved in 0.06 real, 0.06 cpu seconds
Proving theory bubblesort
Rerunning proof of bubblesort.epsilon_lem_TCC1
bubblesort.epsilon_lem_TCC1 proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of bubblesort.epsilon_lem_TCC2
bubblesort.epsilon_lem_TCC2 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of bubblesort.epsilon_lem
***Warning: epsilon_lem has fewer subgoals (2) than subproofs (3)
bubblesort.epsilon_lem proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of bubblesort.bubblesort_TCC1
bubblesort.bubblesort_TCC1 proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of bubblesort.bubblesort_TCC2
bubblesort.bubblesort_TCC2 proved in 0.44 real, 0.44 cpu seconds
Rerunning proof of bubblesort.sorted_bubblesort
bubblesort.sorted_bubblesort proved in 0.69 real, 0.69 cpu seconds
Proving theory sort_inversions
Rerunning proof of sort_inversions.finite_inversions
sort_inversions.finite_inversions proved in 0.50 real, 0.50 cpu seconds
Rerunning proof of sort_inversions.inversions_TCC1
sort_inversions.inversions_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of sort_inversions.finite_ap
sort_inversions.finite_ap proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of sort_inversions.ap_TCC1
sort_inversions.ap_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of sort_inversions.card_ap
***Warning: card_ap has fewer subgoals (2) than subproofs (3)
***Warning: card_ap.1 has fewer subgoals (1) than subproofs (2)
***Warning: card_ap.1 has fewer subgoals (1) than subproofs (2)
sort_inversions.card_ap proved in 0.43 real, 0.43 cpu seconds
Rerunning proof of sort_inversions.inversions_transpose_TCC1
sort_inversions.inversions_transpose_TCC1 proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of sort_inversions.inversions_transpose
sort_inversions.inversions_transpose proved in 0.77 real, 0.77 cpu seconds
Rerunning proof of sort_inversions.card_inversions_transpose
sort_inversions.card_inversions_transpose proved in 0.19 real, 0.19 cpu seconds
Rerunning proof of sort_inversions.sorted_iff_no_inversions
sort_inversions.sorted_iff_no_inversions proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of sort_inversions.successive_inversion_lem
sort_inversions.successive_inversion_lem proved in 0.37 real, 0.37 cpu seconds
Rerunning proof of sort_inversions.successive_inversion_exists
sort_inversions.successive_inversion_exists proved in 0.15 real, 0.15 cpu seconds
Proving theory permutation_ops
Rerunning proof of permutation_ops.sorted_iff_id_lem
permutation_ops.sorted_iff_id_lem proved in 0.30 real, 0.30 cpu seconds
Rerunning proof of permutation_ops.sorted_iff_id
permutation_ops.sorted_iff_id proved in 0.15 real, 0.15 cpu seconds
Proving theory permutation
Rerunning proof of permutation.inverse_id_TCC1
permutation.inverse_id_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of permutation.inverse_id
***Warning: inverse_id has fewer subgoals (1) than subproofs (2)
***Warning: inverse_id has fewer subgoals (1) than subproofs (2)
permutation.inverse_id proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of permutation.inverse_composition
***Warning: inverse_composition has fewer subgoals (1) than subproofs (2)
***Warning: inverse_composition has fewer subgoals (1) than subproofs (2)
***Warning: inverse_composition has fewer subgoals (1) than subproofs (2)
permutation.inverse_composition proved in 0.26 real, 0.26 cpu seconds
Rerunning proof of permutation.transpose_TCC1
permutation.transpose_TCC1 proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of permutation.involutorian_transpose
permutation.involutorian_transpose proved in 0.08 real, 0.08 cpu seconds
Proving theory sort_seq
Rerunning proof of sort_seq.increasing?_TCC1
sort_seq.increasing?_TCC1 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of sort_seq.sort_TCC1
sort_seq.sort_TCC1 proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of sort_seq.sort_length
sort_seq.sort_length proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of sort_seq.sort_seq_lem
sort_seq.sort_seq_lem proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of sort_seq.sort_seq_in?
sort_seq.sort_seq_in? proved in 0.25 real, 0.25 cpu seconds
Rerunning proof of sort_seq.sort_seq_in_TCC1
sort_seq.sort_seq_in_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of sort_seq.sort_seq_in
sort_seq.sort_seq_in proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of sort_seq.sort_seq_in2
sort_seq.sort_seq_in2 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of sort_seq.sort_map_TCC1
sort_seq.sort_map_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of sort_seq.sort_map_TCC2
sort_seq.sort_map_TCC2 proved in 0.25 real, 0.25 cpu seconds
Rerunning proof of sort_seq.sort_map_def_TCC1
sort_seq.sort_map_def_TCC1 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of sort_seq.sort_map_def
sort_seq.sort_map_def proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of sort_seq.sort_map_bij
sort_seq.sort_map_bij proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of sort_seq.isort_map_TCC1
sort_seq.isort_map_TCC1 proved in 0.42 real, 0.42 cpu seconds
Rerunning proof of sort_seq.isort_map_def_TCC1
sort_seq.isort_map_def_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of sort_seq.isort_map_def
sort_seq.isort_map_def proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of sort_seq.isort_map_bij
sort_seq.isort_map_bij proved in 0.08 real, 0.08 cpu seconds
Proving theory sort_seq_lems
Rerunning proof of sort_seq_lems.sort_seq_min_TCC1
sort_seq_lems.sort_seq_min_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of sort_seq_lems.sort_seq_min;;; GC:;;; Finished GC

sort_seq_lems.sort_seq_min proved in 0.00 real, 0.00 cpu seconds
Rerunning proof of sort_seq_lems.sort_seq_max_TCC1
sort_seq_lems.sort_seq_max_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of sort_seq_lems.sort_seq_max
sort_seq_lems.sort_seq_max proved in 0.22 real, 0.22 cpu seconds
Proving theory set2seq
Rerunning proof of set2seq.gen_seq_lem_TCC1
set2seq.gen_seq_lem_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of set2seq.gen_seq_lem
set2seq.gen_seq_lem proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of set2seq.set2seq_TCC1
set2seq.set2seq_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of set2seq.set2seq_TCC2
set2seq.set2seq_TCC2 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of set2seq.set2seq_length
set2seq.set2seq_length proved in 0.28 real, 0.28 cpu seconds
Rerunning proof of set2seq.set2seq_lem
set2seq.set2seq_lem proved in 0.29 real, 0.29 cpu seconds
Rerunning proof of set2seq.set2seq_exists
set2seq.set2seq_exists proved in 0.44 real, 0.44 cpu seconds
Rerunning proof of set2seq.set2seq_neq
set2seq.set2seq_neq proved in 0.38 real, 0.38 cpu seconds
Proving theory seq2set
Rerunning proof of seq2set.seq2set_TCC1
seq2set.seq2set_TCC1 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of seq2set.seq2set_lem
seq2set.seq2set_lem proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of seq2set.card_seq2set
seq2set.card_seq2set proved in 0.20 real, 0.20 cpu seconds
Rerunning proof of seq2set.seq2set_TCC2

 In input "ss!1(0)":
  added conversion finseq_appl[T]
             
  to ss!1, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]

seq2set.seq2set_TCC2 proved in 0.08 real, 0.08 cpu seconds
Proving theory seq_extras
Rerunning proof of seq_extras.first_TCC1
seq_extras.first_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of seq_extras.last_TCC1
seq_extras.last_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of seq_extras.rest_TCC1
seq_extras.rest_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of seq_extras.delete_TCC1
seq_extras.delete_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of seq_extras.delete_TCC2
seq_extras.delete_TCC2 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of seq_extras.insert?_TCC1
seq_extras.insert?_TCC1 proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of seq_extras.insert?_TCC2
seq_extras.insert?_TCC2 proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of seq_extras.add_first_TCC1
seq_extras.add_first_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of seq_extras.add_last_TCC1
seq_extras.add_last_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of seq_extras.empty_0
seq_extras.empty_0 proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of seq_extras.empty_o_seq
seq_extras.empty_o_seq proved in 0.29 real, 0.29 cpu seconds
Rerunning proof of seq_extras.seq_o_empty
seq_extras.seq_o_empty proved in 0.29 real, 0.29 cpu seconds
Rerunning proof of seq_extras.length_rest
seq_extras.length_rest proved in 0.22 real, 0.22 cpu seconds
Rerunning proof of seq_extras.length_delete_TCC1
seq_extras.length_delete_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of seq_extras.length_delete
seq_extras.length_delete proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of seq_extras.seq_empty
seq_extras.seq_empty proved in 0.26 real, 0.26 cpu seconds
Rerunning proof of seq_extras.seq_first_rest
seq_extras.seq_first_rest proved in 0.53 real, 0.53 cpu seconds
Rerunning proof of seq_extras.seq_first_rest_1
seq_extras.seq_first_rest_1 proved in 0.47 real, 0.47 cpu seconds
Rerunning proof of seq_extras.add_first_empty_seq
seq_extras.add_first_empty_seq proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of seq_extras.length_rest_0
seq_extras.length_rest_0 proved in 0.31 real, 0.31 cpu seconds
Rerunning proof of seq_extras.rest_add_first
seq_extras.rest_add_first proved in 0.39 real, 0.39 cpu seconds
Rerunning proof of seq_extras.first_add_TCC1
seq_extras.first_add_TCC1 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of seq_extras.first_add
seq_extras.first_add proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of seq_extras.nth_add_first_TCC1
seq_extras.nth_add_first_TCC1 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of seq_extras.nth_add_first_TCC2
seq_extras.nth_add_first_TCC2 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of seq_extras.nth_add_first_TCC3
seq_extras.nth_add_first_TCC3 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of seq_extras.nth_add_first
seq_extras.nth_add_first proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of seq_extras.first_add_last_TCC1
seq_extras.first_add_last_TCC1 proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of seq_extras.first_add_last
seq_extras.first_add_last proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of seq_extras.rest_add_last
seq_extras.rest_add_last proved in 0.76 real, 0.76 cpu seconds
Rerunning proof of seq_extras.add_first_last_commute
seq_extras.add_first_last_commute proved in 0.46 real, 0.46 cpu seconds
Rerunning proof of seq_extras.add_first_last
seq_extras.add_first_last proved in 0.63 real, 0.63 cpu seconds
Rerunning proof of seq_extras.add_last_delete
seq_extras.add_last_delete proved in 0.24 real, 0.24 cpu seconds
Rerunning proof of seq_extras.add_last_delete_is_o
seq_extras.add_last_delete_is_o proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of seq_extras.nth_add_last_TCC1
seq_extras.nth_add_last_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of seq_extras.nth_add_last_TCC2
seq_extras.nth_add_last_TCC2 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of seq_extras.nth_add_last_TCC3
seq_extras.nth_add_last_TCC3 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of seq_extras.nth_add_last
seq_extras.nth_add_last proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of seq_extras.add_first_compo
seq_extras.add_first_compo proved in 0.40 real, 0.40 cpu seconds
Rerunning proof of seq_extras.first_compo_TCC1
seq_extras.first_compo_TCC1 proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of seq_extras.first_compo
seq_extras.first_compo proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of seq_extras.rest_compo
seq_extras.rest_compo proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of seq_extras.rest_pos_TCC1
seq_extras.rest_pos_TCC1 proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of seq_extras.rest_pos_TCC2
seq_extras.rest_pos_TCC2 proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of seq_extras.rest_pos_TCC3
seq_extras.rest_pos_TCC3 proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of seq_extras.rest_pos
seq_extras.rest_pos proved in 0.25 real, 0.25 cpu seconds
Rerunning proof of seq_extras.delete_is_empty_TCC1
seq_extras.delete_is_empty_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of seq_extras.delete_is_empty
seq_extras.delete_is_empty proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of seq_extras.delete_pos_TCC1
seq_extras.delete_pos_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of seq_extras.delete_pos_TCC2
seq_extras.delete_pos_TCC2 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of seq_extras.delete_pos
seq_extras.delete_pos proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of seq_extras.insert_delete_TCC1
seq_extras.insert_delete_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of seq_extras.insert_delete
seq_extras.insert_delete proved in 0.25 real, 0.25 cpu seconds
Rerunning proof of seq_extras.add_first_delete_TCC1
seq_extras.add_first_delete_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of seq_extras.add_first_delete
seq_extras.add_first_delete proved in 1.25 real, 1.25 cpu seconds
Rerunning proof of seq_extras.delete_rest_TCC1
seq_extras.delete_rest_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of seq_extras.delete_rest_TCC2
seq_extras.delete_rest_TCC2 proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of seq_extras.delete_rest
seq_extras.delete_rest proved in 1.08 real, 1.08 cpu seconds
Rerunning proof of seq_extras.first_equal
seq_extras.first_equal proved in 0.53 real, 0.53 cpu seconds
Rerunning proof of seq_extras.nth_x_TCC1
seq_extras.nth_x_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of seq_extras.nth_x
seq_extras.nth_x proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of seq_extras.replace_nth
seq_extras.replace_nth proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of seq_extras.replace_n2
seq_extras.replace_n2 proved in 0.27 real, 0.27 cpu seconds
Rerunning proof of seq_extras.delete_equivalent
seq_extras.delete_equivalent proved in 1.10 real, 1.10 cpu seconds
Rerunning proof of seq_extras.equal_prefix
seq_extras.equal_prefix proved in 0.51 real, 0.51 cpu seconds
Rerunning proof of seq_extras.o_equals_o
seq_extras.o_equals_o proved in 0.52 real, 0.52 cpu seconds
Rerunning proof of seq_extras.o_length_o

 In input "(# length := length(seq3!1) - length(seq1!1), seq := (LAMBDA (i: below[length(seq3!1) - length(seq1!1)]): seq2!1(i)) #)":
  added conversion finseq_appl[T]
             
  to seq2!1, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]

seq_extras.o_length_o proved in 0.98 real, 0.98 cpu seconds
Rerunning proof of seq_extras.add_last_is_o
seq_extras.add_last_is_o proved in 0.40 real, 0.40 cpu seconds
Rerunning proof of seq_extras.add_first_is_o
seq_extras.add_first_is_o proved in 0.23 real, 0.23 cpu seconds
Rerunning proof of seq_extras.caret_o_TCC1
seq_extras.caret_o_TCC1 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of seq_extras.caret_o
seq_extras.caret_o proved in 0.43 real, 0.43 cpu seconds
Rerunning proof of seq_extras.caret_o_caret
seq_extras.caret_o_caret proved in 0.55 real, 0.55 cpu seconds
Proving theory seq_pigeon
Rerunning proof of seq_pigeon.seq_pigeon_lem

 In input "(LAMBDA (i: below(length(w!1))): w!1(i))":
  added conversion finseq_appl[(S)]
             
  to w!1, converting
     fs: finseq[(S)]
  to [below[length(fs)] -> (S)]


 In input "(LAMBDA (i: below(length(w!1))): w!1(i))":
  added conversion restrict
                       [below(length(w!1)),
                        (fullset[below(length(w!1))]), (S)]
             
  to (LAMBDA (i: below(length(w!1))):
        finseq_appl[(S)](w!1)(i)), converting
     [below(length(w!1)) -> (S)]
  to [(fullset[below(length(w!1))]) -> (S)]

seq_pigeon.seq_pigeon_lem proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of seq_pigeon.seq_pigeon_hole
seq_pigeon.seq_pigeon_hole proved in 0.09 real, 0.09 cpu seconds
Proving theory minmax_set2seq
Rerunning proof of minmax_set2seq.minmax_set2seq_TCC1
minmax_set2seq.minmax_set2seq_TCC1 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of minmax_set2seq.minmax_set2seq_TCC2
minmax_set2seq.minmax_set2seq_TCC2 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of minmax_set2seq.minmax_set2seq
minmax_set2seq.minmax_set2seq proved in 0.34 real, 0.34 cpu seconds
Proving theory minmax_seq2set
Rerunning proof of minmax_seq2set.minmax_seq2set_TCC1

 In input "ne_fs!1(0)":
  added conversion finseq_appl[T]
             
  to ne_fs!1, converting
     fs: finseq[T]
  to [below[length(fs)] -> T]

minmax_seq2set.minmax_seq2set_TCC1 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of minmax_seq2set.minmax_seq2set
minmax_seq2set.minmax_seq2set proved in 0.65 real, 0.65 cpu seconds
Proving theory top_bags
Proving theory bags_aux
Rerunning proof of bags_aux.choose_TCC1
bags_aux.choose_TCC1 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of bags_aux.rest_TCC1
bags_aux.rest_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of bags_aux.choose_gt_zero
bags_aux.choose_gt_zero proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of bags_aux.insert_choose_rest
bags_aux.insert_choose_rest proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of bags_aux.filter_emptybag
bags_aux.filter_emptybag proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of bags_aux.filter_insert
bags_aux.filter_insert proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of bags_aux.filter_delete;;; GC:;;; Finished GC

bags_aux.filter_delete proved in 0.00 real, 0.00 cpu seconds
Rerunning proof of bags_aux.filter_prop
bags_aux.filter_prop proved in 0.08 real, 0.08 cpu seconds
Proving theory bags
Rerunning proof of bags.delete_TCC1
bags.delete_TCC1 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of bags.emptybag_is_empty?
bags.emptybag_is_empty? proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of bags.delete_purge
bags.delete_purge proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of bags.insert_unique
bags.insert_unique proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of bags.insert_exchange
bags.insert_exchange proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of bags.delete_insert_TCC1
bags.delete_insert_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of bags.delete_insert
bags.delete_insert proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of bags.insert_delete
bags.insert_delete proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of bags.delete_insert_diff
bags.delete_insert_diff proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of bags.decomposition
bags.decomposition proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of bags.bag_equality
bags.bag_equality proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of bags.subbag_empty
bags.subbag_empty proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of bags.subbag_equality
bags.subbag_equality proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of bags.subbag_trans
bags.subbag_trans proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of bags.bag_plus_union
bags.bag_plus_union proved in 0.20 real, 0.20 cpu seconds
Rerunning proof of bags.bag_plus_comm
bags.bag_plus_comm proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of bags.plus_emptybag
bags.plus_emptybag proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of bags.bag_plus_insert
bags.bag_plus_insert proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of bags.bag_distributive
bags.bag_distributive proved in 0.77 real, 0.77 cpu seconds
Rerunning proof of bags.extract_subbag
bags.extract_subbag proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of bags.extract_disj
bags.extract_disj proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of bags.bag_disj_comm
bags.bag_disj_comm proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of bags.bag_union_comm
bags.bag_union_comm proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of bags.bag_union_fix_pt
bags.bag_union_fix_pt proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of bags.bag_purge_extract
bags.bag_purge_extract proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of bags.bag_disj_extract_perge
bags.bag_disj_extract_perge proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of bags.bag_extract_union_subbag
bags.bag_extract_union_subbag proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of bags.union_upper_bound
bags.union_upper_bound proved in 0.10 real, 0.10 cpu seconds
Proving theory bags_to_sets
Rerunning proof of bags_to_sets.insert_bag_lem
bags_to_sets.insert_bag_lem proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of bags_to_sets.purge_bag_lem
bags_to_sets.purge_bag_lem proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of bags_to_sets.bag_union_lem
bags_to_sets.bag_union_lem proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of bags_to_sets.bag_intersection_lem
bags_to_sets.bag_intersection_lem proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of bags_to_sets.subbag_lem
bags_to_sets.subbag_lem proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of bags_to_sets.bag_to_set_emptybag
bags_to_sets.bag_to_set_emptybag proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of bags_to_sets.empty_bts_bag
bags_to_sets.empty_bts_bag proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of bags_to_sets.bag_intersection_commutative
bags_to_sets.bag_intersection_commutative proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of bags_to_sets.bag_union_commutative
bags_to_sets.bag_union_commutative proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of bags_to_sets.bag_plus_lem
bags_to_sets.bag_plus_lem proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of bags_to_sets.extract_empty_or_singlton_set
bags_to_sets.extract_empty_or_singlton_set proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of bags_to_sets.extract_singleton
bags_to_sets.extract_singleton proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of bags_to_sets.bag_disj_set
bags_to_sets.bag_disj_set proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of bags_to_sets.bag_set_dist_union
bags_to_sets.bag_set_dist_union proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of bags_to_sets.bag_non_empty
bags_to_sets.bag_non_empty proved in 0.09 real, 0.09 cpu seconds
Proving theory finite_bags_lems
Rerunning proof of finite_bags_lems.card_bag_plus
finite_bags_lems.card_bag_plus proved in 0.22 real, 0.22 cpu seconds
Rerunning proof of finite_bags_lems.card_bag_union
finite_bags_lems.card_bag_union proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of finite_bags_lems.card_bag_disj_union
finite_bags_lems.card_bag_disj_union proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of finite_bags_lems.card_subbag_strict
finite_bags_lems.card_subbag_strict proved in 0.22 real, 0.22 cpu seconds
Rerunning proof of finite_bags_lems.card_subbag_strict2
finite_bags_lems.card_subbag_strict2 proved in 0.23 real, 0.23 cpu seconds
Proving theory finite_bags
Rerunning proof of finite_bags.bag_to_set_TCC1
finite_bags.bag_to_set_TCC1 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of finite_bags.finite_bag
finite_bags.finite_bag proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of finite_bags.finite_emptybag
finite_bags.finite_emptybag proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of finite_bags.finite_singleton_bag
finite_bags.finite_singleton_bag proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of finite_bags.finite_insert
finite_bags.finite_insert proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of finite_bags.finite_purge
finite_bags.finite_purge proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of finite_bags.finite_delete
finite_bags.finite_delete proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of finite_bags.finite_bag_union
finite_bags.finite_bag_union proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of finite_bags.finite_bag_intersection
finite_bags.finite_bag_intersection proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of finite_bags.finite_bag_plus
finite_bags.finite_bag_plus proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of finite_bags.finite_update
finite_bags.finite_update proved in 0.25 real, 0.25 cpu seconds
Rerunning proof of finite_bags.finite_set
finite_bags.finite_set proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of finite_bags.finite_extract
finite_bags.finite_extract proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of finite_bags.subtype_TCC1
finite_bags.subtype_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of finite_bags.singleton_bag_TCC1
finite_bags.singleton_bag_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of finite_bags.union_TCC1
finite_bags.union_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of finite_bags.intersection_TCC1
finite_bags.intersection_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of finite_bags.plus_TCC1
finite_bags.plus_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of finite_bags.union_TCC2
finite_bags.union_TCC2 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of finite_bags.plus_TCC2
finite_bags.plus_TCC2 proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of finite_bags.union_TCC3
finite_bags.union_TCC3 proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of finite_bags.plus_TCC3
finite_bags.plus_TCC3 proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of finite_bags.insert_TCC1
finite_bags.insert_TCC1 proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of finite_bags.purge_TCC1
finite_bags.purge_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of finite_bags.delete_TCC1
finite_bags.delete_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of finite_bags.emptybag_TCC1
finite_bags.emptybag_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of finite_bags.extract_TCC1
finite_bags.extract_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of finite_bags.card_emptybag
finite_bags.card_emptybag proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of finite_bags.card_bag_empty?
finite_bags.card_bag_empty? proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of finite_bags.card_singleton_bag
finite_bags.card_singleton_bag proved in 0.19 real, 0.19 cpu seconds
Rerunning proof of finite_bags.card_subbag?
finite_bags.card_subbag? proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of finite_bags.card_bag_particular_TCC1
finite_bags.card_bag_particular_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of finite_bags.card_bag_particular
finite_bags.card_bag_particular proved in 0.77 real, 0.77 cpu seconds
Rerunning proof of finite_bags.card_bag_delete
finite_bags.card_bag_delete proved in 0.33 real, 0.33 cpu seconds
Rerunning proof of finite_bags.card_bag_insert
finite_bags.card_bag_insert proved in 0.20 real, 0.20 cpu seconds
Rerunning proof of finite_bags.card_nonempty_bag?
finite_bags.card_nonempty_bag? proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of finite_bags.card_disj_intersection
finite_bags.card_disj_intersection proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of finite_bags.sum_bag_disj_union
finite_bags.sum_bag_disj_union proved in 0.33 real, 0.33 cpu seconds
Rerunning proof of finite_bags.card_extract
finite_bags.card_extract proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of finite_bags.card_extract_bag
finite_bags.card_extract_bag proved in 0.26 real, 0.26 cpu seconds
Rerunning proof of finite_bags.card_disjoint_add
finite_bags.card_disjoint_add proved in 0.22 real, 0.22 cpu seconds
Rerunning proof of finite_bags.card_purge_extract
finite_bags.card_purge_extract proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of finite_bags.card_union_extract_add
finite_bags.card_union_extract_add proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of finite_bags.card_union_extract
finite_bags.card_union_extract proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of finite_bags.card_geq_count
finite_bags.card_geq_count proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of finite_bags.card_geq_count_add
finite_bags.card_geq_count_add proved in 0.12 real, 0.12 cpu seconds
Proving theory finite_bags_inductions
Rerunning proof of finite_bags_inductions.cardinal_induction
finite_bags_inductions.cardinal_induction proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of finite_bags_inductions.finite_bag_induction
finite_bags_inductions.finite_bag_induction proved in 0.27 real, 0.27 cpu seconds
Proving theory finite_bags_aux
Rerunning proof of finite_bags_aux.finite_bag_rest
finite_bags_aux.finite_bag_rest proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of finite_bags_aux.rest_TCC1
finite_bags_aux.rest_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of finite_bags_aux.card_bag_rest
finite_bags_aux.card_bag_rest proved in 0.19 real, 0.19 cpu seconds
Rerunning proof of finite_bags_aux.finite_filter
finite_bags_aux.finite_filter proved in 0.19 real, 0.19 cpu seconds
Rerunning proof of finite_bags_aux.filter_TCC1
finite_bags_aux.filter_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of finite_bags_aux.card_filter_insert
finite_bags_aux.card_filter_insert proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of finite_bags_aux.card_filter_delete
finite_bags_aux.card_filter_delete proved in 0.24 real, 0.24 cpu seconds
Proving theory fault_masking_vote
Rerunning proof of fault_masking_vote.mid_val_is_maj
fault_masking_vote.mid_val_is_maj proved in 0.35 real, 0.35 cpu seconds
Proving theory majority_vote
Rerunning proof of majority_vote.maj_size
majority_vote.maj_size proved in 0.27 real, 0.27 cpu seconds
Rerunning proof of majority_vote.maj_single_or_empty
majority_vote.maj_single_or_empty proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of majority_vote.maj_unique
majority_vote.maj_unique proved in 0.21 real, 0.21 cpu seconds
Rerunning proof of majority_vote.maj_pigeonhole
majority_vote.maj_pigeonhole proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of majority_vote.maj_is_extraction
majority_vote.maj_is_extraction proved in 0.15 real, 0.15 cpu seconds
Proving theory middle_value_select
Rerunning proof of middle_value_select.mid_val_singleton
middle_value_select.mid_val_singleton proved in 0.69 real, 0.69 cpu seconds
Proving theory bag_filters
Rerunning proof of bag_filters.finite_l_filter
bag_filters.finite_l_filter proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of bag_filters.finite_u_filter
bag_filters.finite_u_filter proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of bag_filters.l_filter_TCC1
bag_filters.l_filter_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of bag_filters.u_filter_TCC1
bag_filters.u_filter_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of bag_filters.l_filter_extract
bag_filters.l_filter_extract proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of bag_filters.u_filter_extract
bag_filters.u_filter_extract proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of bag_filters.l_filter_singleton
bag_filters.l_filter_singleton proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of bag_filters.u_filter_singleton
bag_filters.u_filter_singleton proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of bag_filters.l_filter_subbag
bag_filters.l_filter_subbag proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of bag_filters.u_filter_subbag
bag_filters.u_filter_subbag proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of bag_filters.l_filter_orders
bag_filters.l_filter_orders proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of bag_filters.u_filter_orders
bag_filters.u_filter_orders proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of bag_filters.l_filter_orders_2
bag_filters.l_filter_orders_2 proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of bag_filters.u_filter_orders_2
bag_filters.u_filter_orders_2 proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of bag_filters.l_filter_insert_assoc
bag_filters.l_filter_insert_assoc proved in 0.19 real, 0.19 cpu seconds
Rerunning proof of bag_filters.u_filter_insert_assoc
bag_filters.u_filter_insert_assoc proved in 0.19 real, 0.19 cpu seconds
Rerunning proof of bag_filters.l_filter_insert
bag_filters.l_filter_insert proved in 0.19 real, 0.19 cpu seconds
Rerunning proof of bag_filters.u_filter_insert
bag_filters.u_filter_insert proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of bag_filters.l_filter_purge
bag_filters.l_filter_purge proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of bag_filters.u_filter_purge
bag_filters.u_filter_purge proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of bag_filters.l_u_diff_disj
bag_filters.l_u_diff_disj proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of bag_filters.l_u_fullset
bag_filters.l_u_fullset proved in 0.23 real, 0.23 cpu seconds
Rerunning proof of bag_filters.l_u_fullset2
bag_filters.l_u_fullset2 proved in 0.25 real, 0.25 cpu seconds
Rerunning proof of bag_filters.l_u_diff
bag_filters.l_u_diff proved in 0.53 real, 0.53 cpu seconds
Rerunning proof of bag_filters.subset_diff_elements
bag_filters.subset_diff_elements proved in 0.22 real, 0.22 cpu seconds
Rerunning proof of bag_filters.card_diff_elements
bag_filters.card_diff_elements proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of bag_filters.card_plus
Proving bag_filters.card_plus.
bag_filters.card_plus proved in 3.12 real, 3.12 cpu seconds
Rerunning proof of bag_filters.pigeonhole
bag_filters.pigeonhole proved in 0.26 real, 0.26 cpu seconds
Rerunning proof of bag_filters.maj_pigeonhole
bag_filters.maj_pigeonhole proved in 0.19 real, 0.19 cpu seconds
Rerunning proof of bag_filters.l_filter_nonempty
bag_filters.l_filter_nonempty proved in 0.24 real, 0.24 cpu seconds
Rerunning proof of bag_filters.u_filter_nonempty
bag_filters.u_filter_nonempty proved in 0.25 real, 0.25 cpu seconds
Rerunning proof of bag_filters.l_filter_max
bag_filters.l_filter_max proved in 0.41 real, 0.41 cpu seconds
Rerunning proof of bag_filters.u_filter_min
bag_filters.u_filter_min proved in 0.38 real, 0.38 cpu seconds
Rerunning proof of bag_filters.l_filter_max_purge
bag_filters.l_filter_max_purge proved in 0.85 real, 0.85 cpu seconds
Rerunning proof of bag_filters.u_filter_min_purge
bag_filters.u_filter_min_purge proved in 0.82 real, 0.82 cpu seconds
Rerunning proof of bag_filters.filter_exists
Proving bag_filters.filter_exists.;;; GC:;;; Finished GC

Proving bag_filters.filter_exists..
bag_filters.filter_exists proved in 2.32 real, 2.32 cpu seconds
Proving theory finite_bags_minmax
Rerunning proof of finite_bags_minmax.max_TCC1
finite_bags_minmax.max_TCC1 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of finite_bags_minmax.max_member
finite_bags_minmax.max_member proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of finite_bags_minmax.min_member
finite_bags_minmax.min_member proved in 0.07 real, 0.07 cpu seconds
Proving theory more_list_props
Rerunning proof of more_list_props.prefix?_TCC1
more_list_props.prefix?_TCC1 proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of more_list_props.suffix?_TCC1
more_list_props.suffix?_TCC1 proved in 0.24 real, 0.24 cpu seconds
Rerunning proof of more_list_props.caret_TCC1
more_list_props.caret_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.caret_TCC2
more_list_props.caret_TCC2 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.caret_TCC3
more_list_props.caret_TCC3 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of more_list_props.caret_TCC4
more_list_props.caret_TCC4 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of more_list_props.caret_TCC5
more_list_props.caret_TCC5 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of more_list_props.caret_TCC6
more_list_props.caret_TCC6 proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of more_list_props.caret_length
more_list_props.caret_length proved in 0.39 real, 0.39 cpu seconds
Rerunning proof of more_list_props.caret_cdr_TCC1
more_list_props.caret_cdr_TCC1 proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of more_list_props.caret_cdr_TCC2
more_list_props.caret_cdr_TCC2 proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of more_list_props.caret_cdr_TCC3
more_list_props.caret_cdr_TCC3 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of more_list_props.caret_cdr
more_list_props.caret_cdr proved in 1.30 real, 1.30 cpu seconds
Rerunning proof of more_list_props.caret_nth_TCC1
more_list_props.caret_nth_TCC1 proved in 0.39 real, 0.39 cpu seconds
Rerunning proof of more_list_props.caret_nth_TCC2
more_list_props.caret_nth_TCC2 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of more_list_props.caret_nth
more_list_props.caret_nth proved in 0.51 real, 0.51 cpu seconds
Rerunning proof of more_list_props.prefix_length
more_list_props.prefix_length proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of more_list_props.suffix_length
more_list_props.suffix_length proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of more_list_props.every_forall
more_list_props.every_forall proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.every_as_member
more_list_props.every_as_member proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of more_list_props.some_exists
more_list_props.some_exists proved in 0.39 real, 0.39 cpu seconds
Rerunning proof of more_list_props.list_extensionality_TCC1
more_list_props.list_extensionality_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.list_extensionality
more_list_props.list_extensionality proved in 0.42 real, 0.42 cpu seconds
Rerunning proof of more_list_props.list_pigeonhole
more_list_props.list_pigeonhole proved in 0.57 real, 0.57 cpu seconds
Rerunning proof of more_list_props.nth_append_TCC1
more_list_props.nth_append_TCC1 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of more_list_props.nth_append_TCC2
more_list_props.nth_append_TCC2 proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of more_list_props.nth_append
more_list_props.nth_append proved in 0.52 real, 0.52 cpu seconds
Rerunning proof of more_list_props.append_eq_length_left
more_list_props.append_eq_length_left proved in 0.34 real, 0.34 cpu seconds
Rerunning proof of more_list_props.length_null
more_list_props.length_null proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.length_singleton
more_list_props.length_singleton proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.length_null_list
more_list_props.length_null_list proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of more_list_props.reverse_def_TCC1
more_list_props.reverse_def_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.reverse_def_TCC2
more_list_props.reverse_def_TCC2 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of more_list_props.reverse_def
more_list_props.reverse_def proved in 1.00 real, 1.00 cpu seconds
Rerunning proof of more_list_props.cons_append
more_list_props.cons_append proved in 0.20 real, 0.20 cpu seconds
Rerunning proof of more_list_props.expand_list_TCC1
more_list_props.expand_list_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of more_list_props.expand_list
more_list_props.expand_list proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of more_list_props.expand_list_app
more_list_props.expand_list_app proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of more_list_props.append_null_left
more_list_props.append_null_left proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of more_list_props.append_null_right
more_list_props.append_null_right proved in 0.20 real, 0.20 cpu seconds
Rerunning proof of more_list_props.member_append_fi
more_list_props.member_append_fi proved in 0.43 real, 0.43 cpu seconds
Rerunning proof of more_list_props.null_append
more_list_props.null_append proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of more_list_props.cdr_append_TCC1
more_list_props.cdr_append_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.cdr_append_TCC2
more_list_props.cdr_append_TCC2 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.cdr_append
more_list_props.cdr_append proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.car_append
more_list_props.car_append proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of more_list_props.car_append_2_TCC1
more_list_props.car_append_2_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of more_list_props.car_append_2_TCC2
more_list_props.car_append_2_TCC2 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of more_list_props.car_append_2
more_list_props.car_append_2 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of more_list_props.member_nth
more_list_props.member_nth proved in 0.25 real, 0.25 cpu seconds
Rerunning proof of more_list_props.nth_member
more_list_props.nth_member proved in 0.38 real, 0.38 cpu seconds
Rerunning proof of more_list_props.member_iff_nth
more_list_props.member_iff_nth proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of more_list_props.member_append_r
more_list_props.member_append_r proved in 0.38 real, 0.38 cpu seconds
Rerunning proof of more_list_props.member_append_l
more_list_props.member_append_l proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of more_list_props.every_implies
more_list_props.every_implies proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of more_list_props.append_right_inj
more_list_props.append_right_inj proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of more_list_props.subl_over_len_TCC1
more_list_props.subl_over_len_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of more_list_props.subl_over_len
more_list_props.subl_over_len proved in 0.44 real, 0.44 cpu seconds
Rerunning proof of more_list_props.subl_shr_TCC1
more_list_props.subl_shr_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.subl_shr
more_list_props.subl_shr proved in 0.73 real, 0.73 cpu seconds
Rerunning proof of more_list_props.subl_idemp_TCC1
more_list_props.subl_idemp_TCC1 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of more_list_props.subl_idemp
more_list_props.subl_idemp proved in 0.60 real, 0.60 cpu seconds
Rerunning proof of more_list_props.length_subl
more_list_props.length_subl proved in 1.49 real, 1.49 cpu seconds
Rerunning proof of more_list_props.cdr_subl_TCC1
more_list_props.cdr_subl_TCC1 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of more_list_props.cdr_subl_TCC2
more_list_props.cdr_subl_TCC2 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of more_list_props.cdr_subl_TCC3
more_list_props.cdr_subl_TCC3 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.cdr_subl
more_list_props.cdr_subl proved in 0.20 real, 0.20 cpu seconds
Rerunning proof of more_list_props.member_nth_subl_TCC1
more_list_props.member_nth_subl_TCC1 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of more_list_props.member_nth_subl
more_list_props.member_nth_subl proved in 0.69 real, 0.69 cpu seconds
Rerunning proof of more_list_props.nth_subl_prefix_TCC1
more_list_props.nth_subl_prefix_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.nth_subl_prefix_TCC2
more_list_props.nth_subl_prefix_TCC2 proved in 0.33 real, 0.33 cpu seconds
Rerunning proof of more_list_props.nth_subl_prefix
more_list_props.nth_subl_prefix proved in 1.01 real, 1.01 cpu seconds
Rerunning proof of more_list_props.subl_incl
more_list_props.subl_incl proved in 0.60 real, 0.60 cpu seconds
Rerunning proof of more_list_props.take_TCC1
more_list_props.take_TCC1 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of more_list_props.take_TCC2
more_list_props.take_TCC2 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.take_TCC3
more_list_props.take_TCC3 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of more_list_props.length_take
more_list_props.length_take proved in 0.52 real, 0.52 cpu seconds
Rerunning proof of more_list_props.nth_take_TCC1
more_list_props.nth_take_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.nth_take
more_list_props.nth_take proved in 0.26 real, 0.26 cpu seconds
Rerunning proof of more_list_props.nth_take2_TCC1;;; GC:;;; Finished GC

more_list_props.nth_take2_TCC1 proved in 0.00 real, 0.00 cpu seconds
Rerunning proof of more_list_props.nth_take2
more_list_props.nth_take2 proved in 0.49 real, 0.49 cpu seconds
Rerunning proof of more_list_props.take_null
more_list_props.take_null proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of more_list_props.take_prop_1
more_list_props.take_prop_1 proved in 0.29 real, 0.29 cpu seconds
Rerunning proof of more_list_props.take_prop_2
more_list_props.take_prop_2 proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of more_list_props.member_take_1
more_list_props.member_take_1 proved in 0.52 real, 0.52 cpu seconds
Rerunning proof of more_list_props.suffix_rev_prefix
more_list_props.suffix_rev_prefix proved in 0.69 real, 0.69 cpu seconds
Rerunning proof of more_list_props.prefix_rev_suffix
more_list_props.prefix_rev_suffix proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of more_list_props.prefix_first
more_list_props.prefix_first proved in 0.30 real, 0.30 cpu seconds
Rerunning proof of more_list_props.suffix_last
more_list_props.suffix_last proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of more_list_props.suffix_end
more_list_props.suffix_end proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of more_list_props.prefix_app
more_list_props.prefix_app proved in 0.38 real, 0.38 cpu seconds
Rerunning proof of more_list_props.suffix_app
more_list_props.suffix_app proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of more_list_props.prefix_supl
more_list_props.prefix_supl proved in 0.56 real, 0.56 cpu seconds
Rerunning proof of more_list_props.suffix_supl
more_list_props.suffix_supl proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of more_list_props.suffix_same_length
more_list_props.suffix_same_length proved in 0.26 real, 0.26 cpu seconds
Rerunning proof of more_list_props.suffix_of_null
more_list_props.suffix_of_null proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of more_list_props.prefix_of_null
more_list_props.prefix_of_null proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of more_list_props.suffix_of_cons
more_list_props.suffix_of_cons proved in 0.28 real, 0.28 cpu seconds
Rerunning proof of more_list_props.suffix_nth_TCC1
more_list_props.suffix_nth_TCC1 proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of more_list_props.suffix_nth
more_list_props.suffix_nth proved in 0.74 real, 0.74 cpu seconds
Rerunning proof of more_list_props.prefix_reflexive
more_list_props.prefix_reflexive proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of more_list_props.suffix_reflexive
more_list_props.suffix_reflexive proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of more_list_props.suffix_member
more_list_props.suffix_member proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of more_list_props.prefix_cdr_TCC1
more_list_props.prefix_cdr_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.prefix_cdr
more_list_props.prefix_cdr proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of more_list_props.prefix_eq
more_list_props.prefix_eq proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of more_list_props.suffix_first_elem_TCC1
more_list_props.suffix_first_elem_TCC1 proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of more_list_props.suffix_first_elem
more_list_props.suffix_first_elem proved in 0.36 real, 0.36 cpu seconds
Rerunning proof of more_list_props.rdc_TCC1
more_list_props.rdc_TCC1 proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of more_list_props.rac_TCC1
more_list_props.rac_TCC1 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of more_list_props.length_snoc
more_list_props.length_snoc proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of more_list_props.rac_append_TCC1
more_list_props.rac_append_TCC1 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of more_list_props.rac_append
more_list_props.rac_append proved in 0.62 real, 0.62 cpu seconds
Rerunning proof of more_list_props.rdc_append
more_list_props.rdc_append proved in 0.99 real, 0.99 cpu seconds
Rerunning proof of more_list_props.rdc_rac
more_list_props.rdc_rac proved in 0.29 real, 0.29 cpu seconds
Rerunning proof of more_list_props.snoc_def
more_list_props.snoc_def proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of more_list_props.cons_snoc_commute
more_list_props.cons_snoc_commute proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.car_rdc_TCC1
more_list_props.car_rdc_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.car_rdc_TCC2
more_list_props.car_rdc_TCC2 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of more_list_props.car_rdc_TCC3
more_list_props.car_rdc_TCC3 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.car_rdc
more_list_props.car_rdc proved in 0.33 real, 0.33 cpu seconds
Rerunning proof of more_list_props.nth_rdc_TCC1
more_list_props.nth_rdc_TCC1 proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of more_list_props.nth_rdc_TCC2
more_list_props.nth_rdc_TCC2 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of more_list_props.nth_rdc
more_list_props.nth_rdc proved in 0.20 real, 0.20 cpu seconds
Rerunning proof of more_list_props.length_rdc_TCC1
more_list_props.length_rdc_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.length_rdc
more_list_props.length_rdc proved in 0.26 real, 0.26 cpu seconds
Rerunning proof of more_list_props.length_appendn
more_list_props.length_appendn proved in 0.20 real, 0.20 cpu seconds
Rerunning proof of more_list_props.nth_appendn_TCC1
more_list_props.nth_appendn_TCC1 proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of more_list_props.nth_appendn
more_list_props.nth_appendn proved in 0.77 real, 0.77 cpu seconds
Rerunning proof of more_list_props.nth_extensionality
more_list_props.nth_extensionality proved in 0.60 real, 0.60 cpu seconds
Rerunning proof of more_list_props.last_cons_TCC1
more_list_props.last_cons_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of more_list_props.last_cons
more_list_props.last_cons proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of more_list_props.last_append
more_list_props.last_append proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of more_list_props.last_cdr_TCC1
more_list_props.last_cdr_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.last_cdr_TCC2
more_list_props.last_cdr_TCC2 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.last_cdr
more_list_props.last_cdr proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of more_list_props.null_reverse
more_list_props.null_reverse proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of more_list_props.last_reverse_TCC1
more_list_props.last_reverse_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of more_list_props.last_reverse
more_list_props.last_reverse proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of more_list_props.car_reverse
more_list_props.car_reverse proved in 0.20 real, 0.20 cpu seconds
Rerunning proof of more_list_props.member_reverse
more_list_props.member_reverse proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of more_list_props.cut_ends_equal_TCC1
more_list_props.cut_ends_equal_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of more_list_props.cut_ends_equal_TCC2
more_list_props.cut_ends_equal_TCC2 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of more_list_props.cut_ends_equal_TCC3
more_list_props.cut_ends_equal_TCC3 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of more_list_props.cut_ends_equal
more_list_props.cut_ends_equal proved in 0.53 real, 0.53 cpu seconds
Rerunning proof of more_list_props.nnprefixes_same_head_TCC1
more_list_props.nnprefixes_same_head_TCC1 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of more_list_props.nnprefixes_same_head
more_list_props.nnprefixes_same_head proved in 0.20 real, 0.20 cpu seconds
Rerunning proof of more_list_props.no_repetitions_append
more_list_props.no_repetitions_append proved in 1.90 real, 1.90 cpu seconds
Rerunning proof of more_list_props.idx_TCC1
more_list_props.idx_TCC1 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of more_list_props.idx_TCC2
more_list_props.idx_TCC2 proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of more_list_props.idx_TCC3
more_list_props.idx_TCC3 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of more_list_props.idx_TCC4
more_list_props.idx_TCC4 proved in 0.22 real, 0.22 cpu seconds
Rerunning proof of more_list_props.idx_TCC5
more_list_props.idx_TCC5 proved in 0.49 real, 0.49 cpu seconds
Rerunning proof of more_list_props.idx_nth_no_rep_TCC1
more_list_props.idx_nth_no_rep_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of more_list_props.idx_nth_no_rep
more_list_props.idx_nth_no_rep proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of more_list_props.idx_inj
more_list_props.idx_inj proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of more_list_props.filtered_from_TCC1
more_list_props.filtered_from_TCC1 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of more_list_props.filtered_from_TCC2
more_list_props.filtered_from_TCC2 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of more_list_props.filter_idxs_TCC1
more_list_props.filter_idxs_TCC1 proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of more_list_props.filter_idxs_TCC2
more_list_props.filter_idxs_TCC2 proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of more_list_props.filter_idxs_TCC3
more_list_props.filter_idxs_TCC3 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of more_list_props.filter_idxs_TCC4
more_list_props.filter_idxs_TCC4 proved in 0.26 real, 0.26 cpu seconds
Rerunning proof of more_list_props.filter_idxs_TCC5
more_list_props.filter_idxs_TCC5 proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of more_list_props.filter_idxs_TCC6
more_list_props.filter_idxs_TCC6 proved in 0.86 real, 0.86 cpu seconds
Rerunning proof of more_list_props.no_rep_filter
more_list_props.no_rep_filter proved in 0.23 real, 0.23 cpu seconds
Rerunning proof of more_list_props.update_list_TCC1
more_list_props.update_list_TCC1 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of more_list_props.update_list_TCC2
more_list_props.update_list_TCC2 proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of more_list_props.update_list_TCC3
more_list_props.update_list_TCC3 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of more_list_props.update_list_TCC4
more_list_props.update_list_TCC4 proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of more_list_props.update_list_TCC5
more_list_props.update_list_TCC5 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of more_list_props.update_list_TCC6
more_list_props.update_list_TCC6 proved in 0.69 real, 0.69 cpu seconds
Rerunning proof of more_list_props.no_rep_cdr
more_list_props.no_rep_cdr proved in 0.33 real, 0.33 cpu seconds
Rerunning proof of more_list_props.no_rep_suffix
more_list_props.no_rep_suffix proved in 0.32 real, 0.32 cpu seconds
Rerunning proof of more_list_props.clone_times_TCC1
more_list_props.clone_times_TCC1 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of more_list_props.clone_times_TCC2
more_list_props.clone_times_TCC2 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of more_list_props.clone_times_TCC3
more_list_props.clone_times_TCC3 proved in 0.23 real, 0.23 cpu seconds
Rerunning proof of more_list_props.length_parm
more_list_props.length_parm proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of more_list_props.nth_parm
more_list_props.nth_parm proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of more_list_props.every_parm
more_list_props.every_parm proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of more_list_props.append_parm
more_list_props.append_parm proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of more_list_props.member_parm
more_list_props.member_parm proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of more_list_props.append_append_cons
more_list_props.append_append_cons proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of more_list_props.append_equal_null
more_list_props.append_equal_null proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of more_list_props.nth_append_below_TCC1
more_list_props.nth_append_below_TCC1 proved in 0.20 real, 0.20 cpu seconds
Rerunning proof of more_list_props.nth_append_below
more_list_props.nth_append_below proved in 0.26 real, 0.26 cpu seconds
Rerunning proof of more_list_props.nth_append_above_TCC1
more_list_props.nth_append_above_TCC1 proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of more_list_props.nth_append_above
more_list_props.nth_append_above proved in 0.36 real, 0.36 cpu seconds
Rerunning proof of more_list_props.tail?_TCC1
more_list_props.tail?_TCC1 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of more_list_props.tail_append
more_list_props.tail_append proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of more_list_props.ldiff_TCC1
more_list_props.ldiff_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of more_list_props.ldiff_TCC2
more_list_props.ldiff_TCC2 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.ldiff_TCC3
more_list_props.ldiff_TCC3 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of more_list_props.ldiff_append_TCC1
more_list_props.ldiff_append_TCC1 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of more_list_props.ldiff_append
more_list_props.ldiff_append proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of more_list_props.filter_nth

 LET/WHERE variable FL at line 2, col 19 is given type
  list[T] from its value expression.
;;; GC:;;; Finished GC

more_list_props.filter_nth proved in 0.00 real, 0.00 cpu seconds
Rerunning proof of more_list_props.length_sum_null
more_list_props.length_sum_null proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of more_list_props.takeFromRight_TCC1
more_list_props.takeFromRight_TCC1 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of more_list_props.takeFromRight_decreasing
more_list_props.takeFromRight_decreasing proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of more_list_props.takeFromRight_length
more_list_props.takeFromRight_length proved in 0.21 real, 0.21 cpu seconds
Rerunning proof of more_list_props.takeFromRight_member
more_list_props.takeFromRight_member proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of more_list_props.takeFromRight_takeFromRight
more_list_props.takeFromRight_takeFromRight proved in 0.31 real, 0.31 cpu seconds
Rerunning proof of more_list_props.nth_takeFromRight_TCC1
more_list_props.nth_takeFromRight_TCC1 proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of more_list_props.nth_takeFromRight
more_list_props.nth_takeFromRight proved in 0.43 real, 0.43 cpu seconds
Rerunning proof of more_list_props.merge_TCC1
more_list_props.merge_TCC1 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of more_list_props.LIST_induction
more_list_props.LIST_induction proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of more_list_props.sublist?_TCC1
more_list_props.sublist?_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of more_list_props.sublist?_TCC2
more_list_props.sublist?_TCC2 proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of more_list_props.sublist_alt_def_TCC1
more_list_props.sublist_alt_def_TCC1 proved in 0.39 real, 0.39 cpu seconds
Rerunning proof of more_list_props.prefix_is_sublist
more_list_props.prefix_is_sublist proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of more_list_props.respects_order?_TCC1
more_list_props.respects_order?_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of more_list_props.respects_order?_TCC2
more_list_props.respects_order?_TCC2 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of more_list_props.prefix_respects_order
more_list_props.prefix_respects_order proved in 0.25 real, 0.25 cpu seconds
Rerunning proof of more_list_props.suffix_respects_order
more_list_props.suffix_respects_order proved in 0.34 real, 0.34 cpu seconds
Rerunning proof of more_list_props.sublist_respects_order
more_list_props.sublist_respects_order proved in 0.23 real, 0.23 cpu seconds
Rerunning proof of more_list_props.snoc_car_sublist_append
more_list_props.snoc_car_sublist_append proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of more_list_props.append_consume_one
more_list_props.append_consume_one proved in 0.10 real, 0.10 cpu seconds
Proving theory list2set_props
Rerunning proof of list2set_props.list2set_member
list2set_props.list2set_member proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of list2set_props.list2set_append
list2set_props.list2set_append proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of list2set_props.null_append
list2set_props.null_append proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of list2set_props.member_append
list2set_props.member_append proved in 0.12 real, 0.12 cpu seconds
Proving theory listn
Rerunning proof of listn.listn_ext_TCC1
listn.listn_ext_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of listn.listn_ext_TCC2
listn.listn_ext_TCC2 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of listn.listn_ext
listn.listn_ext proved in 0.37 real, 0.37 cpu seconds
Rerunning proof of listn.listn_0
listn.listn_0 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of listn.setnth_TCC1
listn.setnth_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of listn.setnth_TCC2
listn.setnth_TCC2 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of listn.setnth_TCC3
listn.setnth_TCC3 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of listn.setnth_TCC4
listn.setnth_TCC4 proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of listn.setnth_TCC5
listn.setnth_TCC5 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of listn.setnth_TCC6
listn.setnth_TCC6 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of listn.setnth_TCC7
listn.setnth_TCC7 proved in 0.28 real, 0.28 cpu seconds
Rerunning proof of listn.normalize_fseq_TCC1
listn.normalize_fseq_TCC1 proved in 0.91 real, 0.91 cpu seconds
Rerunning proof of listn.normalize_fseq_def
listn.normalize_fseq_def proved in 0.06 real, 0.06 cpu seconds
Proving theory array2list
Rerunning proof of array2list.array2list_it_TCC1
array2list.array2list_it_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of array2list.array2list_it_TCC2
array2list.array2list_it_TCC2 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of array2list.array2list_it_TCC3
array2list.array2list_it_TCC3 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of array2list.array2list_it_TCC4