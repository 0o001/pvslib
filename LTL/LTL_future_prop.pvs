LTL_future_prop[State: TYPE+]: THEORY
  BEGIN

  IMPORTING LTL[State]
           ,LTL_semantics[State] 

           
  f1,f2,f3,g1,g2 : VAR LTL
  interval: VAR (propIntNatLB?)
 
  until_equiv : LEMMA 
    (equiv(f1,f2) AND equiv(g1,g2)) 
      IMPLIES equiv(UNTIL(f1,g1),UNTIL(f2,g2))

  finally_equiv : LEMMA 
    equiv(f1,f2)
      IMPLIES equiv(FINALLY(f1),FINALLY(f2))
  
  finally_bd_equiv : LEMMA 
    equiv(f1,f2)
      IMPLIES equiv(FINALLY_BD(f1, interval),FINALLY_BD(f2,interval))

  globally_equiv : LEMMA
    equiv(f1,f2)
      IMPLIES equiv(GLOBALLY(f1),GLOBALLY(f2))
      
  globally_bd_equiv: LEMMA
    equiv(f1,f2)
      IMPLIES equiv(GLOBALLY_BD(f1,interval),GLOBALLY_BD(f2,interval))

  release_equiv : LEMMA 
    (equiv(f1,f2) AND equiv(g1,g2))
      IMPLIES equiv(RELEASE(f1,g1),RELEASE(f2,g2))

  next_equiv: LEMMA
    equiv(f1,f2)
      IMPLIES equiv(NEXT(f1),NEXT(f2))

  previous_equiv: LEMMA
    equiv(f1,f2)
      IMPLIES equiv(PREVIOUS(f1),PREVIOUS(f2))

  zeta_equiv: LEMMA
    equiv(f1,f2)
      IMPLIES equiv(ZETA(f1),ZETA(f2))

  historically_equiv: LEMMA 
    equiv(f1,f2)
      IMPLIES equiv(HISTORICALLY(f1),HISTORICALLY(f2))

  historically_bd_equiv: LEMMA 
    equiv(f1,f2)
      IMPLIES equiv(HISTORICALLY_BD(f1,interval),HISTORICALLY_BD(f2,interval))

  once_equiv: LEMMA 
    equiv(f1,f2)
      IMPLIES equiv(ONCE(f1),ONCE(f2))

  once_bd_equiv: LEMMA 
    equiv(f1,f2)
      IMPLIES equiv(ONCE_BD(f1,interval),ONCE_BD(f2,interval))
  
  triggered_equiv : LEMMA 
    (equiv(f1,f2) AND equiv(g1,g2))
      IMPLIES equiv(TRIGGERED(f1,g1),TRIGGERED(f2,g2))

  finally_until: THEOREM
    equiv(FINALLY(f1), UNTIL(TT,f1))

  globally_dual: THEOREM
    equiv(GLOBALLY(f1), NOT_LTL(FINALLY(NOT_LTL(f1))))

  globally_bd_dual: THEOREM 
    equiv(GLOBALLY_BD(f1,interval), NOT_LTL(FINALLY_BD(NOT_LTL(f1),interval)))

  finally_dual: THEOREM
    equiv(FINALLY(f1), NOT_LTL(GLOBALLY(NOT_LTL(f1))))

  finally_bd_dual: THEOREM 
    equiv(FINALLY_BD(f1,interval), NOT_LTL(GLOBALLY_BD(NOT_LTL(f1),interval)))

  release_dual: THEOREM
    equiv(RELEASE(f1,f2),NOT_LTL(UNTIL(NOT_LTL(f1),NOT_LTL(f2))))

  strong_release_dual: THEOREM 
    equiv(STRONG_RELEASE(f1,f2), NOT_LTL(WEAK_UNTIL(NOT_LTL(f1),NOT_LTL(f2))))

  until_dual: THEOREM
    equiv(UNTIL(f1,f2),NOT_LTL(RELEASE(NOT_LTL(f1),NOT_LTL(f2))))

  weak_until_dual: THEOREM 
    equiv(WEAK_UNTIL(f1,f2), NOT_LTL(STRONG_RELEASE(NOT_LTL(f1),NOT_LTL(f2))))

  finally_idempotent: THEOREM
    equiv(FINALLY(f1),FINALLY(FINALLY(f1)))
  
  globally_idempotent: THEOREM
    equiv(GLOBALLY(f1),GLOBALLY(GLOBALLY(f1)))

  historically_idempotent: THEOREM
    equiv(HISTORICALLY(f1),HISTORICALLY(HISTORICALLY(f1)))

  until_idempotent: THEOREM 
    equiv(UNTIL(f1,f2), UNTIL(f1,UNTIL(f1,f2)))

  until_weak_until: THEOREM 
    equiv(UNTIL(f1,f2), AND_LTL(FINALLY(f2),WEAK_UNTIL(f1,f2)))

  release_weak_until: THEOREM 
    equiv(RELEASE(f1,f2), WEAK_UNTIL(f2,AND_LTL(f1,f2)))

  strong_release_until: THEOREM 
    equiv(STRONG_RELEASE(f1,f2), UNTIL(f2,AND_LTL(f1,f2)))

  globally_release: THEOREM
    equiv(GLOBALLY(f1),RELEASE(FF,f1))

  weak_until_until: THEOREM 
    equiv(WEAK_UNTIL(f1,f2), UNTIL(f1,OR_LTL(f2,GLOBALLY(f1))))

  weak_until_until_globally: THEOREM 
    equiv(WEAK_UNTIL(f1,f2), OR_LTL(UNTIL(f1,f2),GLOBALLY(f1)))

  release_strong_release_globally: THEOREM 
    equiv(RELEASE(f1,f2), OR_LTL(STRONG_RELEASE(f1,f2),GLOBALLY(f2)))

  weak_until_expansion: THEOREM 
    equiv(WEAK_UNTIL(f1,f2),OR_LTL(f2,AND_LTL(f1,NEXT(WEAK_UNTIL(f1,f2)))))

  next_negation: THEOREM 
    equiv(NOT_LTL(NEXT(f1)),NEXT(NOT_LTL(f1)))

  until_next: THEOREM 
    equiv(UNTIL(f1,f2),OR_LTL(f2,AND_LTL(f1,NEXT(UNTIL(f1,f2)))))

  release_next: THEOREM
    equiv(RELEASE(f1,f2), AND_LTL(f2,OR_LTL(f1,NEXT(RELEASE(f1,f2)))))

  globally_next: THEOREM
    equiv(GLOBALLY(f1), AND_LTL(f1,NEXT(GLOBALLY(f1))))
  
  finally_next: THEOREM
    equiv(FINALLY(f1), OR_LTL(f1,NEXT(FINALLY((f1)))))

  next_or_distributive: THEOREM 
    equiv(NEXT(OR_LTL(f1,f2)), OR_LTL(NEXT(f1),NEXT(f2)))

  next_and_distributive: THEOREM 
    equiv(NEXT(AND_LTL(f1,f2)), AND_LTL(NEXT(f1),NEXT(f2)))

  next_until_distributive: THEOREM
    equiv(NEXT(UNTIL(f1,f2)), UNTIL(NEXT(f1),NEXT(f2)))

  finally_or_distributive: THEOREM
    equiv(FINALLY(OR_LTL(f1,f2)), OR_LTL(FINALLY(f1),FINALLY(f2)))

  finally_bd_or_distributive: THEOREM
    equiv(FINALLY_BD(OR_LTL(f1,f2),interval)
         ,OR_LTL(FINALLY_BD(f1,interval),FINALLY_BD(f2,interval)))

  globally_and_distributive: THEOREM
    equiv(GLOBALLY(AND_LTL(f1,f2)), AND_LTL(GLOBALLY(f1),GLOBALLY(f2)))

  globally_bd_and_distributive: THEOREM
    equiv(GLOBALLY_BD(AND_LTL(f1,f2),interval)
         ,AND_LTL(GLOBALLY_BD(f1,interval),GLOBALLY_BD(f2,interval)))

  until_or_distributive: THEOREM
    equiv(UNTIL(f1,OR_LTL(f2,f3)), OR_LTL(UNTIL(f1,f2),UNTIL(f1,f3)))

  until_and_distributive: THEOREM
    equiv(UNTIL(AND_LTL(f2,f3),f1), AND_LTL(UNTIL(f2,f1),UNTIL(f3,f1)))
  
END LTL_future_prop
