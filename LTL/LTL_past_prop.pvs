LTL_past_prop[State: TYPE+]: THEORY
  BEGIN

  IMPORTING LTL[State]
           ,LTL_semantics[State] 
           
  f1,f2,f3,g1,g2 : VAR LTL
  interval: VAR (propIntNatLB?)
 
  previous_equiv: LEMMA
    equiv(f1,f2)
      IMPLIES equiv(PREVIOUS(f1),PREVIOUS(f2))

  zeta_equiv: LEMMA
    equiv(f1,f2)
      IMPLIES equiv(ZETA(f1),ZETA(f2))

  historically_equiv: LEMMA 
    equiv(f1,f2)
      IMPLIES equiv(HISTORICALLY(f1),HISTORICALLY(f2))

  historically_bd_equiv: LEMMA 
    equiv(f1,f2)
      IMPLIES equiv(HISTORICALLY_BD(f1,interval),HISTORICALLY_BD(f2,interval))

  once_equiv: LEMMA 
    equiv(f1,f2)
      IMPLIES equiv(ONCE(f1),ONCE(f2))

  once_bd_equiv: LEMMA 
    equiv(f1,f2)
      IMPLIES equiv(ONCE_BD(f1,interval),ONCE_BD(f2,interval))

  since_equiv : LEMMA 
    (equiv(f1,f2) AND equiv(g1,g2))
      IMPLIES equiv(SINCE(f1,g1),SINCE(f2,g2))
  
  triggered_equiv : LEMMA 
    (equiv(f1,f2) AND equiv(g1,g2))
      IMPLIES equiv(TRIGGERED(f1,g1),TRIGGERED(f2,g2))

  once_since: THEOREM
    equiv(ONCE(f1),SINCE(TT,f1))

  historically_dual: THEOREM 
    equiv(HISTORICALLY(f1), NOT_LTL(ONCE(NOT_LTL(f1))))

  historically_bd_dual: THEOREM 
    equiv(HISTORICALLY_BD(f1,interval), NOT_LTL(ONCE_BD(NOT_LTL(f1),interval)))

  since_dual: THEOREM
    equiv(SINCE(f1,f2),NOT_LTL(TRIGGERED(NOT_LTL(f1),NOT_LTL(f2))) )

  once_idempotent: THEOREM
    equiv(ONCE(f1),ONCE(ONCE(f1)))

  historically_idempotent: THEOREM
    equiv(HISTORICALLY(f1),HISTORICALLY(HISTORICALLY(f1)))

  since_idempotent: THEOREM 
    equiv(SINCE(f1,f2), SINCE(SINCE(f1,f2),f2))

  since_previous: THEOREM
    equiv(SINCE(f1,f2),OR_LTL(f2,AND_LTL(f1,PREVIOUS(SINCE(f1,f2)))))

  triggered_zeta: THEOREM
    equiv(TRIGGERED(f1,f2), AND_LTL(f2,OR_LTL(f1,ZETA(TRIGGERED(f1,f2)))))
  
  historically_zeta: THEOREM
    equiv(HISTORICALLY(f1), AND_LTL(f1,ZETA(HISTORICALLY(f1))))

  zeta_or_distributive: THEOREM 
    equiv(ZETA(OR_LTL(f1,f2)), OR_LTL(ZETA(f1),ZETA(f2)))

  zeta_and_distributive: THEOREM 
    equiv(ZETA(AND_LTL(f1,f2)), AND_LTL(ZETA(f1),ZETA(f2)))

  previous_or_distributive: THEOREM 
    equiv(PREVIOUS(OR_LTL(f1,f2)), OR_LTL(PREVIOUS(f1),PREVIOUS(f2)))

  previous_and_distributive: THEOREM 
    equiv(PREVIOUS(AND_LTL(f1,f2)), AND_LTL(PREVIOUS(f1),PREVIOUS(f2)))

  once_or_distributive: THEOREM
    equiv(ONCE(OR_LTL(f1,f2)), OR_LTL(ONCE(f1),ONCE(f2)))

  once_bd_or_distributive: THEOREM
    equiv(ONCE_BD(OR_LTL(f1,f2),interval), OR_LTL(ONCE_BD(f1,interval),ONCE_BD(f2,interval)))

  historically_and_distributive: THEOREM
    equiv(HISTORICALLY(AND_LTL(f1,f2)), AND_LTL(HISTORICALLY(f1),HISTORICALLY(f2)))

  historically_bd_and_distributive: THEOREM
    equiv(HISTORICALLY_BD(AND_LTL(f1,f2),interval)
         ,AND_LTL(HISTORICALLY_BD(f1,interval),HISTORICALLY_BD(f2,interval)))

  since_or_distributive: THEOREM
    equiv(SINCE(f1,OR_LTL(f2,f3)), OR_LTL(SINCE(f1,f2),SINCE(f1,f3)))
  
  since_and_distributive: THEOREM
    equiv(SINCE(AND_LTL(f2,f3),f1), AND_LTL(SINCE(f2,f1),SINCE(f3,f1)))

END LTL_past_prop
