%
% Definition of (correctly rounded) operations. An operation is said to be "cor-
% rectly rounded" when it is computed exactly and then rounded to the nearest
% floating-point number.
%
cr_flr[radix:above(1)]: THEORY
BEGIN

  IMPORTING float[radix],
	    unop_em_scheme

  b:        VAR Format
  f1,f2:    VAR float
  x1,x2,x3: VAR real

  flr_pre(x1):MACRO bool = TRUE

  Ffloor(b)(f1): {f2: (Fcanonic?(b)) | EvenClosest?(b)(floor(FtoR(f1)),f2) } =
    Fg[radix,b,flr_pre,floor](f1)
    
  Ffloor_bounded: LEMMA
    Fbounded?(b)(Ffloor(b)(f1))
  AUTO_REWRITE+ Ffloor_bounded

  Ffloor_error: LEMMA 
    abs(FtoR(Ffloor(b)(f1))-(floor(FtoR(f1))))<=Fulp(b)(Ffloor(b)(f1))/2
    
  Ffloor_error_ulp: LEMMA 
   FORALL(round: Rounding(b) | FORALL(f:(Fbounded?(b)),x:real):
                                            round(x,f) IMPLIES Closest?(b)(x,f),
          RtoF : RNDF(b,round)):
    abs(FtoR(Ffloor(b)(f1)) - floor(FtoR(f1)))
    <= ulp(b,round,RtoF)(floor(FtoR(f1)))/2

END cr_flr
