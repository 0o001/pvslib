ieee754sp_aerr_sc: THEORY
BEGIN

  IMPORTING ieee754sp

  r,r1,r2,e,e1,e2: VAR real
  f,f1,f2:       VAR unb_single
  
  trivialf1(f1): MACRO bool = TRUE
  trivialr1(r1): MACRO bool = TRUE
  trivialf2(f1,f2): MACRO bool = TRUE
  trivialr2(r1,r2): MACRO bool = TRUE
  trivialr4: MACRO [real,real,real,real->bool] =
    LAMBDA(X:[real,real,real,real]): TRUE
  
  % Addition ----------------------------------------------------------------- %

  IMPORTING float_aerr_sc_schm_op2[
  	      ieee754radix ,
 	      single_precision_format,
 	      StoR,
 	      RtoS,
 	      trivialf2,
 	      LAMBDA(f:(trivialf2)): Fadd(f`1,f`2),
              trivialr2,
 	      LAMBDA(r:(trivialr2)): r`1+r`2,
 	      trivialr4,
 	      LAMBDA(r:(trivialr4)): (r`2+r`4),
 	      trivialr4,
 	      LAMBDA(r:(trivialr4)): (r`2+r`4)
	    ] as Sadd_aerr
  
  I_err_add(r1,e1,r2,e2): MACRO Interval =
    [| Sadd_aerr.I_err_lb(r1,e1,r2,e2) , Sadd_aerr.I_err_ub(r1,e1,r2,e2) |]
     
%|- *_aerr : PROOF
%|- (then (skeep) (use "$1_aerr.aerr") (assert) (expand "Add")
%|-  (expand "[||]") (assert))
%|- QED
  Sadd_aerr: LEMMA
    StoR(f1) = r1 + e1 AND
    StoR(f2) = r2 + e2 
    IMPLIES 
      StoR(Fadd(f1,f2)) ## Add([|r1+r2|], I_err_add(r1,e1,r2,e2))

  % Subtraction -------------------------------------------------------------- %

  IMPORTING float_aerr_sc_schm_op2[
  	      ieee754radix ,
 	      single_precision_format,
 	      StoR,
 	      RtoS,
 	      trivialf2,
 	      LAMBDA(f:(trivialf2)): Fsub(f`1,f`2),
              trivialr2,
 	      LAMBDA(r:(trivialr2)): r`1-r`2,
 	      trivialr4,
 	      LAMBDA(r:(trivialr4)): (r`2-r`4),
 	      trivialr4,
 	      LAMBDA(r:(trivialr4)): (r`2-r`4)
	    ] as Ssub_aerr
  
  I_err_sub(r1,e1,r2,e2): MACRO Interval =
    [| Ssub_aerr.I_err_lb(r1,e1,r2,e2) , Ssub_aerr.I_err_ub(r1,e1,r2,e2) |]
     
  Ssub_aerr: LEMMA
    StoR(f1) = r1 + e1 AND
    StoR(f2) = r2 + e2 
    IMPLIES 
      StoR(Fsub(f1,f2)) ## Add([|r1-r2|], I_err_sub(r1,e1,r2,e2))

  % Multiplication ----------------------------------------------------------- %

  IMPORTING float_aerr_sc_schm_op2[
  	      ieee754radix ,
 	      single_precision_format,
 	      StoR,
 	      RtoS,
 	      trivialf2,
 	      LAMBDA(f:(trivialf2)): Fmul(f`1,f`2),
              trivialr2,
 	      LAMBDA(r:(trivialr2)): r`1*r`2,
 	      trivialr4,
 	      LAMBDA(r:(trivialr4)): r`1*r`4+r`3*r`2+r`2*r`4,
 	      trivialr4,
 	      LAMBDA(r:(trivialr4)): r`1*r`4+r`3*r`2+r`2*r`4
	    ] as Smul_aerr
  
  I_err_mul(r1,e1,r2,e2): MACRO Interval =
    [| Smul_aerr.I_err_lb(r1,e1,r2,e2) , Smul_aerr.I_err_ub(r1,e1,r2,e2) |]
     
  Smul_aerr: LEMMA
    StoR(f1) = r1 + e1 AND
    StoR(f2) = r2 + e2 
    IMPLIES 
      StoR(Fmul(f1,f2)) ## Add([|r1*r2|], I_err_mul(r1,e1,r2,e2))
      
  % Division ----------------------------------------------------------------- %

  divprer2(r1,r2): MACRO bool = r2 /= 0
  divpref2(f1,f2): MACRO bool = divprer2(StoR(f1),StoR(f2))
  divprer4(r1,e1,r2,e2): MACRO bool =
    r2 /= 0 AND r2+e2 /= 0
  
  IMPORTING float_aerr_sc_schm_op2[
  	      ieee754radix ,
 	      single_precision_format,
 	      StoR,
 	      RtoS,
 	      divpref2,
 	      LAMBDA(f:(divpref2)): Fdiv(f`1,f`2),
              divprer2,
 	      LAMBDA(r:(divprer2)): r`1/r`2,
 	      divprer4,
 	      LAMBDA(r:(divprer4)): (r`3*r`2-r`1*r`4)/(r`3*(r`3+r`4)),
 	      divprer4,
 	      LAMBDA(r:(divprer4)): (r`3*r`2-r`1*r`4)/(r`3*(r`3+r`4))
	    ] as Sdiv_aerr
  
  I_err_div(r1,e1,r2,(e2|divprer4(r1,e1,r2,e2))): MACRO Interval =
    [| Sdiv_aerr.I_err_lb(r1,e1,r2,e2) , Sdiv_aerr.I_err_ub(r1,e1,r2,e2) |]
     
  Sdiv_aerr: LEMMA
    StoR(f1) = r1 + e1 AND
    StoR(f2) = r2 + e2 AND
    r2 /= 0 AND r2+e2 /= 0
    IMPLIES 
      StoR(Fdiv(f1,f2)) ## Add([|r1/r2|], I_err_div(r1,e1,r2,e2))

  % Floor -------------------------------------------------------------------- %
  
  IMPORTING float_aerr_sc_schm_op1[
  	      ieee754radix,
	      single_precision_format,
	      StoR,
	      RtoS,
	      trivialf1,
	      Ffloor,
	      trivialr1,
	      floor,
	      trivialr2,
	      LAMBDA(r,e): floor(e)+floor(fractional(r)+fractional(e)),
	      trivialr2,
	      LAMBDA(r,e): floor(e)+floor(fractional(r)+fractional(e))
            ] as Sfloor_aerr

  I_err_floor(r,e): MACRO Interval =
    [| Sfloor_aerr.I_err_lb(r,e) , Sfloor_aerr.I_err_ub(r,e) |]
    
  Sfloor_aerr: LEMMA
    StoR(f) = r + e
    IMPLIES 
      StoR(Ffloor(f)) ## Add([|floor(r)|],I_err_floor(r,e))

END ieee754sp_aerr_sc
