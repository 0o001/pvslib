single32: THEORY
BEGIN

  IMPORTING top_ieee754sp

  single32: TYPE = unb_single
  single: TYPE = single32

  CONVERSION RtoS

  x,y: VAR single32
  nzy: VAR { y: single32 | StoR(y) /= 0 }
  nnx: VAR { x: single32 | StoR(x) >= 0 }
  px:  VAR { x: single32 | StoR(x) > 0 }

  add_s32(x,y)  : single32 = Sadd(x,y)
  sub_s32(x,y)  : single32 = Ssub(x,y)
  neg_s32(x)    : single32 = Sneg(x)
  mul_s32(x,y)  : single32 = Smul(x,y)
  div_s32(x,nzy): single32 = Sdiv(x,nzy)
  mod_s32(x,nzy): single32 = Smod(x,nzy)

  ;+(x,y)  : MACRO single32 = Sadd(x,y)
  ;-(x,y)  : MACRO single32 = Ssub(x,y)
  ;-(x)    : MACRO single32 = Sneg(x)
  ;*(x,y)  : MACRO single32 = Smul(x,y)
  ;/(x,nzy): MACRO single32 = Sdiv(x,nzy)

  ;< (x,y) : MACRO bool = Flt?(x,y)
  ;<=(x,y) : MACRO bool = Fle?(x,y)
  ;> (x,y) : MACRO bool = Flt?(x,y)
  ;>=(x,y) : MACRO bool = Fle?(x,y)

  r: VAR real

  ;< (x,r) : MACRO bool = Flt?(x,RtoS(r))
  ;<=(x,r) : MACRO bool = Fle?(x,RtoS(r))
  ;> (x,r) : MACRO bool = Flt?(x,RtoS(r))
  ;>=(x,r) : MACRO bool = Fle?(x,RtoS(r))


  abs_s32(x)    : single32 = Sabs(x)
  flr_s32(x)    : single32 = Sfloor(x)

  sqt_s32(nnx)  : single32 = Sabs(nnx)

  exp_s32(x)    : single32 = Sexp(x)
  lgn_s32(px)   : single32 = Sln(px)

  sin_s32(x)    : single32 = Ssin(x)
  cos_s32(x)    : single32 = Scos(x)
  atn_s32(x)    : single32 = Satan(x)

END single32
