(aerr754sp_flr
 (IMP_accum_err_flr_TCC1 0
  (IMP_accum_err_flr_TCC1-1 nil 3682181444 ("" (subtype-tcc) nil nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (aebound_flr_TCC1 0
  (aebound_flr_TCC1-1 nil 3682355814 ("" (subtype-tcc) nil nil)
   ((nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (rndeclosest_j application-judgement
     "CanonicRoundingFun[2](b, EvenClosest?(b))" aerr754sp_flr nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (posrat_plus_nnrat_is_posrat application-judgement "posrat"
     rationals nil)
    (RtoS const-decl "{f: unb_single | closest_single?(x1)(f)}"
     ieee754sp nil)
    (closest_single? const-decl "bool" ieee754sp nil)
    (unb_single type-eq-decl nil ieee754sp nil)
    (Fcanonic? const-decl "bool" float nil)
    (sp_closest? const-decl "bool" ieee754sp nil)
    (Fbounded? const-decl "bool" float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (float type-eq-decl nil float nil)
    (int nonempty-type-eq-decl nil integers nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (single_precision_format const-decl "Format" ieee754sp nil)
    (Format type-eq-decl nil float nil)
    (above nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (flr_aerr_bound const-decl "real" accum_err_flr nil)
    (flr_ulp_bound const-decl "nonneg_real" accum_err_flr nil)
    (FtoR const-decl "real" float nil)
    (Fopp const-decl "float" float nil)
    (RND_Max const-decl "(Fcanonic?(b))" float nil)
    (Fulp const-decl "real" float nil)
    (ulp const-decl "posreal" float nil)
    (ulp_sp const-decl "nonneg_real" ieee754sp nil)
    (posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (int_abs_is_nonneg application-judgement "{j: nonneg_int | j >= i}"
     real_defs nil)
    (rat_times_rat_is_rat application-judgement "rat" rationals nil)
    (rat_minus_rat_is_rat application-judgement "rat" rationals nil)
    (minus_int_is_int application-judgement "int" integers nil)
    (posrat_div_posrat_is_posrat application-judgement "posrat"
     rationals nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (nnrat_exp application-judgement "nnrat" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil))
 (Sfloor_aerr 0
  (Sfloor_aerr-2 nil 3682264078
   ("" (expand "aebound_flr")
    (("" (skeep)
      (("" (lemma "accum_err_bound")
        (("" (expand "StoR")
          (("" (expand "Ffloor" 1)
            (("" (expand "ulp_sp")
              (("" (inst?)
                (("" (split -1)
                  (("1" (propax) nil nil) ("2" (propax) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((real_minus_real_is_real application-judgement "real" reals nil)
    (StoR const-decl "real" ieee754sp nil)
    (ulp_sp const-decl "nonneg_real" ieee754sp nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (Ffloor const-decl
     "{f: unb_single | closest_single?(floor(FtoR(f1)))(f)}"
     ieee754sp_flr nil)
    (accum_err_bound formula-decl nil accum_err_flr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (above nonempty-type-eq-decl nil integers nil)
    (Format type-eq-decl nil float nil)
    (single_precision_format const-decl "Format" ieee754sp nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (float type-eq-decl nil float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Fbounded? const-decl "bool" float nil)
    (sp_closest? const-decl "bool" ieee754sp nil)
    (Fcanonic? const-decl "bool" float nil)
    (unb_single type-eq-decl nil ieee754sp nil)
    (closest_single? const-decl "bool" ieee754sp nil)
    (RtoS const-decl "{f: unb_single | closest_single?(x1)(f)}"
     ieee754sp nil)
    (aebound_flr const-decl "nonneg_real" aerr754sp_flr nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil))
   nil)
  (Sfloor_aerr-1 nil 3682181469
   ("" (skeep)
    (("" (lemma "accum_err_bound")
      (("" (expand "StoR")
        (("" (expand "Ffloor" 1)
          (("" (expand "ulp_sp")
            (("" (inst?)
              (("" (split -1)
                (("1" (propax) nil nil) ("2" (propax) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((RtoS const-decl "{f: unb_single | closest_single?(x1)(f)}"
     ieee754sp nil)
    (closest_single? const-decl "bool" ieee754sp nil)
    (unb_single type-eq-decl nil ieee754sp nil)
    (Fcanonic? const-decl "bool" float nil)
    (sp_closest? const-decl "bool" ieee754sp nil)
    (Fbounded? const-decl "bool" float nil)
    (float type-eq-decl nil float nil)
    (single_precision_format const-decl "Format" ieee754sp nil)
    (Format type-eq-decl nil float nil)
    (accum_err_bound formula-decl nil accum_err_flr nil)
    (ulp_sp const-decl "nonneg_real" ieee754sp nil)
    (StoR const-decl "real" ieee754sp nil))
   shostak)))

