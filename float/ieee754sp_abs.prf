(ieee754sp_abs
 (IMP_cr_abs_TCC1 0
  (IMP_cr_abs_TCC1-1 nil 3698656056 ("" (subtype-tcc) nil nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (IMP_cr_abs_TCC2 0
  (IMP_cr_abs_TCC2-1 nil 3698657736 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (above nonempty-type-eq-decl nil integers nil)
    (Format type-eq-decl nil float nil)
    (int nonempty-type-eq-decl nil integers nil)
    (float type-eq-decl nil float nil)
    (Fbounded? const-decl "bool" float nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (> const-decl "bool" reals nil)
    (radix formal-const-decl "above(1)" cr_abs nil)
    (sp_closest? const-decl "bool" ieee754sp nil)
    (EvenClosest? const-decl "bool" float nil)
    (even? const-decl "bool" integers nil)
    (Closest? const-decl "bool" float nil)
    (FtoR const-decl "real" float nil)
    (single_precision_format const-decl "Format" ieee754sp nil)
    (nnrat_exp application-judgement "nnrat" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (rat_times_rat_is_rat application-judgement "rat" rationals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil))
   nil))
 (Sabs_TCC1 0
  (Sabs_TCC1-1 nil 3698656056
   ("" (expand "Fabs") (("" (expand "Fg") (("" (propax) nil nil)) nil))
    nil)
   ((Fg const-decl
     "{f2: (Fcanonic?(b)) | Closest?(b)(g(FtoR(f1)), f2)}"
     unop_em_scheme nil)
    (Fabs const-decl
     "{f2: (Fcanonic?(b)) | Closest?(b)(abs(FtoR(f1)), f2)}" cr_abs
     nil))
   nil))
 (Sabs_correctly_rounded 0
  (Sabs_correctly_rounded-1 nil 3698656074
   ("" (skeep)
    (("" (invoke (expand "%1") (? 1 "%1(%0) ="))
      (("" (invoke (expand "%1") (? 1 "%1(%0) ="))
        (("" (expand "Fg")
          (("" (expand "RtoS")
            (("" (expand "StoR") (("" (propax) nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((Sabs const-decl
     "{f: unb_single | closest_single?(abs(FtoR(f1)))(f)}"
     ieee754sp_abs nil)
    (Fg const-decl
     "{f2: (Fcanonic?(b)) | Closest?(b)(g(FtoR(f1)), f2)}"
     unop_em_scheme nil)
    (StoR const-decl "real" ieee754sp nil)
    (RtoS const-decl "{f: unb_single | closest_single?(x1)(f)}"
     ieee754sp nil)
    (Fabs const-decl
     "{f2: (Fcanonic?(b)) | Closest?(b)(abs(FtoR(f1)), f2)}" cr_abs
     nil))
   nil)))

