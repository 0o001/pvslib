(ieee754sp_flr
 (IMP_cr_flr_TCC1 0
  (IMP_cr_flr_TCC1-1 nil 3685290323 ("" (subtype-tcc) nil nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (Sfloor_TCC1 0
  (Sfloor_TCC1-1 nil 3668264714
   ("" (expand "Ffloor")
    (("" (expand "Fg") (("" (propax) nil nil)) nil)) nil)
   ((Fg const-decl
     "{f2: (Fcanonic?(b)) | Closest?(b)(g(FtoR(f1)), f2)}"
     unop_em_scheme nil)
    (Ffloor const-decl
     "{f2: (Fcanonic?(b)) | Closest?(b)(floor(FtoR(f1)), f2)}" cr_flr
     nil))
   nil))
 (Sfloor_correctly_rounded 0
  (Sfloor_correctly_rounded-2 nil 3698579621
   ("" (skeep)
    (("" (invoke (expand "%1") (? 1 "%1(%0) ="))
      (("" (invoke (expand "%1") (? 1 "%1(%0) ="))
        (("" (expand "Fg")
          (("" (expand "RtoS")
            (("" (expand "StoR") (("" (propax) nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((Sfloor const-decl
     "{f: unb_single | closest_single?(floor(FtoR(f1)))(f)}"
     ieee754sp_flr nil)
    (Fg const-decl
     "{f2: (Fcanonic?(b)) | Closest?(b)(g(FtoR(f1)), f2)}"
     unop_em_scheme nil)
    (StoR const-decl "real" ieee754sp nil)
    (RtoS const-decl "{f: unb_single | closest_single?(x1)(f)}"
     ieee754sp nil)
    (Ffloor const-decl
     "{f2: (Fcanonic?(b)) | Closest?(b)(floor(FtoR(f1)), f2)}" cr_flr
     nil))
   nil)
  (Sfloor_correctly_rounded-1 nil 3676387814
   ("" (skeep)
    (("" (invoke (expand "%1") (? 1 "%1(%0) ="))
      (("" (invoke (expand "%1") (? 1 "%1(%0)(%0) ="))
        (("" (expand "Fg")
          (("" (expand "RtoS")
            (("" (expand "StoR") (("" (propax) nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((Fg const-decl
     "{f2: (Fcanonic?(b)) | Closest?(b)(g(FtoR(f1)), f2)}"
     unop_em_scheme nil)
    (StoR const-decl "real" ieee754sp nil)
    (RtoS const-decl "{f: unb_single | closest_single?(x1)(f)}"
     ieee754sp nil)
    (Ffloor const-decl
     "{f2: (Fcanonic?(b)) | Closest?(b)(floor(FtoR(f1)), f2)}" cr_flr
     nil))
   shostak)))

