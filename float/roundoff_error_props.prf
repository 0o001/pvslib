(roundoff_error_props
 (smallest_fp_ge_TCC1 0
  (smallest_fp_ge_TCC1-1 nil 3764522785
   (""
    (then (skeep) (expand "RtoD_max") (use "RND_Max_isMax")
     (expand "isMax?") (expand "DtoR") (flatten) (assert) (skeep)
     (inst? -2) (assert))
    nil)
   nil nil
   (smallest_fp_ge subtype "ieee754dp.RtoD_max(roundoff_error_props.x)"
    "{X: ieee754dp.unb_double | booleans.AND(reals.<=(roundoff_error_props.x, ieee754dp.DtoR(X)), FORALL Y: booleans.IMPLIES(reals.<=(roundoff_error_props.x, ieee754dp.DtoR(roundoff_error_props.Y)), reals.<=(ieee754dp.DtoR(X), ieee754dp.DtoR(roundoff_error_props.Y))))}")))
 (smallest_fp_ge_is_ge 0
  (smallest_fp_ge_is_ge-1 nil 3764522793
   ("" (then (skeep) (typepred "smallest_fp_ge(r_X)") (propax)) nil)
   nil shostak))
 (smallest_fp_ge_nonneg_is_nonneg 0
  (smallest_fp_ge_nonneg_is_nonneg-1 nil 3764522793
   (""
    (then (skeep) (use "smallest_fp_ge_is_ge")
     (spread (case "0 <= x")
      ((then (use "RtoD_inc") (assert) (hide -2) (lemma "RtoD_inc")
        (inst? -1 :where -3) (assert) (rewrite "RtoD_DtoR")
        (apply-transitivity 1 -1 -2))
       (assert))))
    nil)
   nil shostak))
 (smallest_fp_ge_nonneg_j 0
  (smallest_fp_ge_nonneg_j-1 nil 3764522785
   (""
    (then (skeep) (use "smallest_fp_ge_is_ge")
     (spread (case "0 <= x")
      ((then (use "RtoD_inc") (assert) (hide -2) (lemma "RtoD_inc")
        (inst? -1 :where -3) (assert) (rewrite "RtoD_DtoR")
        (apply-transitivity 1 -1 -2))
       (assert))))
    nil)
   nil nil
   (smallest_fp_ge_nonneg_j subtype
    "roundoff_error_props.smallest_fp_ge(roundoff_error_props.x)"
    "nonneg_unbdp")))
 (smallest_fp_ge_dtor 0
  (smallest_fp_ge_dtor-1 nil 3764522793
   (""
    (then (skeep) (typepred "smallest_fp_ge(DtoR(X))") (inst -3 "X")
     (assert)
     (spread (case "DtoR(X) = DtoR(smallest_fp_ge(DtoR(X)))")
      ((then (hide -3 -4)
        (spread
         (case "RtoD(DtoR(X)) = RtoD(DtoR(smallest_fp_ge(DtoR(X))))")
         ((then (rewrite "RtoD_DtoR") (rewrite "RtoD_DtoR"))
          (assert))))
       (assert))))
    nil)
   nil shostak))
 (greatest_fp_le_TCC1 0
  (greatest_fp_le_TCC1-1 nil 3764522785
   (""
    (then (skeep) (expand "RtoD_min") (use "RND_Min_isMin")
     (expand "isMin?") (expand "DtoR") (flatten) (assert) (skeep)
     (inst? -2) (assert))
    nil)
   nil nil
   (greatest_fp_le subtype "ieee754dp.RtoD_min(roundoff_error_props.x)"
    "{X: ieee754dp.unb_double | booleans.AND(reals.<=(ieee754dp.DtoR(X), roundoff_error_props.x), FORALL Y: booleans.IMPLIES(reals.<=(ieee754dp.DtoR(roundoff_error_props.Y), roundoff_error_props.x), reals.<=(ieee754dp.DtoR(roundoff_error_props.Y), ieee754dp.DtoR(X))))}")))
 (greatest_fp_le_is_le 0
  (greatest_fp_le_is_le-1 nil 3764522793
   ("" (then (skeep) (typepred "greatest_fp_le(r_X)") (propax)) nil)
   nil shostak))
 (greatest_fp_le_nonpos_is_nonpos 0
  (greatest_fp_le_nonpos_is_nonpos-1 nil 3764522793
   (""
    (then (skeep) (use "greatest_fp_le_is_le")
     (spread (case "x <= 0")
      ((then (lemma "RtoD_inc") (inst? -1 :where -2) (assert)
        (lemma "RtoD_inc") (inst? -1 :where -4) (assert) (assert)
        (rewrite "RtoD_DtoR") (assert) (apply-transitivity 1 -1 -2))
       (assert))))
    nil)
   nil shostak))
 (greatest_fp_le_nonneg_j 0
  (greatest_fp_le_nonneg_j-1 nil 3764522785
   ("" (use "greatest_fp_le_nonpos_is_nonpos") nil) nil nil
   (greatest_fp_le_nonneg_j subtype
    "roundoff_error_props.greatest_fp_le(roundoff_error_props.x)"
    "nonpos_unbdp")))
 (greatest_fp_le_dtor 0
  (greatest_fp_le_dtor-1 nil 3764522793
   (""
    (then (skeep) (typepred "greatest_fp_le(DtoR(X))") (inst -3 "X")
     (assert)
     (spread (case "DtoR(X) = DtoR(greatest_fp_le(DtoR(X)))")
      ((then (hide -3 -4)
        (spread
         (case "RtoD(DtoR(X)) = RtoD(DtoR(greatest_fp_le(DtoR(X))))")
         ((then (rewrite "RtoD_DtoR") (rewrite "RtoD_DtoR"))
          (assert))))
       (assert))))
    nil)
   nil shostak))
 (lt_greatest_gt_smallest_contradiction 0
  (lt_greatest_gt_smallest_contradiction-1 nil 3764522793
   (""
    (then (skeep) (rewrite "DtoR_strictly_increasing")
     (rewrite "DtoR_strictly_increasing") (use "greatest_fp_le_is_le")
     (use "smallest_fp_ge_is_ge") (assert))
    nil)
   nil shostak))
 (lt_greatest_ge_smallest_contradiction 0
  (lt_greatest_ge_smallest_contradiction-1 nil 3764522793
   (""
    (then (skeep) (rewrite "DtoR_strictly_increasing")
     (rewrite "DtoR_inc") (use "greatest_fp_le_is_le")
     (use "smallest_fp_ge_is_ge") (assert))
    nil)
   nil shostak))
 (var_ge_0_trans_real 0
  (var_ge_0_trans_real-1 nil 3764521680
   (""
    (then (skeep) (skoletin* -2)
     (spread (case "0 <= DtoR(X) - e_X")
      ((spread (case "DtoR(X) - e_X <= r_X")
        ((assert) (then (hide-all-but (1 -4)) (assert))))
       (then (expand "Err_X") (hide-all-but (1 -1))
        (use "smallest_fp_ge_is_ge") (rewrite "DtoR_inc" -2)
        (assert)))))
    nil)
   ((DtoR_inc formula-decl nil ieee754dp nil)
    (nonneg_unbdp type-eq-decl nil ieee754dp nil)
    (RtoD const-decl "{f: unb_double | closest_double?(x1)(f)}"
     ieee754dp nil)
    (closest_double? const-decl "bool" ieee754dp nil)
    (Fbounded? const-decl "bool" float nil)
    (DtoR const-decl "real" ieee754dp nil)
    (unb_double type-eq-decl nil ieee754dp nil)
    (double_precision_format const-decl "Format" ieee754dp nil)
    (Fcanonic? const-decl "bool" float nil)
    (Format type-eq-decl nil float nil)
    (float type-eq-decl nil float nil))
   shostak))
 (var_gt_error__var_r_gt_0 0
  (var_gt_error__var_r_gt_0-1 nil 3764521770
   (""
    (then (skeep) (skoletin* -2)
     (spread (case "0 < DtoR(X) - e_X")
      ((spread (case "DtoR(X) - e_X <= r_X")
        ((assert) (then (hide-all-but (1 -4)) (assert))))
       (then (expand "Err_X") (hide-all-but (1 -1))
        (use "smallest_fp_ge_is_ge")
        (rewrite "DtoR_strictly_increasing") (assert)))))
    nil)
   ((DtoR_strictly_increasing formula-decl nil ieee754dp nil)
    (Fbounded? const-decl "bool" float nil)
    (closest_double? const-decl "bool" ieee754dp nil)
    (RtoD const-decl "{f: unb_double | closest_double?(x1)(f)}"
     ieee754dp nil)
    (nonneg_unbdp type-eq-decl nil ieee754dp nil)
    (DtoR const-decl "real" ieee754dp nil)
    (unb_double type-eq-decl nil ieee754dp nil)
    (double_precision_format const-decl "Format" ieee754dp nil)
    (Fcanonic? const-decl "bool" float nil)
    (Format type-eq-decl nil float nil)
    (float type-eq-decl nil float nil))
   shostak))
 (var_ge_0_trans_fp 0
  (var_ge_0_trans_fp-1 nil 3764521757
   (""
    (then (skeep) (skoletin* -2)
     (spread (case "RtoD(0) <= Err_X")
      ((apply-transitivity 1 -1 -2) (assert))))
    nil)
   ((Fle_transitive formula-decl nil float nil)
    (nonneg_unbdp type-eq-decl nil ieee754dp nil)
    (RtoD const-decl "{f: unb_double | closest_double?(x1)(f)}"
     ieee754dp nil)
    (closest_double? const-decl "bool" ieee754dp nil)
    (Fbounded? const-decl "bool" float nil)
    (DtoR const-decl "real" ieee754dp nil)
    (unb_double type-eq-decl nil ieee754dp nil)
    (double_precision_format const-decl "Format" ieee754dp nil)
    (Fcanonic? const-decl "bool" float nil)
    (Format type-eq-decl nil float nil)
    (float type-eq-decl nil float nil))
   shostak))
 (var_fp_gt_err__var_fp_gt_0 0
  (var_fp_gt_err__var_fp_gt_0-1 nil 3764521770
   (""
    (then (skeep) (skoletin* -2)
     (spread (case "RtoD(0) <= Err_X")
      ((then (hide-all-but (1 -1 -2)) (rewrite "leq_def")
        (spread (split -1)
         ((apply-transitivity 1 -1 -2 "Flt") (assert))))
       (assert))))
    nil)
   ((float type-eq-decl nil float nil)
    (Format type-eq-decl nil float nil)
    (Fcanonic? const-decl "bool" float nil)
    (double_precision_format const-decl "Format" ieee754dp nil)
    (unb_double type-eq-decl nil ieee754dp nil)
    (DtoR const-decl "real" ieee754dp nil)
    (nonneg_unbdp type-eq-decl nil ieee754dp nil)
    (RtoD const-decl "{f: unb_double | closest_double?(x1)(f)}"
     ieee754dp nil)
    (closest_double? const-decl "bool" ieee754dp nil)
    (Fbounded? const-decl "bool" float nil)
    (Flt_transitive formula-decl nil float nil)
    (leq_def formula-decl nil ieee754dp nil))
   shostak))
 (var_lt_0_trans_implies_var_not_le_0_orig_TCC1 0
  (var_lt_0_trans_implies_var_not_le_0_orig_TCC1-2 nil 3764522357
   ("" (skeep) (("" (use "greatest_fp_le_nonpos_is_nonpos") nil nil))
    nil)
   nil nil
   (var_lt_0_trans_implies_var_not_le_0_orig subtype
    "roundoff_error_props.greatest_fp_le((number_fields.-)(roundoff_error_props.e_X))"
    "nonpos_unbdp"))
  (var_lt_0_trans_implies_var_not_le_0_orig_TCC1-1 nil 3764521668
   ("" (subtype-tcc) nil nil) nil nil
   (var_lt_0_trans_implies_var_not_le_0_orig subtype
    "roundoff_error_props.greatest_fp_le((number_fields.-)(roundoff_error_props.e_X))"
    "nonpos_unbdp")))
 (var_lt_0_trans_implies_var_not_le_0_orig 0
  (var_lt_0_trans_implies_var_not_le_0_orig-1 nil 3764521770
   (""
    (then (skeep) (skoletin* -2) (replace -2 :hide? t)
     (lemma "greatest_fp_le_nonpos_is_nonpos") (inst? -1)
     (spread (case "X < RtoD(0)")
      ((then (hide-all-but (-1 -5)) (rewrite "Fle_neg_Flt"))
       (then (hide-all-but (1 -1 -2)) (lemma "Flt_Fle_Flt")
        (inst? -1 :where 1) (inst? -1 :where -3) (assert)))))
    nil)
   ((Flt_Fle_Flt formula-decl nil float nil)
    (Fle_neg_Flt formula-decl nil float nil)
    (nonpos_unbdp type-eq-decl nil ieee754dp nil)
    (float type-eq-decl nil float nil)
    (Format type-eq-decl nil float nil)
    (Fcanonic? const-decl "bool" float nil)
    (double_precision_format const-decl "Format" ieee754dp nil)
    (unb_double type-eq-decl nil ieee754dp nil)
    (DtoR const-decl "real" ieee754dp nil)
    (Fbounded? const-decl "bool" float nil)
    (closest_double? const-decl "bool" ieee754dp nil)
    (RtoD const-decl "{f: unb_double | closest_double?(x1)(f)}"
     ieee754dp nil))
   shostak))
 (var_le_0_trans_implies_var_not_lt_0_orig 0
  (var_le_0_trans_implies_var_not_lt_0_orig-1 nil 3764521770
   (""
    (then (skeep) (skoletin* -2) (replace -2 :hide? t)
     (lemma "greatest_fp_le_nonpos_is_nonpos") (inst? -1)
     (spread (case "X <= RtoD(0)")
      ((then (hide-all-but (-1 -5)) (rewrite "Fle_neg_Flt"))
       (then (hide-all-but (1 -1 -2)) (use "Fle_transitive")
        (expand "transitive?") (inst? -1 :where 1) (inst? -1 :where 2)
        (expand "Err_neg_X") (assert)))))
    nil)
   ((Fle_transitive formula-decl nil float nil)
    (Fle_neg_Flt formula-decl nil float nil)
    (nonpos_unbdp type-eq-decl nil ieee754dp nil)
    (float type-eq-decl nil float nil)
    (Format type-eq-decl nil float nil)
    (Fcanonic? const-decl "bool" float nil)
    (double_precision_format const-decl "Format" ieee754dp nil)
    (unb_double type-eq-decl nil ieee754dp nil)
    (DtoR const-decl "real" ieee754dp nil)
    (Fbounded? const-decl "bool" float nil)
    (closest_double? const-decl "bool" ieee754dp nil)
    (RtoD const-decl "{f: unb_double | closest_double?(x1)(f)}"
     ieee754dp nil))
   shostak))
 (var_lt_0_trans_implies_var_not_le_eX 0
  (var_lt_0_trans_implies_var_not_le_eX-1 nil 3764521770
   (""
    (then (skeep) (skoletin) (skoletin) (use "greatest_fp_le_is_le")
     (use "smallest_fp_ge_is_ge") (rewrite "DtoR_strictly_increasing")
     (rewrite "DtoR_inc") (assert))
    nil)
   ((nonpos_unbdp type-eq-decl nil ieee754dp nil)
    (DtoR_inc formula-decl nil ieee754dp nil)
    (DtoR_strictly_increasing formula-decl nil ieee754dp nil)
    (Fbounded? const-decl "bool" float nil)
    (closest_double? const-decl "bool" ieee754dp nil)
    (RtoD const-decl "{f: unb_double | closest_double?(x1)(f)}"
     ieee754dp nil)
    (nonneg_unbdp type-eq-decl nil ieee754dp nil)
    (DtoR const-decl "real" ieee754dp nil)
    (unb_double type-eq-decl nil ieee754dp nil)
    (double_precision_format const-decl "Format" ieee754dp nil)
    (Fcanonic? const-decl "bool" float nil)
    (Format type-eq-decl nil float nil)
    (float type-eq-decl nil float nil))
   shostak))
 (var_le_0_trans_real 0
  (var_le_0_trans_real-1 nil 3764521770
   (""
    (then (skeep) (skoletin* -2)
     (spread (case "DtoR(X) + e_X <= 0")
      ((spread (case "r_X <= DtoR(X) + e_X")
        ((assert) (then (hide-all-but (1 -4)) (assert))))
       (then (use "greatest_fp_le_is_le") (rewrite "DtoR_inc" -2)
        (assert)))))
    nil)
   ((DtoR_inc formula-decl nil ieee754dp nil)
    (nonpos_unbdp type-eq-decl nil ieee754dp nil)
    (float type-eq-decl nil float nil)
    (Format type-eq-decl nil float nil)
    (Fcanonic? const-decl "bool" float nil)
    (double_precision_format const-decl "Format" ieee754dp nil)
    (unb_double type-eq-decl nil ieee754dp nil)
    (DtoR const-decl "real" ieee754dp nil)
    (Fbounded? const-decl "bool" float nil)
    (closest_double? const-decl "bool" ieee754dp nil)
    (RtoD const-decl "{f: unb_double | closest_double?(x1)(f)}"
     ieee754dp nil))
   shostak))
 (var_lt_0_trans_real 0
  (var_lt_0_trans_real-1 nil 3764521771
   (""
    (then (skeep) (skoletin* -2)
     (spread (case "DtoR(X) + e_X < 0")
      ((spread (case "r_X <= DtoR(X) + e_X")
        ((assert) (then (hide-all-but (1 -4)) (assert))))
       (then (use "greatest_fp_le_is_le")
        (rewrite "DtoR_strictly_increasing") (assert)))))
    nil)
   ((DtoR_strictly_increasing formula-decl nil ieee754dp nil)
    (nonpos_unbdp type-eq-decl nil ieee754dp nil)
    (float type-eq-decl nil float nil)
    (Format type-eq-decl nil float nil)
    (Fcanonic? const-decl "bool" float nil)
    (double_precision_format const-decl "Format" ieee754dp nil)
    (unb_double type-eq-decl nil ieee754dp nil)
    (DtoR const-decl "real" ieee754dp nil)
    (Fbounded? const-decl "bool" float nil)
    (closest_double? const-decl "bool" ieee754dp nil)
    (RtoD const-decl "{f: unb_double | closest_double?(x1)(f)}"
     ieee754dp nil))
   shostak))
 (fp_ge_re_r_ge_0 0
  (fp_ge_re_r_ge_0-1 nil 3764509331
   ("" (skeep)
    (("" (use "var_ge_0_trans_real")
      (("1" (split -1)
        (("1" (propax) nil nil) ("2" (propax) nil nil)
         ("3" (assert)
          (("3" (rewrite "smallest_fp_ge_dtor" 1 :dir rl) nil nil))
          nil))
        nil)
       ("2" (assert) nil nil))
      nil))
    nil)
   ((float type-eq-decl nil float nil)
    (Format type-eq-decl nil float nil)
    (Fcanonic? const-decl "bool" float nil)
    (double_precision_format const-decl "Format" ieee754dp nil)
    (unb_double type-eq-decl nil ieee754dp nil)
    (DtoR const-decl "real" ieee754dp nil))
   shostak))
 (fp_lt_neg_re_r_lt_0 0
  (fp_lt_neg_re_r_lt_0-1 nil 3764521264
   ("" (skeep)
    (("" (use "var_lt_0_trans_real")
      (("1" (split -1)
        (("1" (propax) nil nil) ("2" (propax) nil nil)
         ("3" (assert)
          (("3" (rewrite "Dneg_correct" 1 :dir rl)
            (("3" (rewrite "greatest_fp_le_dtor" 1 :dir rl) nil nil))
            nil))
          nil))
        nil)
       ("2" (assert) nil nil))
      nil))
    nil)
   ((float type-eq-decl nil float nil)
    (Format type-eq-decl nil float nil)
    (Fcanonic? const-decl "bool" float nil)
    (double_precision_format const-decl "Format" ieee754dp nil)
    (unb_double type-eq-decl nil ieee754dp nil)
    (DtoR const-decl "real" ieee754dp nil)
    (Dneg const-decl
     "{f: unb_double | closest_double?(-(DtoR(f1)))(f)}" ieee754dp_neg
     nil)
    (closest_double? const-decl "bool" ieee754dp nil)
    (Fbounded? const-decl "bool" float nil)
    (Dneg_correct formula-decl nil ieee754dp_neg nil))
   shostak))
 (fp_le_neg_re_r_le_0 0
  (fp_le_neg_re_r_le_0-1 nil 3764521358
   ("" (skeep)
    (("" (use "var_le_0_trans_real")
      (("1" (split -1)
        (("1" (propax) nil nil) ("2" (propax) nil nil)
         ("3" (assert)
          (("3" (rewrite "Dneg_correct" 1 :dir rl)
            (("3" (rewrite "greatest_fp_le_dtor" 1 :dir rl) nil nil))
            nil))
          nil))
        nil)
       ("2" (assert) nil nil))
      nil))
    nil)
   ((float type-eq-decl nil float nil)
    (Format type-eq-decl nil float nil)
    (Fcanonic? const-decl "bool" float nil)
    (double_precision_format const-decl "Format" ieee754dp nil)
    (unb_double type-eq-decl nil ieee754dp nil)
    (DtoR const-decl "real" ieee754dp nil)
    (Dneg const-decl
     "{f: unb_double | closest_double?(-(DtoR(f1)))(f)}" ieee754dp_neg
     nil)
    (closest_double? const-decl "bool" ieee754dp nil)
    (Fbounded? const-decl "bool" float nil)
    (Dneg_correct formula-decl nil ieee754dp_neg nil))
   shostak))
 (fp_gt_re_r_gt_0 0
  (fp_gt_re_r_gt_0-1 nil 3764521394
   ("" (skeep)
    (("" (use "var_gt_error__var_r_gt_0")
      (("1" (split -1)
        (("1" (propax) nil nil) ("2" (propax) nil nil)
         ("3" (assert)
          (("3" (rewrite "smallest_fp_ge_dtor" 1 :dir rl) nil nil))
          nil))
        nil)
       ("2" (assert) nil nil))
      nil))
    nil)
   ((float type-eq-decl nil float nil)
    (Format type-eq-decl nil float nil)
    (Fcanonic? const-decl "bool" float nil)
    (double_precision_format const-decl "Format" ieee754dp nil)
    (unb_double type-eq-decl nil ieee754dp nil)
    (DtoR const-decl "real" ieee754dp nil))
   shostak)))

