(aerr754sp_add
 (IMP_accum_err_add_TCC1 0
  (IMP_accum_err_add_TCC1-1 nil 3682019787 ("" (subtype-tcc) nil nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (Sadd_aerr 0
  (Sadd_aerr-1 nil 3682019964
   ("" (expand "aeboundsp_add")
    (("" (skeep)
      (("" (lemma "accum_err_bound")
        (("" (expand "StoR")
          (("" (expand "Sadd" 1)
            (("" (expand "ulp_sp")
              (("" (inst?)
                (("" (inst?)
                  (("" (split -1)
                    (("1" (assert) nil nil) ("2" (propax) nil nil)
                     ("3" (propax) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((StoR const-decl "real" ieee754sp nil)
    (ulp_sp const-decl "nonneg_real" ieee754sp nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (rtos_canonic_rounding_fun_j name-judgement
     "CanonicRoundingFun[2](single_precision_format, sp_closest?)"
     ieee754sp nil)
    (sp_closest?_j name-judgement
     "{round: RestrictedRounding[2](single_precision_format, EvenClosest?) |
         rounded_mode?(single_precision_format)(round)}" ieee754sp nil)
    (nnreal_plus_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (Sadd const-decl
     "{f: unb_single | closest_single?(FtoR(f1) + FtoR(f2))(f)}"
     ieee754sp_add nil)
    (accum_err_bound formula-decl nil accum_err_add nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (above nonempty-type-eq-decl nil integers nil)
    (Format type-eq-decl nil float nil)
    (single_precision_format const-decl "Format" ieee754sp nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (float type-eq-decl nil float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Fbounded? const-decl "bool" float nil)
    (sp_closest? const-decl "bool" ieee754sp nil)
    (Fcanonic? const-decl "bool" float nil)
    (unb_single type-eq-decl nil ieee754sp nil)
    (closest_single? const-decl "bool" ieee754sp nil)
    (RtoS const-decl "{f: unb_single | closest_single?(x1)(f)}"
     ieee754sp nil)
    (aeboundsp_add const-decl "nonneg_real" aerr754sp_add nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil))
   shostak)))

