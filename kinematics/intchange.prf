(intchange
 (IMP_integral_def_TCC1 0
  (IMP_integral_def_TCC1-1 nil 3611393557 ("" (assuming-tcc) nil nil)
   nil nil))
 (IMP_integral_def_TCC2 0
  (IMP_integral_def_TCC2-1 nil 3611393557 ("" (assuming-tcc) nil nil)
   nil nil))
 (IMP_continuous_functions_more_TCC1 0
  (IMP_continuous_functions_more_TCC1-1 nil 3611393557
   ("" (assuming-tcc) nil nil) nil nil))
 (IMP_continuous_functions_more_TCC2 0
  (IMP_continuous_functions_more_TCC2-1 nil 3611393557
   ("" (assuming-tcc) nil nil) nil nil))
 (Integral_a_to_a_TCC1 0
  (Integral_a_to_a_TCC1-1 nil 3611393557 ("" (subtype-tcc) nil nil)
   ((Integrable? const-decl "bool" integral_def nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil))
 (Integral_const_fun 0
  (Integral_const_fun-1 nil 3611399402 ("" (postpone) nil nil) nil
   shostak))
 (Integrable_bounded_TCC1 0
  (Integrable_bounded_TCC1-1 nil 3611393557 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (T_pred const-decl "[real -> boolean]" intchange nil)
    (T formal-nonempty-subtype-decl nil intchange nil)
    (>= const-decl "bool" reals nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (width const-decl "posreal" integral_def nil)
    (integral? const-decl "bool" integral_def nil)
    (integrable? const-decl "bool" integral_def nil)
    (Integrable? const-decl "bool" integral_def nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil))
 (Integrable_bounded_TCC2 0
  (Integrable_bounded_TCC2-1 nil 3611393557 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (T_pred const-decl "[real -> boolean]" intchange nil)
    (T formal-nonempty-subtype-decl nil intchange nil)
    (>= const-decl "bool" reals nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (width const-decl "posreal" integral_def nil)
    (integral? const-decl "bool" integral_def nil)
    (integrable? const-decl "bool" integral_def nil)
    (Integrable? const-decl "bool" integral_def nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil)))

