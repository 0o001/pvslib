%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%  [ nat -> T1 ] represented by list[T2]
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

arrays_into_lists[T1: TYPE, T2: TYPE, represents: [T2,T1->bool]]: THEORY
BEGIN

  ASSUMING

    representation?(a:T2): bool = EXISTS(x:T1): represents(a,x)

  ENDASSUMING



  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Variables
  
  x,y     : VAR T1
  a,b     : VAR T2
  l,l1,l2 : VAR list[T2]
  A,A1,A2 : VAR [nat->T1]



  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Representation

  represents(l,A): bool = FORALL(i:below(length(l))): represents(nth(l,i),A(i))

  represents?(l): bool = EXISTS(A): represents(l,A)



  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Mapped functions
  % ---------------------------------------------------------------------------- %
  %  array  (i<N)                    |  list (length(l) = N)  
  % ---------------------------------+------------------------------------------ %
  %   A(i:nat): T1                   |   nth(l,i): T2
  
  nth_homomorphic: LEMMA
   FORALL(
     A : [nat->T1],
     l : { l:list[T2] | represents(l,A)},
     i : below(length(l))
     ):
	represents(nth(l,i),A(i))


END arrays_into_lists
