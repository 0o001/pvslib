(arrays_INTO_lists
 (nth_homomorphic 0
  (nth_homomorphic-1 nil 3684519052
   ("" (skeep :preds? t)
    (("" (expand "represents") (("" (inst - "i") nil nil)) nil)) nil)
   ((represents const-decl "bool" arrays_INTO_lists nil)
    (below type-eq-decl nil naturalnumbers nil)
    (T1 formal-type-decl nil arrays_INTO_lists nil)
    (length def-decl "nat" list_props nil)
    (list type-decl nil list_adt nil)
    (T2 formal-type-decl nil arrays_INTO_lists nil)
    (< const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   shostak)))

