%% deriv_examples.pvs
%% 
%% These examples illustrate the use of the strategies derivable, aka
%% differentiable, and derivative.
%%  

deriv_examples : THEORY
BEGIN

  IMPORTING analysis@strategies

  x : VAR real

  f(x:real) : real = x^2+3*x
  g(x:real) : real = -x/2

%|- derivable_* : PROOF (derivable) QED
%|- derivable*_point : PROOF (then (skeep) (derivable)) QED

  derivable_f : LEMMA
    derivable?(f) 
%|- derivable_f_TCC1 : PROOF (rewrite "deriv_domain_real") QED
%|- derivable_f_TCC2 : PROOF (rewrite "not_one_element_real") QED

  derivable_f_point : LEMMA
    derivable?(f,x)

  derivable_g : LEMMA
    derivable?(g)

  derivable_g_point : LEMMA
    derivable?(g,x)

  derivable_f_plus_g : LEMMA
    derivable?(f+g)
%|- derivable_f_plus_g : PROOF
%|- (derivable :use ("f" "g"))
%|- QED

  derivable_f_plus_g_point : LEMMA
    derivable?(f+g,x)
%|- derivable_f_plus_g_point : PROOF
%|- (then (skeep) (derivable :use ("f" "g")))
%|- QED

  h : [real->nzreal]

  derivable_f_div_h : LEMMA
    derivable?(h) IMPLIES 
    derivable?(f/h)
%|- derivable_f_div_h : PROOF
%|- (then (flatten) (derivable :use "f"))
%|- QED

  derivable_f_div_h_point : LEMMA
    derivable?(h,x) IMPLIES 
    derivable?(f/h,x)
%|- derivable_f_div_h_point : PROOF
%|- (then (skeep) (flatten) (derivable :use "f"))
%|- QED

  sq_f(x:real) : real = sq(f(x))

  derivable_sq_f : LEMMA
    derivable?(sq_f)

  derivable_sq_f_point : LEMMA
    derivable?(sq_f,x)

  derivable_sqrt_pos : LEMMA
    derivable?(LAMBDA(x:real):sqrt(sq(x)+1))

  derivable_sqrt_pos_point : LEMMA
    derivable?(LAMBDA(x:real):sqrt(sq(x)+1),x)

  derivable_f_o_g : LEMMA
    derivable?(f o g)

  derivable_f_o_g_point : LEMMA
    derivable?(f o g,x)

%|- derivative_* : PROOF (then (skeep) (deriv)) QED
%|- derivative_*TCC* : PROOF (derivable) QED

  derivative_f : LEMMA
    deriv(f) = LAMBDA(x):2*x + 3

  derivative_g : LEMMA
    deriv(g)(x) = -1/2
 
  derivative_f_plus_g : LEMMA
    deriv(2*(f+g))(x) = 4*x+5
%|- derivative_f_plus_g : PROOF
%|- (then (skeep) (deriv :use ("f" "g")))
%|- QED

  derivative_f_div_h : LEMMA
    derivable?(h) IMPLIES
      deriv(f/h)(x) =
      (3*h(x) + 2*h(x)*x - 3*deriv(h)(x)*x - deriv(h)(x)*x^2)/sq(h(x))
%|- derivative_f_div_h : PROOF
%|- (then (skeep) (deriv :use "f") (expand "f") (assert))
%|- QED

%|- derivative_f_div_h_TCC1 : PROOF
%|- (then (flatten) (derivable :use "f"))
%|- QED

  derivative_sq_f : LEMMA
    deriv(sq_f)(x) = 18*x + 18*x^2 + 4*x^3 
%|- derivative_sq_f : PROOF
%|- (then (skeep) (deriv "sq_f") (hide-all-but 1) (grind))
%|- QED
%|- derivative_sq_f_TCC2: PROOF (assert) QED

  derivative_sqrt_pos : LEMMA
    deriv(LAMBDA(x:real):sqrt(sq(x)+1))(x) =  2*x/(2*sqrt(1+sq(x)))

  derivative_f_o_g : LEMMA
    deriv(f o g)(x) = -3/2 + x/2 

  IMPORTING trig@sincos_def

  k : real

  ksincos(x:real) : real = k*(sin(x)+cos(x))

  derivable_ksincos : LEMMA
    derivable?(ksincos)

  derivable_ksincos_point : LEMMA
    derivable?(ksincos,x)

  derivative_ksincos : LEMMA
    deriv(ksincos)(x) = k*(cos(x) - sin(x))

  sincos2(x:real) : real = sin(cos(x^2))

  derivable_sincos2 : LEMMA
    derivable?(sincos2)

  derivable_sincos2_point : LEMMA
    derivable?(sincos2,x)

  derivative_sincos2 : LEMMA
    deriv(sincos2)(x) =  -2*x*cos(cos(x^2))*sin(x^2)

  IMPORTING lnexp@strategies

  expsin(x:real) : real = exp(sin(x))

  derivable_expsin : LEMMA
    derivable?(expsin)

  derivable_expsin_point : LEMMA
    derivable?(expsin,x)

  derivative_expsin : LEMMA
    deriv(expsin)(x) = exp(sin(x))*cos(x)

  derivable_ln_pos : LEMMA
    derivable?(LAMBDA(x:real):ln(sq(x)+1))

  derivable_ln_pos_point : LEMMA
    derivable?(LAMBDA(x:real):ln(sq(x)+1),x)

  derivative_ln_pos : LEMMA
    deriv(LAMBDA(x:real):ln(sq(x)+1))(x) =  2*x/(1+sq(x))

END deriv_examples
