(deriv_examples
 (f_TCC1 0
  (f_TCC1-1 nil 3780487472 ("" (subtype-tcc) nil nil) nil nil
   (f subtype "2"
    "{i: integers.int | booleans.OR(deriv_examples.x /= 0, reals.>=(i, 0))}")))
 (derivable_f_TCC1 0
  (derivable_f_TCC1-1 nil 3827946909 ("" (assuming-tcc) nil nil) nil
   nil
   (derivable_f assuming "analysis@derivatives[real].derivatives"
    "deriv_domain: ASSUMPTION deriv_domain_def[T].deriv_domain?")))
 (derivable_f_TCC2 0
  (derivable_f_TCC2-1 nil 3827946909 ("" (assuming-tcc) nil nil) nil
   nil
   (derivable_f assuming "analysis@derivatives[real].derivatives"
    "not_one_element: ASSUMPTION deriv_domain_def[T].not_one_element?")))
 (derivable_f 0
  (derivable_f-1 nil 3780487477 ("" (derivable) nil nil)
   ((f const-decl "real" deriv_examples nil)
    (derivable_scal1_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (derivable_pow_lam formula-decl nil derivatives_lam analysis)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (TRUE const-decl "bool" booleans nil)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (derivable_add_lam formula-decl nil derivatives_lam analysis)
    (bool nonempty-type-eq-decl nil booleans nil)
    (derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (>= const-decl "bool" reals nil)
    (^ const-decl "real" exponentiation nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   shostak))
 (derivable_f_point 0
  (derivable_f_point-1 nil 3827949901
   ("" (skeep) (("" (derivable) nil nil)) nil)
   ((derivable_add_lam_point formula-decl nil derivatives_lam analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (derivable_id_lam_point formula-decl nil derivatives_lam analysis)
    (derivable_const_lam_point formula-decl nil derivatives_lam
     analysis)
    (derivable_mult_lam_point formula-decl nil derivatives_lam
     analysis)
    (derivable_scal1_lam_point formula-decl nil derivatives_lam
     analysis)
    (derivable_pow_lam_point formula-decl nil derivatives_lam
     analysis))
   shostak))
 (derivable_g 0
  (derivable_g-1 nil 3780492832 ("" (derivable) nil nil)
   ((derivable_neg_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (derivable_scald2_lam formula-decl nil derivatives_lam analysis)
    (derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis))
   shostak))
 (derivable_g_point 0
  (derivable_g_point-1 nil 3827949918
   ("" (skeep) (("" (derivable) nil nil)) nil)
   ((derivable_scald2_lam_point formula-decl nil derivatives_lam
     analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (derivable_div_lam_point formula-decl nil derivatives_lam analysis)
    (derivable_id_lam_point formula-decl nil derivatives_lam analysis)
    (derivable_neg_lam_point formula-decl nil derivatives_lam analysis)
    (derivable_const_lam_point formula-decl nil derivatives_lam
     analysis))
   shostak))
 (derivable_f_plus_g 0
  (derivable_f_plus_g-1 nil 3780492892
   ("" (derivable :use ("f" "g")) nil nil)
   ((not_one_element_real formula-decl nil deriv_domain analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (derivable_add_lam formula-decl nil derivatives_lam analysis)
    (derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis))
   shostak))
 (derivable_f_plus_g_point 0
  (derivable_f_plus_g_point-1 nil 3827949963
   ("" (skeep) (("" (derivable :use ("f" "g")) nil nil)) nil)
   ((derivable_add_lam_point formula-decl nil derivatives_lam analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis))
   shostak))
 (derivable_f_div_h 0
  (derivable_f_div_h-1 nil 3780494057
   ("" (flatten) (("" (derivable :use "f") nil nil)) nil)
   ((not_one_element_real formula-decl nil deriv_domain analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (derivable_div_lam formula-decl nil derivatives_lam analysis)
    (derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (nz_deriv_fun type-eq-decl nil derivatives analysis))
   shostak))
 (derivable_f_div_h_point 0
  (derivable_f_div_h_point-1 nil 3828005301
   ("" (skeep) (("" (derivable :use "f") nil nil)) nil)
   ((derivable_div_lam_point formula-decl nil derivatives_lam analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis))
   shostak))
 (derivable_sq_f 0
  (derivable_sq_f-1 nil 3780494962 ("" (derivable) nil nil)
   ((sq_f const-decl "real" deriv_examples nil)
    (derivable_sq_lam formula-decl nil derivatives_lam analysis)
    (derivable_scal1_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (derivable_pow_lam formula-decl nil derivatives_lam analysis)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (TRUE const-decl "bool" booleans nil)
    (derivable_add_lam formula-decl nil derivatives_lam analysis)
    (derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (^ const-decl "real" exponentiation nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (sq const-decl "nonneg_real" sq reals)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (f const-decl "real" deriv_examples nil)
    (comp_derivable_fun formula-decl nil chain_rule analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis))
   shostak))
 (derivable_sq_f_point 0
  (derivable_sq_f_point-1 nil 3828005388
   ("" (skeep) (("" (derivable) nil nil)) nil)
   ((not_one_element_real formula-decl nil deriv_domain analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (comp_derivable_point formula-decl nil chain_rule analysis)
    (f const-decl "real" deriv_examples nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (sq const-decl "nonneg_real" sq reals)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (^ const-decl "real" exponentiation nil)
    (/= const-decl "boolean" notequal nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (derivable_add_lam_point formula-decl nil derivatives_lam analysis)
    (TRUE const-decl "bool" booleans nil)
    (derivable_id_lam_point formula-decl nil derivatives_lam analysis)
    (derivable_const_lam_point formula-decl nil derivatives_lam
     analysis)
    (derivable_mult_lam_point formula-decl nil derivatives_lam
     analysis)
    (derivable_scal1_lam_point formula-decl nil derivatives_lam
     analysis)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (derivable_pow_lam_point formula-decl nil derivatives_lam analysis)
    (derivable_sq_lam_point formula-decl nil derivatives_lam analysis)
    (sq_f const-decl "real" deriv_examples nil))
   shostak))
 (derivable_sqrt_pos 0
  (derivable_sqrt_pos-1 nil 3828012779 ("" (derivable) nil nil)
   ((sqrt_pos application-judgement "posreal" sqrt reals)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (sq const-decl "nonneg_real" sq reals)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (derivable? const-decl "bool" derivatives analysis)
    (pos_fun type-eq-decl nil sqrt_derivative_lam analysis)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (derivable_sqrt_lam formula-decl nil sqrt_derivative_lam analysis)
    (nnreal_plus_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (TRUE const-decl "bool" booleans nil)
    (derivable_const_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (derivable_mult_lam formula-decl nil derivatives_lam analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (derivable_add_lam formula-decl nil derivatives_lam analysis))
   shostak))
 (derivable_sqrt_pos_point 0
  (derivable_sqrt_pos_point-1 nil 3828020291
   ("" (skeep) (("" (derivable) nil nil)) nil)
   ((posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (derivable_add_lam_point formula-decl nil derivatives_lam analysis)
    (derivable_const_lam_point formula-decl nil derivatives_lam
     analysis)
    (derivable_mult_lam_point formula-decl nil derivatives_lam
     analysis)
    (derivable_id_lam_point formula-decl nil derivatives_lam analysis)
    (TRUE const-decl "bool" booleans nil)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (nnreal_plus_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (derivable_sqrt_lam_point formula-decl nil sqrt_derivative_lam
     analysis)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (pos_fun type-eq-decl nil sqrt_derivative_lam analysis)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sq const-decl "nonneg_real" sq reals)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (sqrt_pos application-judgement "posreal" sqrt reals))
   shostak))
 (derivable_f_o_g 0
  (derivable_f_o_g-1 nil 3780496707 ("" (derivable) nil nil)
   ((not_one_element_real formula-decl nil deriv_domain analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (comp_derivable_fun formula-decl nil chain_rule analysis)
    (derivable_scald2_lam formula-decl nil derivatives_lam analysis)
    (derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (derivable_neg_lam formula-decl nil derivatives_lam analysis)
    (derivable_add_lam formula-decl nil derivatives_lam analysis)
    (derivable_pow_lam formula-decl nil derivatives_lam analysis)
    (derivable_scal1_lam formula-decl nil derivatives_lam analysis))
   shostak))
 (derivable_f_o_g_point 0
  (derivable_f_o_g_point-1 nil 3827950782
   ("" (skeep) (("" (derivable) nil nil)) nil)
   ((derivable_pow_lam_point formula-decl nil derivatives_lam analysis)
    (derivable_scal1_lam_point formula-decl nil derivatives_lam
     analysis)
    (derivable_mult_lam_point formula-decl nil derivatives_lam
     analysis)
    (derivable_add_lam_point formula-decl nil derivatives_lam analysis)
    (derivable_const_lam_point formula-decl nil derivatives_lam
     analysis)
    (derivable_neg_lam_point formula-decl nil derivatives_lam analysis)
    (derivable_id_lam_point formula-decl nil derivatives_lam analysis)
    (derivable_div_lam_point formula-decl nil derivatives_lam analysis)
    (derivable_scald2_lam_point formula-decl nil derivatives_lam
     analysis)
    (comp_derivable_point formula-decl nil chain_rule analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis))
   shostak))
 (derivative_f_TCC1 0
  (derivative_f_TCC1-1 nil 3781815584
   ("" (then (assert) (derivable)) nil nil)
   ((derivable_scal1_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (derivable_pow_lam formula-decl nil derivatives_lam analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (derivable_add_lam formula-decl nil derivatives_lam analysis)
    (derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis))
   nil (derivative_f subtype "deriv_examples.f" "deriv_fun[real]")))
 (derivative_f 0
  (derivative_f-1 nil 3781815586 ("" (deriv) nil nil)
   ((derivable? const-decl "bool" derivatives analysis)
    (deriv_add_lam formula-decl nil derivatives_lam analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (deriv_scal1_lam formula-decl nil derivatives_lam analysis)
    (deriv_pow_lam formula-decl nil derivatives_lam analysis)
    (deriv_id_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (derivable_pow_lam formula-decl nil derivatives_lam analysis)
    (derivable_scal1_lam formula-decl nil derivatives_lam analysis)
    (deriv const-decl "[T -> real]" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis))
   shostak))
 (derivative_g_TCC1 0
  (derivative_g_TCC1-1 nil 3781815584
   ("" (then (assert) (derivable)) nil nil)
   ((derivable_neg_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (derivable_scald2_lam formula-decl nil derivatives_lam analysis)
    (derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis))
   nil (derivative_g subtype "deriv_examples.g" "deriv_fun[real]")))
 (derivative_g 0
  (derivative_g-1 nil 3781815586
   ("" (skeep)
    (("" (deriv nil * :use nil :lemmas nil :domain nil) nil nil)) nil)
   ((deriv_fun type-eq-decl nil derivatives analysis)
    (deriv const-decl "[T -> real]" derivatives analysis)
    (derivable_neg_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (deriv_id_lam formula-decl nil derivatives_lam analysis)
    (deriv_neg_lam formula-decl nil derivatives_lam analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (deriv_scald2_lam formula-decl nil derivatives_lam analysis)
    (derivable? const-decl "bool" derivatives analysis))
   shostak))
 (derivative_f_plus_g_TCC1 0
  (derivative_f_plus_g_TCC1-1 nil 3827925435 ("" (subtype-tcc) nil nil)
   nil nil
   (derivative_f_plus_g subtype
    "real_fun_ops[real].*(2, ((real_fun_ops[real].+)(deriv_examples.f, deriv_examples.g)))"
    "deriv_fun[real]")))
 (derivative_f_plus_g 0
  (derivative_f_plus_g-1 nil 3827925940
   ("" (skeep) (("" (deriv :use ("f" "g")) nil nil)) nil)
   ((derivable? const-decl "bool" derivatives analysis)
    (derivable_add_lam formula-decl nil derivatives_lam analysis)
    (derivable_pow_lam formula-decl nil derivatives_lam analysis)
    (derivable_scal1_lam formula-decl nil derivatives_lam analysis)
    (derivable_const_lam formula-decl nil derivatives_lam analysis)
    (derivable_scald2_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (derivable_neg_lam formula-decl nil derivatives_lam analysis)
    (deriv_const_lam formula-decl nil derivatives_lam analysis)
    (deriv_mult_lam formula-decl nil derivatives_lam analysis)
    (deriv_scal1_lam formula-decl nil derivatives_lam analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (deriv_add_lam formula-decl nil derivatives_lam analysis)
    (deriv const-decl "[T -> real]" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis))
   shostak))
 (derivative_f_div_h_TCC1 0
  (derivative_f_div_h_TCC1-1 nil 3827925435 ("" (subtype-tcc) nil nil)
   nil nil
   (derivative_f_div_h subtype
    "real_fun_ops[real]./(deriv_examples.f, deriv_examples.h)"
    "deriv_fun[real]")))
 (derivative_f_div_h 0
  (derivative_f_div_h-1 nil 3828006381
   ("" (skeep)
    (("" (deriv :use "f")
      (("" (expand "f") (("" (propax) nil nil)) nil)) nil))
    nil)
   ((derivable_add_lam formula-decl nil derivatives_lam analysis)
    (derivable_pow_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (derivable_scal1_lam formula-decl nil derivatives_lam analysis)
    (deriv_div_lam formula-decl nil derivatives_lam analysis)
    (nz_deriv_fun type-eq-decl nil derivatives analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (deriv const-decl "[T -> real]" derivatives analysis)
    (derivable? const-decl "bool" derivatives analysis)
    (sq_nz_pos application-judgement "posreal" sq reals))
   shostak))
 (derivative_sq_f_TCC1 0
  (derivative_sq_f_TCC1-1 nil 3827925435 ("" (subtype-tcc) nil nil) nil
   nil
   (derivative_sq_f subtype "deriv_examples.sq_f" "deriv_fun[real]")))
 (derivative_sq_f_TCC2 0
  (derivative_sq_f_TCC2-1 nil 3827925435 ("" (subtype-tcc) nil nil) nil
   nil
   (derivative_sq_f subtype "3"
    "{i: integers.int | booleans.OR(deriv_examples.x /= 0, reals.>=(i, 0))}")))
 (derivative_sq_f 0
  (derivative_sq_f-1 nil 3827925976
   ("" (skeep)
    (("" (deriv "sq_f")
      (("" (hide-all-but 1) (("" (grind) nil nil)) nil)) nil))
    nil)
   ((derivable? const-decl "bool" derivatives analysis)
    (deriv const-decl "[T -> real]" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (chain_rule formula-decl nil chain_rule analysis)
    (sq const-decl "nonneg_real" sq reals)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (derivable_scal1_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (derivable_pow_lam formula-decl nil derivatives_lam analysis)
    (derivable_add_lam formula-decl nil derivatives_lam analysis)
    (derivable_mult_lam formula-decl nil derivatives_lam analysis)
    (deriv_mult_lam formula-decl nil derivatives_lam analysis)
    (deriv_pow_lam formula-decl nil derivatives_lam analysis)
    (deriv_scal1_lam formula-decl nil derivatives_lam analysis)
    (deriv_add_lam formula-decl nil derivatives_lam analysis)
    (deriv_id_lam formula-decl nil derivatives_lam analysis))
   shostak))
 (derivative_sqrt_pos_TCC1 0
  (derivative_sqrt_pos_TCC1-1 nil 3828014244 ("" (subtype-tcc) nil nil)
   nil nil
   (derivative_sqrt_pos subtype
    "LAMBDA (x: reals.real): sqrt.sqrt((number_fields.+)(sq.sq(x), 1))"
    "deriv_fun[real]")))
 (derivative_sqrt_pos 0
  (derivative_sqrt_pos-1 nil 3828014255
   ("" (relabel (:pairing |fnums!:304| |fn!:305|) (* 1))
    ((""
      (with-tccs
       (case "analysis@derivatives[real].derivable?(LAMBDA (x: real): sqrt(sq(x) + 1))"))
      ((""
        (with-tccs
         (name-label "d__4"
          "analysis@derivatives[real].deriv(LAMBDA (x: real): sqrt(sq(x) + 1))"
          :label |fnum!:303| :dir rl))
        ((""
          (rewrites ("analysis@derivatives_lam[real].deriv_id_lam"
                     "analysis@derivatives_lam[real].deriv_const_lam"
                     "analysis@derivatives_lam[real].deriv_add_lam"
                     "analysis@derivatives_lam[real].deriv_scal1_lam"
                     "analysis@derivatives_lam[real].deriv_scal2_lam"
                     "analysis@derivatives_lam[real].deriv_mult_lam"
                     "analysis@derivatives_lam[real].deriv_pow_lam"
                     "analysis@derivatives_lam[real].deriv_neg_lam"
                     "analysis@derivatives_lam[real].deriv_sub_lam"
                     "analysis@derivatives_lam[real].deriv_sq_lam"
                     "analysis@derivatives_lam[real].deriv_scald1_lam"
                     "analysis@derivatives_lam[real].deriv_scald2_lam"
                     "analysis@derivatives_lam[real].deriv_div_lam"
                     "analysis@sqrt_derivative_lam[real].deriv_sqrt_lam"
                     "trig@sincos_def.derivative_sin"
                     "trig@sincos_def.derivative_cos"
                     "lnexp@ln_exp.derivative_exp"
                     "lnexp@ln_exp.derivative_exp" "expt_x0" "expt_x1")
                    |fnum!:303|)
          (("1" (real-props |fnum!:303|)
            (("1"
              (rewrites ("analysis@derivatives_lam[real].deriv_id_lam"
                         "analysis@derivatives_lam[real].deriv_const_lam"
                         "analysis@derivatives_lam[real].deriv_add_lam"
                         "analysis@derivatives_lam[real].deriv_scal1_lam"
                         "analysis@derivatives_lam[real].deriv_scal2_lam"
                         "analysis@derivatives_lam[real].deriv_mult_lam"
                         "analysis@derivatives_lam[real].deriv_pow_lam"
                         "analysis@derivatives_lam[real].deriv_neg_lam"
                         "analysis@derivatives_lam[real].deriv_sub_lam"
                         "analysis@derivatives_lam[real].deriv_sq_lam"
                         "analysis@derivatives_lam[real].deriv_scald1_lam"
                         "analysis@derivatives_lam[real].deriv_scald2_lam"
                         "analysis@derivatives_lam[real].deriv_div_lam"
                         "analysis@sqrt_derivative_lam[real].deriv_sqrt_lam"
                         "trig@sincos_def.derivative_sin"
                         "trig@sincos_def.derivative_cos"
                         "lnexp@ln_exp.derivative_exp"
                         "lnexp@ln_exp.derivative_exp" "expt_x0"
                         "expt_x1")
                        |fnum!:303|)
              (("1" (beta |fnum!:303|)
                (("1" (real-props |fnum!:303|)
                  (("1"
                    (rewrites ("analysis@derivatives_lam[real].deriv_id_lam"
                               "analysis@derivatives_lam[real].deriv_const_lam"
                               "analysis@derivatives_lam[real].deriv_add_lam"
                               "analysis@derivatives_lam[real].deriv_scal1_lam"
                               "analysis@derivatives_lam[real].deriv_scal2_lam"
                               "analysis@derivatives_lam[real].deriv_mult_lam"
                               "analysis@derivatives_lam[real].deriv_pow_lam"
                               "analysis@derivatives_lam[real].deriv_neg_lam"
                               "analysis@derivatives_lam[real].deriv_sub_lam"
                               "analysis@derivatives_lam[real].deriv_sq_lam"
                               "analysis@derivatives_lam[real].deriv_scald1_lam"
                               "analysis@derivatives_lam[real].deriv_scald2_lam"
                               "analysis@derivatives_lam[real].deriv_div_lam"
                               "analysis@sqrt_derivative_lam[real].deriv_sqrt_lam"
                               "trig@sincos_def.derivative_sin"
                               "trig@sincos_def.derivative_cos"
                               "lnexp@ln_exp.derivative_exp"
                               "lnexp@ln_exp.derivative_exp" "expt_x0"
                               "expt_x1")
                              |fnum!:303|)
                    (("1" (beta |fnum!:303|)
                      (("1" (real-props |fnum!:303|)
                        (("1" (replace |fnum!:303| |fnums!:304|)
                          (("1" (beta |fnums!:304|)
                            (("1" (real-props |fnums!:304|) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (derivable) nil nil) ("3" (derivable) nil nil))
              nil))
            nil)
           ("2" (derivable) nil nil))
          nil))
        nil))
      nil))
    nil)
   ((posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (nnreal_plus_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (derivable? const-decl "bool" derivatives analysis)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sq const-decl "nonneg_real" sq reals)
    (TRUE const-decl "bool" booleans nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (bijective? const-decl "bool" functions nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (derivable_add_lam formula-decl nil derivatives_lam analysis)
    (times_div2 formula-decl nil real_props nil)
    (derivable_const_lam formula-decl nil derivatives_lam analysis)
    (derivable_sq_lam formula-decl nil derivatives_lam analysis)
    (deriv_const_lam formula-decl nil derivatives_lam analysis)
    (deriv_sq_lam formula-decl nil derivatives_lam analysis)
    (deriv_add_lam formula-decl nil derivatives_lam analysis)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (pos_fun type-eq-decl nil sqrt_derivative_lam analysis)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (deriv_sqrt_lam formula-decl nil sqrt_derivative_lam analysis)
    (real_times_real_is_real application-judgement "real" reals nil)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (deriv const-decl "[T -> real]" derivatives analysis)
    (sqrt_pos application-judgement "posreal" sqrt reals)
    (IFF const-decl "[bool, bool -> bool]" booleans nil))
   shostak))
 (derivative_f_o_g_TCC1 0
  (derivative_f_o_g_TCC1-1 nil 3827925435 ("" (subtype-tcc) nil nil)
   nil nil
   (derivative_f_o_g subtype
    "function_props[real, real, real].o(deriv_examples.f, deriv_examples.g)"
    "deriv_fun[real]")))
 (derivative_f_o_g 0
  (derivative_f_o_g-1 nil 3828006502
   ("" (skeep) (("" (deriv) nil nil)) nil)
   ((deriv_fun type-eq-decl nil derivatives analysis)
    (deriv const-decl "[T -> real]" derivatives analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (chain_rule formula-decl nil chain_rule analysis)
    (derivable_scal1_lam formula-decl nil derivatives_lam analysis)
    (derivable_pow_lam formula-decl nil derivatives_lam analysis)
    (derivable_neg_lam formula-decl nil derivatives_lam analysis)
    (deriv_neg_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (deriv_scald2_lam formula-decl nil derivatives_lam analysis)
    (deriv_id_lam formula-decl nil derivatives_lam analysis)
    (deriv_pow_lam formula-decl nil derivatives_lam analysis)
    (deriv_scal1_lam formula-decl nil derivatives_lam analysis)
    (deriv_add_lam formula-decl nil derivatives_lam analysis)
    (derivable_add_lam formula-decl nil derivatives_lam analysis)
    (derivable_scald2_lam formula-decl nil derivatives_lam analysis)
    (derivable? const-decl "bool" derivatives analysis))
   shostak))
 (derivable_ksincos 0
  (derivable_ksincos-1 nil 3781814507 ("" (derivable) nil nil)
   ((derivable_cos formula-decl nil sincos_def trig)
    (derivable_scal2_lam formula-decl nil derivatives_lam analysis)
    (derivable_sin formula-decl nil sincos_def trig)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (derivable_add_lam formula-decl nil derivatives_lam analysis)
    (derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (cos const-decl "real" sincos_def trig)
    (sin const-decl "real" sincos_def trig))
   shostak))
 (derivable_ksincos_point 0
  (derivable_ksincos_point-1 nil 3828006697
   ("" (skeep) (("" (derivable) nil nil)) nil)
   ((sin const-decl "real" sincos_def trig)
    (cos const-decl "real" sincos_def trig)
    (derivable_add_lam_point formula-decl nil derivatives_lam analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (derivable_const_lam_point formula-decl nil derivatives_lam
     analysis)
    (derivable_cos_point formula-decl nil sincos_def trig)
    (derivable_mult_lam_point formula-decl nil derivatives_lam
     analysis)
    (derivable_scal2_lam_point formula-decl nil derivatives_lam
     analysis)
    (derivable_sin_point formula-decl nil sincos_def trig))
   shostak))
 (derivative_ksincos_TCC1 0
  (derivative_ksincos_TCC1-1 nil 3827925435 ("" (subtype-tcc) nil nil)
   nil nil
   (derivative_ksincos subtype "deriv_examples.ksincos"
    "deriv_fun[real]")))
 (derivative_ksincos 0
  (derivative_ksincos-1 nil 3828006735
   ("" (skeep) (("" (deriv) nil nil)) nil)
   ((deriv_fun type-eq-decl nil derivatives analysis)
    (deriv const-decl "[T -> real]" derivatives analysis)
    (derivable_scal2_lam formula-decl nil derivatives_lam analysis)
    (derivable_cos formula-decl nil sincos_def trig)
    (derivable_sin formula-decl nil sincos_def trig)
    (derivable_const_lam formula-decl nil derivatives_lam analysis)
    (deriv_const_lam formula-decl nil derivatives_lam analysis)
    (derivative_cos formula-decl nil sincos_def trig)
    (derivative_sin formula-decl nil sincos_def trig)
    (deriv_mult_lam formula-decl nil derivatives_lam analysis)
    (deriv_scal2_lam formula-decl nil derivatives_lam analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (sin const-decl "real" sincos_def trig)
    (cos const-decl "real" sincos_def trig)
    (deriv_add_lam formula-decl nil derivatives_lam analysis)
    (derivable? const-decl "bool" derivatives analysis))
   shostak))
 (derivable_sincos2 0
  (derivable_sincos2-1 nil 3781817727 ("" (derivable) nil nil)
   ((derivable_sin formula-decl nil sincos_def trig)
    (derivable_pow_lam formula-decl nil derivatives_lam analysis)
    (derivable_cos formula-decl nil sincos_def trig)
    (sin const-decl "real" sincos_def trig)
    (cos const-decl "real" sincos_def trig)
    (comp_derivable_fun formula-decl nil chain_rule analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis))
   shostak))
 (derivable_sincos2_point 0
  (derivable_sincos2_point-1 nil 3828006812
   ("" (skeep) (("" (derivable) nil nil)) nil)
   ((not_one_element_real formula-decl nil deriv_domain analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (comp_derivable_point formula-decl nil chain_rule analysis)
    (cos const-decl "real" sincos_def trig)
    (sin const-decl "real" sincos_def trig)
    (derivable_cos_point formula-decl nil sincos_def trig)
    (derivable_pow_lam_point formula-decl nil derivatives_lam analysis)
    (derivable_sin_point formula-decl nil sincos_def trig))
   shostak))
 (derivative_sincos2_TCC1 0
  (derivative_sincos2_TCC1-1 nil 3827925435 ("" (subtype-tcc) nil nil)
   nil nil
   (derivative_sincos2 subtype "deriv_examples.sincos2"
    "deriv_fun[real]")))
 (derivative_sincos2 0
  (derivative_sincos2-1 nil 3828006826
   ("" (skeep) (("" (deriv) nil nil)) nil)
   ((deriv_fun type-eq-decl nil derivatives analysis)
    (deriv const-decl "[T -> real]" derivatives analysis)
    (comp_derivable_fun formula-decl nil chain_rule analysis)
    (derivable_sin formula-decl nil sincos_def trig)
    (derivable_pow_lam formula-decl nil derivatives_lam analysis)
    (derivable_cos formula-decl nil sincos_def trig)
    (derivative_cos formula-decl nil sincos_def trig)
    (deriv_pow_lam formula-decl nil derivatives_lam analysis)
    (derivative_sin formula-decl nil sincos_def trig)
    (chain_rule formula-decl nil chain_rule analysis)
    (cos const-decl "real" sincos_def trig)
    (sin const-decl "real" sincos_def trig)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (derivable? const-decl "bool" derivatives analysis))
   shostak))
 (derivable_expsin 0
  (derivable_expsin-1 nil 3781817404 ("" (derivable) nil nil)
   ((derivable_exp formula-decl nil ln_exp lnexp_fnd)
    (derivable_sin formula-decl nil sincos_def trig)
    (exp const-decl "{py | x = ln(py)}" ln_exp lnexp_fnd)
    (ln const-decl "real" ln_exp lnexp_fnd)
    (sin const-decl "real" sincos_def trig)
    (comp_derivable_fun formula-decl nil chain_rule analysis))
   shostak))
 (derivative_expsin_TCC1 0
  (derivative_expsin_TCC1-1 nil 3827925435 ("" (subtype-tcc) nil nil)
   nil nil
   (derivative_expsin subtype "deriv_examples.expsin"
    "deriv_fun[real]")))
 (derivative_expsin 0
  (derivative_expsin-1 nil 3828006850
   ("" (skeep) (("" (deriv) nil nil)) nil)
   ((deriv_fun type-eq-decl nil derivatives analysis)
    (deriv const-decl "[T -> real]" derivatives analysis)
    (derivable_sin formula-decl nil sincos_def trig)
    (derivable_exp formula-decl nil ln_exp lnexp_fnd)
    (derivative_exp formula-decl nil ln_exp lnexp_fnd)
    (derivative_sin formula-decl nil sincos_def trig)
    (chain_rule formula-decl nil chain_rule analysis)
    (sin const-decl "real" sincos_def trig)
    (ln const-decl "real" ln_exp lnexp_fnd)
    (exp const-decl "{py | x = ln(py)}" ln_exp lnexp_fnd)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (derivable? const-decl "bool" derivatives analysis))
   shostak))
 (derivable_ln_pos 0
  (derivable_ln_pos-1 nil 3828025485 ("" (derivable) nil nil)
   ((real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (sq const-decl "nonneg_real" sq reals)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (derivable? const-decl "bool" derivatives analysis)
    (pos_fun type-eq-decl nil ln_derivative_lam lnexp_fnd)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (derivable_ln_lam formula-decl nil ln_derivative_lam lnexp_fnd)
    (nnreal_plus_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (TRUE const-decl "bool" booleans nil)
    (derivable_const_lam formula-decl nil derivatives_lam analysis)
    (derivable_sq_lam formula-decl nil derivatives_lam analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (derivable_add_lam formula-decl nil derivatives_lam analysis))
   shostak))
 (derivable_ln_pos_point 0
  (derivable_ln_pos_point-1 nil 3828025751
   ("" (skeep) (("" (derivable) nil nil)) nil)
   ((posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (derivable_add_lam_point formula-decl nil derivatives_lam analysis)
    (derivable_const_lam_point formula-decl nil derivatives_lam
     analysis)
    (derivable_sq_lam_point formula-decl nil derivatives_lam analysis)
    (TRUE const-decl "bool" booleans nil)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (nnreal_plus_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (derivable_ln_lam_point formula-decl nil ln_derivative_lam
     lnexp_fnd)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (pos_fun type-eq-decl nil ln_derivative_lam lnexp_fnd)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sq const-decl "nonneg_real" sq reals)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil))
   shostak))
 (derivative_ln_pos_TCC1 0
  (derivative_ln_pos_TCC1-1 nil 3828025891 ("" (subtype-tcc) nil nil)
   nil nil
   (derivative_ln_pos subtype
    "LAMBDA (x: reals.real): ln_exp.ln((number_fields.+)(sq.sq(x), 1))"
    "deriv_fun[real]")))
 (derivative_ln_pos 0
  (derivative_ln_pos-1 nil 3828025892
   ("" (skeep) (("" (deriv) nil nil)) nil)
   ((IFF const-decl "[bool, bool -> bool]" booleans nil)
    (deriv const-decl "[T -> real]" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (deriv_ln_lam formula-decl nil ln_derivative_lam lnexp_fnd)
    (pos_fun type-eq-decl nil ln_derivative_lam lnexp_fnd)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (deriv_domain_real formula-decl nil deriv_domain analysis)
    (not_one_element_real formula-decl nil deriv_domain analysis)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (deriv_add_lam formula-decl nil derivatives_lam analysis)
    (deriv_sq_lam formula-decl nil derivatives_lam analysis)
    (deriv_const_lam formula-decl nil derivatives_lam analysis)
    (derivable_sq_lam formula-decl nil derivatives_lam analysis)
    (derivable_const_lam formula-decl nil derivatives_lam analysis)
    (times_div2 formula-decl nil real_props nil)
    (derivable_add_lam formula-decl nil derivatives_lam analysis)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (nnreal_plus_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (derivable? const-decl "bool" derivatives analysis)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (ln const-decl "real" ln_exp lnexp_fnd)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sq const-decl "nonneg_real" sq reals))
   shostak)))

