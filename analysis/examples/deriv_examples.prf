(deriv_examples
 (f_TCC1 0
  (f_TCC1-1 nil 3780487472 ("" (subtype-tcc) nil nil)
   ((/= const-decl "boolean" notequal nil)) nil
   (f subtype "2"
    "{i: integers.int | booleans.OR(deriv_examples.x /= 0, reals.>=(i, 0))}")))
 (derivable_f 0
  (derivable_f-1 nil 3780487477 ("" (derivable) nil nil)
   ((derivable_scal1_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (derivable_pow_lam formula-decl nil derivatives_lam analysis)
    (derivable_add_lam formula-decl nil derivatives_lam analysis)
    (derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis))
   shostak))
 (derivable_g 0
  (derivable_g-1 nil 3780492832 ("" (derivable) nil nil)
   ((derivable_neg_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (derivable_scald2_lam formula-decl nil derivatives_lam analysis)
    (derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis))
   shostak))
 (derivable_f_plus_g 0
  (derivable_f_plus_g-1 nil 3780492892
   ("" (derivable :use ("f" "g")) nil nil)
   ((derivable_add_lam formula-decl nil derivatives_lam analysis)
    (derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis))
   shostak))
 (derivable_f_div_h 0
  (derivable_f_div_h-1 nil 3780494057
   ("" (flatten) (("" (derivable :use "f") nil nil)) nil)
   ((derivable_div_lam formula-decl nil derivatives_lam analysis)
    (derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (nz_deriv_fun type-eq-decl nil derivatives analysis))
   shostak))
 (derivable_sq_f 0
  (derivable_sq_f-1 nil 3780494962 ("" (derivable) nil nil)
   ((derivable_mult_lam formula-decl nil derivatives_lam analysis)
    (derivable_scal1_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (derivable_pow_lam formula-decl nil derivatives_lam analysis)
    (derivable_add_lam formula-decl nil derivatives_lam analysis)
    (derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (sq const-decl "nonneg_real" sq reals)
    (comp_derivable_fun formula-decl nil chain_rule analysis))
   shostak))
 (derivable_f_o_g 0
  (derivable_f_o_g-1 nil 3780496707 ("" (derivable) nil nil)
   ((comp_derivable_fun formula-decl nil chain_rule analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (derivable? const-decl "bool" derivatives analysis)
    (derivable_scald2_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (derivable_neg_lam formula-decl nil derivatives_lam analysis)
    (derivable_add_lam formula-decl nil derivatives_lam analysis)
    (derivable_pow_lam formula-decl nil derivatives_lam analysis)
    (derivable_scal1_lam formula-decl nil derivatives_lam analysis))
   shostak))
 (derivative_f_TCC1 0
  (derivative_f_TCC1-1 nil 3781815584
   ("" (then (assert) (derivable)) nil nil)
   ((f const-decl "real" deriv_examples nil)
    (derivable_scal1_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (derivable_pow_lam formula-decl nil derivatives_lam analysis)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (TRUE const-decl "bool" booleans nil)
    (derivable_add_lam formula-decl nil derivatives_lam analysis)
    (bool nonempty-type-eq-decl nil booleans nil)
    (derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (>= const-decl "bool" reals nil)
    (^ const-decl "real" exponentiation nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil (derivative_f subtype "deriv_examples.f" "deriv_fun[real]")))
 (derivative_f 0
  (derivative_f-1 nil 3781815586
   ("" (decompose-equality) (("" (deriv) nil nil)) nil)
   ((derivable_scal1_lam formula-decl nil derivatives_lam analysis)
    (derivable_pow_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (deriv_id_lam formula-decl nil derivatives_lam analysis)
    (deriv_pow_lam formula-decl nil derivatives_lam analysis)
    (deriv_scal1_lam formula-decl nil derivatives_lam analysis)
    (deriv_add_lam formula-decl nil derivatives_lam analysis)
    (deriv const-decl "[T -> real]" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (derivable? const-decl "bool" derivatives analysis))
   shostak))
 (derivative_g_TCC1 0
  (derivative_g_TCC1-1 nil 3781815584
   ("" (then (assert) (derivable)) nil nil)
   ((g const-decl "real" deriv_examples nil)
    (derivable_neg_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (TRUE const-decl "bool" booleans nil)
    (derivable_scald2_lam formula-decl nil derivatives_lam analysis)
    (/= const-decl "boolean" notequal nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (minus_real_is_real application-judgement "real" reals nil))
   nil (derivative_g subtype "deriv_examples.g" "deriv_fun[real]")))
 (derivative_g 0
  (derivative_g-1 nil 3781815586
   ("" (then (decompose-equality) (derivative)) nil nil)
   ((derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (deriv const-decl "[T -> real]" derivatives analysis)
    (deriv_scald2_lam formula-decl nil derivatives_lam analysis)
    (deriv_neg_lam formula-decl nil derivatives_lam analysis)
    (deriv_id_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (derivable_neg_lam formula-decl nil derivatives_lam analysis))
   shostak))
 (derivative_f_plus_g_TCC1 0
  (derivative_f_plus_g_TCC1-1 nil 3827925435 ("" (subtype-tcc) nil nil)
   nil nil
   (derivative_f_plus_g subtype
    "real_fun_ops[real].*(2, ((real_fun_ops[real].+)(deriv_examples.f, deriv_examples.g)))"
    "deriv_fun[real]")))
 (derivative_f_plus_g 0
  (derivative_f_plus_g-1 nil 3827925940 ("" (postpone) nil nil) nil
   shostak))
 (derivative_f_div_h_TCC1 0
  (derivative_f_div_h_TCC1-1 nil 3827925435 ("" (subtype-tcc) nil nil)
   nil nil
   (derivative_f_div_h subtype
    "real_fun_ops[real]./(deriv_examples.f, deriv_examples.h)"
    "deriv_fun[real]")))
 (derivative_sq_f_TCC1 0
  (derivative_sq_f_TCC1-1 nil 3827925435 ("" (subtype-tcc) nil nil) nil
   nil
   (derivative_sq_f subtype "deriv_examples.sq_f" "deriv_fun[real]")))
 (derivative_sq_f_TCC2 0
  (derivative_sq_f_TCC2-1 nil 3827925435 ("" (subtype-tcc) nil nil) nil
   nil
   (derivative_sq_f subtype "3"
    "{i: integers.int | booleans.OR(deriv_examples.x /= 0, reals.>=(i, 0))}")))
 (derivative_sq_f 0
  (derivative_sq_f-1 nil 3827925976
   ("" (skeep)
    (("" (deriv "sq_f")
      (("" (hide-all-but 1) (("" (grind) nil nil)) nil)) nil))
    nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (/= const-decl "boolean" notequal nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (derivable? const-decl "bool" derivatives analysis)
    (sq_f const-decl "real" deriv_examples nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (deriv const-decl "[T -> real]" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (chain_rule formula-decl nil chain_rule analysis)
    (f const-decl "real" deriv_examples nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (sq const-decl "nonneg_real" sq reals)
    (derivable_scal1_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (derivable_pow_lam formula-decl nil derivatives_lam analysis)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (^ const-decl "real" exponentiation nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (derivable_add_lam formula-decl nil derivatives_lam analysis)
    (derivable_mult_lam formula-decl nil derivatives_lam analysis)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (deriv_mult_lam formula-decl nil derivatives_lam analysis)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (deriv_pow_lam formula-decl nil derivatives_lam analysis)
    (deriv_scal1_lam formula-decl nil derivatives_lam analysis)
    (deriv_add_lam formula-decl nil derivatives_lam analysis)
    (deriv_id_lam formula-decl nil derivatives_lam analysis)
    (expt_x1 formula-decl nil exponentiation nil)
    (d__3 skolem-const-decl "[real -> real]" deriv_examples nil)
    (expt def-decl "real" exponentiation nil))
   shostak))
 (derivative_f_o_g_TCC1 0
  (derivative_f_o_g_TCC1-1 nil 3827925435 ("" (subtype-tcc) nil nil)
   nil nil
   (derivative_f_o_g subtype
    "function_props[real, real, real].o(deriv_examples.f, deriv_examples.g)"
    "deriv_fun[real]")))
 (derivable_ksincos 0
  (derivable_ksincos-1 nil 3781814507 ("" (derivable) nil nil)
   ((derivable_cos formula-decl nil sincos_def trig)
    (derivable_scal2_lam formula-decl nil derivatives_lam analysis)
    (derivable_sin formula-decl nil sincos_def trig)
    (derivable_add_lam formula-decl nil derivatives_lam analysis)
    (derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (cos const-decl "real" sincos_def trig)
    (sin const-decl "real" sincos_def trig))
   shostak))
 (derivative_ksincos_TCC1 0
  (derivative_ksincos_TCC1-1 nil 3827925435 ("" (subtype-tcc) nil nil)
   nil nil
   (derivative_ksincos subtype "deriv_examples.ksincos"
    "deriv_fun[real]")))
 (derivable_sincos2 0
  (derivable_sincos2-1 nil 3781817727 ("" (derivable) nil nil)
   ((derivable_sin formula-decl nil sincos_def trig)
    (derivable_pow_lam formula-decl nil derivatives_lam analysis)
    (derivable_cos formula-decl nil sincos_def trig)
    (sin const-decl "real" sincos_def trig)
    (cos const-decl "real" sincos_def trig)
    (comp_derivable_fun formula-decl nil chain_rule analysis))
   shostak))
 (derivative_sincos2_TCC1 0
  (derivative_sincos2_TCC1-1 nil 3827925435 ("" (subtype-tcc) nil nil)
   nil nil
   (derivative_sincos2 subtype "deriv_examples.sincos2"
    "deriv_fun[real]")))
 (derivable_expsin 0
  (derivable_expsin-1 nil 3781817404 ("" (derivable) nil nil)
   ((derivable_exp formula-decl nil ln_exp lnexp_fnd)
    (derivable_sin formula-decl nil sincos_def trig)
    (exp const-decl "{py | x = ln(py)}" ln_exp lnexp_fnd)
    (ln const-decl "real" ln_exp lnexp_fnd)
    (sin const-decl "real" sincos_def trig)
    (comp_derivable_fun formula-decl nil chain_rule analysis))
   shostak))
 (derivative_expsin_TCC1 0
  (derivative_expsin_TCC1-1 nil 3827925435 ("" (subtype-tcc) nil nil)
   nil nil
   (derivative_expsin subtype "deriv_examples.expsin"
    "deriv_fun[real]"))))

