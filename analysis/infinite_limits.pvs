infinite_limits [ T : TYPE FROM real ] : THEORY
BEGIN

  IMPORTING lim_of_functions[T],reals@sign

  f,g: VAR [T -> real]
  x: VAR T
  c: VAR real
  M,delta,l: VAR posreal
  sig: VAR Sign

  

  sign_near(f,c,sig): bool =
    (EXISTS (delta): FORALL x: 0 < abs(x-c) AND abs(x-c) < delta IMPLIES sig*f(x) >= 0)

  % sig is 1 if f is going to infinity and -1 if -infinity

  inf_limit_at(f,c,sig): boolean = 
     FORALL M: EXISTS delta: FORALL x: 0 < abs(x-c) AND abs(x-c) < delta IMPLIES sig*f(x) >= M

  % sigf and sigg are the signs (-1 or 1) of f and g near c, respectfully

  limit_zero_denominator: LEMMA FORALL (sigf,sigg:Sign):
    convergence(f,c,sigf*l) AND convergence(g,c,0) AND
    sign_near(g,c,sigg) AND
    (FORALL (x:T): g(x)/=0) IMPLIES
        inf_limit_at(f/g,c,sigf*sigg)
 

END infinite_limits
