(gcd (gcd_TCC1 0
      (gcd_TCC1-1 nil 3602529012 ("" (subtype-tcc) nil nil)
       ((boolean nonempty-type-decl nil booleans nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (NOT const-decl "[bool -> bool]" booleans nil)
        (number nonempty-type-decl nil numbers nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (real nonempty-type-from-decl nil reals nil)
        (>= const-decl "bool" reals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (int nonempty-type-eq-decl nil integers nil)
        (nat nonempty-type-eq-decl nil naturalnumbers nil)
        (int_minus_int_is_int application-judgement "int" integers nil)
        (real_ge_is_total_order name-judgement "(total_order?[real])"
         real_props nil))
       nil))
     (gcd_TCC2 0
      (gcd_TCC2-1 nil 3602529012 ("" (termination-tcc) nil nil)
       ((boolean nonempty-type-decl nil booleans nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (NOT const-decl "[bool -> bool]" booleans nil)
        (number nonempty-type-decl nil numbers nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (real nonempty-type-from-decl nil reals nil)
        (>= const-decl "bool" reals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (int nonempty-type-eq-decl nil integers nil)
        (nat nonempty-type-eq-decl nil naturalnumbers nil)
        (< def-decl "bool" ordinals nil)
        (int_minus_int_is_int application-judgement "int" integers nil)
        (real_ge_is_total_order name-judgement "(total_order?[real])"
         real_props nil)
        (minus_odd_is_odd application-judgement "odd_int" integers nil)
        (lex2 const-decl "ordinal" lex2 nil))
       nil))
     (gcd_TCC3 0
      (gcd_TCC3-1 nil 3602529012 ("" (termination-tcc) nil nil)
       ((boolean nonempty-type-decl nil booleans nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (NOT const-decl "[bool -> bool]" booleans nil)
        (number nonempty-type-decl nil numbers nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (real nonempty-type-from-decl nil reals nil)
        (>= const-decl "bool" reals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (int nonempty-type-eq-decl nil integers nil)
        (nat nonempty-type-eq-decl nil naturalnumbers nil)
        (< def-decl "bool" ordinals nil)
        (real_lt_is_strict_total_order name-judgement
         "(strict_total_order?[real])" real_props nil)
        (real_ge_is_total_order name-judgement "(total_order?[real])"
         real_props nil)
        (lex2 const-decl "ordinal" lex2 nil))
       nil))
     (eop1_TCC1 0
      (eop1_TCC1-1 nil 3602529012 ("" (subtype-tcc) nil nil)
       ((boolean nonempty-type-decl nil booleans nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (NOT const-decl "[bool -> bool]" booleans nil)
        (number nonempty-type-decl nil numbers nil)
        (number_field_pred const-decl "[number -> boolean]"
         number_fields nil)
        (number_field nonempty-type-from-decl nil number_fields nil)
        (real_pred const-decl "[number_field -> boolean]" reals nil)
        (real nonempty-type-from-decl nil reals nil)
        (>= const-decl "bool" reals nil)
        (rational_pred const-decl "[real -> boolean]" rationals nil)
        (rational nonempty-type-from-decl nil rationals nil)
        (integer_pred const-decl "[rational -> boolean]" integers nil)
        (int nonempty-type-eq-decl nil integers nil)
        (nat nonempty-type-eq-decl nil naturalnumbers nil)
        (minus_odd_is_odd application-judgement "odd_int" integers nil)
        (real_ge_is_total_order name-judgement "(total_order?[real])"
         real_props nil)
        (int_minus_int_is_int application-judgement "int" integers
         nil))
       nil))
     (eval_gcd_TCC1 0
      (eval_gcd_TCC1-1 nil 3602529012 ("" (subtype-tcc) nil nil)
       ((pvs0_gcd const-decl "PVS0" gcd nil)) nil))
     (pvs0_gcd 0
               (pvs0_gcd-1 nil 3602529024 ("" (eval-formula) nil nil)
                ((TRUE const-decl "bool" booleans nil)
                 (id const-decl "(bijective?[T, T])" identity nil)
                 (bijective? const-decl "bool" functions nil)
                 (bool nonempty-type-eq-decl nil booleans nil)
                 (boolean nonempty-type-decl nil booleans nil))
                shostak))
     (IMP_pvs0_to_ccg_TCC1 0
      (IMP_pvs0_to_ccg_TCC1-1 nil 3602599888 ("" (subtype-tcc) nil nil)
       nil nil))
     (cc1_TCC1 0
      (cc1_TCC1-1 nil 3602599888 ("" (eval-formula) nil nil)
       ((TRUE const-decl "bool" booleans nil)
        (id const-decl "(bijective?[T, T])" identity nil)
        (bijective? const-decl "bool" functions nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (boolean nonempty-type-decl nil booleans nil))
       nil))
     (cc2_TCC1 0
      (cc2_TCC1-1 nil 3602599888 ("" (eval-formula) nil nil)
       ((TRUE const-decl "bool" booleans nil)
        (id const-decl "(bijective?[T, T])" identity nil)
        (bijective? const-decl "bool" functions nil)
        (bool nonempty-type-eq-decl nil booleans nil)
        (boolean nonempty-type-decl nil booleans nil))
       nil))
     (remove_cc1_cc1 0
      (remove_cc1_cc1-2 nil 3602672318
       ("" (eval-expr "cc1")
        (("" (replaces -1)
          (("" (grind)
            (("" (expand "semantics")
              (("" (expand "semantics")
                (("" (grind) (("" (postpone) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil)
       nil nil)
      (remove_cc1_cc1-1 nil 3602601325
       ("" (eval-expr "cc1")
        (("" (replaces -1) (("" (postpone) nil nil)) nil)) nil)
       ((Environment type-eq-decl nil lang nil)
        (remove_edge const-decl "bool" pvs0_to_ccg nil)
        (Val type-eq-decl nil lang nil)
        (PVS0 type-decl nil PVS0_adt nil)
        (BoolPVS0 type-decl nil BoolPVS0_adt nil)
        (cnst? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (vr? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (op1? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (op2? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (rec? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (ite? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (Expr type-eq-decl nil PVS0_adt nil)
        (op1 adt-constructor-decl "[[nat, Expr] -> (op1?)]" PVS0_adt
         nil)
        (vr adt-constructor-decl "(vr?)" PVS0_adt nil)
        (pvsnot? adt-recognizer-decl "[BoolPVS0 -> boolean]"
         BoolPVS0_adt nil)
        (pvsnot adt-constructor-decl "[Expr[T] -> (pvsnot?)]"
         BoolPVS0_adt nil)
        (pvsbool? adt-recognizer-decl "[BoolPVS0 -> boolean]"
         BoolPVS0_adt nil)
        (pvsbool adt-constructor-decl "[Expr[T] -> (pvsbool?)]"
         BoolPVS0_adt nil))
       shostak))
     (remove_cc2_cc2 0
      (remove_cc2_cc2-1 nil 3602601595
       ("" (eval-expr "cc2")
        (("" (replaces -1)
          (("" (grind)
            (("" (expand "semantics")
              (("" (expand "semantics") (("" (grind) nil nil)) nil))
              nil))
            nil))
          nil))
        nil)
       ((remove_edge const-decl "bool" pvs0_to_ccg nil)
        (Val type-eq-decl nil lang nil)
        (PVS0 type-decl nil PVS0_adt nil)
        (BoolPVS0 type-decl nil BoolPVS0_adt nil)
        (cnst? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (vr? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (op1? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (op2? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (rec? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (ite? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (Expr type-eq-decl nil PVS0_adt nil)
        (op1 adt-constructor-decl "[[nat, Expr] -> (op1?)]" PVS0_adt
         nil)
        (vr adt-constructor-decl "(vr?)" PVS0_adt nil)
        (pvsnot? adt-recognizer-decl "[BoolPVS0 -> boolean]"
         BoolPVS0_adt nil)
        (pvsnot adt-constructor-decl "[Expr[T] -> (pvsnot?)]"
         BoolPVS0_adt nil))
       shostak))
     (remove_cc1_cc2 0
      (remove_cc1_cc2-2 nil 3602672357
       ("" (eval-expr "cc1")
        (("" (eval-expr "cc2")
          (("" (replaces -)
            (("" (grind)
              (("" (expand "semantics")
                (("" (expand "semantics")
                  (("" (grind) (("" (postpone) nil nil)) nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       nil nil)
      (remove_cc1_cc2-1 nil 3602600889
       ("" (eval-expr "cc1")
        (("" (eval-expr "cc2") (("" (postpone) nil nil)) nil)) nil)
       ((pvsbool? adt-recognizer-decl "[BoolPVS0 -> boolean]"
         BoolPVS0_adt nil)
        (pvsbool adt-constructor-decl "[Expr[T] -> (pvsbool?)]"
         BoolPVS0_adt nil)
        (remove_edge const-decl "bool" pvs0_to_ccg nil)
        (Environment type-eq-decl nil lang nil)
        (Val type-eq-decl nil lang nil)
        (PVS0 type-decl nil PVS0_adt nil)
        (BoolPVS0 type-decl nil BoolPVS0_adt nil)
        (cnst? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (vr? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (op1? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (op2? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (rec? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (ite? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (Expr type-eq-decl nil PVS0_adt nil)
        (op1 adt-constructor-decl "[[nat, Expr] -> (op1?)]" PVS0_adt
         nil)
        (vr adt-constructor-decl "(vr?)" PVS0_adt nil)
        (pvsnot? adt-recognizer-decl "[BoolPVS0 -> boolean]"
         BoolPVS0_adt nil)
        (pvsnot adt-constructor-decl "[Expr[T] -> (pvsnot?)]"
         BoolPVS0_adt nil))
       shostak))
     (remove_cc2_cc1 0
      (remove_cc2_cc1-2 nil 3602672392
       ("" (eval-expr "cc1")
        (("" (eval-expr "cc2")
          (("" (replaces -)
            (("" (grind)
              (("" (expand "semantics")
                (("" (expand "semantics")
                  (("" (grind) (("" (postpone) nil nil)) nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       nil nil)
      (remove_cc2_cc1-1 nil 3602600941
       ("" (eval-expr "cc1")
        (("" (eval-expr "cc2")
          (("" (replaces -) (("" (grind) nil nil)) nil)) nil))
        nil)
       ((pvsbool? adt-recognizer-decl "[BoolPVS0 -> boolean]"
         BoolPVS0_adt nil)
        (pvsbool adt-constructor-decl "[Expr[T] -> (pvsbool?)]"
         BoolPVS0_adt nil)
        (remove_edge const-decl "bool" pvs0_to_ccg nil)
        (Environment type-eq-decl nil lang nil)
        (Val type-eq-decl nil lang nil)
        (PVS0 type-decl nil PVS0_adt nil)
        (BoolPVS0 type-decl nil BoolPVS0_adt nil)
        (cnst? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (vr? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (op1? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (op2? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (rec? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (ite? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
        (Expr type-eq-decl nil PVS0_adt nil)
        (op1 adt-constructor-decl "[[nat, Expr] -> (op1?)]" PVS0_adt
         nil)
        (vr adt-constructor-decl "(vr?)" PVS0_adt nil)
        (pvsnot? adt-recognizer-decl "[BoolPVS0 -> boolean]"
         BoolPVS0_adt nil)
        (pvsnot adt-constructor-decl "[Expr[T] -> (pvsnot?)]"
         BoolPVS0_adt nil))
       shostak)))

