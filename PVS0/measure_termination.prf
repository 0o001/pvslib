(measure_termination
 (mu_soundness 0
  (mu_soundness-1 nil 3644336779
   ("" (skeep*)
    (("" (beta)
      (("" (flatten)
        (("" (skeep*)
          (("" (lemma "rec_mu_decreasing[T]")
            ((""
              (inst -1 "eval_bool" "eval_op1" "eval_op2" "env"
               "mu(eval_bool, eval_op1, eval_op2)(def)(env(vr))" "def"
               "cc`path")
              (("1" (beta)
                (("1" (typepred "cc")
                  (("1" (expand "pvs0_tcc_valid_cc")
                    (("1" (flatten)
                      (("1" (typepred "cc`rec_expr")
                        (("1" (assert)
                          (("1" (inst -5 "actual")
                            (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (typepred "cc")
                (("2" (expand "pvs0_tcc_valid_cc")
                  (("2" (flatten) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((cc skolem-const-decl
        "(pvs0_tcc_valid_cc[T, nat, restrict[[real, real], [nat, nat], boolean](<)]
     (def))" measure_termination nil)
    (pvs0_tcc_valid_cc const-decl "bool" measure_termination_defs nil)
    (PVS0_CC type-eq-decl nil measure_termination_defs nil)
    (< const-decl "bool" reals nil)
    (restrict const-decl "R" restrict nil)
    (Conditions type-eq-decl nil conditions nil)
    (def skolem-const-decl "Def[T]" measure_termination nil)
    (get_body adt-accessor-decl "[Def -> Expr]" PVS0_adt nil)
    (Def type-eq-decl nil PVS0_adt nil)
    (def? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (valid_path def-decl "bool" eval_props nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil)
    (number nonempty-type-decl nil numbers nil)
    (Expr type-eq-decl nil PVS0_adt nil)
    (ite? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (rec? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op2? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op1? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (vr? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (cnst? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (PVS0 type-decl nil PVS0_adt nil) (Val type-eq-decl nil lang nil)
    (Environment type-eq-decl nil lang nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (terminates const-decl "bool" lang nil)
    (Terminating type-eq-decl nil lang nil)
    (mu const-decl "posnat" lang nil)
    (vr adt-constructor-decl "(vr?)" PVS0_adt nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (rec_mu_decreasing formula-decl nil eval_props nil)
    (T formal-nonempty-type-decl nil measure_termination nil))
   nil))
 (terminates_implies_pvs0_termination_TCC1 0
  (terminates_implies_pvs0_termination_TCC1-1 nil 3644336501
   ("" (use "wf_nat") (("" (grind) nil nil)) nil)
   ((irreflexive_restrict application-judgement "(irreflexive?[S])"
     restrict_order_props nil)
    (antisymmetric_restrict application-judgement "(antisymmetric?[S])"
     restrict_order_props nil)
    (transitive_restrict application-judgement "(transitive?[S])"
     restrict_order_props nil)
    (strict_order_restrict application-judgement "(strict_order?[S])"
     restrict_order_props nil)
    (trichotomous_restrict application-judgement "(trichotomous?[S])"
     restrict_order_props nil)
    (strict_total_order_restrict application-judgement
     "(strict_total_order?[S])" restrict_order_props nil)
    (well_founded? const-decl "bool" orders nil)
    (terminates_expr const-decl "bool" lang nil)
    (terminates const-decl "bool" lang nil)
    (restrict const-decl "R" restrict nil)
    (wf_nat formula-decl nil naturalnumbers nil))
   nil))
 (terminates_implies_pvs0_termination 0
  (terminates_implies_pvs0_termination-1 nil 3644336955
   ("" (skeep)
    (("" (lemma " mu_soundness")
      (("" (expand "pvs0_tcc_termination")
        (("" (inst?)
          (("" (inst?)
            (("" (skeep)
              (("" (skeep)
                (("" (assert)
                  (("" (assert) (("" (inst?) nil nil)) nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((mu_soundness formula-decl nil measure_termination nil)
    (T formal-nonempty-type-decl nil measure_termination nil)
    (Val type-eq-decl nil lang nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (PVS0 type-decl nil PVS0_adt nil)
    (def? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Def type-eq-decl nil PVS0_adt nil)
    (Conditions type-eq-decl nil conditions nil)
    (list type-decl nil list_adt nil)
    (rec? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (PVS0_CC type-eq-decl nil measure_termination_defs nil)
    (pvs0_tcc_valid_cc const-decl "bool" measure_termination_defs nil)
    (Environment type-eq-decl nil lang nil)
    (vr? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (mu const-decl "posnat" lang nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (Terminating type-eq-decl nil lang nil)
    (WFM type-eq-decl nil measure_termination_defs nil)
    (< const-decl "bool" reals nil)
    (restrict const-decl "R" restrict nil)
    (terminates const-decl "bool" lang nil)
    (eval_bool skolem-const-decl "[Val[T] -> bool]" measure_termination
     nil)
    (eval_op1 skolem-const-decl "[nat -> [Val[T] -> Val[T]]]"
     measure_termination nil)
    (eval_op2 skolem-const-decl "[nat -> [[Val[T], Val[T]] -> Val[T]]]"
     measure_termination nil)
    (def skolem-const-decl "Def[T]" measure_termination nil)
    (pvs0_tcc_termination const-decl "bool" measure_termination_defs
     nil))
   nil))
 (lt_val_wf 0
  (lt_val_wf-1 nil 3643883594
   ("" (skeep)
    (("" (expand "well_founded?")
      (("" (skeep)
        (("" (typepred "lt")
          (("" (expand "well_founded?")
            (("" (inst -1 "LAMBDA(m:MT): EXISTS(v: (p)): wfm(v) = m")
              (("" (split -1)
                (("1" (skolem -1 "m_min")
                  (("1" (typepred "m_min")
                    (("1" (skolem -1 "v_min")
                      (("1" (inst 1 "v_min")
                        (("1" (skeep 1)
                          (("1" (inst -2 "wfm(x)")
                            (("1" (expand "lt_val")
                              (("1"
                                (skeep -3)
                                (("1" (assert) nil nil))
                                nil))
                              nil)
                             ("2" (inst 1 "x") nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide 2)
                  (("2" (skeep)
                    (("2" (inst 1 "wfm(y)") (("2" (inst?) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((well_founded? const-decl "bool" orders nil)
    (lt formal-const-decl "(well_founded?[MT])" measure_termination
        nil)
    (pred type-eq-decl nil defined_types nil)
    (MT formal-type-decl nil measure_termination nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T formal-nonempty-type-decl nil measure_termination nil)
    (Val type-eq-decl nil lang nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (WFM type-eq-decl nil measure_termination_defs nil)
    (y skolem-const-decl "Val[T]" measure_termination nil)
    (lt_val const-decl "bool" measure_termination nil)
    (p skolem-const-decl "pred[T]" measure_termination nil)
    (wfm skolem-const-decl "WFM[T, MT, lt]" measure_termination nil)
    (x skolem-const-decl "(p)" measure_termination nil))
   shostak))
 (lt_val_no_desc_inf_branch 0
  (lt_val_no_desc_inf_branch-1 nil 3644173374
   ("" (skeep)
    ((""
      (case "empty?({y: Val | lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)(y, x)})")
      (("1" (use " finite_emptyset[Val]")
        (("1" (use "emptyset_is_empty?[Val]") (("1" (assert) nil nil))
          nil))
        nil)
       ("2" (name "n_ccs" "length(pvs0_ccs(def))")
        (("2" (case "EXISTS (x: below(n_ccs)): TRUE")
          (("1" (expand "is_finite")
            (("1"
              (inst 2 "n_ccs"
               "LAMBDA(y:Val | lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)(y, x)): epsilon({n:below(n_ccs) | LET cc = nth(pvs0_ccs[T,MT,lt](def), n) IN semantic_rel_expr(eval_bool, eval_op1, eval_op2)
                                   (get_arg(cc`rec_expr), get_body(def), val2env(x), y)  })")
              (("1" (expand "injective?")
                (("1" (skeep)
                  (("1" (lemma "epsilon_ax[below(n_ccs)]")
                    (("1" (inst? -1 :where -4)
                      (("1" (split -1)
                        (("1"
                          (name-replace "n1" "epsilon({n: below(n_ccs) |
                                                                       semantic_rel_expr
                                                                       (eval_bool, eval_op1, eval_op2)
                                                                       (get_arg
                                                                        (nth(pvs0_ccs[T,MT,lt](def), n)`rec_expr),
                                                                        get_body(def),
                                                                        LAMBDA (v: (vr?)): x,
                                                                        x1)})")
                          (("1" (lemma "epsilon_ax[below(n_ccs)]")
                            (("1" (inst? -1 :where -5)
                              (("1"
                                (split -1)
                                (("1"
                                  (name-replace
                                   "n2"
                                   "epsilon({n: below(n_ccs) |
                                                                                   semantic_rel_expr
                                                                                   (eval_bool, eval_op1, eval_op2)
                                                                                   (get_arg
                                                                                    (nth(pvs0_ccs[T,MT,lt](def), n)`rec_expr),
                                                                                    get_body(def),
                                                                                    LAMBDA (v: (vr?)): x,
                                                                                    x2)})")
                                  (("1"
                                    (replaces -5 :dir RL)
                                    (("1"
                                      (name-replace
                                       "e1"
                                       "get_arg(nth(pvs0_ccs[T,MT,lt](def), n1)`rec_expr)")
                                      (("1"
                                        (lemma "deterministic_expr")
                                        (("1"
                                          (inst? -1 :where 2)
                                          (("1"
                                            (inst?)
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (grind) nil nil))
                                  nil)
                                 ("2"
                                  (typepred "x2")
                                  (("2"
                                    (expand "lt_val")
                                    (("2"
                                      (skolem -1 "cc")
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (use "pvs0_ccs_completness")
                                          (("2"
                                            (case
                                             "EXISTS(n2:below(n_ccs)): nth(pvs0_ccs(def),n2) = cc")
                                            (("1"
                                              (skeep -1)
                                              (("1"
                                                (inst 1 "n2")
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide-all-but (-1 -7 1))
                                              (("2"
                                                (use
                                                 "member_nth[(pvs0_tcc_valid_cc(def))]")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (skeep)
                                                    (("2"
                                                      (inst?)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (grind) nil nil))
                              nil))
                            nil)
                           ("2" (grind) nil nil))
                          nil)
                         ("2" (typepred "x1")
                          (("2" (expand "lt_val")
                            (("2" (skolem -1 "cc")
                              (("2"
                                (flatten)
                                (("2"
                                  (use "pvs0_ccs_completness")
                                  (("2"
                                    (case
                                     "EXISTS(n1:below(n_ccs)): nth(pvs0_ccs(def),n1) = cc")
                                    (("1"
                                      (skeep -1)
                                      (("1"
                                        (inst 1 "n1")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide-all-but (-1 -6 1))
                                      (("2"
                                        (use
                                         "member_nth[(pvs0_tcc_valid_cc(def))]")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (skeep)
                                            (("2" (inst?) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (grind) nil nil))
                      nil)
                     ("2" (propax) nil nil))
                    nil))
                  nil))
                nil)
               ("2" (skeep) nil nil) ("3" (grind) nil nil))
              nil))
            nil)
           ("2" (inst 1 "0")
            (("2" (expand "empty?")
              (("2" (skolem 2 "x_")
                (("2" (expand "member")
                  (("2" (expand "lt_val")
                    (("2" (skeep)
                      (("2" (use "pvs0_ccs_completness")
                        (("2" (replaces -2 :dir RL)
                          (("2" (hide-all-but (-1 1))
                            (("2"
                              (use "member_null[(pvs0_tcc_valid_cc(def))]")
                              (("2"
                                (assert)
                                (("2"
                                  (expand "length")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((lt_val const-decl "bool" measure_termination nil)
    (WFM type-eq-decl nil measure_termination_defs nil)
    (lt formal-const-decl "(well_founded?[MT])" measure_termination
        nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (MT formal-type-decl nil measure_termination nil)
    (Def type-eq-decl nil PVS0_adt nil)
    (def? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (PVS0 type-decl nil PVS0_adt nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (empty? const-decl "bool" sets nil) (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Val type-eq-decl nil lang nil)
    (T formal-nonempty-type-decl nil measure_termination nil)
    (emptyset_is_empty? formula-decl nil sets_lemmas nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (finite_emptyset name-judgement "finite_set[T]" set_as_list
     "structures/")
    (finite_emptyset name-judgement "finite_set[T]" set_as_list_props
     "structures/")
    (finite_emptyset judgement-tcc nil finite_sets nil)
    (< const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (TRUE const-decl "bool" booleans nil)
    (n_ccs skolem-const-decl "nat" measure_termination nil)
    (x skolem-const-decl "Val[T]" measure_termination nil)
    (wfm skolem-const-decl "WFM[T, MT, lt]" measure_termination nil)
    (def skolem-const-decl "Def[T]" measure_termination nil)
    (eval_op2 skolem-const-decl "[nat -> [[Val[T], Val[T]] -> Val[T]]]"
     measure_termination nil)
    (eval_op1 skolem-const-decl "[nat -> [Val[T] -> Val[T]]]"
     measure_termination nil)
    (eval_bool skolem-const-decl "[Val[T] -> bool]" measure_termination
     nil)
    (below type-eq-decl nil nat_types nil)
    (epsilon const-decl "T" epsilons nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (cnst? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (vr? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op1? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op2? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (ite? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Expr type-eq-decl nil PVS0_adt nil)
    (Environment type-eq-decl nil lang nil)
    (semantic_rel_expr inductive-decl "bool" lang nil)
    (get_arg shared-adt-accessor-decl
     "[{x: PVS0 | rec?(x) OR op1?(x)} -> Expr]" PVS0_adt nil)
    (get_body adt-accessor-decl "[Def -> Expr]" PVS0_adt nil)
    (nth def-decl "T" list_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (pvs0_ccs_completness formula-decl nil measure_termination_defs
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member_nth formula-decl nil more_list_props "structures/")
    (BoolPVS0 type-decl nil BoolPVS0_adt nil)
    (deterministic_expr formula-decl nil lang nil)
    (member const-decl "bool" sets nil)
    (epsilon_ax formula-decl nil epsilons nil)
    (injective? const-decl "bool" functions nil)
    (is_finite const-decl "bool" finite_sets nil)
    (member_null formula-decl nil list_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Conditions type-eq-decl nil conditions nil)
    (list type-decl nil list_adt nil)
    (rec? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (PVS0_CC type-eq-decl nil measure_termination_defs nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" list_adt nil)
    (pvs0_tcc_valid_cc const-decl "bool" measure_termination_defs nil)
    (length def-decl "nat" list_props nil)
    (pvs0_ccs const-decl "list[(pvs0_tcc_valid_cc(def))]"
     measure_termination_defs nil))
   shostak))
 (pvs0_termination_terminates 0
  (pvs0_termination_terminates-6 "" 3648925575
   ("" (skeep)
    (("" (expand "terminates")
      (("" (lemma "eval_expr_terminates")
        (("" (inst? -1)
          (("" (assert)
            (("" (hide 2)
              (("" (expand "eval_expr_termination")
                (("" (skeep)
                  (("" (expand "pvs0_tcc_termination")
                    (("" (skeep)
                      ((""
                        (case "FORALL(expr: Expr, env: Environment, path: (valid_path(get_body(def)))):
                                                                 expr = subterm_at(get_body(def), path) AND
                                                                        eval_conds_rec(eval_bool,eval_op1,eval_op2)(get_body(def),path_conditions(get_body(def), path),env)
                                                                IMPLIES
                                                                 EXISTS (n: nat | n <= wfm[Val,lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega(env(vr))):
                                                                        some?(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                       (n, expr, get_body(def), env))
                                                                         AND
                                                                         semantic_rel_expr(eval_bool, eval_op1, eval_op2)
                                                                                          (expr, get_body(def), env,
                                                                                           val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                        (n,
                                                                                                         expr,
                                                                                                         get_body(def),
                                                                                                         env)))")
                        (("1"
                          (inst -1 "get_body(def)" "env" "null[nat]")
                          (("1" (split -1)
                            (("1" (skeep)
                              (("1"
                                (insteep)
                                (("1" (assert) nil nil))
                                nil))
                              nil)
                             ("2" (hide-all-but 1)
                              (("2" (grind) nil nil)) nil)
                             ("3" (hide-all-but 1)
                              (("3"
                                (case
                                 "path_conditions(get_body(def), null[nat]) = null")
                                (("1"
                                  (replaces -1)
                                  (("1" (grind) nil nil))
                                  nil)
                                 ("2"
                                  (hide 2)
                                  (("2"
                                    (expand "path_conditions")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (use "null_path") nil nil)) nil))
                          nil)
                         ("2" (hide 2)
                          (("2"
                            (measure-induct
                             "(wfm(env(vr)),sizepvs0(expr))"
                             ("expr" "env") :order
                             "lt_lex2[MT,nat,lt,<]")
                            (("1" (skolem 1 ("expr1" "env1"))
                              (("1"
                                (flatten)
                                (("1"
                                  (skeep)
                                  (("1"
                                    (case "cnst?(expr1)")
                                    (("1"
                                      (expand "eval_expr" 1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (hide-all-but (1 -1))
                                          (("1"
                                            (expand
                                             "semantic_rel_expr")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (inst 1 "1")
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (assert)
                                                  (("2"
                                                    (expand "Omega")
                                                    (("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (case "vr?(expr1)")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "eval_expr" 2)
                                          (("1"
                                            (hide-all-but (2 -1))
                                            (("1"
                                              (inst 1 "1")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand
                                                   "semantic_rel_expr")
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (case "op1?(expr1)")
                                        (("1"
                                          (expand "eval_expr" 3)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (inst
                                               -2
                                               "get_arg(expr1)"
                                               "env1")
                                              (("1"
                                                (split -2)
                                                (("1"
                                                  (inst
                                                   -1
                                                   "cons(0,path)")
                                                  (("1"
                                                    (split -1)
                                                    (("1"
                                                      (skeep -1)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (inst 3 "n")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (use
                                                               "eval_expr_n_pos")
                                                              (("1"
                                                                (beta)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (hide
                                                                     1
                                                                     2)
                                                                    (("1"
                                                                      (expand
                                                                       "semantic_rel_expr"
                                                                       1)
                                                                      (("1"
                                                                        (inst
                                                                         1
                                                                         "val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                                                           (n,
                                                                                                                                                                            get_arg(expr1),
                                                                                                                                                                            get_body(def),
                                                                                                                                                                            env1))")
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide 4)
                                                      (("2"
                                                        (hide-all-but
                                                         (1 -2))
                                                        (("2"
                                                          (lemma
                                                           "subterm_append")
                                                          (("2"
                                                            (inst
                                                             -1
                                                             "get_body(def)"
                                                             "path")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (inst
                                                                 -1
                                                                 "cons(0,null[nat])")
                                                                (("1"
                                                                  (expand
                                                                   "append"
                                                                   -1)
                                                                  (("1"
                                                                    (expand
                                                                     "append"
                                                                     -1)
                                                                    (("1"
                                                                      (replaces
                                                                       -1)
                                                                      (("1"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (reveal
                                                                   -3)
                                                                  (("2"
                                                                    (expand
                                                                     "valid_path"
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "rac")
                                                                      (("2"
                                                                        (expand
                                                                         "rdc")
                                                                        (("2"
                                                                          (expand
                                                                           "length"
                                                                           1)
                                                                          (("2"
                                                                            (expand
                                                                             "length"
                                                                             1)
                                                                            (("2"
                                                                              (expand
                                                                               "nth"
                                                                               1)
                                                                              (("2"
                                                                                (expand
                                                                                 "reverse"
                                                                                 1
                                                                                 2)
                                                                                (("2"
                                                                                  (expand
                                                                                   "reverse"
                                                                                   1
                                                                                   2)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "append "
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "reverse"
                                                                                       1)
                                                                                      (("2"
                                                                                        (use
                                                                                         "null_path")
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (hide-all-but
                                                       (1 -3 -1))
                                                      (("3"
                                                        (use
                                                         "path_conditions_unmodified")
                                                        (("3"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide-all-but
                                                     (-1 1))
                                                    (("2"
                                                      (typepred "path")
                                                      (("2"
                                                        (hide -1)
                                                        (("2"
                                                          (use
                                                           "valid_0_path_ext")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (case "rec?(expr1)")
                                          (("1"
                                            (hide 1 2 3)
                                            (("1"
                                              (expand "eval_expr" 1)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (label "ih" -2)
                                                  (("1"
                                                    (copy "ih")
                                                    (("1"
                                                      (hide "ih")
                                                      (("1"
                                                        (inst
                                                         -1
                                                         "get_arg(expr1)"
                                                         "env1")
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "cons(0,path)")
                                                            (("1"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (inst
                                                                 -5
                                                                 "env1")
                                                                (("1"
                                                                  (skeep
                                                                   -1)
                                                                  (("1"
                                                                    (name-replace
                                                                     "valact"
                                                                     "eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                                                            (n,
                                                                                                                                                                             get_arg(expr1),
                                                                                                                                                                             get_body(def),
                                                                                                                                                                             env1)")
                                                                    (("1"
                                                                      (inst
                                                                       -6
                                                                       "(# rec_expr := expr1, cnds := path_conditions(get_body(def),path), path := path #)"
                                                                       "val(valact)")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (inst
                                                                           1
                                                                           "wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega(env1(vr[T]))")
                                                                          (("1"
                                                                            (typepred
                                                                             "n")
                                                                            (("1"
                                                                              (lift-if
                                                                               1)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (case
                                                                                   "wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega(env1(vr[T])) = 0")
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "valact")
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "eval_expr_ge_n")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -1
                                                                                         "eval_bool"
                                                                                         "eval_op1"
                                                                                         "eval_op2"
                                                                                         "n"
                                                                                         "wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega
                                (env1(vr[T]))"
                                                                                         "get_arg(expr1)"
                                                                                         "get_body(def)"
                                                                                         "env1")
                                                                                        (("1"
                                                                                          (beta)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (reveal
                                                                                               "ih")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 "ih"
                                                                                                 "get_body(def)"
                                                                                                 "val2env(val(valact))")
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "null[nat]")
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (skeep)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "valact")
                                                                                                          (("1"
                                                                                                            (typepred
                                                                                                             "n!1")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -4
                                                                                                               "ih")
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "n!1 <= wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega
                                        (env1(vr[T])) - 1")
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "eval_expr_ge_n")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -1
                                                                                                                       "eval_bool"
                                                                                                                       "eval_op1"
                                                                                                                       "eval_op2"
                                                                                                                       "n!1"
                                                                                                                       "wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega
                                          (env1(vr[T])) - 1"
                                                                                                                       "get_body(def)"
                                                                                                                       "get_body(def)"
                                                                                                                       "LAMBDA (v_1: (vr?[Val[T]])):
                                                                                                                                                                                                                          val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                                                                                                                       (wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega
                                          (env1(vr[T])),
                                                                                                                                                                                                                                        get_arg(expr1),
                                                                                                                                                                                                                                        get_body(def),
                                                                                                                                                                                                                                        env1))")
                                                                                                                      (("1"
                                                                                                                        (beta)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "semantic_rel_expr"
                                                                                                                             2)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               2
                                                                                                                               "val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                                                                                                                                   (n,
                                                                                                                                                                                                                                                    get_arg(expr1),
                                                                                                                                                                                                                                                    get_body(def),
                                                                                                                                                                                                                                                    env1))")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (hide-all-but
                                                                                                                         1)
                                                                                                                        (("3"
                                                                                                                          (use
                                                                                                                           "lt_val_no_desc_inf_branch")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("4"
                                                                                                                        (hide-all-but
                                                                                                                         1)
                                                                                                                        (("4"
                                                                                                                          (use
                                                                                                                           "lt_val_wf")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide-all-but
                                                                                                                   (1
                                                                                                                    -1
                                                                                                                    -11))
                                                                                                                  (("2"
                                                                                                                    (reveal
                                                                                                                     -14)
                                                                                                                    (("2"
                                                                                                                      (replaces
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "Omega")
                                                                                                                        (("2"
                                                                                                                          (name-replace
                                                                                                                           "Sact"
                                                                                                                           "{n: above(0) | FORALL (b: Val[T]): NOT wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].gt_n(lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm))(n)(val(valact), b)}")
                                                                                                                          (("2"
                                                                                                                            (name-replace
                                                                                                                             "S"
                                                                                                                             "{n: above(0) | FORALL (b: Val[T]): NOT wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].gt_n(lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm))(n)(env1(vr), b)}")
                                                                                                                            (("2"
                                                                                                                              (case
                                                                                                                               "min(Sact) <= min(S) - 1")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 -1
                                                                                                                                 2)
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "min(S) > 1")
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "min_def[above(0)]")
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "min(Sact)"
                                                                                                                                       "Sact")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "minimum?")
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -1
                                                                                                                                             "min(S) -1")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (hide
                                                                                                                                                 2)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "Sact")
                                                                                                                                                  (("1"
                                                                                                                                                    (skeep)
                                                                                                                                                    (("1"
                                                                                                                                                      (case
                                                                                                                                                       "S(min(S))")
                                                                                                                                                      (("1"
                                                                                                                                                        (name-replace
                                                                                                                                                         "minS"
                                                                                                                                                         "min(S)")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "S"
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             -1
                                                                                                                                                             "b")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "gt_n"
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   1
                                                                                                                                                                   "val(valact)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "lt_val")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         1
                                                                                                                                                                         "(# rec_expr := expr1,
                                                        cnds := path_conditions[T](get_body[T](def), path),
                                                        path := path #)")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (case
                                                                                                                                                                           "env1 = LAMBDA (v: (vr?)): env1(vr)")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replaces
                                                                                                                                                                             -1
                                                                                                                                                                             :dir
                                                                                                                                                                             RL)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (reveal
                                                                                                                                                                               -14
                                                                                                                                                                               -17
                                                                                                                                                                               -22)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (apply-extensionality)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (grind)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (grind)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (case
                                                                                                                                     "FORALL(b:T): NOT wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].gt_n(lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm))(min(S))(env1(vr),b)")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "gt_n")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -1
                                                                                                                                           "val(valact)")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "lt_val")
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               1
                                                                                                                                               "(# rec_expr := expr1, cnds := path_conditions(get_body(def),path), path := path #)")
                                                                                                                                              (("1"
                                                                                                                                                (reveal
                                                                                                                                                 -12
                                                                                                                                                 -18
                                                                                                                                                 -10)
                                                                                                                                                (("1"
                                                                                                                                                  (replaces
                                                                                                                                                   -3)
                                                                                                                                                  (("1"
                                                                                                                                                    (case
                                                                                                                                                     "env1 = LAMBDA (v: (vr?)): env1(vr)")
                                                                                                                                                    (("1"
                                                                                                                                                      (replaces
                                                                                                                                                       -1
                                                                                                                                                       :dir
                                                                                                                                                       RL)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (apply-extensionality)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (grind)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (skeep)
                                                                                                                                      (("2"
                                                                                                                                        (use
                                                                                                                                         "min_def[above(0)]")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "S"
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "minimum?")
                                                                                                                                              (("2"
                                                                                                                                                (flatten)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "b")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "S"
                                                                                                                                                     -2)
                                                                                                                                                    (("2"
                                                                                                                                                      (propax)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "subterm_at")
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (hide
                                                                                                         3)
                                                                                                        (("3"
                                                                                                          (assert)
                                                                                                          (("3"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("3"
                                                                                                              (case
                                                                                                               "path_conditions(get_body(def), null[nat]) = null")
                                                                                                              (("1"
                                                                                                                (replaces
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "path_conditions")
                                                                                                                (("2"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       3)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "null_path")
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     3)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "valact")
                                                                                                      (("2"
                                                                                                        (hide-all-but
                                                                                                         (-8
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (use
                                                                                             "lt_val_no_desc_inf_branch")
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("3"
                                                                                            (use
                                                                                             "lt_val_wf")
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("3"
                                                                                      (use
                                                                                       "lt_val_no_desc_inf_branch")
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("4"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("4"
                                                                                      (use
                                                                                       "lt_val_wf")
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (use
                                                                               "lt_val_no_desc_inf_branch")
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("3"
                                                                              (use
                                                                               "lt_val_wf")
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (1
                                                                          -1
                                                                          -2))
                                                                        (("2"
                                                                          (lemma
                                                                           "subterm_append")
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "get_body(def)"
                                                                             "path")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "cons(0,null[nat])")
                                                                                (("1"
                                                                                  (expand
                                                                                   "append "
                                                                                   -1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "append "
                                                                                     -1)
                                                                                    (("1"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "valid_path")
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "null_path")
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (1
                                                                  -1
                                                                  -2))
                                                                (("2"
                                                                  (lemma
                                                                   "subterm_append")
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "get_body(def)"
                                                                     "path")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "cons(0,null[nat])")
                                                                        (("1"
                                                                          (expand
                                                                           "append "
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "append "
                                                                             -1)
                                                                            (("1"
                                                                              (replaces
                                                                               -1)
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "valid_path")
                                                                          (("2"
                                                                            (lemma
                                                                             "null_path")
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (hide
                                                                 2)
                                                                (("3"
                                                                  (hide
                                                                   -4)
                                                                  (("3"
                                                                    (use
                                                                     "path_conditions_unmodified")
                                                                    (("3"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide 2)
                                                              (("2"
                                                                (use
                                                                 "valid_0_path_ext")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (hide-all-but
                                                               1)
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (case "ite?(expr1)")
                                            (("1"
                                              (hide 1 2 3 4)
                                              (("1"
                                                (hide -5)
                                                (("1"
                                                  (copy -2)
                                                  (("1"
                                                    (inst
                                                     -1
                                                     "get_cond(expr1)"
                                                     "env1")
                                                    (("1"
                                                      (split -1)
                                                      (("1"
                                                        (inst
                                                         -1
                                                         "cons(0, path)")
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (skolem
                                                             -1
                                                             "n_cond")
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (case
                                                                 "eval_bool(val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                                                                                          (n_cond, get_cond(expr1), get_body(def), env1)))")
                                                                (("1"
                                                                  (inst
                                                                   -5
                                                                   "get_if(expr1)"
                                                                   "env1")
                                                                  (("1"
                                                                    (split
                                                                     -5)
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "cons(1,path)")
                                                                      (("1"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (skolem
                                                                           -1
                                                                           "n_if")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (expand
                                                                               "eval_expr"
                                                                               1)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (inst
                                                                                   1
                                                                                   "max(n_cond,n_if)")
                                                                                  (("1"
                                                                                    (lift-if
                                                                                     1)
                                                                                    (("1"
                                                                                      (split
                                                                                       1)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "eval_expr_ge_n")
                                                                                          (("2"
                                                                                            (inst?
                                                                                             -1
                                                                                             :subst
                                                                                             ("n"
                                                                                              "n_cond"
                                                                                              "m"
                                                                                              "max(n_cond,n_if)"))
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "eval_expr_ge_n")
                                                                                                (("1"
                                                                                                  (inst?
                                                                                                   -1
                                                                                                   :subst
                                                                                                   ("n"
                                                                                                    "n_if"
                                                                                                    "m"
                                                                                                    "max(n_cond,n_if)"
                                                                                                    "expr"
                                                                                                    "get_if(expr1)"))
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "semantic_rel_expr"
                                                                                                       2)
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil)
                                                                                             ("3"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "n_cond")
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "n_if")
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           (1
                                                                            -5
                                                                            -4))
                                                                          (("2"
                                                                            (lemma
                                                                             "subterm_append")
                                                                            (("2"
                                                                              (inst?
                                                                               :where
                                                                               -3)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -1
                                                                                   "cons(1,null)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "append"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "append"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (replaces
                                                                                         -1)
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "valid_path")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "rac")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "rdc")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "length")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "length")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "nth")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "reverse"
                                                                                                 1
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "reverse"
                                                                                                   1
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "append"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "reverse")
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "null_path")
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (expand
                                                                                     "every")
                                                                                    (("3"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (hide-all-but
                                                                           (1
                                                                            -6
                                                                            -1
                                                                            -4
                                                                            -5
                                                                            -3))
                                                                          (("3"
                                                                            (use
                                                                             "path_conditions_cons")
                                                                            (("3"
                                                                              (assert)
                                                                              (("3"
                                                                                (assert)
                                                                                (("3"
                                                                                  (replaces
                                                                                   -1)
                                                                                  (("3"
                                                                                    (expand
                                                                                     "path_conds_aux")
                                                                                    (("3"
                                                                                      (expand
                                                                                       "eval_conds_rec"
                                                                                       1)
                                                                                      (("3"
                                                                                        (inst?)
                                                                                        (("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (use
                                                                         "valid_1_path_ext")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide-all-but
                                                                       (1
                                                                        -4))
                                                                      (("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (inst
                                                                   -4
                                                                   "get_else(expr1)"
                                                                   "env1")
                                                                  (("2"
                                                                    (split
                                                                     -4)
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "cons(2,path)")
                                                                      (("1"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (skolem
                                                                           -1
                                                                           "n_else")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (inst
                                                                               2
                                                                               "max(n_cond,n_else)")
                                                                              (("1"
                                                                                (expand
                                                                                 "eval_expr"
                                                                                 2)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (lift-if
                                                                                     2)
                                                                                    (("1"
                                                                                      (split
                                                                                       2)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "eval_expr_ge_n")
                                                                                          (("2"
                                                                                            (inst?
                                                                                             -1
                                                                                             :subst
                                                                                             ("n"
                                                                                              "n_cond"
                                                                                              "m"
                                                                                              "max(n_cond,n_else)"))
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "eval_expr_ge_n")
                                                                                                (("2"
                                                                                                  (inst?
                                                                                                   -1
                                                                                                   :subst
                                                                                                   ("n"
                                                                                                    "n_else"
                                                                                                    "m"
                                                                                                    "max(n_cond,n_else)"
                                                                                                    "expr"
                                                                                                    "get_else(expr1)"))
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "semantic_rel_expr"
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "n_cond")
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "n_else")
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           (1
                                                                            -4
                                                                            -3))
                                                                          (("2"
                                                                            (lemma
                                                                             "subterm_append")
                                                                            (("2"
                                                                              (inst?
                                                                               :where
                                                                               -3)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -1
                                                                                   "cons(2,null[nat])")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "append"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "append"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (replaces
                                                                                         -1)
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (replaces
                                                                                     -2
                                                                                     :dir
                                                                                     RL)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "valid_path")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "rac")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "rdc")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "length")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "length")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "nth")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "reverse"
                                                                                                   1
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "reverse"
                                                                                                     1
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "append"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "reverse"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (use
                                                                                                           "null_path")
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (hide-all-but
                                                                           (1
                                                                            -5
                                                                            -4
                                                                            -3
                                                                            2
                                                                            -2))
                                                                          (("3"
                                                                            (use
                                                                             "path_conditions_cons")
                                                                            (("3"
                                                                              (assert)
                                                                              (("3"
                                                                                (assert)
                                                                                (("3"
                                                                                  (replaces
                                                                                   -1)
                                                                                  (("3"
                                                                                    (expand
                                                                                     "path_conds_aux")
                                                                                    (("3"
                                                                                      (expand
                                                                                       "eval_conds_rec"
                                                                                       1)
                                                                                      (("3"
                                                                                        (inst?)
                                                                                        (("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (1
                                                                          -4
                                                                          -3))
                                                                        (("2"
                                                                          (use
                                                                           "valid_2_path_ext")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide-all-but
                                                                       (1
                                                                        -3))
                                                                      (("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (1 -3 -1))
                                                            (("2"
                                                              (lemma
                                                               "subterm_append")
                                                              (("2"
                                                                (inst?
                                                                 :where
                                                                 -3)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "cons(0, null)")
                                                                    (("1"
                                                                      (expand
                                                                       "append"
                                                                       -1)
                                                                      (("1"
                                                                        (expand
                                                                         "append"
                                                                         -1)
                                                                        (("1"
                                                                          (replaces
                                                                           -1)
                                                                          (("1"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (replaces
                                                                       -2
                                                                       :dir
                                                                       RL)
                                                                      (("2"
                                                                        (expand
                                                                         "valid_path"
                                                                         1)
                                                                        (("2"
                                                                          (expand
                                                                           "rac")
                                                                          (("2"
                                                                            (expand
                                                                             "rdc")
                                                                            (("2"
                                                                              (expand
                                                                               "length")
                                                                              (("2"
                                                                                (expand
                                                                                 "length")
                                                                                (("2"
                                                                                  (expand
                                                                                   "nth")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "reverse"
                                                                                     1
                                                                                     2)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "reverse"
                                                                                       1
                                                                                       2)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "append"
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "reverse")
                                                                                          (("2"
                                                                                            (use
                                                                                             "null_path")
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (expand
                                                                       "every")
                                                                      (("3"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (hide-all-but
                                                             (1
                                                              -4
                                                              -3
                                                              -1))
                                                            (("3"
                                                              (use
                                                               "path_conditions_unmodified")
                                                              (("3"
                                                                (assert)
                                                                (("3"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           (1 -3 -1))
                                                          (("2"
                                                            (use
                                                             "valid_0_path_ext")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide-all-but
                                                         (1 -1))
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (case "op2?(expr1)")
                                              (("1"
                                                (hide 1 2 3 4 5)
                                                (("1"
                                                  (copy -2)
                                                  (("1"
                                                    (inst
                                                     -1
                                                     "get_arg1(expr1)"
                                                     "env1")
                                                    (("1"
                                                      (split -1)
                                                      (("1"
                                                        (inst
                                                         -3
                                                         "get_arg2(expr1)"
                                                         "env1")
                                                        (("1"
                                                          (split -3)
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "cons(1,path)")
                                                            (("1"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (inst
                                                                 -2
                                                                 "cons(0,path)")
                                                                (("1"
                                                                  (split
                                                                   -2)
                                                                  (("1"
                                                                    (skolem
                                                                     -1
                                                                     "n1")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (skolem
                                                                         -3
                                                                         "n2")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (inst
                                                                             1
                                                                             "max(n1,n2)")
                                                                            (("1"
                                                                              (expand
                                                                               "eval_expr"
                                                                               1)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (lift-if
                                                                                   1)
                                                                                  (("1"
                                                                                    (split
                                                                                     1)
                                                                                    (("1"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "eval_expr_ge_n")
                                                                                        (("2"
                                                                                          (inst?
                                                                                           -1
                                                                                           :subst
                                                                                           ("n"
                                                                                            "n1"
                                                                                            "m"
                                                                                            "max(n1,n2)"))
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "eval_expr_ge_n")
                                                                                              (("2"
                                                                                                (inst?
                                                                                                 -1
                                                                                                 :subst
                                                                                                 ("n"
                                                                                                  "n2"
                                                                                                  "m"
                                                                                                  "max(n1,n2)"
                                                                                                  "expr"
                                                                                                  "get_arg2(expr1)"))
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "semantic_rel_expr"
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (typepred
                                                                                 "n1")
                                                                                (("2"
                                                                                  (typepred
                                                                                   "n2")
                                                                                  (("2"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     (1
                                                                      -3
                                                                      -2))
                                                                    (("2"
                                                                      (lemma
                                                                       "subterm_append")
                                                                      (("2"
                                                                        (inst?
                                                                         :where
                                                                         -3)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "cons(0, null)")
                                                                            (("1"
                                                                              (expand
                                                                               "append"
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "append"
                                                                                 -1)
                                                                                (("1"
                                                                                  (replaces
                                                                                   -1)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (replaces
                                                                               -2
                                                                               :dir
                                                                               RL)
                                                                              (("2"
                                                                                (expand
                                                                                 "valid_path")
                                                                                (("2"
                                                                                  (expand
                                                                                   "rac")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "rdc")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "length"
                                                                                       1)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "length"
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "nth"
                                                                                           1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "reverse"
                                                                                             1
                                                                                             2)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "reverse"
                                                                                               1
                                                                                               2)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "append"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "reverse"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (use
                                                                                                     "null_path")
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (expand
                                                                               "every")
                                                                              (("3"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (hide-all-but
                                                                     (1
                                                                      -4
                                                                      -2
                                                                      -3))
                                                                    (("3"
                                                                      (use
                                                                       "path_conditions_unmodified")
                                                                      (("3"
                                                                        (assert)
                                                                        (("3"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   (1
                                                                    -3
                                                                    -2))
                                                                  (("2"
                                                                    (use
                                                                     "valid_0_path_ext")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (1
                                                                  -3
                                                                  -2))
                                                                (("2"
                                                                  (lemma
                                                                   "subterm_append")
                                                                  (("2"
                                                                    (inst?
                                                                     -1
                                                                     :where
                                                                     -3)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "cons(1, null)")
                                                                        (("1"
                                                                          (expand
                                                                           "append"
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "append"
                                                                             -1)
                                                                            (("1"
                                                                              (replaces
                                                                               -1)
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (replaces
                                                                           -2
                                                                           :dir
                                                                           RL)
                                                                          (("2"
                                                                            (expand
                                                                             "valid_path")
                                                                            (("2"
                                                                              (expand
                                                                               "rac")
                                                                              (("2"
                                                                                (expand
                                                                                 "rdc")
                                                                                (("2"
                                                                                  (expand
                                                                                   "length"
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "length"
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "nth")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "reverse"
                                                                                         1
                                                                                         2)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "reverse"
                                                                                           1
                                                                                           2)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "append"
                                                                                             1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "reverse")
                                                                                              (("2"
                                                                                                (use
                                                                                                 "null_path")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (expand
                                                                           "every")
                                                                          (("3"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (hide-all-but
                                                                 (1
                                                                  -4
                                                                  -3
                                                                  -2))
                                                                (("3"
                                                                  (use
                                                                   "path_conditions_unmodified2")
                                                                  (("3"
                                                                    (assert)
                                                                    (("3"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (use
                                                               "valid_1_path_ext")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (1 -2))
                                                            (("2"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide-all-but
                                                         (1 -1))
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (typepred "expr1")
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide-all-but 1)
                              (("2"
                                (skeep*)
                                (("2"
                                  (use "lt_val_no_desc_inf_branch")
                                  nil
                                  nil))
                                nil))
                              nil)
                             ("3" (hide-all-but 1)
                              (("3"
                                (use "lt_val_wf")
                                (("3" (grind) nil nil))
                                nil))
                              nil)
                             ("4" (hide-all-but 1)
                              (("4"
                                (use "wf_nat")
                                (("4" (grind) nil nil))
                                nil))
                              nil)
                             ("5" (hide-all-but 1)
                              (("5"
                                (skeep*)
                                (("5"
                                  (hide -1)
                                  (("5"
                                    (use "lt_val_no_desc_inf_branch")
                                    nil
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("6" (hide-all-but 1)
                              (("6"
                                (skeep*)
                                (("6"
                                  (hide-all-but 1)
                                  (("6" (use "lt_val_wf") nil nil))
                                  nil))
                                nil))
                              nil)
                             ("7" (hide-all-but 1)
                              (("7"
                                (skeep*)
                                (("7"
                                  (use "lt_val_no_desc_inf_branch")
                                  nil
                                  nil))
                                nil))
                              nil)
                             ("8" (hide-all-but 1)
                              (("8"
                                (use "lt_val_wf")
                                (("8" (grind) nil nil))
                                nil))
                              nil)
                             ("9" (hide-all-but 1)
                              (("9"
                                (use "wf_nat")
                                (("9" (grind) nil nil))
                                nil))
                              nil)
                             ("10" (hide-all-but 1)
                              (("10"
                                (skeep*)
                                (("10"
                                  (use "lt_val_no_desc_inf_branch")
                                  nil
                                  nil))
                                nil))
                              nil)
                             ("11" (hide-all-but 1)
                              (("11"
                                (use "lt_val_wf")
                                (("11" (grind) nil nil))
                                nil))
                              nil)
                             ("12" (use "wf_nat")
                              (("12" (grind) nil nil)) nil))
                            nil))
                          nil)
                         ("3" (hide-all-but 1)
                          (("3" (skeep*)
                            (("3" (use "lt_val_no_desc_inf_branch") nil
                              nil))
                            nil))
                          nil)
                         ("4" (hide-all-but 1)
                          (("4" (skeep*)
                            (("4" (use "lt_val_wf") nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((terminates const-decl "bool" lang nil)
    (Val type-eq-decl nil lang nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (PVS0 type-decl nil PVS0_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (cnst? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (vr? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op1? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op2? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (rec? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (ite? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Expr type-eq-decl nil PVS0_adt nil)
    (def? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Def type-eq-decl nil PVS0_adt nil)
    (get_body adt-accessor-decl "[Def -> Expr]" PVS0_adt nil)
    (wf_nat formula-decl nil naturalnumbers nil)
    (PVS0_CC type-eq-decl nil measure_termination_defs nil)
    (pvs0_tcc_valid_cc const-decl "bool" measure_termination_defs nil)
    (expr1 skolem-const-decl "Expr[T]" measure_termination nil)
    (eval_expr_ge_n formula-decl nil lang nil)
    (gt_n inductive-decl "bool" wfm nil)
    (above nonempty-type-eq-decl nil integers nil)
    (nonempty? const-decl "bool" sets nil)
    (min const-decl "{a | S(a) AND (FORALL x: S(x) IMPLIES a <= x)}"
         min_nat nil)
    (minimum? const-decl "bool" min_nat nil)
    (Sact skolem-const-decl "[above(0) -> boolean]" measure_termination
     nil)
    (S skolem-const-decl "[above(0) -> boolean]" measure_termination
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (min_def formula-decl nil min_nat nil)
    (n skolem-const-decl "{n: nat |
         n <=
          wfm[Val, lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega
              (env1(vr))}" measure_termination nil)
    (n!1 skolem-const-decl "{n: nat |
         n <=
          wfm[Val, lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega
              (val(valact))}" measure_termination nil)
    (lt_val_no_desc_inf_branch formula-decl nil measure_termination
     nil)
    (lt_val_wf formula-decl nil measure_termination nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (valact skolem-const-decl "{myv: Maybe[Val[T]] |
         some?(myv) IMPLIES
          n > 0 AND
           (FORALL (m: upfrom(n)):
              myv =
               eval_expr(eval_bool, eval_op1, eval_op2)
                        (m, get_arg(expr1), get_body(def), env1))}"
     measure_termination nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (> const-decl "bool" reals nil)
    (upfrom nonempty-type-eq-decl nil integers nil)
    (n2 skolem-const-decl "{n: nat |
         n <=
          wfm[Val, lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega
              (env1(vr))}" measure_termination nil)
    (n1 skolem-const-decl "{n: nat |
         n <=
          wfm[Val, lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega
              (env1(vr))}" measure_termination nil)
    (path_conditions_unmodified2 formula-decl nil eval_props nil)
    (get_arg2 adt-accessor-decl "[(op2?) -> Expr]" PVS0_adt nil)
    (get_arg1 adt-accessor-decl "[(op2?) -> Expr]" PVS0_adt nil)
    (get_else adt-accessor-decl "[(ite?) -> Expr]" PVS0_adt nil)
    (n_else skolem-const-decl "{n: nat |
         n <=
          wfm[Val, lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega
              (env1(vr))}" measure_termination nil)
    (valid_2_path_ext formula-decl nil eval_props nil)
    (get_if adt-accessor-decl "[(ite?) -> Expr]" PVS0_adt nil)
    (path_conds_aux const-decl "BoolPVS0" eval_props nil)
    (path_conditions_cons formula-decl nil eval_props nil)
    (nonneg_rat_max application-judgement
     "{s: nonneg_rat | s >= q AND s >= r}" real_defs nil)
    (nat_max application-judgement "{k: nat | i <= k AND j <= k}"
     real_defs nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (n_cond skolem-const-decl "{n: nat |
         n <=
          wfm[Val, lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega
              (env1(vr))}" measure_termination nil)
    (n_if skolem-const-decl "{n: nat |
         n <=
          wfm[Val, lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega
              (env1(vr))}" measure_termination nil)
    (valid_1_path_ext formula-decl nil eval_props nil)
    (get_cond adt-accessor-decl "[(ite?) -> Expr]" PVS0_adt nil)
    (get_arg shared-adt-accessor-decl
     "[{x: PVS0 | rec?(x) OR op1?(x)} -> Expr]" PVS0_adt nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (reduce_nat adt-def-decl "[PVS0 -> nat]" PVS0_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (path skolem-const-decl "(valid_path(get_body(def)))"
     measure_termination nil)
    (path_conditions_unmodified formula-decl nil eval_props nil)
    (subterm_append formula-decl nil eval_props nil)
    (rac const-decl "nat" eval_props nil)
    (length def-decl "nat" list_props nil)
    (nth def-decl "T" list_props nil)
    (append def-decl "list[T]" list_props nil)
    (rdc const-decl "list[nat]" eval_props nil)
    (reverse def-decl "list[T]" list_props nil)
    (eval_expr_n_pos formula-decl nil lang nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (valid_0_path_ext formula-decl nil eval_props nil)
    (env1 skolem-const-decl "Environment[T]" measure_termination nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (wfm skolem-const-decl "WFM[T, MT, lt]" measure_termination nil)
    (eval_op2 skolem-const-decl "[nat -> [[Val[T], Val[T]] -> Val[T]]]"
     measure_termination nil)
    (eval_op1 skolem-const-decl "[nat -> [Val[T] -> Val[T]]]"
     measure_termination nil)
    (eval_bool skolem-const-decl "[Val[T] -> bool]" measure_termination
     nil)
    (strict_total_order_restrict application-judgement
     "(strict_total_order?[S])" restrict_order_props nil)
    (trichotomous_restrict application-judgement "(trichotomous?[S])"
     restrict_order_props nil)
    (strict_order_restrict application-judgement "(strict_order?[S])"
     restrict_order_props nil)
    (transitive_restrict application-judgement "(transitive?[S])"
     restrict_order_props nil)
    (antisymmetric_restrict application-judgement "(antisymmetric?[S])"
     restrict_order_props nil)
    (irreflexive_restrict application-judgement "(irreflexive?[S])"
     restrict_order_props nil)
    (lt_lex2_wf name-judgement "(well_founded?[[A, B]])" lex2_generic
     "orders/")
    (measure_induction formula-decl nil measure_induction nil)
    (sizepvs0 const-decl "[PVS0 -> nat]" lang nil)
    (restrict const-decl "R" restrict nil)
    (< const-decl "bool" reals nil)
    (lt_lex2 const-decl "bool" lex2_generic "orders/")
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (def skolem-const-decl "Def[T]" measure_termination nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null_path formula-decl nil eval_props nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (Environment type-eq-decl nil lang nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (valid_path def-decl "bool" eval_props nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (subterm adt-def-decl "boolean" PVS0_adt nil)
    (subterm_at def-decl "({res: Expr | subterm(res, expr)})"
     eval_props nil)
    (BoolPVS0 type-decl nil BoolPVS0_adt nil)
    (Conditions type-eq-decl nil conditions nil)
    (eval_conds_rec def-decl "bool" conditions nil)
    (path_conditions def-decl "Conditions" eval_props nil)
    (<= const-decl "bool" reals nil)
    (MT formal-type-decl nil measure_termination nil)
    (pred type-eq-decl nil defined_types nil)
    (well_founded? const-decl "bool" orders nil)
    (lt formal-const-decl "(well_founded?[MT])" measure_termination
        nil)
    (WFM type-eq-decl nil measure_termination_defs nil)
    (lt_val const-decl "bool" measure_termination nil)
    (Omega const-decl "nat" wfm nil)
    (vr adt-constructor-decl "(vr?)" PVS0_adt nil)
    (Maybe type-decl nil Maybe "structures/")
    (some? adt-recognizer-decl "[Maybe -> boolean]" Maybe
     "structures/")
    (eval_expr def-decl "Maybe[Val]" lang nil)
    (semantic_rel_expr inductive-decl "bool" lang nil)
    (val adt-accessor-decl "[(some?) -> T]" Maybe "structures/")
    (pvs0_tcc_termination const-decl "bool" measure_termination_defs
     nil)
    (eval_expr_termination const-decl "bool" lang nil)
    (eval_expr_semantic_rel_j rec-application-judgement
     "{myv: Maybe[Val] |
         some?(myv) IMPLIES
          semantic_rel_expr(eval_bool, eval_op1, eval_op2)
                           (expr, body, env, val(myv))}"
     measure_termination nil)
    (eval_expr_ge_n_j rec-application-judgement "{myv: Maybe[Val] |
         some?(myv) IMPLIES
          n > 0 AND
           (FORALL (m: upfrom(n)):
              myv =
               eval_expr(eval_bool, eval_op1, eval_op2)
                        (m, expr, body, env))}" measure_termination
     nil)
    (eval_expr_terminates formula-decl nil lang nil)
    (T formal-nonempty-type-decl nil measure_termination nil))
   shostak)
  (pvs0_termination_terminates-5 nil 3644000043
   ("" (skeep)
    (("" (expand "terminates")
      (("" (lemma "eval_expr_terminates")
        (("" (inst? -1)
          (("" (assert)
            (("" (hide 2)
              (("" (expand "eval_expr_termination")
                (("" (skeep)
                  (("" (expand "pvs0_tcc_termination")
                    (("" (skeep)
                      ((""
                        (case "FORALL(expr: Expr, env: Environment, path: (valid_path(get_body(def)))):
                                                                 expr = subterm_at(get_body(def), path) AND
                                                                        eval_conds_rec(eval_bool,eval_op1,eval_op2)(get_body(def),path_conditions(get_body(def), path),env)
                                                                IMPLIES
                                                                 EXISTS (n: nat | n <= wfm[Val,lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega(env(vr))):
                                                                        some?(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                       (n, expr, get_body(def), env))
                                                                         AND
                                                                         semantic_rel_expr(eval_bool, eval_op1, eval_op2)
                                                                                          (expr, get_body(def), env,
                                                                                           val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                        (n,
                                                                                                         expr,
                                                                                                         get_body(def),
                                                                                                         env)))")
                        (("1"
                          (inst -1 "get_body(def)" "env" "null[nat]")
                          (("1" (split -1)
                            (("1" (skeep)
                              (("1"
                                (insteep)
                                (("1" (assert) nil nil))
                                nil))
                              nil)
                             ("2" (hide-all-but 1)
                              (("2" (grind) nil nil)) nil)
                             ("3" (hide-all-but 1)
                              (("3" (grind) nil nil)) nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (use "null_path") nil nil)) nil))
                          nil)
                         ("2" (hide 2)
                          (("2"
                            (measure-induct
                             "(wfm(env(vr)),sizepvs0(expr))"
                             ("expr" "env") :order
                             "lt_lex2[MT,nat,lt,<]")
                            (("1" (skolem 1 ("expr1" "env1"))
                              (("1"
                                (flatten)
                                (("1"
                                  (skeep)
                                  (("1"
                                    (case "cnst?(expr1)")
                                    (("1"
                                      (expand "eval_expr" 1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (hide-all-but (1 -1))
                                          (("1"
                                            (expand
                                             "semantic_rel_expr")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (inst 1 "1")
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (assert)
                                                  (("2"
                                                    (expand "Omega")
                                                    (("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (case "vr?(expr1)")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "eval_expr" 2)
                                          (("1"
                                            (hide-all-but (2 -1))
                                            (("1"
                                              (inst 1 "1")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand
                                                   "semantic_rel_expr")
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (case "op1?(expr1)")
                                        (("1"
                                          (expand "eval_expr" 3)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (inst
                                               -2
                                               "get_arg(expr1)"
                                               "env1")
                                              (("1"
                                                (split -2)
                                                (("1"
                                                  (inst
                                                   -1
                                                   "cons(0,path)")
                                                  (("1"
                                                    (split -1)
                                                    (("1"
                                                      (skeep -1)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (inst 3 "n")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (use
                                                               "eval_expr_n_pos")
                                                              (("1"
                                                                (beta)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (hide
                                                                     1
                                                                     2)
                                                                    (("1"
                                                                      (expand
                                                                       "semantic_rel_expr"
                                                                       1)
                                                                      (("1"
                                                                        (inst
                                                                         1
                                                                         "val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                                                           (n,
                                                                                                                                                                            get_arg(expr1),
                                                                                                                                                                            get_body(def),
                                                                                                                                                                            env1))")
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide 4)
                                                      (("2"
                                                        (hide-all-but
                                                         (1 -2))
                                                        (("2"
                                                          (lemma
                                                           "subterm_append")
                                                          (("2"
                                                            (inst
                                                             -1
                                                             "get_body(def)"
                                                             "path")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (inst
                                                                 -1
                                                                 "cons(0,null[nat])")
                                                                (("1"
                                                                  (expand
                                                                   "append"
                                                                   -1)
                                                                  (("1"
                                                                    (expand
                                                                     "append"
                                                                     -1)
                                                                    (("1"
                                                                      (replaces
                                                                       -1)
                                                                      (("1"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (reveal
                                                                   -3)
                                                                  (("2"
                                                                    (expand
                                                                     "valid_path"
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "rac")
                                                                      (("2"
                                                                        (expand
                                                                         "rdc")
                                                                        (("2"
                                                                          (expand
                                                                           "length"
                                                                           1)
                                                                          (("2"
                                                                            (expand
                                                                             "length"
                                                                             1)
                                                                            (("2"
                                                                              (expand
                                                                               "nth"
                                                                               1)
                                                                              (("2"
                                                                                (expand
                                                                                 "reverse"
                                                                                 1
                                                                                 2)
                                                                                (("2"
                                                                                  (expand
                                                                                   "reverse"
                                                                                   1
                                                                                   2)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "append "
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "reverse"
                                                                                       1)
                                                                                      (("2"
                                                                                        (use
                                                                                         "null_path")
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (hide-all-but
                                                       (1 -3 -1))
                                                      (("3"
                                                        (use
                                                         "path_conditions_unmodified")
                                                        (("3"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide-all-but
                                                     (-1 1))
                                                    (("2"
                                                      (typepred "path")
                                                      (("2"
                                                        (hide -1)
                                                        (("2"
                                                          (use
                                                           "valid_0_path_ext")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (case "rec?(expr1)")
                                          (("1"
                                            (hide 1 2 3)
                                            (("1"
                                              (expand "eval_expr" 1)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (label "ih" -2)
                                                  (("1"
                                                    (copy "ih")
                                                    (("1"
                                                      (hide "ih")
                                                      (("1"
                                                        (inst
                                                         -1
                                                         "get_arg(expr1)"
                                                         "env1")
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "cons(0,path)")
                                                            (("1"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (inst
                                                                 -5
                                                                 "env1")
                                                                (("1"
                                                                  (skeep
                                                                   -1)
                                                                  (("1"
                                                                    (name-replace
                                                                     "valact"
                                                                     "eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                                                            (n,
                                                                                                                                                                             get_arg(expr1),
                                                                                                                                                                             get_body(def),
                                                                                                                                                                             env1)")
                                                                    (("1"
                                                                      (inst
                                                                       -6
                                                                       "(# rec_expr := expr1, cnds := path_conditions(get_body(def),path), path := path #)"
                                                                       "val(valact)")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (inst
                                                                           1
                                                                           "wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega(env1(vr[T]))")
                                                                          (("1"
                                                                            (typepred
                                                                             "n")
                                                                            (("1"
                                                                              (lift-if
                                                                               1)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (case
                                                                                   "wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega(env1(vr[T])) = 0")
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "valact")
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "eval_expr_ge_n")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -1
                                                                                         "eval_bool"
                                                                                         "eval_op1"
                                                                                         "eval_op2"
                                                                                         "n"
                                                                                         "wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega
                                (env1(vr[T]))"
                                                                                         "get_arg(expr1)"
                                                                                         "get_body(def)"
                                                                                         "env1")
                                                                                        (("1"
                                                                                          (beta)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (reveal
                                                                                               "ih")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 "ih"
                                                                                                 "get_body(def)"
                                                                                                 "val2env(val(valact))")
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "null[nat]")
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (skeep)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "valact")
                                                                                                          (("1"
                                                                                                            (typepred
                                                                                                             "n!1")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -4
                                                                                                               "ih")
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "n!1 <= wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega
                                        (env1(vr[T])) - 1")
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "eval_expr_ge_n")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -1
                                                                                                                       "eval_bool"
                                                                                                                       "eval_op1"
                                                                                                                       "eval_op2"
                                                                                                                       "n!1"
                                                                                                                       "wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega
                                          (env1(vr[T])) - 1"
                                                                                                                       "get_body(def)"
                                                                                                                       "get_body(def)"
                                                                                                                       "LAMBDA (v_1: (vr?[Val[T]])):
                                                                                                                                                                                                                          val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                                                                                                                       (wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega
                                          (env1(vr[T])),
                                                                                                                                                                                                                                        get_arg(expr1),
                                                                                                                                                                                                                                        get_body(def),
                                                                                                                                                                                                                                        env1))")
                                                                                                                      (("1"
                                                                                                                        (beta)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "semantic_rel_expr"
                                                                                                                             2)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               2
                                                                                                                               "val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                                                                                                                                   (n,
                                                                                                                                                                                                                                                    get_arg(expr1),
                                                                                                                                                                                                                                                    get_body(def),
                                                                                                                                                                                                                                                    env1))")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (hide-all-but
                                                                                                                         1)
                                                                                                                        (("3"
                                                                                                                          (use
                                                                                                                           "lt_val_no_desc_inf_branch")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("4"
                                                                                                                        (hide-all-but
                                                                                                                         1)
                                                                                                                        (("4"
                                                                                                                          (use
                                                                                                                           "lt_val_wf")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide-all-but
                                                                                                                   (1
                                                                                                                    -1
                                                                                                                    -11))
                                                                                                                  (("2"
                                                                                                                    (reveal
                                                                                                                     -14)
                                                                                                                    (("2"
                                                                                                                      (replaces
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "Omega")
                                                                                                                        (("2"
                                                                                                                          (name-replace
                                                                                                                           "Sact"
                                                                                                                           "{n: above(0) | FORALL (b: Val[T]): NOT wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].gt_n(lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm))(n)(val(valact), b)}")
                                                                                                                          (("2"
                                                                                                                            (name-replace
                                                                                                                             "S"
                                                                                                                             "{n: above(0) | FORALL (b: Val[T]): NOT wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].gt_n(lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm))(n)(env1(vr), b)}")
                                                                                                                            (("2"
                                                                                                                              (case
                                                                                                                               "min(Sact) <= min(S) - 1")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 -1
                                                                                                                                 2)
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "min(S) > 1")
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "min_def[above(0)]")
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "min(Sact)"
                                                                                                                                       "Sact")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "minimum?")
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -1
                                                                                                                                             "min(S) -1")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (hide
                                                                                                                                                 2)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "Sact")
                                                                                                                                                  (("1"
                                                                                                                                                    (skeep)
                                                                                                                                                    (("1"
                                                                                                                                                      (case
                                                                                                                                                       "S(min(S))")
                                                                                                                                                      (("1"
                                                                                                                                                        (name-replace
                                                                                                                                                         "minS"
                                                                                                                                                         "min(S)")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "S"
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             -1
                                                                                                                                                             "b")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "gt_n"
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   1
                                                                                                                                                                   "val(valact)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "lt_val")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         1
                                                                                                                                                                         "(# rec_expr := expr1,
                                                        cnds := path_conditions[T](get_body[T](def), path),
                                                        path := path #)")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (case
                                                                                                                                                                           "env1 = LAMBDA (v: (vr?)): env1(vr)")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replaces
                                                                                                                                                                             -1
                                                                                                                                                                             :dir
                                                                                                                                                                             RL)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (reveal
                                                                                                                                                                               -14
                                                                                                                                                                               -17
                                                                                                                                                                               -22)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (apply-extensionality)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (grind)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (grind)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (case
                                                                                                                                     "FORALL(b:T): NOT wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].gt_n(lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm))(min(S))(env1(vr),b)")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "gt_n")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -1
                                                                                                                                           "val(valact)")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "lt_val")
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               1
                                                                                                                                               "(# rec_expr := expr1, cnds := path_conditions(get_body(def),path), path := path #)")
                                                                                                                                              (("1"
                                                                                                                                                (reveal
                                                                                                                                                 -12
                                                                                                                                                 -18
                                                                                                                                                 -10)
                                                                                                                                                (("1"
                                                                                                                                                  (replaces
                                                                                                                                                   -3)
                                                                                                                                                  (("1"
                                                                                                                                                    (case
                                                                                                                                                     "env1 = LAMBDA (v: (vr?)): env1(vr)")
                                                                                                                                                    (("1"
                                                                                                                                                      (replaces
                                                                                                                                                       -1
                                                                                                                                                       :dir
                                                                                                                                                       RL)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (apply-extensionality)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (grind)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (skeep)
                                                                                                                                      (("2"
                                                                                                                                        (use
                                                                                                                                         "min_def[above(0)]")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "S"
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "minimum?")
                                                                                                                                              (("2"
                                                                                                                                                (flatten)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "b")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "S"
                                                                                                                                                     -2)
                                                                                                                                                    (("2"
                                                                                                                                                      (propax)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "subterm_at")
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (hide
                                                                                                         3)
                                                                                                        (("3"
                                                                                                          (assert)
                                                                                                          (("3"
                                                                                                            (expand
                                                                                                             "path_conditions"
                                                                                                             1)
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "eval_conds_rec"
                                                                                                               1)
                                                                                                              (("3"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       3)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "null_path")
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     3)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "valact")
                                                                                                      (("2"
                                                                                                        (hide-all-but
                                                                                                         (-8
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (use
                                                                                             "lt_val_no_desc_inf_branch")
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("3"
                                                                                            (use
                                                                                             "lt_val_wf")
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("3"
                                                                                      (use
                                                                                       "lt_val_no_desc_inf_branch")
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("4"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("4"
                                                                                      (use
                                                                                       "lt_val_wf")
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (use
                                                                               "lt_val_no_desc_inf_branch")
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("3"
                                                                              (use
                                                                               "lt_val_wf")
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (1
                                                                          -1
                                                                          -2))
                                                                        (("2"
                                                                          (lemma
                                                                           "subterm_append")
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "get_body(def)"
                                                                             "path")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "cons(0,null[nat])")
                                                                                (("1"
                                                                                  (expand
                                                                                   "append "
                                                                                   -1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "append "
                                                                                     -1)
                                                                                    (("1"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "valid_path")
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "null_path")
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (1
                                                                  -1
                                                                  -2))
                                                                (("2"
                                                                  (lemma
                                                                   "subterm_append")
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "get_body(def)"
                                                                     "path")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "cons(0,null[nat])")
                                                                        (("1"
                                                                          (expand
                                                                           "append "
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "append "
                                                                             -1)
                                                                            (("1"
                                                                              (replaces
                                                                               -1)
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "valid_path")
                                                                          (("2"
                                                                            (lemma
                                                                             "null_path")
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (hide
                                                                 2)
                                                                (("3"
                                                                  (hide
                                                                   -4)
                                                                  (("3"
                                                                    (use
                                                                     "path_conditions_unmodified")
                                                                    (("3"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide 2)
                                                              (("2"
                                                                (use
                                                                 "valid_0_path_ext")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (hide-all-but
                                                               1)
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (case "ite?(expr1)")
                                            (("1"
                                              (hide 1 2 3 4)
                                              (("1"
                                                (hide -5)
                                                (("1"
                                                  (copy -2)
                                                  (("1"
                                                    (inst
                                                     -1
                                                     "get_cond(expr1)"
                                                     "env1")
                                                    (("1"
                                                      (split -1)
                                                      (("1"
                                                        (inst
                                                         -1
                                                         "cons(0, path)")
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (skolem
                                                             -1
                                                             "n_cond")
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (case
                                                                 "eval_bool(val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                                                                                          (n_cond, get_cond(expr1), get_body(def), env1)))")
                                                                (("1"
                                                                  (inst
                                                                   -5
                                                                   "get_if(expr1)"
                                                                   "env1")
                                                                  (("1"
                                                                    (split
                                                                     -5)
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "cons(1,path)")
                                                                      (("1"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (skolem
                                                                           -1
                                                                           "n_if")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (expand
                                                                               "eval_expr"
                                                                               1)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (inst
                                                                                   1
                                                                                   "max(n_cond,n_if)")
                                                                                  (("1"
                                                                                    (lift-if
                                                                                     1)
                                                                                    (("1"
                                                                                      (split
                                                                                       1)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "eval_expr_ge_n")
                                                                                          (("2"
                                                                                            (inst?
                                                                                             -1
                                                                                             :subst
                                                                                             ("n"
                                                                                              "n_cond"
                                                                                              "m"
                                                                                              "max(n_cond,n_if)"))
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "eval_expr_ge_n")
                                                                                                (("1"
                                                                                                  (inst?
                                                                                                   -1
                                                                                                   :subst
                                                                                                   ("n"
                                                                                                    "n_if"
                                                                                                    "m"
                                                                                                    "max(n_cond,n_if)"
                                                                                                    "expr"
                                                                                                    "get_if(expr1)"))
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "semantic_rel_expr"
                                                                                                       2)
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil)
                                                                                             ("3"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "n_cond")
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "n_if")
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           (1
                                                                            -5
                                                                            -4))
                                                                          (("2"
                                                                            (lemma
                                                                             "subterm_append")
                                                                            (("2"
                                                                              (inst?
                                                                               :where
                                                                               -3)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -1
                                                                                   "cons(1,null)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "append"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "append"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (replaces
                                                                                         -1)
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "valid_path")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "rac")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "rdc")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "length")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "length")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "nth")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "reverse"
                                                                                                 1
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "reverse"
                                                                                                   1
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "append"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "reverse")
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "null_path")
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (expand
                                                                                     "every")
                                                                                    (("3"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (hide-all-but
                                                                           (1
                                                                            -6
                                                                            -1
                                                                            -4
                                                                            -5
                                                                            -3))
                                                                          (("3"
                                                                            (use
                                                                             "path_conditions_cons")
                                                                            (("3"
                                                                              (assert)
                                                                              (("3"
                                                                                (assert)
                                                                                (("3"
                                                                                  (replaces
                                                                                   -1)
                                                                                  (("3"
                                                                                    (expand
                                                                                     "eval_conds_rec"
                                                                                     1)
                                                                                    (("3"
                                                                                      (inst?)
                                                                                      (("3"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (use
                                                                         "valid_1_path_ext")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide-all-but
                                                                       (1
                                                                        -4))
                                                                      (("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (inst
                                                                   -4
                                                                   "get_else(expr1)"
                                                                   "env1")
                                                                  (("2"
                                                                    (split
                                                                     -4)
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "cons(2,path)")
                                                                      (("1"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (skolem
                                                                           -1
                                                                           "n_else")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (inst
                                                                               2
                                                                               "max(n_cond,n_else)")
                                                                              (("1"
                                                                                (expand
                                                                                 "eval_expr"
                                                                                 2)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (lift-if
                                                                                     2)
                                                                                    (("1"
                                                                                      (split
                                                                                       2)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "eval_expr_ge_n")
                                                                                          (("2"
                                                                                            (inst?
                                                                                             -1
                                                                                             :subst
                                                                                             ("n"
                                                                                              "n_cond"
                                                                                              "m"
                                                                                              "max(n_cond,n_else)"))
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "eval_expr_ge_n")
                                                                                                (("2"
                                                                                                  (inst?
                                                                                                   -1
                                                                                                   :subst
                                                                                                   ("n"
                                                                                                    "n_else"
                                                                                                    "m"
                                                                                                    "max(n_cond,n_else)"
                                                                                                    "expr"
                                                                                                    "get_else(expr1)"))
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "semantic_rel_expr"
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "n_cond")
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "n_else")
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           (1
                                                                            -4
                                                                            -3))
                                                                          (("2"
                                                                            (lemma
                                                                             "subterm_append")
                                                                            (("2"
                                                                              (inst?
                                                                               :where
                                                                               -3)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -1
                                                                                   "cons(2,null[nat])")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "append"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "append"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (replaces
                                                                                         -1)
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (replaces
                                                                                     -2
                                                                                     :dir
                                                                                     RL)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "valid_path")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "rac")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "rdc")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "length")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "length")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "nth")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "reverse"
                                                                                                   1
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "reverse"
                                                                                                     1
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "append"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "reverse"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (use
                                                                                                           "null_path")
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (hide-all-but
                                                                           (1
                                                                            -5
                                                                            -4
                                                                            -3
                                                                            2
                                                                            -2))
                                                                          (("3"
                                                                            (use
                                                                             "path_conditions_cons")
                                                                            (("3"
                                                                              (assert)
                                                                              (("3"
                                                                                (assert)
                                                                                (("3"
                                                                                  (replaces
                                                                                   -1)
                                                                                  (("3"
                                                                                    (expand
                                                                                     "eval_conds_rec"
                                                                                     1)
                                                                                    (("3"
                                                                                      (inst?)
                                                                                      (("3"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (1
                                                                          -4
                                                                          -3))
                                                                        (("2"
                                                                          (use
                                                                           "valid_2_path_ext")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide-all-but
                                                                       (1
                                                                        -3))
                                                                      (("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (1 -3 -1))
                                                            (("2"
                                                              (lemma
                                                               "subterm_append")
                                                              (("2"
                                                                (inst?
                                                                 :where
                                                                 -3)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "cons(0, null)")
                                                                    (("1"
                                                                      (expand
                                                                       "append"
                                                                       -1)
                                                                      (("1"
                                                                        (expand
                                                                         "append"
                                                                         -1)
                                                                        (("1"
                                                                          (replaces
                                                                           -1)
                                                                          (("1"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (replaces
                                                                       -2
                                                                       :dir
                                                                       RL)
                                                                      (("2"
                                                                        (expand
                                                                         "valid_path"
                                                                         1)
                                                                        (("2"
                                                                          (expand
                                                                           "rac")
                                                                          (("2"
                                                                            (expand
                                                                             "rdc")
                                                                            (("2"
                                                                              (expand
                                                                               "length")
                                                                              (("2"
                                                                                (expand
                                                                                 "length")
                                                                                (("2"
                                                                                  (expand
                                                                                   "nth")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "reverse"
                                                                                     1
                                                                                     2)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "reverse"
                                                                                       1
                                                                                       2)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "append"
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "reverse")
                                                                                          (("2"
                                                                                            (use
                                                                                             "null_path")
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (expand
                                                                       "every")
                                                                      (("3"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (hide-all-but
                                                             (1
                                                              -4
                                                              -3
                                                              -1))
                                                            (("3"
                                                              (use
                                                               "path_conditions_unmodified")
                                                              (("3"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           (1 -3 -1))
                                                          (("2"
                                                            (use
                                                             "valid_0_path_ext")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide-all-but
                                                         (1 -1))
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (case "op2?(expr1)")
                                              (("1"
                                                (hide 1 2 3 4 5)
                                                (("1"
                                                  (copy -2)
                                                  (("1"
                                                    (inst
                                                     -1
                                                     "get_arg1(expr1)"
                                                     "env1")
                                                    (("1"
                                                      (split -1)
                                                      (("1"
                                                        (inst
                                                         -3
                                                         "get_arg2(expr1)"
                                                         "env1")
                                                        (("1"
                                                          (split -3)
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "cons(1,path)")
                                                            (("1"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (inst
                                                                 -2
                                                                 "cons(0,path)")
                                                                (("1"
                                                                  (split
                                                                   -2)
                                                                  (("1"
                                                                    (skolem
                                                                     -1
                                                                     "n1")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (skolem
                                                                         -3
                                                                         "n2")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (inst
                                                                             1
                                                                             "max(n1,n2)")
                                                                            (("1"
                                                                              (expand
                                                                               "eval_expr"
                                                                               1)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (lift-if
                                                                                   1)
                                                                                  (("1"
                                                                                    (split
                                                                                     1)
                                                                                    (("1"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "eval_expr_ge_n")
                                                                                        (("2"
                                                                                          (inst?
                                                                                           -1
                                                                                           :subst
                                                                                           ("n"
                                                                                            "n1"
                                                                                            "m"
                                                                                            "max(n1,n2)"))
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "eval_expr_ge_n")
                                                                                              (("2"
                                                                                                (inst?
                                                                                                 -1
                                                                                                 :subst
                                                                                                 ("n"
                                                                                                  "n2"
                                                                                                  "m"
                                                                                                  "max(n1,n2)"
                                                                                                  "expr"
                                                                                                  "get_arg2(expr1)"))
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "semantic_rel_expr"
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (typepred
                                                                                 "n1")
                                                                                (("2"
                                                                                  (typepred
                                                                                   "n2")
                                                                                  (("2"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     (1
                                                                      -3
                                                                      -2))
                                                                    (("2"
                                                                      (lemma
                                                                       "subterm_append")
                                                                      (("2"
                                                                        (inst?
                                                                         :where
                                                                         -3)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "cons(0, null)")
                                                                            (("1"
                                                                              (expand
                                                                               "append"
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "append"
                                                                                 -1)
                                                                                (("1"
                                                                                  (replaces
                                                                                   -1)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (replaces
                                                                               -2
                                                                               :dir
                                                                               RL)
                                                                              (("2"
                                                                                (expand
                                                                                 "valid_path")
                                                                                (("2"
                                                                                  (expand
                                                                                   "rac")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "rdc")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "length"
                                                                                       1)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "length"
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "nth"
                                                                                           1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "reverse"
                                                                                             1
                                                                                             2)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "reverse"
                                                                                               1
                                                                                               2)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "append"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "reverse"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (use
                                                                                                     "null_path")
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (expand
                                                                               "every")
                                                                              (("3"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (hide-all-but
                                                                     (1
                                                                      -4
                                                                      -2))
                                                                    (("3"
                                                                      (use
                                                                       "path_conditions_unmodified")
                                                                      (("3"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   (1
                                                                    -3
                                                                    -2))
                                                                  (("2"
                                                                    (use
                                                                     "valid_0_path_ext")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (1
                                                                  -3
                                                                  -2))
                                                                (("2"
                                                                  (lemma
                                                                   "subterm_append")
                                                                  (("2"
                                                                    (inst?
                                                                     -1
                                                                     :where
                                                                     -3)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "cons(1, null)")
                                                                        (("1"
                                                                          (expand
                                                                           "append"
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "append"
                                                                             -1)
                                                                            (("1"
                                                                              (replaces
                                                                               -1)
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (replaces
                                                                           -2
                                                                           :dir
                                                                           RL)
                                                                          (("2"
                                                                            (expand
                                                                             "valid_path")
                                                                            (("2"
                                                                              (expand
                                                                               "rac")
                                                                              (("2"
                                                                                (expand
                                                                                 "rdc")
                                                                                (("2"
                                                                                  (expand
                                                                                   "length"
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "length"
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "nth")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "reverse"
                                                                                         1
                                                                                         2)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "reverse"
                                                                                           1
                                                                                           2)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "append"
                                                                                             1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "reverse")
                                                                                              (("2"
                                                                                                (use
                                                                                                 "null_path")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (expand
                                                                           "every")
                                                                          (("3"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (hide-all-but
                                                                 (1
                                                                  -4
                                                                  -3
                                                                  -2))
                                                                (("3"
                                                                  (use
                                                                   "path_conditions_unmodified")
                                                                  (("3"
                                                                    (assert)
                                                                    (("3"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (use
                                                               "valid_1_path_ext")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (1 -2))
                                                            (("2"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide-all-but
                                                         (1 -1))
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (typepred "expr1")
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide-all-but 1)
                              (("2"
                                (skeep*)
                                (("2"
                                  (use "lt_val_no_desc_inf_branch")
                                  nil
                                  nil))
                                nil))
                              nil)
                             ("3" (hide-all-but 1)
                              (("3"
                                (use "lt_val_wf")
                                (("3" (grind) nil nil))
                                nil))
                              nil)
                             ("4" (hide-all-but 1)
                              (("4"
                                (use "wf_nat")
                                (("4" (grind) nil nil))
                                nil))
                              nil)
                             ("5" (hide-all-but 1)
                              (("5"
                                (skeep*)
                                (("5"
                                  (hide -1)
                                  (("5"
                                    (use "lt_val_no_desc_inf_branch")
                                    nil
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("6" (hide-all-but 1)
                              (("6"
                                (skeep*)
                                (("6"
                                  (hide-all-but 1)
                                  (("6" (use "lt_val_wf") nil nil))
                                  nil))
                                nil))
                              nil)
                             ("7" (hide-all-but 1)
                              (("7"
                                (skeep*)
                                (("7"
                                  (use "lt_val_no_desc_inf_branch")
                                  nil
                                  nil))
                                nil))
                              nil)
                             ("8" (hide-all-but 1)
                              (("8"
                                (use "lt_val_wf")
                                (("8" (grind) nil nil))
                                nil))
                              nil)
                             ("9" (hide-all-but 1)
                              (("9"
                                (use "wf_nat")
                                (("9" (grind) nil nil))
                                nil))
                              nil)
                             ("10" (hide-all-but 1)
                              (("10"
                                (skeep*)
                                (("10"
                                  (use "lt_val_no_desc_inf_branch")
                                  nil
                                  nil))
                                nil))
                              nil)
                             ("11" (hide-all-but 1)
                              (("11"
                                (use "lt_val_wf")
                                (("11" (grind) nil nil))
                                nil))
                              nil)
                             ("12" (use "wf_nat")
                              (("12" (grind) nil nil)) nil))
                            nil))
                          nil)
                         ("3" (hide-all-but 1)
                          (("3" (skeep*)
                            (("3" (use "lt_val_no_desc_inf_branch") nil
                              nil))
                            nil))
                          nil)
                         ("4" (hide-all-but 1)
                          (("4" (skeep*)
                            (("4" (use "lt_val_wf") nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((terminates const-decl "bool" lang nil)
    (Val type-eq-decl nil lang nil) (PVS0 type-decl nil PVS0_adt nil)
    (cnst? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (vr? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op1? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op2? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (rec? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (ite? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Expr type-eq-decl nil PVS0_adt nil)
    (def? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Def type-eq-decl nil PVS0_adt nil)
    (get_body adt-accessor-decl "[Def -> Expr]" PVS0_adt nil)
    (PVS0_CC type-eq-decl nil measure_termination_defs nil)
    (pvs0_tcc_valid_cc const-decl "bool" measure_termination_defs nil)
    (eval_expr_ge_n formula-decl nil lang nil)
    (gt_n inductive-decl "bool" wfm nil)
    (get_arg2 adt-accessor-decl "[(op2?) -> Expr]" PVS0_adt nil)
    (get_arg1 adt-accessor-decl "[(op2?) -> Expr]" PVS0_adt nil)
    (get_else adt-accessor-decl "[(ite?) -> Expr]" PVS0_adt nil)
    (valid_2_path_ext formula-decl nil eval_props nil)
    (get_if adt-accessor-decl "[(ite?) -> Expr]" PVS0_adt nil)
    (path_conditions_cons formula-decl nil eval_props nil)
    (valid_1_path_ext formula-decl nil eval_props nil)
    (get_cond adt-accessor-decl "[(ite?) -> Expr]" PVS0_adt nil)
    (get_arg shared-adt-accessor-decl
     "[{x: PVS0 | rec?(x) OR op1?(x)} -> Expr]" PVS0_adt nil)
    (reduce_nat adt-def-decl "[PVS0 -> nat]" PVS0_adt nil)
    (path_conditions_unmodified formula-decl nil eval_props nil)
    (subterm_append formula-decl nil eval_props nil)
    (rac const-decl "nat" eval_props nil)
    (rdc const-decl "list[nat]" eval_props nil)
    (eval_expr_n_pos formula-decl nil lang nil)
    (valid_0_path_ext formula-decl nil eval_props nil)
    (lt_lex2_wf name-judgement "(well_founded?[[A, B]])" lex2_generic
     "orders/")
    (sizepvs0 const-decl "[PVS0 -> nat]" lang nil)
    (lt_lex2 const-decl "bool" lex2_generic "orders/")
    (null_path formula-decl nil eval_props nil)
    (Environment type-eq-decl nil lang nil)
    (valid_path def-decl "bool" eval_props nil)
    (subterm adt-def-decl "boolean" PVS0_adt nil)
    (subterm_at def-decl "({res: Expr | subterm(res, expr)})"
     eval_props nil)
    (BoolPVS0 type-decl nil BoolPVS0_adt nil)
    (Conditions type-eq-decl nil conditions nil)
    (eval_conds_rec def-decl "bool" conditions nil)
    (WFM type-eq-decl nil measure_termination_defs nil)
    (Omega const-decl "nat" wfm nil)
    (vr adt-constructor-decl "(vr?)" PVS0_adt nil)
    (Maybe type-decl nil Maybe "structures/")
    (some? adt-recognizer-decl "[Maybe -> boolean]" Maybe
     "structures/")
    (eval_expr def-decl "Maybe[Val]" lang nil)
    (semantic_rel_expr inductive-decl "bool" lang nil)
    (val adt-accessor-decl "[(some?) -> T]" Maybe "structures/")
    (pvs0_tcc_termination const-decl "bool" measure_termination_defs
     nil)
    (eval_expr_termination const-decl "bool" lang nil)
    (eval_expr_terminates formula-decl nil lang nil))
   nil)
  (pvs0_termination_terminates-4 nil 3643124759
   ("" (skeep)
    (("" (expand "terminates")
      (("" (lemma "eval_expr_terminates")
        (("" (inst? -1)
          (("" (assert)
            (("" (hide 2)
              (("" (expand "eval_expr_termination")
                (("" (skeep)
                  (("" (expand "pvs0_tcc_termination")
                    (("" (skeep)
                      ((""
                        (case "FORALL(expr: Expr, env: Environment, path: (valid_path(get_body(def)))):
                                                          expr = subterm_at(get_body(def), path) AND
                                                                 eval_conds_rec(eval_bool,eval_op1,eval_op2)(get_body(def),path_conditions(get_body(def), path),env)
                                                         IMPLIES
                                                          EXISTS (n: nat | n <= wfm[Val,lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega(env(vr))):
                                                                 some?(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                (n, expr, get_body(def), env))
                                                                  AND
                                                                  semantic_rel_expr(eval_bool, eval_op1, eval_op2)
                                                                                   (expr, get_body(def), env,
                                                                                    val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                 (n,
                                                                                                  expr,
                                                                                                  get_body(def),
                                                                                                  env)))")
                        (("1"
                          (inst -1 "get_body(def)" "env" "null[nat]")
                          (("1" (split -1)
                            (("1" (skeep)
                              (("1"
                                (insteep)
                                (("1" (assert) nil nil))
                                nil))
                              nil)
                             ("2" (hide-all-but 1)
                              (("2" (grind) nil nil)) nil)
                             ("3" (hide-all-but 1)
                              (("3" (grind) nil nil)) nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (use "null_path") nil nil)) nil))
                          nil)
                         ("2" (hide 2)
                          (("2"
                            (measure-induct
                             "(wfm(env(vr)),sizepvs0(expr))"
                             ("expr" "env") :order
                             "lt_lex2[MT,nat,lt,<]")
                            (("1" (skolem 1 ("expr1" "env1"))
                              (("1"
                                (flatten)
                                (("1"
                                  (skeep)
                                  (("1"
                                    (case "cnst?(expr1)")
                                    (("1"
                                      (expand "eval_expr" 1)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (hide-all-but (1 -1))
                                          (("1"
                                            (expand
                                             "semantic_rel_expr")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (inst 1 "1")
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (assert)
                                                  (("2"
                                                    (expand "Omega")
                                                    (("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (case "vr?(expr1)")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "eval_expr" 2)
                                          (("1"
                                            (hide-all-but (2 -1))
                                            (("1"
                                              (inst 1 "1")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand
                                                   "semantic_rel_expr")
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (case "op1?(expr1)")
                                        (("1"
                                          (expand "eval_expr" 3)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (inst
                                               -2
                                               "get_arg(expr1)"
                                               "env1")
                                              (("1"
                                                (split -2)
                                                (("1"
                                                  (inst
                                                   -1
                                                   "cons(0,path)")
                                                  (("1"
                                                    (split -1)
                                                    (("1"
                                                      (skeep -1)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (inst 3 "n")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (use
                                                               "eval_expr_n_pos")
                                                              (("1"
                                                                (beta)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (hide
                                                                     1
                                                                     2)
                                                                    (("1"
                                                                      (expand
                                                                       "semantic_rel_expr"
                                                                       1)
                                                                      (("1"
                                                                        (inst
                                                                         1
                                                                         "val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                                         (n,
                                                                                                                                                          get_arg(expr1),
                                                                                                                                                          get_body(def),
                                                                                                                                                          env1))")
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide 4)
                                                      (("2"
                                                        (hide-all-but
                                                         (1 -2))
                                                        (("2"
                                                          (lemma
                                                           "subterm_append")
                                                          (("2"
                                                            (inst
                                                             -1
                                                             "get_body(def)"
                                                             "path")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (inst
                                                                 -1
                                                                 "cons(0,null[nat])")
                                                                (("1"
                                                                  (expand
                                                                   "append"
                                                                   -1)
                                                                  (("1"
                                                                    (expand
                                                                     "append"
                                                                     -1)
                                                                    (("1"
                                                                      (replaces
                                                                       -1)
                                                                      (("1"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (reveal
                                                                   -3)
                                                                  (("2"
                                                                    (expand
                                                                     "valid_path"
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "rac")
                                                                      (("2"
                                                                        (expand
                                                                         "rdc")
                                                                        (("2"
                                                                          (expand
                                                                           "length"
                                                                           1)
                                                                          (("2"
                                                                            (expand
                                                                             "length"
                                                                             1)
                                                                            (("2"
                                                                              (expand
                                                                               "nth"
                                                                               1)
                                                                              (("2"
                                                                                (expand
                                                                                 "reverse"
                                                                                 1
                                                                                 2)
                                                                                (("2"
                                                                                  (expand
                                                                                   "reverse"
                                                                                   1
                                                                                   2)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "append "
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "reverse"
                                                                                       1)
                                                                                      (("2"
                                                                                        (use
                                                                                         "null_path")
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (hide-all-but
                                                       (1 -3 -1))
                                                      (("3"
                                                        (use
                                                         "path_conditions_unmodified")
                                                        (("3"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide-all-but
                                                     (-1 1))
                                                    (("2"
                                                      (typepred "path")
                                                      (("2"
                                                        (hide -1)
                                                        (("2"
                                                          (use
                                                           "valid_0_path_ext")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (case "rec?(expr1)")
                                          (("1"
                                            (hide 1 2 3)
                                            (("1"
                                              (expand "eval_expr" 1)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (label "ih" -2)
                                                  (("1"
                                                    (copy "ih")
                                                    (("1"
                                                      (hide "ih")
                                                      (("1"
                                                        (inst
                                                         -1
                                                         "get_arg(expr1)"
                                                         "env1")
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "cons(0,path)")
                                                            (("1"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (inst
                                                                 -5
                                                                 "env1")
                                                                (("1"
                                                                  (skeep
                                                                   -1)
                                                                  (("1"
                                                                    (name-replace
                                                                     "valact"
                                                                     "eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                                        (n,
                                                                                                                                                         get_arg(expr1),
                                                                                                                                                         get_body(def),
                                                                                                                                                         env1)")
                                                                    (("1"
                                                                      (inst
                                                                       -6
                                                                       "(# rec_expr := expr1, cnds := path_conditions(get_body(def),path), path := path #)"
                                                                       "val(valact)")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (inst
                                                                           1
                                                                           "wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega(env1(vr[T]))")
                                                                          (("1"
                                                                            (typepred
                                                                             "n")
                                                                            (("1"
                                                                              (lift-if
                                                                               1)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (case
                                                                                   "wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega(env1(vr[T])) = 0")
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "valact")
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "eval_expr_ge_n")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -1
                                                                                         "eval_bool"
                                                                                         "eval_op1"
                                                                                         "eval_op2"
                                                                                         "n"
                                                                                         "wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega
      (env1(vr[T]))"
                                                                                         "get_arg(expr1)"
                                                                                         "get_body(def)"
                                                                                         "env1")
                                                                                        (("1"
                                                                                          (beta)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (reveal
                                                                                               "ih")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 "ih"
                                                                                                 "get_body(def)"
                                                                                                 "val2env(val(valact))")
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "null[nat]")
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (skeep)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "valact")
                                                                                                          (("1"
                                                                                                            (typepred
                                                                                                             "n!1")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -4
                                                                                                               "ih")
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "n!1 <= wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega
      (env1(vr[T])) - 1")
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -2)
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "eval_expr_ge_n")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -1
                                                                                                                       "eval_bool"
                                                                                                                       "eval_op1"
                                                                                                                       "eval_op2"
                                                                                                                       "n!1"
                                                                                                                       "wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega
      (env1(vr[T])) - 1"
                                                                                                                       "get_body(def)"
                                                                                                                       "get_body(def)"
                                                                                                                       "LAMBDA (v_1: (vr?[Val[T]])):
                                                                                                                                                                                      val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                                                                                   (wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].Omega
      (env1(vr[T])),
                                                                                                                                                                                                    get_arg(expr1),
                                                                                                                                                                                                    get_body(def),
                                                                                                                                                                                                    env1))")
                                                                                                                      (("1"
                                                                                                                        (beta)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "semantic_rel_expr"
                                                                                                                             2)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               2
                                                                                                                               "val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                                                                                             (n,
                                                                                                                                                                                                              get_arg(expr1),
                                                                                                                                                                                                              get_body(def),
                                                                                                                                                                                                              env1))")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (hide-all-but
                                                                                                                         1)
                                                                                                                        (("3"
                                                                                                                          (use
                                                                                                                           "lt_val_no_desc_branch")
                                                                                                                          (("3"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("4"
                                                                                                                        (hide-all-but
                                                                                                                         1)
                                                                                                                        (("4"
                                                                                                                          (use
                                                                                                                           "lt_val_wf")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide-all-but
                                                                                                                   (1
                                                                                                                    -1
                                                                                                                    -11))
                                                                                                                  (("2"
                                                                                                                    (reveal
                                                                                                                     -14)
                                                                                                                    (("2"
                                                                                                                      (replaces
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "Omega")
                                                                                                                        (("2"
                                                                                                                          (name-replace
                                                                                                                           "Sact"
                                                                                                                           "{n: above(0) | FORALL (b: Val[T]): NOT wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].gt_n(n)(val(valact), b)}")
                                                                                                                          (("2"
                                                                                                                            (name-replace
                                                                                                                             "S"
                                                                                                                             "{n: above(0) | FORALL (b: Val[T]): NOT wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].gt_n(n)(env1(vr), b)}")
                                                                                                                            (("2"
                                                                                                                              (case
                                                                                                                               "min(Sact) = min(S) - 1")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 -1
                                                                                                                                 2)
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "min(S) > 1")
                                                                                                                                  (("1"
                                                                                                                                    (case
                                                                                                                                     "Sact(min(S)-1) AND FORALL(n:above(0)): Sact(n) IMPLIES min(S)-1 <= n")
                                                                                                                                    (("1"
                                                                                                                                      (flatten)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -2
                                                                                                                                         "min(Sact)")
                                                                                                                                        (("1"
                                                                                                                                          (typepred
                                                                                                                                           "min(Sact)")
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -3
                                                                                                                                             "min(S) -1")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (split
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (case
                                                                                                                                         "FORALL(b:T): NOT wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].gt_n(min(S))(env1(vr),b)")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "gt_n")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "Sact"
                                                                                                                                               1)
                                                                                                                                              (("1"
                                                                                                                                                (skeep
                                                                                                                                                 1)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "b")
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     1
                                                                                                                                                     "val(valact)")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "lt_val")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           1
                                                                                                                                                           "(# rec_expr := expr1, cnds := path_conditions(get_body(def),path), path := path #)")
                                                                                                                                                          (("1"
                                                                                                                                                            (reveal
                                                                                                                                                             -12
                                                                                                                                                             -18
                                                                                                                                                             -10)
                                                                                                                                                            (("1"
                                                                                                                                                              (case
                                                                                                                                                               "env1 = LAMBDA (v: (vr?)): env1(vr)")
                                                                                                                                                              (("1"
                                                                                                                                                                (replaces
                                                                                                                                                                 -1
                                                                                                                                                                 :dir
                                                                                                                                                                 RL)
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (apply-extensionality)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (hide-all-but
                                                                                                                                                             1)
                                                                                                                                                            (("2"
                                                                                                                                                              (reveal
                                                                                                                                                               -21
                                                                                                                                                               -13)
                                                                                                                                                              (("2"
                                                                                                                                                                (lemma
                                                                                                                                                                 "subterm_append")
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -1
                                                                                                                                                                   "get_body(def)"
                                                                                                                                                                   "path")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       -1
                                                                                                                                                                       "cons(0,null[nat])")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "append "
                                                                                                                                                                         -1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "append "
                                                                                                                                                                           -1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replaces
                                                                                                                                                                             -1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (grind)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "valid_path")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (lemma
                                                                                                                                                                           "null_path")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (grind)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (lemma
                                                                                                                                           "min_def[above(0)]")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -1
                                                                                                                                             "min(S)"
                                                                                                                                             "S")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "S"
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "minimum?")
                                                                                                                                                  (("2"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "S"
                                                                                                                                                       1)
                                                                                                                                                      (("2"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (hide
                                                                                                                                         2)
                                                                                                                                        (("2"
                                                                                                                                          (skolem
                                                                                                                                           1
                                                                                                                                           "m")
                                                                                                                                          (("2"
                                                                                                                                            (flatten)
                                                                                                                                            (("2"
                                                                                                                                              (lemma
                                                                                                                                               "min_def[above(0)]")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "min(S)"
                                                                                                                                                 "S")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "minimum?")
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "m+1")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (hide
                                                                                                                                                           2)
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "S"
                                                                                                                                                             1)
                                                                                                                                                            (("2"
                                                                                                                                                              (skeep)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "gt_n")
                                                                                                                                                                (("2"
                                                                                                                                                                  (skeep)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (case
                                                                                                                                                                     "c = val(valact)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replaces
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "Sact")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst?)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (case
                                                                                                                                                                       "lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)(val(valact), env1(vr))")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (hide
                                                                                                                                                                         -6)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (use
                                                                                                                                                                           "lt_val_no_desc_branch")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst?
                                                                                                                                                                               -1
                                                                                                                                                                               :where
                                                                                                                                                                               -2)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (inst?
                                                                                                                                                                                 -1
                                                                                                                                                                                 :where
                                                                                                                                                                                 -3)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (hide-all-but
                                                                                                                                                                         (1
                                                                                                                                                                          -5))
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "lt_val")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             1
                                                                                                                                                                             "(# rec_expr := expr1, cnds := path_conditions(get_body(def),path), path := path #)")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (reveal
                                                                                                                                                                               -15
                                                                                                                                                                               -17
                                                                                                                                                                               -23)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (case
                                                                                                                                                                                 "env1 = LAMBDA (v: (vr?)): env1(vr)")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replaces
                                                                                                                                                                                   -1
                                                                                                                                                                                   :dir
                                                                                                                                                                                   RL)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (apply-extensionality)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (grind)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("3"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (case
                                                                                                                                       "FORALL(b:T): NOT wfm[Val[T], lt_val(eval_bool, eval_op1, eval_op2)(def)(wfm)].gt_n(min(S))(env1(vr),b)")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "gt_n")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -1
                                                                                                                                             "val(valact)")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "lt_val")
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 1
                                                                                                                                                 "(# rec_expr := expr1, cnds := path_conditions(get_body(def),path), path := path #)")
                                                                                                                                                (("1"
                                                                                                                                                  (reveal
                                                                                                                                                   -12
                                                                                                                                                   -18
                                                                                                                                                   -10)
                                                                                                                                                  (("1"
                                                                                                                                                    (replaces
                                                                                                                                                     -3)
                                                                                                                                                    (("1"
                                                                                                                                                      (case
                                                                                                                                                       "env1 = LAMBDA (v: (vr?)): env1(vr)")
                                                                                                                                                      (("1"
                                                                                                                                                        (replaces
                                                                                                                                                         -1
                                                                                                                                                         :dir
                                                                                                                                                         RL)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (apply-extensionality)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (grind)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (skeep)
                                                                                                                                        (("2"
                                                                                                                                          (use
                                                                                                                                           "min_def[above(0)]")
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "S"
                                                                                                                                               -1)
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "minimum?")
                                                                                                                                                (("2"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -1
                                                                                                                                                     "b")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "S"
                                                                                                                                                       -2)
                                                                                                                                                      (("2"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "subterm_at")
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (hide
                                                                                                         3)
                                                                                                        (("3"
                                                                                                          (assert)
                                                                                                          (("3"
                                                                                                            (expand
                                                                                                             "path_conditions"
                                                                                                             1)
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "eval_conds_rec"
                                                                                                               1)
                                                                                                              (("3"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       3)
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "null_path")
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     3)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "valact")
                                                                                                      (("2"
                                                                                                        (hide-all-but
                                                                                                         (-8
                                                                                                          1))
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (use
                                                                                             "lt_val_no_desc_branch")
                                                                                            (("2"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("3"
                                                                                            (use
                                                                                             "lt_val_wf")
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("3"
                                                                                      (use
                                                                                       "lt_val_no_desc_branch")
                                                                                      (("3"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("4"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("4"
                                                                                      (use
                                                                                       "lt_val_wf")
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (use
                                                                               "lt_val_no_desc_branch")
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("3"
                                                                              (use
                                                                               "lt_val_wf")
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (1
                                                                          -1
                                                                          -2))
                                                                        (("2"
                                                                          (lemma
                                                                           "subterm_append")
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "get_body(def)"
                                                                             "path")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "cons(0,null[nat])")
                                                                                (("1"
                                                                                  (expand
                                                                                   "append "
                                                                                   -1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "append "
                                                                                     -1)
                                                                                    (("1"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "valid_path")
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "null_path")
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (1
                                                                  -1
                                                                  -2))
                                                                (("2"
                                                                  (lemma
                                                                   "subterm_append")
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "get_body(def)"
                                                                     "path")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "cons(0,null[nat])")
                                                                        (("1"
                                                                          (expand
                                                                           "append "
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "append "
                                                                             -1)
                                                                            (("1"
                                                                              (replaces
                                                                               -1)
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "valid_path")
                                                                          (("2"
                                                                            (lemma
                                                                             "null_path")
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (hide
                                                                 2)
                                                                (("3"
                                                                  (hide
                                                                   -4)
                                                                  (("3"
                                                                    (use
                                                                     "path_conditions_unmodified")
                                                                    (("3"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide 2)
                                                              (("2"
                                                                (use
                                                                 "valid_0_path_ext")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (hide-all-but
                                                               1)
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (case "ite?(expr1)")
                                            (("1"
                                              (hide 1 2 3 4)
                                              (("1"
                                                (hide -5)
                                                (("1"
                                                  (copy -2)
                                                  (("1"
                                                    (inst
                                                     -1
                                                     "get_cond(expr1)"
                                                     "env1")
                                                    (("1"
                                                      (split -1)
                                                      (("1"
                                                        (inst
                                                         -1
                                                         "cons(0, path)")
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (skolem
                                                             -1
                                                             "n_cond")
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (case
                                                                 "eval_bool(val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                                                               (n_cond, get_cond(expr1), get_body(def), env1)))")
                                                                (("1"
                                                                  (inst
                                                                   -5
                                                                   "get_if(expr1)"
                                                                   "env1")
                                                                  (("1"
                                                                    (split
                                                                     -5)
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "cons(1,path)")
                                                                      (("1"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (skolem
                                                                           -1
                                                                           "n_if")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (expand
                                                                               "eval_expr"
                                                                               1)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (inst
                                                                                   1
                                                                                   "max(n_cond,n_if)")
                                                                                  (("1"
                                                                                    (lift-if
                                                                                     1)
                                                                                    (("1"
                                                                                      (split
                                                                                       1)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "eval_expr_ge_n")
                                                                                          (("2"
                                                                                            (inst?
                                                                                             -1
                                                                                             :subst
                                                                                             ("n"
                                                                                              "n_cond"
                                                                                              "m"
                                                                                              "max(n_cond,n_if)"))
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "eval_expr_ge_n")
                                                                                                (("1"
                                                                                                  (inst?
                                                                                                   -1
                                                                                                   :subst
                                                                                                   ("n"
                                                                                                    "n_if"
                                                                                                    "m"
                                                                                                    "max(n_cond,n_if)"
                                                                                                    "expr"
                                                                                                    "get_if(expr1)"))
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "semantic_rel_expr"
                                                                                                       2)
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil)
                                                                                             ("3"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "n_cond")
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "n_if")
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           (1
                                                                            -5
                                                                            -4))
                                                                          (("2"
                                                                            (lemma
                                                                             "subterm_append")
                                                                            (("2"
                                                                              (inst?
                                                                               :where
                                                                               -3)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -1
                                                                                   "cons(1,null)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "append"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "append"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (replaces
                                                                                         -1)
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "valid_path")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "rac")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "rdc")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "length")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "length")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "nth")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "reverse"
                                                                                                 1
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "reverse"
                                                                                                   1
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "append"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "reverse")
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "null_path")
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (expand
                                                                                     "every")
                                                                                    (("3"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (hide-all-but
                                                                           (1
                                                                            -6
                                                                            -1
                                                                            -4
                                                                            -5
                                                                            -3))
                                                                          (("3"
                                                                            (use
                                                                             "path_conditions_cons")
                                                                            (("3"
                                                                              (assert)
                                                                              (("3"
                                                                                (assert)
                                                                                (("3"
                                                                                  (replaces
                                                                                   -1)
                                                                                  (("3"
                                                                                    (expand
                                                                                     "eval_conds_rec"
                                                                                     1)
                                                                                    (("3"
                                                                                      (inst?)
                                                                                      (("3"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (use
                                                                         "valid_1_path_ext")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide-all-but
                                                                       (1
                                                                        -4))
                                                                      (("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (inst
                                                                   -4
                                                                   "get_else(expr1)"
                                                                   "env1")
                                                                  (("2"
                                                                    (split
                                                                     -4)
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "cons(2,path)")
                                                                      (("1"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (skolem
                                                                           -1
                                                                           "n_else")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (inst
                                                                               2
                                                                               "max(n_cond,n_else)")
                                                                              (("1"
                                                                                (expand
                                                                                 "eval_expr"
                                                                                 2)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (lift-if
                                                                                     2)
                                                                                    (("1"
                                                                                      (split
                                                                                       2)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "eval_expr_ge_n")
                                                                                          (("2"
                                                                                            (inst?
                                                                                             -1
                                                                                             :subst
                                                                                             ("n"
                                                                                              "n_cond"
                                                                                              "m"
                                                                                              "max(n_cond,n_else)"))
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "eval_expr_ge_n")
                                                                                                (("2"
                                                                                                  (inst?
                                                                                                   -1
                                                                                                   :subst
                                                                                                   ("n"
                                                                                                    "n_else"
                                                                                                    "m"
                                                                                                    "max(n_cond,n_else)"
                                                                                                    "expr"
                                                                                                    "get_else(expr1)"))
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "semantic_rel_expr"
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "n_cond")
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "n_else")
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           (1
                                                                            -4
                                                                            -3))
                                                                          (("2"
                                                                            (lemma
                                                                             "subterm_append")
                                                                            (("2"
                                                                              (inst?
                                                                               :where
                                                                               -3)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -1
                                                                                   "cons(2,null[nat])")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "append"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "append"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (replaces
                                                                                         -1)
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (replaces
                                                                                     -2
                                                                                     :dir
                                                                                     RL)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "valid_path")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "rac")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "rdc")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "length")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "length")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "nth")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "reverse"
                                                                                                   1
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "reverse"
                                                                                                     1
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "append"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "reverse"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (use
                                                                                                           "null_path")
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (hide-all-but
                                                                           (1
                                                                            -5
                                                                            -4
                                                                            -3
                                                                            2
                                                                            -2))
                                                                          (("3"
                                                                            (use
                                                                             "path_conditions_cons")
                                                                            (("3"
                                                                              (assert)
                                                                              (("3"
                                                                                (assert)
                                                                                (("3"
                                                                                  (replaces
                                                                                   -1)
                                                                                  (("3"
                                                                                    (expand
                                                                                     "eval_conds_rec"
                                                                                     1)
                                                                                    (("3"
                                                                                      (inst?)
                                                                                      (("3"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (1
                                                                          -4
                                                                          -3))
                                                                        (("2"
                                                                          (use
                                                                           "valid_2_path_ext")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide-all-but
                                                                       (1
                                                                        -3))
                                                                      (("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (1 -3 -1))
                                                            (("2"
                                                              (lemma
                                                               "subterm_append")
                                                              (("2"
                                                                (inst?
                                                                 :where
                                                                 -3)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "cons(0, null)")
                                                                    (("1"
                                                                      (expand
                                                                       "append"
                                                                       -1)
                                                                      (("1"
                                                                        (expand
                                                                         "append"
                                                                         -1)
                                                                        (("1"
                                                                          (replaces
                                                                           -1)
                                                                          (("1"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (replaces
                                                                       -2
                                                                       :dir
                                                                       RL)
                                                                      (("2"
                                                                        (expand
                                                                         "valid_path"
                                                                         1)
                                                                        (("2"
                                                                          (expand
                                                                           "rac")
                                                                          (("2"
                                                                            (expand
                                                                             "rdc")
                                                                            (("2"
                                                                              (expand
                                                                               "length")
                                                                              (("2"
                                                                                (expand
                                                                                 "length")
                                                                                (("2"
                                                                                  (expand
                                                                                   "nth")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "reverse"
                                                                                     1
                                                                                     2)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "reverse"
                                                                                       1
                                                                                       2)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "append"
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "reverse")
                                                                                          (("2"
                                                                                            (use
                                                                                             "null_path")
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (expand
                                                                       "every")
                                                                      (("3"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (hide-all-but
                                                             (1
                                                              -4
                                                              -3
                                                              -1))
                                                            (("3"
                                                              (use
                                                               "path_conditions_unmodified")
                                                              (("3"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           (1 -3 -1))
                                                          (("2"
                                                            (use
                                                             "valid_0_path_ext")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide-all-but
                                                         (1 -1))
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (case "op2?(expr1)")
                                              (("1"
                                                (hide 1 2 3 4 5)
                                                (("1"
                                                  (copy -2)
                                                  (("1"
                                                    (inst
                                                     -1
                                                     "get_arg1(expr1)"
                                                     "env1")
                                                    (("1"
                                                      (split -1)
                                                      (("1"
                                                        (inst
                                                         -3
                                                         "get_arg2(expr1)"
                                                         "env1")
                                                        (("1"
                                                          (split -3)
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "cons(1,path)")
                                                            (("1"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (inst
                                                                 -2
                                                                 "cons(0,path)")
                                                                (("1"
                                                                  (split
                                                                   -2)
                                                                  (("1"
                                                                    (skolem
                                                                     -1
                                                                     "n1")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (skolem
                                                                         -3
                                                                         "n2")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (inst
                                                                             1
                                                                             "max(n1,n2)")
                                                                            (("1"
                                                                              (expand
                                                                               "eval_expr"
                                                                               1)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (lift-if
                                                                                   1)
                                                                                  (("1"
                                                                                    (split
                                                                                     1)
                                                                                    (("1"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "eval_expr_ge_n")
                                                                                        (("2"
                                                                                          (inst?
                                                                                           -1
                                                                                           :subst
                                                                                           ("n"
                                                                                            "n1"
                                                                                            "m"
                                                                                            "max(n1,n2)"))
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "eval_expr_ge_n")
                                                                                              (("2"
                                                                                                (inst?
                                                                                                 -1
                                                                                                 :subst
                                                                                                 ("n"
                                                                                                  "n2"
                                                                                                  "m"
                                                                                                  "max(n1,n2)"
                                                                                                  "expr"
                                                                                                  "get_arg2(expr1)"))
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "semantic_rel_expr"
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (typepred
                                                                                 "n1")
                                                                                (("2"
                                                                                  (typepred
                                                                                   "n2")
                                                                                  (("2"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     (1
                                                                      -3
                                                                      -2))
                                                                    (("2"
                                                                      (lemma
                                                                       "subterm_append")
                                                                      (("2"
                                                                        (inst?
                                                                         :where
                                                                         -3)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "cons(0, null)")
                                                                            (("1"
                                                                              (expand
                                                                               "append"
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "append"
                                                                                 -1)
                                                                                (("1"
                                                                                  (replaces
                                                                                   -1)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (replaces
                                                                               -2
                                                                               :dir
                                                                               RL)
                                                                              (("2"
                                                                                (expand
                                                                                 "valid_path")
                                                                                (("2"
                                                                                  (expand
                                                                                   "rac")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "rdc")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "length"
                                                                                       1)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "length"
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "nth"
                                                                                           1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "reverse"
                                                                                             1
                                                                                             2)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "reverse"
                                                                                               1
                                                                                               2)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "append"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "reverse"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (use
                                                                                                     "null_path")
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (expand
                                                                               "every")
                                                                              (("3"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (hide-all-but
                                                                     (1
                                                                      -4
                                                                      -2))
                                                                    (("3"
                                                                      (use
                                                                       "path_conditions_unmodified")
                                                                      (("3"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   (1
                                                                    -3
                                                                    -2))
                                                                  (("2"
                                                                    (use
                                                                     "valid_0_path_ext")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (1
                                                                  -3
                                                                  -2))
                                                                (("2"
                                                                  (lemma
                                                                   "subterm_append")
                                                                  (("2"
                                                                    (inst?
                                                                     -1
                                                                     :where
                                                                     -3)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "cons(1, null)")
                                                                        (("1"
                                                                          (expand
                                                                           "append"
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "append"
                                                                             -1)
                                                                            (("1"
                                                                              (replaces
                                                                               -1)
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (replaces
                                                                           -2
                                                                           :dir
                                                                           RL)
                                                                          (("2"
                                                                            (expand
                                                                             "valid_path")
                                                                            (("2"
                                                                              (expand
                                                                               "rac")
                                                                              (("2"
                                                                                (expand
                                                                                 "rdc")
                                                                                (("2"
                                                                                  (expand
                                                                                   "length"
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "length"
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "nth")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "reverse"
                                                                                         1
                                                                                         2)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "reverse"
                                                                                           1
                                                                                           2)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "append"
                                                                                             1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "reverse")
                                                                                              (("2"
                                                                                                (use
                                                                                                 "null_path")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (expand
                                                                           "every")
                                                                          (("3"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (hide-all-but
                                                                 (1
                                                                  -4
                                                                  -3
                                                                  -2))
                                                                (("3"
                                                                  (use
                                                                   "path_conditions_unmodified")
                                                                  (("3"
                                                                    (assert)
                                                                    (("3"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (use
                                                               "valid_1_path_ext")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (1 -2))
                                                            (("2"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide-all-but
                                                         (1 -1))
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (typepred "expr1")
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide-all-but 1)
                              (("2"
                                (skeep*)
                                (("2"
                                  (use "lt_val_no_desc_branch")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (inst?)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (inst?)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (hide-all-but 1)
                              (("3"
                                (use "lt_val_wf")
                                (("3" (grind) nil nil))
                                nil))
                              nil)
                             ("4" (hide-all-but 1)
                              (("4"
                                (use "wf_nat")
                                (("4" (grind) nil nil))
                                nil))
                              nil)
                             ("5" (hide-all-but 1)
                              (("5"
                                (skeep*)
                                (("5"
                                  (hide -1)
                                  (("5"
                                    (use "lt_val_no_desc_branch")
                                    (("5"
                                      (assert)
                                      (("5"
                                        (inst?)
                                        (("5"
                                          (inst?)
                                          (("5" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("6" (hide-all-but 1)
                              (("6"
                                (skeep*)
                                (("6"
                                  (hide-all-but 1)
                                  (("6" (use "lt_val_wf") nil nil))
                                  nil))
                                nil))
                              nil)
                             ("7" (hide-all-but 1)
                              (("7"
                                (skeep*)
                                (("7"
                                  (use "lt_val_no_desc_branch")
                                  (("7"
                                    (assert)
                                    (("7"
                                      (inst?)
                                      (("7"
                                        (inst?)
                                        (("7" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("8" (hide-all-but 1)
                              (("8"
                                (use "lt_val_wf")
                                (("8" (grind) nil nil))
                                nil))
                              nil)
                             ("9" (hide-all-but 1)
                              (("9"
                                (use "wf_nat")
                                (("9" (grind) nil nil))
                                nil))
                              nil)
                             ("10" (hide-all-but 1)
                              (("10"
                                (skeep*)
                                (("10"
                                  (use "lt_val_no_desc_branch")
                                  (("10"
                                    (assert)
                                    (("10"
                                      (inst?)
                                      (("10"
                                        (inst?)
                                        (("10" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("11" (hide-all-but 1)
                              (("11"
                                (use "lt_val_wf")
                                (("11" (grind) nil nil))
                                nil))
                              nil)
                             ("12" (use "wf_nat")
                              (("12" (grind) nil nil)) nil))
                            nil))
                          nil)
                         ("3" (hide-all-but 1)
                          (("3" (skeep*)
                            (("3" (use "lt_val_no_desc_branch")
                              (("3"
                                (assert)
                                (("3"
                                  (inst?)
                                  (("3"
                                    (inst?)
                                    (("3" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("4" (hide-all-but 1)
                          (("4" (skeep*)
                            (("4" (use "lt_val_wf") nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((eval_expr_terminates formula-decl nil lang nil)
    (eval_expr_termination const-decl "bool" lang nil)
    (pvs0_tcc_termination const-decl "bool" measure_termination_defs
     nil)
    (val adt-accessor-decl "[(some?) -> T]" Maybe "structures/")
    (semantic_rel_expr inductive-decl "bool" lang nil)
    (eval_expr def-decl "Maybe[Val]" lang nil)
    (some? adt-recognizer-decl "[Maybe -> boolean]" Maybe
     "structures/")
    (Maybe type-decl nil Maybe "structures/")
    (vr adt-constructor-decl "(vr?)" PVS0_adt nil)
    (Omega const-decl "nat" wfm nil)
    (WFM type-eq-decl nil measure_termination_defs nil)
    (eval_conds_rec def-decl "bool" conditions nil)
    (Conditions type-eq-decl nil conditions nil)
    (BoolPVS0 type-decl nil BoolPVS0_adt nil)
    (subterm_at def-decl "({res: Expr | subterm(res, expr)})"
     eval_props nil)
    (valid_path def-decl "bool" eval_props nil)
    (Environment type-eq-decl nil lang nil)
    (null_path formula-decl nil eval_props nil)
    (lt_lex2 const-decl "bool" lex2_generic "orders/")
    (sizepvs0 const-decl "[PVS0 -> nat]" lang nil)
    (lt_lex2_wf name-judgement "(well_founded?[[A, B]])" lex2_generic
     "orders/")
    (valid_0_path_ext formula-decl nil eval_props nil)
    (eval_expr_n_pos formula-decl nil lang nil)
    (rdc const-decl "list[nat]" eval_props nil)
    (rac const-decl "nat" eval_props nil)
    (subterm_append formula-decl nil eval_props nil)
    (path_conditions_unmodified formula-decl nil eval_props nil)
    (reduce_nat adt-def-decl "[PVS0 -> nat]" PVS0_adt nil)
    (get_arg shared-adt-accessor-decl
     "[{x: PVS0 | rec?(x) OR op1?(x)} -> Expr]" PVS0_adt nil)
    (get_cond adt-accessor-decl "[(ite?) -> Expr]" PVS0_adt nil)
    (valid_1_path_ext formula-decl nil eval_props nil)
    (path_conditions_cons formula-decl nil eval_props nil)
    (get_if adt-accessor-decl "[(ite?) -> Expr]" PVS0_adt nil)
    (valid_2_path_ext formula-decl nil eval_props nil)
    (get_else adt-accessor-decl "[(ite?) -> Expr]" PVS0_adt nil)
    (get_arg1 adt-accessor-decl "[(op2?) -> Expr]" PVS0_adt nil)
    (get_arg2 adt-accessor-decl "[(op2?) -> Expr]" PVS0_adt nil)
    (gt_n inductive-decl "bool" wfm nil)
    (eval_expr_ge_n formula-decl nil lang nil)
    (pvs0_tcc_valid_cc const-decl "bool" measure_termination_defs nil)
    (PVS0_CC type-eq-decl nil measure_termination_defs nil)
    (get_body adt-accessor-decl "[Def -> Expr]" PVS0_adt nil)
    (Def type-eq-decl nil PVS0_adt nil)
    (def? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Expr type-eq-decl nil PVS0_adt nil)
    (ite? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (rec? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op2? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op1? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (vr? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (cnst? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (PVS0 type-decl nil PVS0_adt nil) (Val type-eq-decl nil lang nil)
    (terminates const-decl "bool" lang nil))
   nil)
  (pvs0_termination_terminates-3 nil 3643023965
   ("" (skeep)
    (("" (expand "terminates")
      (("" (lemma "eval_expr_terminates")
        (("" (inst -1 "get_body(def)" "get_body(def)")
          (("" (assert)
            (("" (hide 2)
              (("" (expand "eval_expr_termination")
                (("" (skeep)
                  (("" (skeep)
                    (("" (expand "pvs0_tcc_termination")
                      (("" (inst?)
                        (("" (skeep)
                          ((""
                            (case "FORALL(expr: Expr, env: Environment, path: (valid_path(get_body(def)))):
                                            expr = subterm_at(get_body(def), path) AND
                                                   eval_conds_rec(eval_bool,eval_op1,eval_op2)(get_body(def),path_conditions(get_body(def), path),env)
                                           IMPLIES
                                            EXISTS (n: nat | n <= Omega(wfm,lt)(env(vr))):
                                                   some?(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                  (n, expr, get_body(def), env))
                                                    AND
                                                    semantic_rel_expr(eval_bool, eval_op1, eval_op2)
                                                                     (expr, get_body(def), env,
                                                                      val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                   (n,
                                                                                    expr,
                                                                                    get_body(def),
                                                                                    env)))")
                            (("1"
                              (inst -1 "get_body(def)" "env"
                               "null[nat]")
                              (("1"
                                (split -1)
                                (("1"
                                  (skeep)
                                  (("1"
                                    (insteep)
                                    (("1" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (hide-all-but 1)
                                  (("2" (grind) nil nil))
                                  nil)
                                 ("3"
                                  (hide-all-but 1)
                                  (("3" (grind) nil nil))
                                  nil))
                                nil)
                               ("2"
                                (hide-all-but 1)
                                (("2" (use "null_path") nil nil))
                                nil))
                              nil)
                             ("2" (hide 2)
                              (("2"
                                (measure-induct
                                 "(wfm(env(vr)),sizepvs0(expr))"
                                 ("expr" "env")
                                 :order
                                 "lt_lex2[MT,nat,lt,<]")
                                (("1"
                                  (skolem 1 ("expr1" "env1"))
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (skeep)
                                      (("1"
                                        (case "cnst?(expr1)")
                                        (("1"
                                          (expand "eval_expr" 1)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (hide-all-but (1 -1))
                                              (("1"
                                                (expand
                                                 "semantic_rel_expr")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (inst 1 "1")
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (case "vr?(expr1)")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand "eval_expr" 2)
                                              (("1"
                                                (hide-all-but (2 -1))
                                                (("1"
                                                  (inst 1 "1")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand
                                                       "semantic_rel_expr")
                                                      (("1"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (case "op1?(expr1)")
                                            (("1"
                                              (expand "eval_expr" 3)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (inst
                                                   -2
                                                   "get_arg(expr1)"
                                                   "env1")
                                                  (("1"
                                                    (split -2)
                                                    (("1"
                                                      (inst
                                                       -1
                                                       "cons(0,path)")
                                                      (("1"
                                                        (split -1)
                                                        (("1"
                                                          (skeep -1)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst
                                                               3
                                                               "n")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (use
                                                                   "eval_expr_n_pos")
                                                                  (("1"
                                                                    (beta)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (hide
                                                                         1
                                                                         2)
                                                                        (("1"
                                                                          (expand
                                                                           "semantic_rel_expr"
                                                                           1)
                                                                          (("1"
                                                                            (inst
                                                                             1
                                                                             "val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                         (n,
                                                                                                                          get_arg(expr1),
                                                                                                                          get_body(def),
                                                                                                                          env1))")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide 4)
                                                          (("2"
                                                            (hide-all-but
                                                             (1 -2))
                                                            (("2"
                                                              (lemma
                                                               "subterm_append")
                                                              (("2"
                                                                (inst
                                                                 -1
                                                                 "get_body(def)"
                                                                 "path")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "cons(0,null[nat])")
                                                                    (("1"
                                                                      (expand
                                                                       "append"
                                                                       -1)
                                                                      (("1"
                                                                        (expand
                                                                         "append"
                                                                         -1)
                                                                        (("1"
                                                                          (replaces
                                                                           -1)
                                                                          (("1"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (reveal
                                                                       -3)
                                                                      (("2"
                                                                        (expand
                                                                         "valid_path"
                                                                         1)
                                                                        (("2"
                                                                          (expand
                                                                           "length"
                                                                           1)
                                                                          (("2"
                                                                            (expand
                                                                             "length"
                                                                             1)
                                                                            (("2"
                                                                              (expand
                                                                               "nth"
                                                                               1)
                                                                              (("2"
                                                                                (expand
                                                                                 "reverse"
                                                                                 1
                                                                                 2)
                                                                                (("2"
                                                                                  (expand
                                                                                   "reverse"
                                                                                   1
                                                                                   2)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "append "
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "reverse"
                                                                                       1)
                                                                                      (("2"
                                                                                        (use
                                                                                         "null_path")
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (hide-all-but
                                                           (1 -3 -1))
                                                          (("3"
                                                            (use
                                                             "path_conditions_unmodified")
                                                            (("3"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide-all-but
                                                         (-1 1))
                                                        (("2"
                                                          (typepred
                                                           "path")
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (use
                                                               "valid_0_path_ext")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (case "rec?(expr1)")
                                              (("1"
                                                (hide 1 2 3)
                                                (("1"
                                                  (expand
                                                   "eval_expr"
                                                   1)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (label "ih" -2)
                                                      (("1"
                                                        (copy "ih")
                                                        (("1"
                                                          (hide "ih")
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "get_arg(expr1)"
                                                             "env1")
                                                            (("1"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 "cons(0,path)")
                                                                (("1"
                                                                  (split
                                                                   -1)
                                                                  (("1"
                                                                    (inst
                                                                     -5
                                                                     "env1")
                                                                    (("1"
                                                                      (skeep
                                                                       -1)
                                                                      (("1"
                                                                        (name-replace
                                                                         "valact"
                                                                         "eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                    (n,
                                                                                                                     get_arg(expr1),
                                                                                                                     get_body(def),
                                                                                                                     env1)")
                                                                        (("1"
                                                                          (inst
                                                                           -6
                                                                           "(# rec_expr := expr1, cnds := path_conditions(get_body(def),path), path := path #)"
                                                                           "val(valact)")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (inst
                                                                               1
                                                                               "Omega(wfm, lt)(env1(vr))")
                                                                              (("1"
                                                                                (typepred
                                                                                 "n")
                                                                                (("1"
                                                                                  (lift-if
                                                                                   1)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (case
                                                                                       "Omega(wfm, lt)(env1(vr)) = 0")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "valact")
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "eval_expr_ge_n")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "eval_bool"
                                                                                             "eval_op1"
                                                                                             "eval_op2"
                                                                                             "n"
                                                                                             "Omega(wfm, lt)(env1(vr))"
                                                                                             "get_arg(expr1)"
                                                                                             "get_body(def)"
                                                                                             "env1")
                                                                                            (("2"
                                                                                              (beta)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (reveal
                                                                                                   "ih")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     "ih"
                                                                                                     "get_body(def)"
                                                                                                     "val2env(val(valact))")
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "null[nat]")
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (skeep)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "valact")
                                                                                                              (("1"
                                                                                                                (typepred
                                                                                                                 "n!1")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -4
                                                                                                                   "ih")
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "n!1 <= Omega(wfm, lt)(env1(vr)) - 1")
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -2)
                                                                                                                      (("1"
                                                                                                                        (lemma
                                                                                                                         "eval_expr_ge_n")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "eval_bool"
                                                                                                                           "eval_op1"
                                                                                                                           "eval_op2"
                                                                                                                           "n!1"
                                                                                                                           "Omega(wfm, lt)(env1(vr)) - 1"
                                                                                                                           "get_body(def)"
                                                                                                                           "get_body(def)"
                                                                                                                           "LAMBDA (v_1: (vr?[Val[T]])):
                                                                                                                      val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                   (Omega(wfm, lt)(env1(vr)),
                                                                                                                                    get_arg(expr1),
                                                                                                                                    get_body(def),
                                                                                                                                    env1))")
                                                                                                                          (("1"
                                                                                                                            (beta)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "semantic_rel_expr"
                                                                                                                                 2)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   2
                                                                                                                                   "val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                         (n,
                                                                                                                                          get_arg(expr1),
                                                                                                                                          get_body(def),
                                                                                                                                          env1))")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "valact")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "Omega")
                                                                                                                        (("2"
                                                                                                                          (hide-all-but
                                                                                                                           (1
                                                                                                                            -1
                                                                                                                            -11))
                                                                                                                          (("2"
                                                                                                                            (lemma
                                                                                                                             "card_strict_subset[Val]")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "{val_: Val |
                                                                                                             lt(wfm(val_),
                                                                                                                wfm(val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                 (n,
                                                                                                                                  get_arg(expr1),
                                                                                                                                  get_body(def),
                                                                                                                                  env1))))
                                                                                                              OR
                                                                                                              val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                           (n, get_arg(expr1), get_body(def), env1))
                                                                                                               = val_}"
                                                                                                                               "{val_: Val | lt(wfm(val_), wfm(env1(vr))) OR env1(vr) = val_}")
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "Omega_set")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide
                                                                                                                                   -1
                                                                                                                                   2)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "strict_subset?")
                                                                                                                                    (("2"
                                                                                                                                      (split
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "subset?")
                                                                                                                                        (("1"
                                                                                                                                          (skeep)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "member")
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (split
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (case
                                                                                                                                                   "transitive?(lt)")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "transitive?")
                                                                                                                                                    (("1"
                                                                                                                                                      (inst?
                                                                                                                                                       -1
                                                                                                                                                       :where
                                                                                                                                                       1)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst?
                                                                                                                                                         -1
                                                                                                                                                         :where
                                                                                                                                                         -3)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (typepred
                                                                                                                                                       "lt")
                                                                                                                                                      (("2"
                                                                                                                                                        (grind)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (expand
                                                                                                                                         "/=")
                                                                                                                                        (("2"
                                                                                                                                          (lemma
                                                                                                                                           "subset_reflexive[Val]")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -1
                                                                                                                                             "{val_: Val |
                                                                                                                           lt(wfm(val_),
                                                                                                                              wfm(val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                               (n, get_arg(expr1), get_body(def), env1))))
                                                                                                                            OR
                                                                                                                            val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                         (n, get_arg(expr1), get_body(def), env1))
                                                                                                                             = val_}")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (name
                                                                                                                                                 "A"
                                                                                                                                                 "{val_: Val |
                                                                                                                                 lt(wfm(val_),
                                                                                                                                    wfm(val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                                     (n,
                                                                                                                                                      get_arg(expr1),
                                                                                                                                                      get_body(def),
                                                                                                                                                      env1))))
                                                                                                                                  OR
                                                                                                                                  val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                                               (n, get_arg(expr1), get_body(def), env1))
                                                                                                                                   = val_}")
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -1)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "A"
                                                                                                                                                     -2
                                                                                                                                                     2)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -3
                                                                                                                                                       -2)
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "subset?"
                                                                                                                                                         -2)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           -2
                                                                                                                                                           "env1(vr)")
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "member")
                                                                                                                                                            (("2"
                                                                                                                                                              (name-replace
                                                                                                                                                               "B"
                                                                                                                                                               "env1(vr)")
                                                                                                                                                              (("2"
                                                                                                                                                                (name-replace
                                                                                                                                                                 "C"
                                                                                                                                                                 "val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                      (n, get_arg(expr1), get_body(def), env1))")
                                                                                                                                                                (("2"
                                                                                                                                                                  (split
                                                                                                                                                                   -2)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (case
                                                                                                                                                                     "transitive?(lt)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "transitive?")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -1
                                                                                                                                                                         "wfm(B)"
                                                                                                                                                                         "wfm(C)"
                                                                                                                                                                         "wfm(B)")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (case
                                                                                                                                                                             "irreflexive?(lt)")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "irreflexive?")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (inst?)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (hide-all-but
                                                                                                                                                                               1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (typepred
                                                                                                                                                                                 "lt")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (grind)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (hide-all-but
                                                                                                                                                                       1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (typepred
                                                                                                                                                                         "lt")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (grind)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replaces
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (case
                                                                                                                                                                       "irreflexive?(lt)")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "irreflexive?")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst?)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (hide-all-but
                                                                                                                                                                         1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (typepred
                                                                                                                                                                           "lt")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (grind)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (lemma
                                                                                                                                 "Omega_set_is_finite")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "Omega_set")
                                                                                                                                  (("2"
                                                                                                                                    (inst?)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("3"
                                                                                                                                (lemma
                                                                                                                                 "Omega_set_is_finite")
                                                                                                                                (("3"
                                                                                                                                  (expand
                                                                                                                                   "Omega_set")
                                                                                                                                  (("3"
                                                                                                                                    (inst?)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide
                                                                                                             3)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "subterm_at")
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (hide
                                                                                                             3)
                                                                                                            (("3"
                                                                                                              (assert)
                                                                                                              (("3"
                                                                                                                (expand
                                                                                                                 "path_conditions"
                                                                                                                 1)
                                                                                                                (("3"
                                                                                                                  (expand
                                                                                                                   "eval_conds_rec"
                                                                                                                   1)
                                                                                                                  (("3"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           3)
                                                                                                          (("2"
                                                                                                            (use
                                                                                                             "null_path")
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide
                                                                                                         3)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "valact")
                                                                                                          (("2"
                                                                                                            (hide-all-but
                                                                                                             (-8
                                                                                                              1))
                                                                                                            (("2"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (expand
                                                                               "pvs0_tcc_valid_cc")
                                                                              (("2"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     (1
                                                                      -1
                                                                      -2))
                                                                    (("2"
                                                                      (lemma
                                                                       "subterm_append")
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "get_body(def)"
                                                                         "path")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "cons(0,null[nat])")
                                                                            (("1"
                                                                              (expand
                                                                               "append "
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "append "
                                                                                 -1)
                                                                                (("1"
                                                                                  (replaces
                                                                                   -1)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "valid_path")
                                                                              (("2"
                                                                                (expand
                                                                                 "reverse"
                                                                                 1
                                                                                 2)
                                                                                (("2"
                                                                                  (expand
                                                                                   "reverse"
                                                                                   1
                                                                                   2)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "append "
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "reverse"
                                                                                       1)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "null_path")
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (hide
                                                                     2)
                                                                    (("3"
                                                                      (hide
                                                                       -4)
                                                                      (("3"
                                                                        (use
                                                                         "path_conditions_unmodified")
                                                                        (("3"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide
                                                                   2)
                                                                  (("2"
                                                                    (use
                                                                     "valid_0_path_ext")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide
                                                                 2)
                                                                (("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (case "ite?(expr1)")
                                                (("1"
                                                  (hide 1 2 3 4)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (copy -2)
                                                      (("1"
                                                        (inst
                                                         -1
                                                         "get_cond(expr1)"
                                                         "env1")
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "cons(0, path)")
                                                            (("1"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (skolem
                                                                 -1
                                                                 "n_cond")
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (case
                                                                     "eval_bool(val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                                             (n_cond, get_cond(expr1), get_body(def), env1)))")
                                                                    (("1"
                                                                      (inst
                                                                       -5
                                                                       "get_if(expr1)"
                                                                       "env1")
                                                                      (("1"
                                                                        (split
                                                                         -5)
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "cons(1,path)")
                                                                          (("1"
                                                                            (split
                                                                             -1)
                                                                            (("1"
                                                                              (skolem
                                                                               -1
                                                                               "n_if")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (expand
                                                                                   "eval_expr"
                                                                                   1)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (inst
                                                                                       1
                                                                                       "max(n_cond,n_if)")
                                                                                      (("1"
                                                                                        (lift-if
                                                                                         1)
                                                                                        (("1"
                                                                                          (split
                                                                                           1)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "eval_expr_ge_n")
                                                                                              (("2"
                                                                                                (inst?
                                                                                                 -1
                                                                                                 :subst
                                                                                                 ("n"
                                                                                                  "n_cond"
                                                                                                  "m"
                                                                                                  "max(n_cond,n_if)"))
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "eval_expr_ge_n")
                                                                                                    (("1"
                                                                                                      (inst?
                                                                                                       -1
                                                                                                       :subst
                                                                                                       ("n"
                                                                                                        "n_if"
                                                                                                        "m"
                                                                                                        "max(n_cond,n_if)"
                                                                                                        "expr"
                                                                                                        "get_if(expr1)"))
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "semantic_rel_expr"
                                                                                                           2)
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("2"
                                                                                          (typepred
                                                                                           "n_cond")
                                                                                          (("2"
                                                                                            (typepred
                                                                                             "n_if")
                                                                                            (("2"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               (1
                                                                                -5
                                                                                -4))
                                                                              (("2"
                                                                                (lemma
                                                                                 "subterm_append")
                                                                                (("2"
                                                                                  (inst?
                                                                                   :where
                                                                                   -3)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -1
                                                                                       "cons(1,null)")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "append"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "append"
                                                                                           -1)
                                                                                          (("1"
                                                                                            (replaces
                                                                                             -1)
                                                                                            (("1"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "valid_path")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "length")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "length")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "nth")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "reverse"
                                                                                                 1
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "reverse"
                                                                                                   1
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "append"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "reverse")
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "null_path")
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (expand
                                                                                         "every")
                                                                                        (("3"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (hide-all-but
                                                                               (1
                                                                                -6
                                                                                -1
                                                                                -4
                                                                                -5
                                                                                -3))
                                                                              (("3"
                                                                                (use
                                                                                 "path_conditions_cons")
                                                                                (("3"
                                                                                  (assert)
                                                                                  (("3"
                                                                                    (assert)
                                                                                    (("3"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("3"
                                                                                        (expand
                                                                                         "eval_conds_rec"
                                                                                         1)
                                                                                        (("3"
                                                                                          (inst?)
                                                                                          (("3"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (use
                                                                             "valid_1_path_ext")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           (1
                                                                            -4))
                                                                          (("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (inst
                                                                       -4
                                                                       "get_else(expr1)"
                                                                       "env1")
                                                                      (("2"
                                                                        (split
                                                                         -4)
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "cons(2,path)")
                                                                          (("1"
                                                                            (split
                                                                             -1)
                                                                            (("1"
                                                                              (skolem
                                                                               -1
                                                                               "n_else")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (inst
                                                                                   2
                                                                                   "max(n_cond,n_else)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "eval_expr"
                                                                                     2)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (lift-if
                                                                                         2)
                                                                                        (("1"
                                                                                          (split
                                                                                           2)
                                                                                          (("1"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "eval_expr_ge_n")
                                                                                              (("2"
                                                                                                (inst?
                                                                                                 -1
                                                                                                 :subst
                                                                                                 ("n"
                                                                                                  "n_cond"
                                                                                                  "m"
                                                                                                  "max(n_cond,n_else)"))
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "eval_expr_ge_n")
                                                                                                    (("2"
                                                                                                      (inst?
                                                                                                       -1
                                                                                                       :subst
                                                                                                       ("n"
                                                                                                        "n_else"
                                                                                                        "m"
                                                                                                        "max(n_cond,n_else)"
                                                                                                        "expr"
                                                                                                        "get_else(expr1)"))
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "semantic_rel_expr"
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "n_cond")
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "n_else")
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               (1
                                                                                -4
                                                                                -3))
                                                                              (("2"
                                                                                (lemma
                                                                                 "subterm_append")
                                                                                (("2"
                                                                                  (inst?
                                                                                   :where
                                                                                   -3)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -1
                                                                                       "cons(2,null[nat])")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "append"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "append"
                                                                                           -1)
                                                                                          (("1"
                                                                                            (replaces
                                                                                             -1)
                                                                                            (("1"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (replaces
                                                                                         -2
                                                                                         :dir
                                                                                         RL)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "valid_path")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "length")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "length")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "nth")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "reverse"
                                                                                                   1
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "reverse"
                                                                                                     1
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "append"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "reverse"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (use
                                                                                                           "null_path")
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (hide-all-but
                                                                               (1
                                                                                -5
                                                                                -4
                                                                                -3
                                                                                2
                                                                                -2))
                                                                              (("3"
                                                                                (use
                                                                                 "path_conditions_cons")
                                                                                (("3"
                                                                                  (assert)
                                                                                  (("3"
                                                                                    (assert)
                                                                                    (("3"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("3"
                                                                                        (expand
                                                                                         "eval_conds_rec"
                                                                                         1)
                                                                                        (("3"
                                                                                          (inst?)
                                                                                          (("3"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             (1
                                                                              -4
                                                                              -3))
                                                                            (("2"
                                                                              (use
                                                                               "valid_2_path_ext")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           (1
                                                                            -3))
                                                                          (("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (1
                                                                  -3
                                                                  -1))
                                                                (("2"
                                                                  (lemma
                                                                   "subterm_append")
                                                                  (("2"
                                                                    (inst?
                                                                     :where
                                                                     -3)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "cons(0, null)")
                                                                        (("1"
                                                                          (expand
                                                                           "append"
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "append"
                                                                             -1)
                                                                            (("1"
                                                                              (replaces
                                                                               -1)
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (replaces
                                                                           -2
                                                                           :dir
                                                                           RL)
                                                                          (("2"
                                                                            (expand
                                                                             "valid_path"
                                                                             1)
                                                                            (("2"
                                                                              (expand
                                                                               "length")
                                                                              (("2"
                                                                                (expand
                                                                                 "length")
                                                                                (("2"
                                                                                  (expand
                                                                                   "nth")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "reverse"
                                                                                     1
                                                                                     2)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "reverse"
                                                                                       1
                                                                                       2)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "append"
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "reverse")
                                                                                          (("2"
                                                                                            (use
                                                                                             "null_path")
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (expand
                                                                           "every")
                                                                          (("3"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (hide-all-but
                                                                 (1
                                                                  -4
                                                                  -3
                                                                  -1))
                                                                (("3"
                                                                  (use
                                                                   "path_conditions_unmodified")
                                                                  (("3"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               (1
                                                                -3
                                                                -1))
                                                              (("2"
                                                                (use
                                                                 "valid_0_path_ext")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (1 -1))
                                                            (("2"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (case "op2?(expr1)")
                                                  (("1"
                                                    (hide 1 2 3 4 5)
                                                    (("1"
                                                      (copy -2)
                                                      (("1"
                                                        (inst
                                                         -1
                                                         "get_arg1(expr1)"
                                                         "env1")
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (inst
                                                             -3
                                                             "get_arg2(expr1)"
                                                             "env1")
                                                            (("1"
                                                              (split
                                                               -3)
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 "cons(1,path)")
                                                                (("1"
                                                                  (split
                                                                   -1)
                                                                  (("1"
                                                                    (inst
                                                                     -2
                                                                     "cons(0,path)")
                                                                    (("1"
                                                                      (split
                                                                       -2)
                                                                      (("1"
                                                                        (skolem
                                                                         -1
                                                                         "n1")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (skolem
                                                                             -3
                                                                             "n2")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (inst
                                                                                 1
                                                                                 "max(n1,n2)")
                                                                                (("1"
                                                                                  (expand
                                                                                   "eval_expr"
                                                                                   1)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (lift-if
                                                                                       1)
                                                                                      (("1"
                                                                                        (split
                                                                                         1)
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "eval_expr_ge_n")
                                                                                            (("2"
                                                                                              (inst?
                                                                                               -1
                                                                                               :subst
                                                                                               ("n"
                                                                                                "n1"
                                                                                                "m"
                                                                                                "max(n1,n2)"))
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (lemma
                                                                                                   "eval_expr_ge_n")
                                                                                                  (("2"
                                                                                                    (inst?
                                                                                                     -1
                                                                                                     :subst
                                                                                                     ("n"
                                                                                                      "n2"
                                                                                                      "m"
                                                                                                      "max(n1,n2)"
                                                                                                      "expr"
                                                                                                      "get_arg2(expr1)"))
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "semantic_rel_expr"
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (inst?)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "n1")
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "n2")
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (1
                                                                          -3
                                                                          -2))
                                                                        (("2"
                                                                          (lemma
                                                                           "subterm_append")
                                                                          (("2"
                                                                            (inst?
                                                                             :where
                                                                             -3)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "cons(0, null)")
                                                                                (("1"
                                                                                  (expand
                                                                                   "append"
                                                                                   -1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "append"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (replaces
                                                                                   -2
                                                                                   :dir
                                                                                   RL)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "valid_path")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "length"
                                                                                       1)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "length"
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "nth"
                                                                                           1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "reverse"
                                                                                             1
                                                                                             2)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "reverse"
                                                                                               1
                                                                                               2)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "append"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "reverse"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (use
                                                                                                     "null_path")
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("3"
                                                                                  (expand
                                                                                   "every")
                                                                                  (("3"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (hide-all-but
                                                                         (1
                                                                          -4
                                                                          -2))
                                                                        (("3"
                                                                          (use
                                                                           "path_conditions_unmodified")
                                                                          (("3"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide-all-but
                                                                       (1
                                                                        -3
                                                                        -2))
                                                                      (("2"
                                                                        (use
                                                                         "valid_0_path_ext")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     (1
                                                                      -3
                                                                      -2))
                                                                    (("2"
                                                                      (lemma
                                                                       "subterm_append")
                                                                      (("2"
                                                                        (inst?
                                                                         -1
                                                                         :where
                                                                         -3)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "cons(1, null)")
                                                                            (("1"
                                                                              (expand
                                                                               "append"
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "append"
                                                                                 -1)
                                                                                (("1"
                                                                                  (replaces
                                                                                   -1)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (replaces
                                                                               -2
                                                                               :dir
                                                                               RL)
                                                                              (("2"
                                                                                (expand
                                                                                 "valid_path")
                                                                                (("2"
                                                                                  (expand
                                                                                   "length"
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "length"
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "nth")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "reverse"
                                                                                         1
                                                                                         2)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "reverse"
                                                                                           1
                                                                                           2)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "append"
                                                                                             1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "reverse")
                                                                                              (("2"
                                                                                                (use
                                                                                                 "null_path")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (expand
                                                                               "every")
                                                                              (("3"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (hide-all-but
                                                                     (1
                                                                      -4
                                                                      -3
                                                                      -2))
                                                                    (("3"
                                                                      (use
                                                                       "path_conditions_unmodified")
                                                                      (("3"
                                                                        (assert)
                                                                        (("3"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (use
                                                                   "valid_1_path_ext")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (1
                                                                  -2))
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (1 -1))
                                                            (("2"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (typepred "expr1")
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (hide-all-but 1)
                                  (("2"
                                    (skeep)
                                    (("2"
                                      (use "wf_nat")
                                      (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (hide-all-but 1)
                                  (("3"
                                    (use "wf_nat")
                                    (("3" (grind) nil nil))
                                    nil))
                                  nil)
                                 ("4"
                                  (hide-all-but 1)
                                  (("4"
                                    (use "wf_nat")
                                    (("4" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((terminates const-decl "bool" lang nil)
    (Val type-eq-decl nil lang nil) (PVS0 type-decl nil PVS0_adt nil)
    (cnst? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (vr? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op1? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op2? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (rec? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (ite? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Expr type-eq-decl nil PVS0_adt nil)
    (def? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Def type-eq-decl nil PVS0_adt nil)
    (get_body adt-accessor-decl "[Def -> Expr]" PVS0_adt nil)
    (pvs0_tcc_termination const-decl "bool" measure_termination_defs
     nil)
    (PVS0_CC type-eq-decl nil measure_termination_defs nil)
    (pvs0_tcc_valid_cc const-decl "bool" measure_termination_defs nil)
    (eval_expr_ge_n formula-decl nil lang nil)
    (get_arg2 adt-accessor-decl "[(op2?) -> Expr]" PVS0_adt nil)
    (get_arg1 adt-accessor-decl "[(op2?) -> Expr]" PVS0_adt nil)
    (get_else adt-accessor-decl "[(ite?) -> Expr]" PVS0_adt nil)
    (valid_2_path_ext formula-decl nil eval_props nil)
    (get_if adt-accessor-decl "[(ite?) -> Expr]" PVS0_adt nil)
    (path_conditions_cons formula-decl nil eval_props nil)
    (valid_1_path_ext formula-decl nil eval_props nil)
    (get_cond adt-accessor-decl "[(ite?) -> Expr]" PVS0_adt nil)
    (get_arg shared-adt-accessor-decl
     "[{x: PVS0 | rec?(x) OR op1?(x)} -> Expr]" PVS0_adt nil)
    (reduce_nat adt-def-decl "[PVS0 -> nat]" PVS0_adt nil)
    (path_conditions_unmodified formula-decl nil eval_props nil)
    (subterm_append formula-decl nil eval_props nil)
    (eval_expr_n_pos formula-decl nil lang nil)
    (valid_0_path_ext formula-decl nil eval_props nil)
    (lt_lex2_wf name-judgement "(well_founded?[[A, B]])" lex2_generic
     "orders/")
    (sizepvs0 const-decl "[PVS0 -> nat]" lang nil)
    (lt_lex2 const-decl "bool" lex2_generic "orders/")
    (null_path formula-decl nil eval_props nil)
    (Environment type-eq-decl nil lang nil)
    (valid_path def-decl "bool" eval_props nil)
    (subterm_at def-decl "({res: Expr | subterm(res, expr)})"
     eval_props nil)
    (BoolPVS0 type-decl nil BoolPVS0_adt nil)
    (WFM type-eq-decl nil measure_termination_defs nil)
    (vr adt-constructor-decl "(vr?)" PVS0_adt nil)
    (Maybe type-decl nil Maybe "structures/")
    (some? adt-recognizer-decl "[Maybe -> boolean]" Maybe
     "structures/")
    (eval_expr def-decl "Maybe[Val]" lang nil)
    (semantic_rel_expr inductive-decl "bool" lang nil)
    (val adt-accessor-decl "[(some?) -> T]" Maybe "structures/")
    (eval_expr_termination const-decl "bool" lang nil)
    (eval_expr_terminates formula-decl nil lang nil))
   nil)
  (pvs0_termination_terminates-2 nil 3643023754
   ("" (skeep)
    (("" (expand "terminates")
      (("" (lemma "eval_expr_terminates")
        (("" (inst -1 "get_body(def)" "get_body(def)")
          (("" (assert)
            (("" (hide 2)
              (("" (expand "eval_expr_termination")
                (("" (skeep)
                  (("" (skeep)
                    (("" (expand "pvs0_tcc_termination")
                      (("" (inst?)
                        (("" (skeep)
                          ((""
                            (case "FORALL(expr: Expr, env: Environment, path: (valid_path(get_body(def)))):
                                     expr = subterm_at(get_body(def), path) AND
                                            eval_conds_rec(eval_bool,eval_op1,eval_op2)(get_body(def),path_conditions(get_body(def), path),env)
                                    IMPLIES
                                     EXISTS (n: nat | n <= Omega(wfm,lt)(env(vr))):
                                            some?(eval_expr(eval_bool, eval_op1, eval_op2)
                                                           (n, expr, get_body(def), env))
                                             AND
                                             semantic_rel_expr(eval_bool, eval_op1, eval_op2)
                                                              (expr, get_body(def), env,
                                                               val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                            (n,
                                                                             expr,
                                                                             get_body(def),
                                                                             env)))")
                            (("1"
                              (inst -1 "get_body(def)" "env"
                               "null[nat]")
                              (("1"
                                (split -1)
                                (("1"
                                  (skeep)
                                  (("1"
                                    (insteep)
                                    (("1" (assert) nil)))))
                                 ("2"
                                  (hide-all-but 1)
                                  (("2" (grind) nil)))
                                 ("3"
                                  (hide-all-but 1)
                                  (("3" (grind) nil)))))
                               ("2"
                                (hide-all-but 1)
                                (("2" (use "null_path") nil)))))
                             ("2" (hide 2)
                              (("2"
                                (measure-induct
                                 "(wfm(env(vr)),sizepvs0(expr))"
                                 ("expr" "env")
                                 :order
                                 "lt_lex2[nat,nat,lt,<]")
                                (("1"
                                  (skolem 1 ("expr1" "env1"))
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (skeep)
                                      (("1"
                                        (case "cnst?(expr1)")
                                        (("1"
                                          (expand "eval_expr" 1)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (hide-all-but (1 -1))
                                              (("1"
                                                (expand
                                                 "semantic_rel_expr")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (inst 1 "1")
                                                    (("1" (assert) nil)
                                                     ("2"
                                                      (assert)
                                                      nil)))))))))))))
                                         ("2"
                                          (case "vr?(expr1)")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand "eval_expr" 2)
                                              (("1"
                                                (hide-all-but (2 -1))
                                                (("1"
                                                  (inst 1 "1")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand
                                                       "semantic_rel_expr")
                                                      (("1"
                                                        (propax)
                                                        nil)))))
                                                   ("2"
                                                    (assert)
                                                    nil)))))))))
                                           ("2"
                                            (case "op1?(expr1)")
                                            (("1"
                                              (expand "eval_expr" 3)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (inst
                                                   -2
                                                   "get_arg(expr1)"
                                                   "env1")
                                                  (("1"
                                                    (split -2)
                                                    (("1"
                                                      (inst
                                                       -1
                                                       "cons(0,path)")
                                                      (("1"
                                                        (split -1)
                                                        (("1"
                                                          (skeep -1)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst
                                                               3
                                                               "n")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (use
                                                                   "eval_expr_n_pos")
                                                                  (("1"
                                                                    (beta)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (hide
                                                                         1
                                                                         2)
                                                                        (("1"
                                                                          (expand
                                                                           "semantic_rel_expr"
                                                                           1)
                                                                          (("1"
                                                                            (inst
                                                                             1
                                                                             "val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                       (n,
                                                                                                        get_arg(expr1),
                                                                                                        get_body(def),
                                                                                                        env1))")
                                                                            nil)))))))))))))))))))
                                                         ("2"
                                                          (hide 4)
                                                          (("2"
                                                            (hide-all-but
                                                             (1 -2))
                                                            (("2"
                                                              (lemma
                                                               "subterm_append")
                                                              (("2"
                                                                (inst
                                                                 -1
                                                                 "get_body(def)"
                                                                 "path")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "cons(0,null[nat])")
                                                                    (("1"
                                                                      (expand
                                                                       "append"
                                                                       -1)
                                                                      (("1"
                                                                        (expand
                                                                         "append"
                                                                         -1)
                                                                        (("1"
                                                                          (replaces
                                                                           -1)
                                                                          (("1"
                                                                            (grind)
                                                                            nil)))))))
                                                                     ("2"
                                                                      (reveal
                                                                       -3)
                                                                      (("2"
                                                                        (expand
                                                                         "valid_path"
                                                                         1)
                                                                        (("2"
                                                                          (expand
                                                                           "length"
                                                                           1)
                                                                          (("2"
                                                                            (expand
                                                                             "length"
                                                                             1)
                                                                            (("2"
                                                                              (expand
                                                                               "nth"
                                                                               1)
                                                                              (("2"
                                                                                (expand
                                                                                 "reverse"
                                                                                 1
                                                                                 2)
                                                                                (("2"
                                                                                  (expand
                                                                                   "reverse"
                                                                                   1
                                                                                   2)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "append "
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "reverse"
                                                                                       1)
                                                                                      (("2"
                                                                                        (use
                                                                                         "null_path")
                                                                                        nil)))))))))))))))))))))))))))))))
                                                         ("3"
                                                          (hide-all-but
                                                           (1 -3 -1))
                                                          (("3"
                                                            (use
                                                             "path_conditions_unmodified")
                                                            (("3"
                                                              (assert)
                                                              nil)))))))
                                                       ("2"
                                                        (hide-all-but
                                                         (-1 1))
                                                        (("2"
                                                          (typepred
                                                           "path")
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (use
                                                               "valid_0_path_ext")
                                                              (("2"
                                                                (assert)
                                                                nil)))))))))))
                                                     ("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (grind)
                                                        nil)))))))))))
                                             ("2"
                                              (case "rec?(expr1)")
                                              (("1"
                                                (hide 1 2 3)
                                                (("1"
                                                  (expand
                                                   "eval_expr"
                                                   1)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (label "ih" -2)
                                                      (("1"
                                                        (copy "ih")
                                                        (("1"
                                                          (hide "ih")
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "get_arg(expr1)"
                                                             "env1")
                                                            (("1"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 "cons(0,path)")
                                                                (("1"
                                                                  (split
                                                                   -1)
                                                                  (("1"
                                                                    (inst
                                                                     -5
                                                                     "env1")
                                                                    (("1"
                                                                      (skeep
                                                                       -1)
                                                                      (("1"
                                                                        (name-replace
                                                                         "valact"
                                                                         "eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                (n,
                                                                                                 get_arg(expr1),
                                                                                                 get_body(def),
                                                                                                 env1)")
                                                                        (("1"
                                                                          (inst
                                                                           -6
                                                                           "(# rec_expr := expr1, cnds := path_conditions(get_body(def),path), path := path #)"
                                                                           "val(valact)")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (inst
                                                                               1
                                                                               "Omega(wfm, lt)(env1(vr))")
                                                                              (("1"
                                                                                (typepred
                                                                                 "n")
                                                                                (("1"
                                                                                  (lift-if
                                                                                   1)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (case
                                                                                       "Omega(wfm, lt)(env1(vr)) = 0")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "valact")
                                                                                        (("2"
                                                                                          (lemma
                                                                                           "eval_expr_ge_n")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "eval_bool"
                                                                                             "eval_op1"
                                                                                             "eval_op2"
                                                                                             "n"
                                                                                             "Omega(wfm, lt)(env1(vr))"
                                                                                             "get_arg(expr1)"
                                                                                             "get_body(def)"
                                                                                             "env1")
                                                                                            (("2"
                                                                                              (beta)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (reveal
                                                                                                   "ih")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     "ih"
                                                                                                     "get_body(def)"
                                                                                                     "val2env(val(valact))")
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "null[nat]")
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (skeep)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "valact")
                                                                                                              (("1"
                                                                                                                (typepred
                                                                                                                 "n!1")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -4
                                                                                                                   "ih")
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "n!1 <= Omega(wfm, lt)(env1(vr)) - 1")
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -2)
                                                                                                                      (("1"
                                                                                                                        (lemma
                                                                                                                         "eval_expr_ge_n")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "eval_bool"
                                                                                                                           "eval_op1"
                                                                                                                           "eval_op2"
                                                                                                                           "n!1"
                                                                                                                           "Omega(wfm, lt)(env1(vr)) - 1"
                                                                                                                           "get_body(def)"
                                                                                                                           "get_body(def)"
                                                                                                                           "LAMBDA (v_1: (vr?[Val[T]])):
                                                                                      val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                   (Omega(wfm, lt)(env1(vr)),
                                                                                                    get_arg(expr1),
                                                                                                    get_body(def),
                                                                                                    env1))")
                                                                                                                          (("1"
                                                                                                                            (beta)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "semantic_rel_expr"
                                                                                                                                 2)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   2
                                                                                                                                   "val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                       (n,
                                                                                                        get_arg(expr1),
                                                                                                        get_body(def),
                                                                                                        env1))")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil)))))))))
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            nil)))))))
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "valact")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "Omega")
                                                                                                                        (("2"
                                                                                                                          (hide-all-but
                                                                                                                           (1
                                                                                                                            -1
                                                                                                                            -11))
                                                                                                                          (("2"
                                                                                                                            (lemma
                                                                                                                             "card_strict_subset[Val]")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "{val_: Val |
                                                                             lt(wfm(val_),
                                                                                wfm(val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                 (n,
                                                                                                  get_arg(expr1),
                                                                                                  get_body(def),
                                                                                                  env1))))
                                                                              OR
                                                                              val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                           (n, get_arg(expr1), get_body(def), env1))
                                                                               = val_}"
                                                                                                                               "{val_: Val | lt(wfm(val_), wfm(env1(vr))) OR env1(vr) = val_}")
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "Omega_set")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil)))))
                                                                                                                                 ("2"
                                                                                                                                  (hide
                                                                                                                                   -1
                                                                                                                                   2)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "strict_subset?")
                                                                                                                                    (("2"
                                                                                                                                      (split
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "subset?")
                                                                                                                                        (("1"
                                                                                                                                          (skeep)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "member")
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (split
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (case
                                                                                                                                                   "transitive?(lt)")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "transitive?")
                                                                                                                                                    (("1"
                                                                                                                                                      (inst?
                                                                                                                                                       -1
                                                                                                                                                       :where
                                                                                                                                                       1)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst?
                                                                                                                                                         -1
                                                                                                                                                         :where
                                                                                                                                                         -3)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil)))))))
                                                                                                                                                   ("2"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (typepred
                                                                                                                                                       "lt")
                                                                                                                                                      (("2"
                                                                                                                                                        (grind)
                                                                                                                                                        nil)))))))
                                                                                                                                                 ("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil)))))))))))
                                                                                                                                       ("2"
                                                                                                                                        (expand
                                                                                                                                         "/=")
                                                                                                                                        (("2"
                                                                                                                                          (lemma
                                                                                                                                           "subset_reflexive[Val]")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -1
                                                                                                                                             "{val_: Val |
                                                                                     lt(wfm(val_),
                                                                                        wfm(val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                         (n, get_arg(expr1), get_body(def), env1))))
                                                                                      OR
                                                                                      val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                   (n, get_arg(expr1), get_body(def), env1))
                                                                                       = val_}")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (name
                                                                                                                                                 "A"
                                                                                                                                                 "{val_: Val |
                                                                                           lt(wfm(val_),
                                                                                              wfm(val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                               (n,
                                                                                                                get_arg(expr1),
                                                                                                                get_body(def),
                                                                                                                env1))))
                                                                                            OR
                                                                                            val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                         (n, get_arg(expr1), get_body(def), env1))
                                                                                             = val_}")
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -1)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "A"
                                                                                                                                                     -2
                                                                                                                                                     2)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -3
                                                                                                                                                       -2)
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "subset?"
                                                                                                                                                         -2)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           -2
                                                                                                                                                           "env1(vr)")
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "member")
                                                                                                                                                            (("2"
                                                                                                                                                              (name-replace
                                                                                                                                                               "B"
                                                                                                                                                               "env1(vr)")
                                                                                                                                                              (("2"
                                                                                                                                                                (name-replace
                                                                                                                                                                 "C"
                                                                                                                                                                 "val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                (n, get_arg(expr1), get_body(def), env1))")
                                                                                                                                                                (("2"
                                                                                                                                                                  (split
                                                                                                                                                                   -2)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (case
                                                                                                                                                                     "transitive?(lt)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "transitive?")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -1
                                                                                                                                                                         "wfm(B)"
                                                                                                                                                                         "wfm(C)"
                                                                                                                                                                         "wfm(B)")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (case
                                                                                                                                                                             "irreflexive?(lt)")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "irreflexive?")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (inst?)
                                                                                                                                                                                nil)))
                                                                                                                                                                             ("2"
                                                                                                                                                                              (hide-all-but
                                                                                                                                                                               1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (typepred
                                                                                                                                                                                 "lt")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (grind)
                                                                                                                                                                                  nil)))))))))))))
                                                                                                                                                                     ("2"
                                                                                                                                                                      (hide-all-but
                                                                                                                                                                       1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (typepred
                                                                                                                                                                         "lt")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (grind)
                                                                                                                                                                          nil)))))))
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replaces
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (case
                                                                                                                                                                       "irreflexive?(lt)")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "irreflexive?")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst?)
                                                                                                                                                                          nil)))
                                                                                                                                                                       ("2"
                                                                                                                                                                        (hide-all-but
                                                                                                                                                                         1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (typepred
                                                                                                                                                                           "lt")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (grind)
                                                                                                                                                                            nil)))))))))))))))))))))))))))))))))))))))))))))
                                                                                                                               ("2"
                                                                                                                                (lemma
                                                                                                                                 "Omega_set_is_finite")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "Omega_set")
                                                                                                                                  (("2"
                                                                                                                                    (inst?)
                                                                                                                                    nil)))))
                                                                                                                               ("3"
                                                                                                                                (lemma
                                                                                                                                 "Omega_set_is_finite")
                                                                                                                                (("3"
                                                                                                                                  (expand
                                                                                                                                   "Omega_set")
                                                                                                                                  (("3"
                                                                                                                                    (inst?)
                                                                                                                                    nil)))))))))))))))))))))))))
                                                                                                           ("2"
                                                                                                            (hide
                                                                                                             3)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "subterm_at")
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil)))))
                                                                                                           ("3"
                                                                                                            (hide
                                                                                                             3)
                                                                                                            (("3"
                                                                                                              (assert)
                                                                                                              (("3"
                                                                                                                (expand
                                                                                                                 "path_conditions"
                                                                                                                 1)
                                                                                                                (("3"
                                                                                                                  (expand
                                                                                                                   "eval_conds_rec"
                                                                                                                   1)
                                                                                                                  (("3"
                                                                                                                    (propax)
                                                                                                                    nil)))))))))))
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           3)
                                                                                                          (("2"
                                                                                                            (use
                                                                                                             "null_path")
                                                                                                            nil)))))
                                                                                                       ("2"
                                                                                                        (hide
                                                                                                         3)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "valact")
                                                                                                          (("2"
                                                                                                            (hide-all-but
                                                                                                             (-8
                                                                                                              1))
                                                                                                            (("2"
                                                                                                              (grind)
                                                                                                              nil)))))))))))))))))))))))))))))))))))
                                                                           ("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (expand
                                                                               "pvs0_tcc_valid_cc")
                                                                              (("2"
                                                                                (propax)
                                                                                nil)))))))))))))
                                                                   ("2"
                                                                    (hide-all-but
                                                                     (1
                                                                      -1
                                                                      -2))
                                                                    (("2"
                                                                      (lemma
                                                                       "subterm_append")
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "get_body(def)"
                                                                         "path")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "cons(0,null[nat])")
                                                                            (("1"
                                                                              (expand
                                                                               "append "
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "append "
                                                                                 -1)
                                                                                (("1"
                                                                                  (replaces
                                                                                   -1)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil)))))))
                                                                             ("2"
                                                                              (expand
                                                                               "valid_path")
                                                                              (("2"
                                                                                (expand
                                                                                 "reverse"
                                                                                 1
                                                                                 2)
                                                                                (("2"
                                                                                  (expand
                                                                                   "reverse"
                                                                                   1
                                                                                   2)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "append "
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "reverse"
                                                                                       1)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "null_path")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -1
                                                                                           "get_arg(subterm_at[T, LT, N](get_body[T](def), path))")
                                                                                          (("2"
                                                                                            (grind)
                                                                                            nil)))))))))))))))))))))))))
                                                                   ("3"
                                                                    (hide
                                                                     2)
                                                                    (("3"
                                                                      (hide
                                                                       -4)
                                                                      (("3"
                                                                        (use
                                                                         "path_conditions_unmodified")
                                                                        (("3"
                                                                          (assert)
                                                                          nil)))))))))
                                                                 ("2"
                                                                  (hide
                                                                   2)
                                                                  (("2"
                                                                    (use
                                                                     "valid_0_path_ext")
                                                                    (("2"
                                                                      (assert)
                                                                      nil)))))))
                                                               ("2"
                                                                (hide
                                                                 2)
                                                                (("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (grind)
                                                                    nil)))))))))))))))))))))
                                               ("2"
                                                (case "ite?(expr1)")
                                                (("1"
                                                  (hide 1 2 3 4)
                                                  (("1"
                                                    (hide -5)
                                                    (("1"
                                                      (copy -2)
                                                      (("1"
                                                        (inst
                                                         -1
                                                         "get_cond(expr1)"
                                                         "env1")
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "cons(0, path)")
                                                            (("1"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (skolem
                                                                 -1
                                                                 "n_cond")
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (case
                                                                     "eval_bool(val(eval_expr(eval_bool, eval_op1, eval_op2)
                                                                                                  (n_cond, get_cond(expr1), get_body(def), env1)))")
                                                                    (("1"
                                                                      (inst
                                                                       -5
                                                                       "get_if(expr1)"
                                                                       "env1")
                                                                      (("1"
                                                                        (split
                                                                         -5)
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "cons(1,path)")
                                                                          (("1"
                                                                            (split
                                                                             -1)
                                                                            (("1"
                                                                              (skolem
                                                                               -1
                                                                               "n_if")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (expand
                                                                                   "eval_expr"
                                                                                   1)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (inst
                                                                                       1
                                                                                       "max(n_cond,n_if)")
                                                                                      (("1"
                                                                                        (lift-if
                                                                                         1)
                                                                                        (("1"
                                                                                          (split
                                                                                           1)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (grind)
                                                                                              nil)))
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "eval_expr_ge_n")
                                                                                              (("2"
                                                                                                (inst?
                                                                                                 -1
                                                                                                 :subst
                                                                                                 ("n"
                                                                                                  "n_cond"
                                                                                                  "m"
                                                                                                  "max(n_cond,n_if)"))
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "eval_expr_ge_n")
                                                                                                    (("1"
                                                                                                      (inst?
                                                                                                       -1
                                                                                                       :subst
                                                                                                       ("n"
                                                                                                        "n_if"
                                                                                                        "m"
                                                                                                        "max(n_cond,n_if)"
                                                                                                        "expr"
                                                                                                        "get_if(expr1)"))
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "semantic_rel_expr"
                                                                                                           2)
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil)))))))))))))
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (assert)
                                                                                                  nil)))))))))))
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("2"
                                                                                          (typepred
                                                                                           "n_cond")
                                                                                          (("2"
                                                                                            (typepred
                                                                                             "n_if")
                                                                                            (("2"
                                                                                              (grind)
                                                                                              nil)))))))))))))))))
                                                                             ("2"
                                                                              (hide-all-but
                                                                               (1
                                                                                -5
                                                                                -4))
                                                                              (("2"
                                                                                (lemma
                                                                                 "subterm_append")
                                                                                (("2"
                                                                                  (inst?
                                                                                   :where
                                                                                   -3)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -1
                                                                                       "cons(1,null)")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "append"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "append"
                                                                                           -1)
                                                                                          (("1"
                                                                                            (replaces
                                                                                             -1)
                                                                                            (("1"
                                                                                              (grind)
                                                                                              nil)))))))
                                                                                       ("2"
                                                                                        (expand
                                                                                         "valid_path")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "length")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "length")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "nth")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "reverse"
                                                                                                 1
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "reverse"
                                                                                                   1
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "append"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "reverse")
                                                                                                      (("2"
                                                                                                        (use
                                                                                                         "null_path")
                                                                                                        nil)))))))))))))))))
                                                                                       ("3"
                                                                                        (expand
                                                                                         "every")
                                                                                        (("3"
                                                                                          (propax)
                                                                                          nil)))))))))))))
                                                                             ("3"
                                                                              (hide-all-but
                                                                               (1
                                                                                -6
                                                                                -1
                                                                                -4
                                                                                -5
                                                                                -3))
                                                                              (("3"
                                                                                (use
                                                                                 "path_conditions_cons")
                                                                                (("3"
                                                                                  (assert)
                                                                                  (("3"
                                                                                    (assert)
                                                                                    (("3"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("3"
                                                                                        (expand
                                                                                         "eval_conds_rec"
                                                                                         1)
                                                                                        (("3"
                                                                                          (inst?)
                                                                                          (("3"
                                                                                            (assert)
                                                                                            nil)))))))))))))))))
                                                                           ("2"
                                                                            (use
                                                                             "valid_1_path_ext")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (assert)
                                                                                nil)))))))
                                                                         ("2"
                                                                          (hide-all-but
                                                                           (1
                                                                            -4))
                                                                          (("2"
                                                                            (grind)
                                                                            nil)))))))
                                                                     ("2"
                                                                      (inst
                                                                       -4
                                                                       "get_else(expr1)"
                                                                       "env1")
                                                                      (("2"
                                                                        (split
                                                                         -4)
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "cons(2,path)")
                                                                          (("1"
                                                                            (split
                                                                             -1)
                                                                            (("1"
                                                                              (skolem
                                                                               -1
                                                                               "n_else")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (inst
                                                                                   2
                                                                                   "max(n_cond,n_else)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "eval_expr"
                                                                                     2)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (lift-if
                                                                                         2)
                                                                                        (("1"
                                                                                          (split
                                                                                           2)
                                                                                          (("1"
                                                                                            (grind)
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "eval_expr_ge_n")
                                                                                              (("2"
                                                                                                (inst?
                                                                                                 -1
                                                                                                 :subst
                                                                                                 ("n"
                                                                                                  "n_cond"
                                                                                                  "m"
                                                                                                  "max(n_cond,n_else)"))
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "eval_expr_ge_n")
                                                                                                    (("2"
                                                                                                      (inst?
                                                                                                       -1
                                                                                                       :subst
                                                                                                       ("n"
                                                                                                        "n_else"
                                                                                                        "m"
                                                                                                        "max(n_cond,n_else)"
                                                                                                        "expr"
                                                                                                        "get_else(expr1)"))
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "semantic_rel_expr"
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil)))))))))))))))))))))))))))
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "n_cond")
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "n_else")
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil)))))))))))))
                                                                             ("2"
                                                                              (hide-all-but
                                                                               (1
                                                                                -4
                                                                                -3))
                                                                              (("2"
                                                                                (lemma
                                                                                 "subterm_append")
                                                                                (("2"
                                                                                  (inst?
                                                                                   :where
                                                                                   -3)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -1
                                                                                       "cons(2,null[nat])")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "append"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "append"
                                                                                           -1)
                                                                                          (("1"
                                                                                            (replaces
                                                                                             -1)
                                                                                            (("1"
                                                                                              (grind)
                                                                                              nil)))))))
                                                                                       ("2"
                                                                                        (replaces
                                                                                         -2
                                                                                         :dir
                                                                                         RL)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "valid_path")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "length")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "length")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "nth")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "reverse"
                                                                                                   1
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "reverse"
                                                                                                     1
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "append"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "reverse"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (use
                                                                                                           "null_path")
                                                                                                          nil)))))))))))))))))))))))))))))
                                                                             ("3"
                                                                              (hide-all-but
                                                                               (1
                                                                                -5
                                                                                -4
                                                                                -3
                                                                                2
                                                                                -2))
                                                                              (("3"
                                                                                (use
                                                                                 "path_conditions_cons")
                                                                                (("3"
                                                                                  (assert)
                                                                                  (("3"
                                                                                    (assert)
                                                                                    (("3"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("3"
                                                                                        (expand
                                                                                         "eval_conds_rec"
                                                                                         1)
                                                                                        (("3"
                                                                                          (inst?)
                                                                                          (("3"
                                                                                            (assert)
                                                                                            nil)))))))))))))))))
                                                                           ("2"
                                                                            (hide-all-but
                                                                             (1
                                                                              -4
                                                                              -3))
                                                                            (("2"
                                                                              (use
                                                                               "valid_2_path_ext")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil)))))))))
                                                                         ("2"
                                                                          (hide-all-but
                                                                           (1
                                                                            -3))
                                                                          (("2"
                                                                            (grind)
                                                                            nil)))))))))))))
                                                               ("2"
                                                                (hide-all-but
                                                                 (1
                                                                  -3
                                                                  -1))
                                                                (("2"
                                                                  (lemma
                                                                   "subterm_append")
                                                                  (("2"
                                                                    (inst?
                                                                     :where
                                                                     -3)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "cons(0, null)")
                                                                        (("1"
                                                                          (expand
                                                                           "append"
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "append"
                                                                             -1)
                                                                            (("1"
                                                                              (replaces
                                                                               -1)
                                                                              (("1"
                                                                                (grind)
                                                                                nil)))))))
                                                                         ("2"
                                                                          (replaces
                                                                           -2
                                                                           :dir
                                                                           RL)
                                                                          (("2"
                                                                            (expand
                                                                             "valid_path"
                                                                             1)
                                                                            (("2"
                                                                              (expand
                                                                               "length")
                                                                              (("2"
                                                                                (expand
                                                                                 "length")
                                                                                (("2"
                                                                                  (expand
                                                                                   "nth")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "reverse"
                                                                                     1
                                                                                     2)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "reverse"
                                                                                       1
                                                                                       2)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "append"
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "reverse")
                                                                                          (("2"
                                                                                            (use
                                                                                             "null_path")
                                                                                            nil)))))))))))))))))))
                                                                         ("3"
                                                                          (expand
                                                                           "every")
                                                                          (("3"
                                                                            (propax)
                                                                            nil)))))))))))))
                                                               ("3"
                                                                (hide-all-but
                                                                 (1
                                                                  -4
                                                                  -3
                                                                  -1))
                                                                (("3"
                                                                  (use
                                                                   "path_conditions_unmodified")
                                                                  (("3"
                                                                    (assert)
                                                                    nil)))))))
                                                             ("2"
                                                              (hide-all-but
                                                               (1
                                                                -3
                                                                -1))
                                                              (("2"
                                                                (use
                                                                 "valid_0_path_ext")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (assert)
                                                                    nil)))))))))
                                                           ("2"
                                                            (hide-all-but
                                                             (1 -1))
                                                            (("2"
                                                              (grind)
                                                              nil)))))))))))))
                                                 ("2"
                                                  (case "op2?(expr1)")
                                                  (("1"
                                                    (hide 1 2 3 4 5)
                                                    (("1"
                                                      (copy -2)
                                                      (("1"
                                                        (inst
                                                         -1
                                                         "get_arg1(expr1)"
                                                         "env1")
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (inst
                                                             -3
                                                             "get_arg2(expr1)"
                                                             "env1")
                                                            (("1"
                                                              (split
                                                               -3)
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 "cons(1,path)")
                                                                (("1"
                                                                  (split
                                                                   -1)
                                                                  (("1"
                                                                    (inst
                                                                     -2
                                                                     "cons(0,path)")
                                                                    (("1"
                                                                      (split
                                                                       -2)
                                                                      (("1"
                                                                        (skolem
                                                                         -1
                                                                         "n1")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (skolem
                                                                             -3
                                                                             "n2")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (inst
                                                                                 1
                                                                                 "max(n1,n2)")
                                                                                (("1"
                                                                                  (expand
                                                                                   "eval_expr"
                                                                                   1)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (lift-if
                                                                                       1)
                                                                                      (("1"
                                                                                        (split
                                                                                         1)
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil)
                                                                                         ("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "eval_expr_ge_n")
                                                                                            (("2"
                                                                                              (inst?
                                                                                               -1
                                                                                               :subst
                                                                                               ("n"
                                                                                                "n1"
                                                                                                "m"
                                                                                                "max(n1,n2)"))
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (lemma
                                                                                                   "eval_expr_ge_n")
                                                                                                  (("2"
                                                                                                    (inst?
                                                                                                     -1
                                                                                                     :subst
                                                                                                     ("n"
                                                                                                      "n2"
                                                                                                      "m"
                                                                                                      "max(n1,n2)"
                                                                                                      "expr"
                                                                                                      "get_arg2(expr1)"))
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "semantic_rel_expr"
                                                                                                         2)
                                                                                                        (("2"
                                                                                                          (inst?)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil)))))))))))))))))))))))))))
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "n1")
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "n2")
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil)))))))))))))))))
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (1
                                                                          -3
                                                                          -2))
                                                                        (("2"
                                                                          (lemma
                                                                           "subterm_append")
                                                                          (("2"
                                                                            (inst?
                                                                             :where
                                                                             -3)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "cons(0, null)")
                                                                                (("1"
                                                                                  (expand
                                                                                   "append"
                                                                                   -1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "append"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil)))))))
                                                                                 ("2"
                                                                                  (replaces
                                                                                   -2
                                                                                   :dir
                                                                                   RL)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "valid_path")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "length"
                                                                                       1)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "length"
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "nth"
                                                                                           1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "reverse"
                                                                                             1
                                                                                             2)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "reverse"
                                                                                               1
                                                                                               2)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "append"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "reverse"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (use
                                                                                                     "null_path")
                                                                                                    nil)))))))))))))))))))
                                                                                 ("3"
                                                                                  (expand
                                                                                   "every")
                                                                                  (("3"
                                                                                    (propax)
                                                                                    nil)))))))))))))
                                                                       ("3"
                                                                        (hide-all-but
                                                                         (1
                                                                          -4
                                                                          -2))
                                                                        (("3"
                                                                          (use
                                                                           "path_conditions_unmodified")
                                                                          (("3"
                                                                            (assert)
                                                                            nil)))))))
                                                                     ("2"
                                                                      (hide-all-but
                                                                       (1
                                                                        -3
                                                                        -2))
                                                                      (("2"
                                                                        (use
                                                                         "valid_0_path_ext")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (assert)
                                                                            nil)))))))))
                                                                   ("2"
                                                                    (hide-all-but
                                                                     (1
                                                                      -3
                                                                      -2))
                                                                    (("2"
                                                                      (lemma
                                                                       "subterm_append")
                                                                      (("2"
                                                                        (inst?
                                                                         -1
                                                                         :where
                                                                         -3)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "cons(1, null)")
                                                                            (("1"
                                                                              (expand
                                                                               "append"
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "append"
                                                                                 -1)
                                                                                (("1"
                                                                                  (replaces
                                                                                   -1)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil)))))))
                                                                             ("2"
                                                                              (replaces
                                                                               -2
                                                                               :dir
                                                                               RL)
                                                                              (("2"
                                                                                (expand
                                                                                 "valid_path")
                                                                                (("2"
                                                                                  (expand
                                                                                   "length"
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "length"
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "nth")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "reverse"
                                                                                         1
                                                                                         2)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "reverse"
                                                                                           1
                                                                                           2)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "append"
                                                                                             1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "reverse")
                                                                                              (("2"
                                                                                                (use
                                                                                                 "null_path")
                                                                                                nil)))))))))))))))))))
                                                                             ("3"
                                                                              (expand
                                                                               "every")
                                                                              (("3"
                                                                                (propax)
                                                                                nil)))))))))))))
                                                                   ("3"
                                                                    (hide-all-but
                                                                     (1
                                                                      -4
                                                                      -3
                                                                      -2))
                                                                    (("3"
                                                                      (use
                                                                       "path_conditions_unmodified")
                                                                      (("3"
                                                                        (assert)
                                                                        (("3"
                                                                          (assert)
                                                                          nil)))))))))
                                                                 ("2"
                                                                  (use
                                                                   "valid_1_path_ext")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (assert)
                                                                      nil)))))))
                                                               ("2"
                                                                (hide-all-but
                                                                 (1
                                                                  -2))
                                                                (("2"
                                                                  (grind)
                                                                  nil)))))))
                                                           ("2"
                                                            (hide-all-but
                                                             (1 -1))
                                                            (("2"
                                                              (grind)
                                                              nil)))))))))))
                                                   ("2"
                                                    (typepred "expr1")
                                                    (("2"
                                                      (assert)
                                                      nil)))))))))))))))))))))
                                 ("2"
                                  (hide-all-but 1)
                                  (("2"
                                    (skeep)
                                    (("2"
                                      (use "wf_nat")
                                      (("2" (grind) nil)))))))
                                 ("3"
                                  (hide-all-but 1)
                                  (("3"
                                    (use "wf_nat")
                                    (("3" (grind) nil)))))
                                 ("4"
                                  (hide-all-but 1)
                                  (("4"
                                    (use "wf_nat")
                                    (("4"
                                      (grind)
                                      nil))))))))))))))))))))))))))))))))))
    nil)
   nil nil)
  (pvs0_termination_terminates-1 nil 3643023691 ("" (postpone) nil nil)
   nil shostak)))

