(gcd_pvs0
 (eop1_TCC1 0
  (eop1_TCC1-1 nil 3653992939 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil))
 (IMP_measure_termination_TCC1 0
  (IMP_measure_termination_TCC1-1 nil 3653992939
   ("" (lemma "well_founded_le") (("" (grind) nil nil)) nil)
   ((restrict const-decl "R" restrict nil)
    (well_founded? const-decl "bool" orders nil)
    (well_founded_le formula-decl nil ordinals nil))
   nil))
 (pvs0_gcd_tcc_termination 0
  (pvs0_gcd_tcc_termination-3 nil 3665260227
   ("" (expand "pvs0_tcc_termination")
    (("" (expand "pvs0_tcc_termination_pred")
      (("" (inst 1 "lex2")
        (("" (skeep)
          (("" (skeep)
            (("" (skeep)
              (("" (typepred "cc")
                (("" (use "pvs0_ccs_completness")
                  (("" (eval-expr "pvs0_ccs(pvs0_gcd`4)")
                    (("" (replaces -1)
                      (("" (expand "member")
                        (("" (expand* "member")
                          (("" (expand* "member")
                            (("" (prop)
                              (("1"
                                (replaces -1)
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand "semantic_rel_expr")
                                    (("1"
                                      (expand "semantic_rel_expr")
                                      (("1"
                                        (expand "pvs0_gcd" -2)
                                        (("1"
                                          (expand "eop1" -2)
                                          (("1"
                                            (skeep)
                                            (("1"
                                              (replaces -2)
                                              (("1"
                                                (replaces -2)
                                                (("1"
                                                  (hide -1)
                                                  (("1"
                                                    (lift-if)
                                                    (("1"
                                                      (prop)
                                                      (("1"
                                                        (lemma
                                                         "lex2_lt")
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "env`1"
                                                             "env`2")
                                                            (("1"
                                                              (expand
                                                               "eval_conds")
                                                              (("1"
                                                                (expand
                                                                 "eval_conds_rec")
                                                                (("1"
                                                                  (expand
                                                                   "eval_conds_rec")
                                                                  (("1"
                                                                    (expand
                                                                     "eval_conds_rec")
                                                                    (("1"
                                                                      (prop)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (skeep)
                                                                          (("1"
                                                                            (expand
                                                                             "pvs0_gcd"
                                                                             -4)
                                                                            (("1"
                                                                              (expand
                                                                               "ebool")
                                                                              (("1"
                                                                                (expand
                                                                                 "semantic_rel_expr")
                                                                                (("1"
                                                                                  (expand
                                                                                   "semantic_rel_expr")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "pvs0_gcd"
                                                                                     -3)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "eop1")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "boole")
                                                                                        (("1"
                                                                                          (skeep)
                                                                                          (("1"
                                                                                            (skeep)
                                                                                            (("1"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "eval_conds")
                                                        (("2"
                                                          (expand
                                                           "eval_conds_rec")
                                                          (("2"
                                                            (expand
                                                             "eval_conds_rec")
                                                            (("2"
                                                              (expand
                                                               "eval_conds_rec")
                                                              (("2"
                                                                (prop)
                                                                (("2"
                                                                  (skeep*)
                                                                  (("2"
                                                                    (lemma
                                                                     "lex2_lt")
                                                                    (("2"
                                                                      (inst?)
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "env`1"
                                                                         "env`2")
                                                                        (("2"
                                                                          (expand
                                                                           "semantic_rel_expr")
                                                                          (("2"
                                                                            (expand
                                                                             "semantic_rel_expr")
                                                                            (("2"
                                                                              (expand
                                                                               "pvs0_gcd")
                                                                              (("2"
                                                                                (expand
                                                                                 "ebool")
                                                                                (("2"
                                                                                  (expand
                                                                                   "eop1")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "boole")
                                                                                    (("2"
                                                                                      (skeep*)
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (replaces -1)
                                (("2"
                                  (hide -1)
                                  (("2"
                                    (expand "eval_conds")
                                    (("2"
                                      (expand "eval_conds_rec")
                                      (("2"
                                        (expand "eval_conds_rec")
                                        (("2"
                                          (expand "eval_conds_rec")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (expand
                                               "semantic_rel_expr")
                                              (("2"
                                                (expand
                                                 "semantic_rel_expr")
                                                (("2"
                                                  (expand "pvs0_gcd")
                                                  (("2"
                                                    (expand "eop1")
                                                    (("2"
                                                      (expand "boole")
                                                      (("2"
                                                        (expand
                                                         "ebool")
                                                        (("2"
                                                          (skeep*)
                                                          (("2"
                                                            (replaces
                                                             -1)
                                                            (("2"
                                                              (replaces
                                                               -2)
                                                              (("2"
                                                                (replaces
                                                                 -4)
                                                                (("2"
                                                                  (replace
                                                                   -2)
                                                                  (("2"
                                                                    (lift-if
                                                                     -3)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (prop)
                                                                        (("2"
                                                                          (replace
                                                                           -3)
                                                                          (("2"
                                                                            (lift-if
                                                                             -4)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (prop)
                                                                                (("2"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "lex2_lt")
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -1
                                                                                         "env`1"
                                                                                         "env`2")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((pvs0_tcc_termination_pred const-decl "bool"
     measure_termination_defs nil)
    (pvs0_ccs_completness formula-decl nil pvs0_to_dg nil)
    (eop1 const-decl "Val" gcd_pvs0 nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (env skolem-const-decl "Val[T]" gcd_pvs0 nil)
    (eval_conds const-decl "bool" pvs0_cc nil)
    (ebool const-decl "bool" gcd_pvs0 nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (boole const-decl "Val" gcd_pvs0 nil)
    (eval_conds_rec def-decl "bool" pvs0_cc nil)
    (lex2_lt formula-decl nil lex2 nil)
    (semantic_rel_expr inductive-decl "bool" pvs0_expr nil)
    (member def-decl "bool" list_props nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" list_adt nil)
    (pvs0_ccs const-decl "list[(pvs0_tcc_valid_cc(def))]" pvs0_to_dg
              nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (PVS0Bool type-decl nil PVS0Bool_adt nil)
    (pvs0bool? adt-recognizer-decl "[PVS0Bool -> boolean]" PVS0Bool_adt
     nil)
    (pvs0bool adt-constructor-decl "[PVS0Expr[T] -> (pvs0bool?)]"
     PVS0Bool_adt nil)
    (op1? adt-recognizer-decl "[PVS0Expr -> boolean]" PVS0Expr_adt nil)
    (op1 adt-constructor-decl "[[nat, PVS0Expr] -> (op1?)]"
     PVS0Expr_adt nil)
    (vr? adt-recognizer-decl "[PVS0Expr -> boolean]" PVS0Expr_adt nil)
    (vr adt-constructor-decl "(vr?)" PVS0Expr_adt nil)
    (pvs0not? adt-recognizer-decl "[PVS0Bool -> boolean]" PVS0Bool_adt
     nil)
    (pvs0not adt-constructor-decl "[PVS0Expr[T] -> (pvs0not?)]"
     PVS0Bool_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (rec adt-constructor-decl "[PVS0Expr -> (rec?)]" PVS0Expr_adt nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (PVS0Expr type-decl nil PVS0Expr_adt nil)
    (Conditions type-eq-decl nil pvs0_cc nil)
    (list type-decl nil list_adt nil)
    (rec? adt-recognizer-decl "[PVS0Expr -> boolean]" PVS0Expr_adt nil)
    (PVS0Expr_CC type-eq-decl nil pvs0_cc nil)
    (pvs0_tcc_valid_cc const-decl "bool" pvs0_cc nil)
    (EvalBool type-eq-decl nil pvs0_lang nil)
    (EvalOp1 type-eq-decl nil pvs0_lang nil)
    (EvalOp2 type-eq-decl nil pvs0_lang nil)
    (PVS0 type-eq-decl nil pvs0_lang nil)
    (pvs0_gcd const-decl "PVS0" gcd_pvs0 nil)
    (lex2 const-decl "ordinal" lex2 nil)
    (ordinal nonempty-type-eq-decl nil ordinals nil)
    (WFM type-eq-decl nil measure_termination_defs nil)
    (< def-decl "bool" ordinals nil)
    (restrict const-decl "R" restrict nil)
    (MT type-eq-decl nil gcd_pvs0 nil)
    (ordinal? def-decl "bool" ordinals nil)
    (ordstruct type-decl nil ordstruct_adt nil)
    (Val type-eq-decl nil pvs0_expr nil)
    (T type-eq-decl nil gcd_pvs0 nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (pvs0_tcc_termination const-decl "bool" measure_termination_defs
     nil))
   nil)
  (pvs0_gcd_tcc_termination-2 nil 3653993416
   ("" (expand "pvs0_tcc_termination")
    (("" (expand "pvs0_tcc_termination_pred")
      (("" (inst 1 "lex2")
        (("" (skeep)
          (("" (skeep)
            (("" (skeep)
              (("" (typepred "cc")
                (("" (use "pvs0_ccs_completness")
                  (("" (eval-expr "pvs0_ccs(pvs0_gcd)")
                    (("" (replaces -1)
                      (("" (expand "member")
                        (("" (expand* "member")
                          (("" (expand* "member")
                            (("" (prop)
                              (("1"
                                (replaces -1)
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand "semantic_rel_expr")
                                    (("1"
                                      (expand "semantic_rel_expr")
                                      (("1"
                                        (expand "eop1" -2)
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (replaces -2)
                                            (("1"
                                              (replaces -2)
                                              (("1"
                                                (hide -1)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (prop)
                                                    (("1"
                                                      (lemma "lex2_lt")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "env(vr)`1"
                                                           "env(vr)`2")
                                                          (("1"
                                                            (expand
                                                             "eval_conds_rec")
                                                            (("1"
                                                              (expand
                                                               "eval_conds_rec")
                                                              (("1"
                                                                (expand
                                                                 "eval_conds_rec")
                                                                (("1"
                                                                  (prop)
                                                                  (("1"
                                                                    (skeep)
                                                                    (("1"
                                                                      (skeep)
                                                                      (("1"
                                                                        (expand
                                                                         "ebool")
                                                                        (("1"
                                                                          (expand
                                                                           "semantic_rel_expr")
                                                                          (("1"
                                                                            (expand
                                                                             "semantic_rel_expr")
                                                                            (("1"
                                                                              (expand
                                                                               "eop1")
                                                                              (("1"
                                                                                (expand
                                                                                 "boole")
                                                                                (("1"
                                                                                  (skeep)
                                                                                  (("1"
                                                                                    (skeep)
                                                                                    (("1"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "eval_conds_rec")
                                                      (("2"
                                                        (expand
                                                         "eval_conds_rec")
                                                        (("2"
                                                          (expand
                                                           "eval_conds_rec")
                                                          (("2"
                                                            (prop)
                                                            (("2"
                                                              (skeep*)
                                                              (("2"
                                                                (lemma
                                                                 "lex2_lt")
                                                                (("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "env(vr)`1"
                                                                     "env(vr)`2")
                                                                    (("2"
                                                                      (expand
                                                                       "semantic_rel_expr")
                                                                      (("2"
                                                                        (expand
                                                                         "semantic_rel_expr")
                                                                        (("2"
                                                                          (expand
                                                                           "ebool")
                                                                          (("2"
                                                                            (expand
                                                                             "eop1")
                                                                            (("2"
                                                                              (expand
                                                                               "boole")
                                                                              (("2"
                                                                                (skeep*)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (replaces -1)
                                (("2"
                                  (hide -1)
                                  (("2"
                                    (expand "eval_conds_rec")
                                    (("2"
                                      (expand "eval_conds_rec")
                                      (("2"
                                        (expand "eval_conds_rec")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (expand
                                             "semantic_rel_expr")
                                            (("2"
                                              (expand
                                               "semantic_rel_expr")
                                              (("2"
                                                (expand "eop1")
                                                (("2"
                                                  (expand "boole")
                                                  (("2"
                                                    (expand "ebool")
                                                    (("2"
                                                      (skeep*)
                                                      (("2"
                                                        (replaces -1)
                                                        (("2"
                                                          (replaces -2)
                                                          (("2"
                                                            (replaces
                                                             -4)
                                                            (("2"
                                                              (replace
                                                               -2)
                                                              (("2"
                                                                (lift-if
                                                                 -3)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (prop)
                                                                    (("2"
                                                                      (replace
                                                                       -3)
                                                                      (("2"
                                                                        (lift-if
                                                                         -4)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (prop)
                                                                            (("2"
                                                                              (replace
                                                                               -1)
                                                                              (("2"
                                                                                (lemma
                                                                                 "lex2_lt")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -1
                                                                                     "env(vr)`1"
                                                                                     "env(vr)`2")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "env(vr)`1")
                                                                                        (("2"
                                                                                          (hide-all-but
                                                                                           (1
                                                                                            2
                                                                                            -1))
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "both_sides_minus_lt2")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -1
                                                                                               "env(vr)`1"
                                                                                               "0"
                                                                                               "env(vr)`2")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((pvs0_tcc_termination_pred const-decl "bool"
     measure_termination_defs nil)
    (pvs0_ccs_completness formula-decl nil pvs0_to_dg nil)
    (lex2_lt formula-decl nil lex2 nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (boole const-decl "Val" gcd_pvs0 nil)
    (ebool const-decl "bool" gcd_pvs0 nil)
    (eval_conds_rec def-decl "bool" pvs0_cc nil)
    (Val type-eq-decl nil pvs0_expr nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (eop1 const-decl "Val" gcd_pvs0 nil)
    (semantic_rel_expr inductive-decl "bool" pvs0_expr nil)
    (member def-decl "bool" list_props nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (PRED type-eq-decl nil defined_types nil)
    (pvs0_ccs const-decl "list[(pvs0_tcc_valid_cc(def))]" pvs0_to_dg
              nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (PVS0Bool type-decl nil PVS0Bool_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (cnst? adt-recognizer-decl "[PVS0Expr -> boolean]" PVS0Expr_adt
     nil)
    (vr? adt-recognizer-decl "[PVS0Expr -> boolean]" PVS0Expr_adt nil)
    (op1? adt-recognizer-decl "[PVS0Expr -> boolean]" PVS0Expr_adt nil)
    (op2? adt-recognizer-decl "[PVS0Expr -> boolean]" PVS0Expr_adt nil)
    (ite? adt-recognizer-decl "[PVS0Expr -> boolean]" PVS0Expr_adt nil)
    nil
    (pvs0bool? adt-recognizer-decl "[PVS0Bool -> boolean]" PVS0Bool_adt
     nil)
    (pvs0bool adt-constructor-decl "[PVS0Expr[T] -> (pvs0bool?)]"
     PVS0Bool_adt nil)
    (op1 adt-constructor-decl "[[nat, PVS0Expr] -> (op1?)]"
     PVS0Expr_adt nil)
    (vr adt-constructor-decl "(vr?)" PVS0Expr_adt nil)
    (pvs0not? adt-recognizer-decl "[PVS0Bool -> boolean]" PVS0Bool_adt
     nil)
    (pvs0not adt-constructor-decl "[PVS0Expr[T] -> (pvs0not?)]"
     PVS0Bool_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (rec adt-constructor-decl "[PVS0Expr -> (rec?)]" PVS0Expr_adt nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (PVS0Expr type-decl nil PVS0Expr_adt nil)
    (Conditions type-eq-decl nil pvs0_cc nil)
    (list type-decl nil list_adt nil)
    (rec? adt-recognizer-decl "[PVS0Expr -> boolean]" PVS0Expr_adt nil)
    (PVS0Expr_CC type-eq-decl nil pvs0_cc nil)
    (pvs0_tcc_valid_cc const-decl "bool" pvs0_cc nil)
    (pvs0_gcd const-decl "PVS0" gcd_pvs0 nil)
    (lex2 const-decl "ordinal" lex2 nil)
    (ordinal nonempty-type-eq-decl nil ordinals nil)
    (WFM type-eq-decl nil measure_termination_defs nil)
    (< def-decl "bool" ordinals nil)
    (restrict const-decl "R" restrict nil)
    (MT type-eq-decl nil gcd_pvs0 nil)
    (ordinal? def-decl "bool" ordinals nil)
    (ordstruct type-decl nil ordstruct_adt nil)
    (Val type-eq-decl nil pvs0_expr nil)
    (T type-eq-decl nil gcd_pvs0 nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (pvs0_tcc_termination const-decl "bool" measure_termination_defs
     nil))
   nil)
  (pvs0_gcd_tcc_termination-1 nil 3653992939
   ("" (judgement-tcc) nil nil) nil nil))
 (gcd_wfm_TCC1 0
  (gcd_wfm_TCC1-1 nil 3653992939
   ("" (lemma "pvs0_gcd_tcc_termination")
    (("" (expand "pvs0_tcc_termination")
      (("" (skeep -) (("" (inst?) nil nil)) nil)) nil))
    nil)
   ((pvs0_tcc_termination const-decl "bool" measure_termination_defs
     nil)
    (wfm skolem-const-decl
     "WFM[T, MT, restrict[[ordstruct, ordstruct], [MT, MT], boolean](ordinals.<)]"
     gcd_pvs0 nil)
    (pvs0_gcd const-decl "PVS0" gcd_pvs0 nil)
    (pvs0_tcc_termination_pred const-decl "bool"
     measure_termination_defs nil)
    (PVS0 type-eq-decl nil pvs0_lang nil)
    (PVS0Expr type-decl nil PVS0Expr_adt nil)
    (EvalOp2 type-eq-decl nil pvs0_lang nil)
    (EvalOp1 type-eq-decl nil pvs0_lang nil)
    (EvalBool type-eq-decl nil pvs0_lang nil)
    (WFM type-eq-decl nil measure_termination_defs nil)
    (< def-decl "bool" ordinals nil)
    (restrict const-decl "R" restrict nil)
    (MT type-eq-decl nil gcd_pvs0 nil)
    (ordinal? def-decl "bool" ordinals nil)
    (ordstruct type-decl nil ordstruct_adt nil)
    (Val type-eq-decl nil pvs0_expr nil)
    (T type-eq-decl nil gcd_pvs0 nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (pvs0_gcd_tcc_termination name-judgement "(pvs0_tcc_termination)"
     gcd_pvs0 nil)
    (pvs0_gcd_tcc_termination judgement-tcc nil gcd_pvs0 nil))
   nil))
 (gcd_pvs0_m_n_TCC1 0
  (gcd_pvs0_m_n_TCC1-1 nil 3653992939 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (gcd_pvs0_m_n 0
  (gcd_pvs0_m_n-2 nil 3665260289
   ("" (skeep)
    (("" (lift-if)
      (("" (prop)
        (("1" (grind) nil nil) ("2" (grind) nil nil)
         ("3" (expand "gcd_pvs0" 1 1)
          (("3" (expand "Omega_eval")
            (("3" (expand "eval")
              (("3" (expand "pvs0_gcd" 1 1)
                (("3" (expand "pvs0_gcd" 1 1)
                  (("3" (expand "pvs0_gcd" 1 1)
                    (("3" (expand "pvs0_gcd" 1 1)
                      (("3" (expand "eval_expr" 1)
                        (("3" (lift-if)
                          (("3" (prop)
                            (("1" (grind) nil nil)
                             ("2" (hide-all-but (-1 3 4))
                              (("2" (grind) nil nil)) nil)
                             ("3" (hide 1)
                              (("3"
                                (expand "eval_expr" 1)
                                (("3"
                                  (lift-if)
                                  (("3"
                                    (prop)
                                    (("1"
                                      (expand "eval_expr" 1)
                                      (("1"
                                        (lift-if)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (hide 3 4)
                                            (("1"
                                              (expand "eval_expr" 1 2)
                                              (("1"
                                                (expand
                                                 "eval_expr"
                                                 1
                                                 2)
                                                (("1"
                                                  (expand
                                                   "eval_expr"
                                                   1
                                                   2)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand
                                                         "eop1"
                                                         1
                                                         2)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "gcd_pvs0")
                                                            (("1"
                                                              (expand
                                                               "Omega_eval")
                                                              (("1"
                                                                (expand
                                                                 "eval")
                                                                (("1"
                                                                  (lemma
                                                                   "eval_expr_ge_n")
                                                                  (("1"
                                                                    (inst
                                                                     -1
                                                                     "ebool"
                                                                     "eop1"
                                                                     "eop2"
                                                                     "Omega
                                             [Val[T],
                                              lt_val(pvs0_gcd)
                                                    (choose({wfm:
                                                             WFM
                                                             [T,
                                                              MT,
                                                              restrict
                                                              [[ordstruct, ordstruct],
                                                               [MT, MT],
                                                               boolean]
                                                              (ordinals.<)]
                                                             |
                                                             pvs0_tcc_termination_pred
                                                             
                                                             (pvs0_gcd)
                                                             (wfm)}))]
                                             (m, n - m)"
                                                                     "Omega
                                            [Val[T],
                                             lt_val(pvs0_gcd)
                                                   (choose({wfm:
                                                            WFM
                                                            [T,
                                                             MT,
                                                             restrict
                                                             [[ordstruct, ordstruct],
                                                              [MT, MT],
                                                              boolean]
                                                             (ordinals.<)]
                                                            |
                                                            pvs0_tcc_termination_pred
                                                            
                                                            (pvs0_gcd)
                                                            (wfm)}))]
                                            (m, n)
                                         - 1"
                                                                     "pvs0_gcd`4"
                                                                     "pvs0_gcd`4"
                                                                     "(m, n - m)")
                                                                    (("1"
                                                                      (beta)
                                                                      (("1"
                                                                        (lemma
                                                                         "Omega_eval_TCC4")
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "pvs0_gcd"
                                                                           "(m,n-m)"
                                                                           "_")
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             " choose({wfm:
                                           WFM
                                               [T, MT,
                                                restrict[[ordstruct, ordstruct], [MT, MT], boolean]
                                                    (ordinals.<)]
                                           |
                                           pvs0_tcc_termination_pred
                                                                    (pvs0_gcd)
                                                                    (wfm)})")
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               " Omega
                                         [Val[T],
                                          lt_val(pvs0_gcd)
                                                (choose({wfm:
                                                           WFM
                                                               [T,
                                                                MT,
                                                                restrict
                                                                [[ordstruct, ordstruct],
                                                                 [MT, MT],
                                                                 boolean]
                                                                (ordinals.<)]
                                                           |
                                                           pvs0_tcc_termination_pred
                                                                                    (pvs0_gcd)
                                                                                    (wfm)}))]
                                         (m, n - m)")
                                                                              (("1"
                                                                                (expand
                                                                                 "eval")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "pvs0_gcd")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "Omega_eval_TCC3")
                                                                                  (("2"
                                                                                    (inst?)
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "Omega_eval_TCC1")
                                                                                        (("1"
                                                                                          (inst?)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "well_founded_le")
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("3"
                                                                                  (lemma
                                                                                   "Omega_eval_TCC2")
                                                                                  (("3"
                                                                                    (inst?)
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "Omega_eval_TCC1")
                                                                                        (("1"
                                                                                          (inst?)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "well_founded_le")
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("4"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("4"
                                                                                  (lemma
                                                                                   "Omega_eval_TCC1")
                                                                                  (("4"
                                                                                    (inst?)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("5"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("5"
                                                                                  (lemma
                                                                                   "well_founded_le")
                                                                                  (("5"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (lemma
                                                                                 "Omega_eval_TCC1")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("3"
                                                                                (lemma
                                                                                 "well_founded_le")
                                                                                (("3"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide-all-but
                                                                       (1
                                                                        4
                                                                        5
                                                                        -5))
                                                                      (("2"
                                                                        (lemma
                                                                         "omega_increasing[[nat,nat],lt_val
                                        [T, MT,
                                         restrict[[ordstruct, ordstruct], [MT, MT], boolean]
                                             (ordinals.<)]
                                        (pvs0_gcd)
                                        (choose
                                             [WFM
                                                  [T, MT,
                                                   restrict
                                                       [[ordstruct, ordstruct], [MT, MT], boolean]
                                                       (ordinals.<)]]
                                             ({wfm:
                                                 WFM
                                                     [T, MT,
                                                      restrict
                                                          [[ordstruct, ordstruct], [MT, MT],
                                                           boolean]
                                                          (ordinals.<)]
                                                 |
                                                 pvs0_tcc_termination_pred
                                                     [T, MT,
                                                      restrict
                                                          [[ordstruct, ordstruct], [MT, MT],
                                                           boolean]
                                                          (ordinals.<)]
                                                     (pvs0_gcd)(wfm)}))]")
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "(m,n)"
                                                                           "(m,n-m)")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (expand
                                                                               "lt_val")
                                                                              (("2"
                                                                                (inst
                                                                                 1
                                                                                 "(# cnds
                                                             := (: pvs0bool(op1(1, vr)),
                                                                   pvs0not(op1(0, vr)) :),
                                                           path := (: 1, 2 :),
                                                           rec_expr := rec(op1(3, vr)) #)")
                                                                                (("1"
                                                                                  (prop)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "semantic_rel_expr")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "semantic_rel_expr")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "pvs0_gcd")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "eop1")
                                                                                            (("1"
                                                                                              (inst
                                                                                               1
                                                                                               "(m,n)")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "eval_conds")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "eval_conds_rec")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "eval_conds_rec")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "eval_conds_rec")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "semantic_rel_expr")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "semantic_rel_expr")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "pvs0_gcd")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "eop1")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "boole")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "ebool")
                                                                                                      (("2"
                                                                                                        (prop)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           1
                                                                                                           "(1,0)")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               1
                                                                                                               "(m,n)")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (inst
                                                                                                           1
                                                                                                           "(0,0)")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               1
                                                                                                               "(m,n)")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (typepred
                                                                                     "choose
                                                        [WFM
                                                             [T, MT,
                                                              restrict[[ordstruct, ordstruct], [MT, MT], boolean]
                                                                  (ordinals.<)]]
                                                        ({wfm:
                                                            WFM
                                                                [T, MT,
                                                                 restrict[[ordstruct, ordstruct], [MT, MT], boolean]
                                                                     (ordinals.<)]
                                                            |
                                                            pvs0_tcc_termination_pred
                                                                [T, MT,
                                                                 restrict[[ordstruct, ordstruct], [MT, MT], boolean]
                                                                     (ordinals.<)]
                                                                (pvs0_gcd)(wfm)})")
                                                                                    (("3"
                                                                                      (expand
                                                                                       "pvs0_tcc_termination_pred"
                                                                                       -1
                                                                                       1)
                                                                                      (("3"
                                                                                        (inst
                                                                                         -1
                                                                                         "(m,n)")
                                                                                        (("3"
                                                                                          (inst
                                                                                           -1
                                                                                           "(# cnds
                                                                     := (: pvs0bool(op1(1, vr)),
                                                                           pvs0not(op1(0, vr)) :),
                                                                   path := (: 1, 2 :),
                                                                   rec_expr := rec(op1(3, vr)) #)")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "(m,n-m)")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "restrict")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   2)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "eval_conds")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "eval_conds_rec")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "eval_conds_rec")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "eval_conds_rec")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "semantic_rel_expr")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "semantic_rel_expr")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "pvs0_gcd")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "eop1")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "boole")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "ebool")
                                                                                                                      (("1"
                                                                                                                        (prop)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           1
                                                                                                                           "(m,n)")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (inst
                                                                                                                           1
                                                                                                                           "(1,0)")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               1
                                                                                                                               "(m,n)")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (inst
                                                                                                                           1
                                                                                                                           "(0,0)")
                                                                                                                          (("3"
                                                                                                                            (assert)
                                                                                                                            (("3"
                                                                                                                              (inst
                                                                                                                               1
                                                                                                                               "(m,n)")
                                                                                                                              (("3"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (typepred
                                                                                               "pvs0_ccs(pvs0_gcd`4)")
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "every_nth")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "0")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "(# cnds
                                                                          := (: pvs0bool[Val[T]](op1[Val[T]](1, vr[Val[T]])),
                                                                                pvs0not[Val[T]](op1[Val[T]](0, vr[Val[T]])) :),
                                                                        path := (: 1, 2 :),
                                                                        rec_expr := rec[Val[T]](op1[Val[T]](3, vr[Val[T]])) #) = nth(pvs0_ccs(pvs0_gcd`4), 0)")
                                                                                                    (("1"
                                                                                                      (replaces
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide-all-but
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (hide-all-but
                                                                                                       1)
                                                                                                      (("3"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (hide-all-but
                                                                                             1)
                                                                                            (("3"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (typepred
                                                                                   "pvs0_ccs(pvs0_gcd`4)")
                                                                                  (("2"
                                                                                    (rewrite
                                                                                     "every_nth")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -1
                                                                                       "0")
                                                                                      (("1"
                                                                                        (case
                                                                                         "(# cnds
                                                                  := (: pvs0bool[Val[T]](op1[Val[T]](1, vr[Val[T]])),
                                                                        pvs0not[Val[T]](op1[Val[T]](0, vr[Val[T]])) :),
                                                                path := (: 1, 2 :),
                                                                rec_expr := rec[Val[T]](op1[Val[T]](3, vr[Val[T]])) #) = nth(pvs0_ccs(pvs0_gcd`4), 0)")
                                                                                        (("1"
                                                                                          (replaces
                                                                                           -1)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("3"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("3"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("3"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("2"
                                                                            (lemma
                                                                             "Omega_eval_TCC3")
                                                                            (("2"
                                                                              (inst?)
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "Omega_eval_TCC1")
                                                                                  (("1"
                                                                                    (inst?)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "well_founded_le")
                                                                                  (("2"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("3"
                                                                            (lemma
                                                                             "Omega_eval_TCC2")
                                                                            (("3"
                                                                              (inst?)
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "Omega_eval_TCC1")
                                                                                  (("1"
                                                                                    (inst?)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "well_founded_le")
                                                                                  (("2"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("4"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("4"
                                                                            (lemma
                                                                             "Omega_eval_TCC1")
                                                                            (("4"
                                                                              (inst?)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("5"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("5"
                                                                            (lemma
                                                                             "well_founded_le")
                                                                            (("5"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("3"
                                                                        (lemma
                                                                         "Omega_eval_TCC3")
                                                                        (("3"
                                                                          (inst?)
                                                                          (("1"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("1"
                                                                              (lemma
                                                                               "Omega_eval_TCC1")
                                                                              (("1"
                                                                                (inst?)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (lemma
                                                                               "well_founded_le")
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("4"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("4"
                                                                        (lemma
                                                                         "Omega_eval_TCC2")
                                                                        (("4"
                                                                          (inst?)
                                                                          (("1"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("1"
                                                                              (lemma
                                                                               "Omega_eval_TCC1")
                                                                              (("1"
                                                                                (inst?)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (lemma
                                                                               "well_founded_le")
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("5"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("5"
                                                                        (lemma
                                                                         "Omega_eval_TCC1")
                                                                        (("5"
                                                                          (inst?)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("6"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("6"
                                                                        (lemma
                                                                         "well_founded_le")
                                                                        (("6"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide-all-but 1)
                                            (("2" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide-all-but (-3 1 5 6))
                                      (("2" (grind) nil nil))
                                      nil)
                                     ("3"
                                      (hide-all-but 1)
                                      (("3" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("4" (hide-all-but 1)
                              (("4" (grind) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("4" (expand "gcd_pvs0" 2 1)
          (("4" (expand "Omega_eval")
            (("4" (expand "eval")
              (("4" (expand "pvs0_gcd" 2 1)
                (("4" (expand "pvs0_gcd" 2 1)
                  (("4" (expand "pvs0_gcd" 2 1)
                    (("4" (expand "pvs0_gcd" 2 1)
                      (("4" (expand "eval_expr")
                        (("4" (assert)
                          (("4" (lift-if)
                            (("4" (prop)
                              (("1" (grind) nil nil)
                               ("2"
                                (hide-all-but (-1 3 4 5))
                                (("2" (grind) nil nil))
                                nil)
                               ("3"
                                (expand "eval_expr" 2)
                                (("3"
                                  (assert)
                                  (("3"
                                    (lift-if)
                                    (("3"
                                      (prop)
                                      (("1"
                                        (hide-all-but (-1 4 5 6))
                                        (("1" (grind) nil nil))
                                        nil)
                                       ("2"
                                        (expand "eval_expr" 2)
                                        (("2"
                                          (lift-if)
                                          (("2"
                                            (prop)
                                            (("1"
                                              (expand "eval_expr" 1 2)
                                              (("1"
                                                (expand
                                                 "eval_expr"
                                                 1
                                                 2)
                                                (("1"
                                                  (expand
                                                   "eval_expr"
                                                   1
                                                   2)
                                                  (("1"
                                                    (expand "pvs0_gcd")
                                                    (("1"
                                                      (expand
                                                       "eop1"
                                                       1
                                                       2)
                                                      (("1"
                                                        (expand
                                                         "gcd_pvs0"
                                                         1)
                                                        (("1"
                                                          (expand
                                                           "Omega_eval")
                                                          (("1"
                                                            (expand
                                                             "eval")
                                                            (("1"
                                                              (lemma
                                                               "eval_expr_ge_n")
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 "ebool"
                                                                 "eop1"
                                                                 "eop2"
                                                                 "Omega
                                             [Val[T],
                                              lt_val(pvs0_gcd)
                                                    (choose({wfm:
                                                             WFM
                                                             [T,
                                                              MT,
                                                              restrict
                                                              [[ordstruct, ordstruct],
                                                               [MT, MT],
                                                               boolean]
                                                              (ordinals.<)]
                                                             |
                                                             pvs0_tcc_termination_pred
                                                             (pvs0_gcd)
                                                             (wfm)}))]
                                             (n, m)"
                                                                 "Omega
                                            [Val[T],
                                             lt_val(pvs0_gcd)
                                                   (choose({wfm:
                                                            WFM
                                                            [T,
                                                             MT,
                                                             restrict
                                                             [[ordstruct, ordstruct],
                                                              [MT, MT],
                                                              boolean]
                                                             (ordinals.<)]
                                                            |
                                                            pvs0_tcc_termination_pred
                                                            (pvs0_gcd)
                                                            (wfm)}))]
                                            (m, n)
                                         - 1"
                                                                 "pvs0_gcd`4"
                                                                 "pvs0_gcd`4"
                                                                 "(n, m)")
                                                                (("1"
                                                                  (beta)
                                                                  (("1"
                                                                    (lemma
                                                                     "Omega_eval_TCC4")
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "pvs0_gcd"
                                                                       "(n,m)"
                                                                       "_")
                                                                      (("1"
                                                                        (inst
                                                                         -1
                                                                         "choose({wfm:
                                           WFM
                                               [T, MT,
                                                restrict[[ordstruct, ordstruct], [MT, MT], boolean]
                                                    (ordinals.<)]
                                           |
                                           pvs0_tcc_termination_pred
                                                                    (pvs0_gcd)
                                                                    (wfm)})")
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "Omega
                                         [Val[T],
                                          lt_val(pvs0_gcd)
                                                (choose({wfm:
                                                           WFM
                                                               [T,
                                                                MT,
                                                                restrict
                                                                [[ordstruct, ordstruct],
                                                                 [MT, MT],
                                                                 boolean]
                                                                (ordinals.<)]
                                                           |
                                                           pvs0_tcc_termination_pred
                                                                                    (pvs0_gcd)
                                                                                    (wfm)}))]
                                         (n, m)")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "eval")
                                                                              (("1"
                                                                                (expand
                                                                                 "pvs0_gcd")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (lemma
                                                                             "Omega_eval_TCC3")
                                                                            (("2"
                                                                              (inst?)
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "Omega_eval_TCC1")
                                                                                  (("1"
                                                                                    (inst?)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "well_founded_le")
                                                                                  (("2"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("3"
                                                                              (lemma
                                                                               "Omega_eval_TCC2")
                                                                              (("3"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "Omega_eval_TCC1")
                                                                                    (("1"
                                                                                      (inst?)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "well_founded_le")
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("4"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("4"
                                                                              (lemma
                                                                               "Omega_eval_TCC1")
                                                                              (("4"
                                                                                (inst?)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("5"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("5"
                                                                              (lemma
                                                                               "well_founded_le")
                                                                              (("5"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("2"
                                                                            (lemma
                                                                             "Omega_eval_TCC1")
                                                                            (("2"
                                                                              (inst?)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("3"
                                                                            (lemma
                                                                             "well_founded_le")
                                                                            (("3"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   (1
                                                                    6
                                                                    7
                                                                    8))
                                                                  (("2"
                                                                    (lemma
                                                                     "omega_increasing[[nat,nat],lt_val
                                        [T, MT,
                                         restrict[[ordstruct, ordstruct], [MT, MT], boolean]
                                             (ordinals.<)]
                                        (pvs0_gcd)
                                        (choose
                                             [WFM
                                                  [T, MT,
                                                   restrict
                                                       [[ordstruct, ordstruct], [MT, MT], boolean]
                                                       (ordinals.<)]]
                                             ({wfm:
                                                 WFM
                                                     [T, MT,
                                                      restrict
                                                          [[ordstruct, ordstruct], [MT, MT],
                                                           boolean]
                                                          (ordinals.<)]
                                                 |
                                                 pvs0_tcc_termination_pred
                                                     [T, MT,
                                                      restrict
                                                          [[ordstruct, ordstruct], [MT, MT],
                                                           boolean]
                                                          (ordinals.<)]
                                                     (pvs0_gcd)(wfm)}))]")
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "(m,n)"
                                                                       "(n,m)")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (expand
                                                                           "lt_val")
                                                                          (("2"
                                                                            (inst
                                                                             1
                                                                             " (# cnds
                                                             := (: pvs0not(op1(1, vr)),
                                                                   pvs0not(op1(0, vr)) :),
                                                           path := (: 2, 2 :),
                                                           rec_expr := rec(op1(4, vr)) #)")
                                                                            (("1"
                                                                              (prop)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "semantic_rel_expr")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "semantic_rel_expr")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "pvs0_gcd")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "eop1")
                                                                                        (("1"
                                                                                          (inst
                                                                                           1
                                                                                           "(m,n)")
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "eval_conds")
                                                                                (("2"
                                                                                  (expand
                                                                                   "eval_conds_rec")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "eval_conds_rec")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "eval_conds_rec")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "semantic_rel_expr")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "semantic_rel_expr")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "pvs0_gcd")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "eop1")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "boole")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "ebool")
                                                                                                  (("2"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       1
                                                                                                       "(0,0)")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           1
                                                                                                           "(m,n)")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (inst
                                                                                                       1
                                                                                                       "(0,0)")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           1
                                                                                                           "(m,n)")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (typepred
                                                                                 "choose
                                                        [WFM
                                                             [T, MT,
                                                              restrict[[ordstruct, ordstruct], [MT, MT], boolean]
                                                                  (ordinals.<)]]
                                                        ({wfm:
                                                            WFM
                                                                [T, MT,
                                                                 restrict[[ordstruct, ordstruct], [MT, MT], boolean]
                                                                     (ordinals.<)]
                                                            |
                                                            pvs0_tcc_termination_pred
                                                                [T, MT,
                                                                 restrict[[ordstruct, ordstruct], [MT, MT], boolean]
                                                                     (ordinals.<)]
                                                                (pvs0_gcd)(wfm)})")
                                                                                (("3"
                                                                                  (expand
                                                                                   "pvs0_tcc_termination_pred"
                                                                                   -1
                                                                                   1)
                                                                                  (("3"
                                                                                    (inst
                                                                                     -1
                                                                                     "(m,n)")
                                                                                    (("3"
                                                                                      (inst
                                                                                       -1
                                                                                       " (# cnds
                                                                     := (: pvs0not(op1(1, vr)),
                                                                           pvs0not(op1(0, vr)) :),
                                                                   path := (: 2, 2 :),
                                                                   rec_expr := rec(op1(4, vr)) #)")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "(n,m)")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "restrict")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (hide
                                                                                               2)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "eval_conds")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "eval_conds_rec")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "eval_conds_rec")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "eval_conds_rec")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "semantic_rel_expr")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "semantic_rel_expr")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "pvs0_gcd")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "eop1")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "boole")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "ebool")
                                                                                                                  (("1"
                                                                                                                    (prop)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       1
                                                                                                                       "(m,n)")
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (inst
                                                                                                                       1
                                                                                                                       "(0,0)")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           1
                                                                                                                           "(m,n)")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("3"
                                                                                                                      (inst
                                                                                                                       1
                                                                                                                       "(0,0)")
                                                                                                                      (("3"
                                                                                                                        (assert)
                                                                                                                        (("3"
                                                                                                                          (inst
                                                                                                                           1
                                                                                                                           "(m,n)")
                                                                                                                          (("3"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (typepred
                                                                                           "pvs0_ccs(pvs0_gcd`4)")
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "every_nth")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -1
                                                                                               "1")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "(# cnds
                                                                          := (: pvs0not[Val[T]](op1[Val[T]](1, vr[Val[T]])),
                                                                                pvs0not[Val[T]](op1[Val[T]](0, vr[Val[T]])) :),
                                                                        path := (: 2, 2 :),
                                                                        rec_expr := rec[Val[T]](op1[Val[T]](4, vr[Val[T]])) #) = nth(pvs0_ccs(pvs0_gcd`4), 1)")
                                                                                                (("1"
                                                                                                  (replaces
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("3"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("3"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (typepred
                                                                               "pvs0_ccs(pvs0_gcd`4)")
                                                                              (("2"
                                                                                (rewrite
                                                                                 "every_nth")
                                                                                (("2"
                                                                                  (inst
                                                                                   -1
                                                                                   "1")
                                                                                  (("1"
                                                                                    (case
                                                                                     "(# cnds
                                                                  := (: pvs0not[Val[T]](op1[Val[T]](1, vr[Val[T]])),
                                                                        pvs0not[Val[T]](op1[Val[T]](0, vr[Val[T]])) :),
                                                                path := (: 2, 2 :),
                                                                rec_expr := rec[Val[T]](op1[Val[T]](4, vr[Val[T]])) #) = nth(pvs0_ccs(pvs0_gcd`4), 1)")
                                                                                    (("1"
                                                                                      (replaces
                                                                                       -1)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("3"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("3"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("2"
                                                                        (lemma
                                                                         "Omega_eval_TCC3")
                                                                        (("2"
                                                                          (inst?)
                                                                          (("1"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("1"
                                                                              (lemma
                                                                               "Omega_eval_TCC1")
                                                                              (("1"
                                                                                (inst?)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (lemma
                                                                               "well_founded_le")
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("3"
                                                                        (lemma
                                                                         "Omega_eval_TCC2")
                                                                        (("3"
                                                                          (inst?)
                                                                          (("1"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("1"
                                                                              (lemma
                                                                               "Omega_eval_TCC1")
                                                                              (("1"
                                                                                (inst?)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (lemma
                                                                               "well_founded_le")
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("4"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("4"
                                                                        (lemma
                                                                         "Omega_eval_TCC1")
                                                                        (("4"
                                                                          (inst?)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("5"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("5"
                                                                        (lemma
                                                                         "well_founded_le")
                                                                        (("5"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("3"
                                                                    (lemma
                                                                     "Omega_eval_TCC3")
                                                                    (("3"
                                                                      (inst?)
                                                                      (("1"
                                                                        (hide-all-but
                                                                         1)
                                                                        (("1"
                                                                          (lemma
                                                                           "Omega_eval_TCC1")
                                                                          (("1"
                                                                            (inst?)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         1)
                                                                        (("2"
                                                                          (lemma
                                                                           "well_founded_le")
                                                                          (("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("4"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("4"
                                                                    (lemma
                                                                     "Omega_eval_TCC2")
                                                                    (("4"
                                                                      (inst?)
                                                                      (("1"
                                                                        (hide-all-but
                                                                         1)
                                                                        (("1"
                                                                          (lemma
                                                                           "Omega_eval_TCC1")
                                                                          (("1"
                                                                            (inst?)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         1)
                                                                        (("2"
                                                                          (lemma
                                                                           "well_founded_le")
                                                                          (("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("5"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("5"
                                                                    (lemma
                                                                     "Omega_eval_TCC1")
                                                                    (("5"
                                                                      (inst?)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("6"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("6"
                                                                    (lemma
                                                                     "well_founded_le")
                                                                    (("6"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide-all-but 1)
                                              (("2" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3"
                                        (hide-all-but 1)
                                        (("3" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("4"
                                (hide-all-but 1)
                                (("4" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((eval_expr_ge_n formula-decl nil pvs0_expr nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (semantic_rel_expr inductive-decl "bool" pvs0_expr nil)
    (eval_conds_rec def-decl "bool" pvs0_cc nil)
    (pvs0_ccs const-decl "list[(pvs0_tcc_valid_cc(def))]" pvs0_to_dg
              nil)
    (< const-decl "bool" reals nil)
    (length def-decl "nat" list_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (pvs0_ccs_rec def-decl "{res: list[(pvs0_tcc_valid_cc(def))] |
         FORALL (p: (valid_path(def))):
           LET subexpr = subterm_at(def, p) IN
             member(p, paths) AND rec?(subexpr) IMPLIES
              LET cc: (pvs0_tcc_valid_cc(def)) =
                    (# `path := p,
                       `rec_expr := subexpr,
                       `cnds := path_conditions(def, p) #)
                IN member(cc, res)}" pvs0_to_dg nil)
    (path_conditions def-decl "Conditions" pvs0_cc nil)
    (rdc const-decl "list[T]" more_list_props "structures/")
    (reverse def-decl "list[T]" list_props nil)
    (rac const-decl "T" more_list_props "structures/")
    (subterm_at def-decl "({res: PVS0Expr | subterm(res, expr)})"
                pvs0_cc nil)
    (map adt-def-decl "list[T1]" list_adt_map nil)
    (append def-decl "list[T]" list_props nil)
    (valid_paths def-decl "{res: list[(valid_path(expr))] |
         FORALL (p: (valid_path(expr))): member(p, res)}" pvs0_props
                 nil)
    (nth def-decl "T" list_props nil)
    (below type-eq-decl nil nat_types nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (every_nth formula-decl nil list_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (rec adt-constructor-decl "[PVS0Expr -> (rec?)]" PVS0Expr_adt nil)
    (pvs0not adt-constructor-decl "[PVS0Expr[T] -> (pvs0not?)]"
     PVS0Bool_adt nil)
    (pvs0not? adt-recognizer-decl "[PVS0Bool -> boolean]" PVS0Bool_adt
     nil)
    (vr adt-constructor-decl "(vr?)" PVS0Expr_adt nil)
    (vr? adt-recognizer-decl "[PVS0Expr -> boolean]" PVS0Expr_adt nil)
    (op1 adt-constructor-decl "[[nat, PVS0Expr] -> (op1?)]"
     PVS0Expr_adt nil)
    (op1? adt-recognizer-decl "[PVS0Expr -> boolean]" PVS0Expr_adt nil)
    (pvs0bool adt-constructor-decl "[PVS0Expr[T] -> (pvs0bool?)]"
     PVS0Bool_adt nil)
    (pvs0bool? adt-recognizer-decl "[PVS0Bool -> boolean]" PVS0Bool_adt
     nil)
    (PVS0Bool type-decl nil PVS0Bool_adt nil)
    (pvs0_tcc_valid_cc const-decl "bool" pvs0_cc nil)
    (PVS0Expr_CC type-eq-decl nil pvs0_cc nil)
    (rec? adt-recognizer-decl "[PVS0Expr -> boolean]" PVS0Expr_adt nil)
    (Conditions type-eq-decl nil pvs0_cc nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (omega_increasing formula-decl nil omega "orders/")
    (pvs0_tcc_termination const-decl "bool" measure_termination_defs
     nil)
    (Omega_eval_TCC3 assuming-tcc nil measure_termination nil)
    (well_founded_le formula-decl nil ordinals nil)
    (Omega_eval_TCC1 subtype-tcc nil measure_termination nil)
    (Omega_eval_TCC2 subtype-tcc nil measure_termination nil)
    (Omega_eval_TCC4 subtype-tcc nil measure_termination nil)
    (upfrom nonempty-type-eq-decl nil integers nil)
    (eop2 const-decl "Val" gcd_pvs0 nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (m skolem-const-decl "nat" gcd_pvs0 nil)
    (n skolem-const-decl "nat" gcd_pvs0 nil)
    (is_finite const-decl "bool" finite_sets nil)
    (lt_val const-decl "bool" measure_termination nil)
    (choose const-decl "(p)" sets nil)
    (Val type-eq-decl nil pvs0_expr nil)
    (WFM type-eq-decl nil measure_termination_defs nil)
    (set type-eq-decl nil sets nil)
    (nonempty? const-decl "bool" sets nil)
    (EvalBool type-eq-decl nil pvs0_lang nil)
    (EvalOp1 type-eq-decl nil pvs0_lang nil)
    (EvalOp2 type-eq-decl nil pvs0_lang nil)
    (PVS0Expr type-decl nil PVS0Expr_adt nil)
    (PVS0 type-eq-decl nil pvs0_lang nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (/= const-decl "boolean" notequal nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (eval_expr_ge_n_j rec-application-judgement "{myv: Maybe[Val] |
         some?(myv) IMPLIES
          n > 0 AND
           (FORALL (m: upfrom(n)):
              myv =
               eval_expr(true_val, eval_op1, eval_op2)
                        (m, expr, body, env))}" gcd_pvs0 nil)
    (eval_expr_semantic_rel_j rec-application-judgement
     "{myv: Maybe[Val] |
         some?(myv) IMPLIES
          semantic_rel_expr(true_val, eval_op1, eval_op2)
                           (expr, body, env, val(myv))}" gcd_pvs0 nil)
    (pvs0_gcd_tcc_termination name-judgement "(pvs0_tcc_termination)"
     gcd_pvs0 nil)
    (gcd_pvs0 const-decl "nat" gcd_pvs0 nil)
    (Omega_eval const-decl "Val" measure_termination nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (T type-eq-decl nil gcd_pvs0 nil)
    (ordstruct type-decl nil ordstruct_adt nil)
    (ordinal? def-decl "bool" ordinals nil)
    (MT type-eq-decl nil gcd_pvs0 nil)
    (restrict const-decl "R" restrict nil)
    (< def-decl "bool" ordinals nil)
    (eval const-decl "Maybe[Val]" pvs0_lang nil)
    (Omega const-decl "nat" omega "orders/")
    (pvs0_tcc_termination_pred const-decl "bool"
     measure_termination_defs nil)
    (eval_conds const-decl "bool" pvs0_cc nil)
    (pvs0_gcd const-decl "PVS0" gcd_pvs0 nil)
    (eval_expr def-decl "Maybe[Val]" pvs0_expr nil)
    (boole const-decl "Val" gcd_pvs0 nil)
    (eop1 const-decl "Val" gcd_pvs0 nil)
    (ebool const-decl "bool" gcd_pvs0 nil))
   nil)
  (gcd_pvs0_m_n-1 nil 3654002438
   ("" (skeep)
    (("" (lift-if)
      (("" (prop)
        (("1" (grind) nil nil) ("2" (grind) nil nil)
         ("3" (expand "gcd_pvs0" 1 1)
          (("3" (expand "Omega_eval")
            (("3" (expand "eval")
              (("3" (expand "pvs0_gcd" 1 1)
                (("3" (expand "eval_expr" 1)
                  (("3" (lift-if)
                    (("3" (prop)
                      (("1" (grind) nil nil)
                       ("2" (hide-all-but (-1 3 4))
                        (("2" (grind) nil nil)) nil)
                       ("3" (hide 1)
                        (("3" (expand "eval_expr" 1)
                          (("3" (lift-if)
                            (("3" (prop)
                              (("1"
                                (expand "eval_expr" 1)
                                (("1"
                                  (lift-if)
                                  (("1"
                                    (prop)
                                    (("1"
                                      (hide 3 4)
                                      (("1"
                                        (expand "eval_expr" 1 2)
                                        (("1"
                                          (expand "eval_expr" 1 2)
                                          (("1"
                                            (expand "eval_expr" 1 2)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "eop1" 1 2)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand
                                                       "gcd_pvs0")
                                                      (("1"
                                                        (expand
                                                         "Omega_eval")
                                                        (("1"
                                                          (expand
                                                           "eval")
                                                          (("1"
                                                            (lemma
                                                             "eval_expr_ge_n")
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "ebool"
                                                               "eop1"
                                                               "eop2"
                                                               "Omega
                         [Val[T],
                          lt_val(ebool, eop1, eop2)(pvs0_gcd)
                                (choose({wfm:
                                         WFM
                                         [T,
                                          MT,
                                          restrict
                                          [[ordstruct, ordstruct],
                                           [MT, MT],
                                           boolean]
                                          (ordinals.<)]
                                         |
                                         pvs0_tcc_termination_pred
                                         (ebool, eop1, eop2)
                                         (pvs0_gcd)
                                         (wfm)}))]
                         (m, n - m)"
                                                               "Omega
                        [Val[T],
                         lt_val(ebool, eop1, eop2)(pvs0_gcd)
                               (choose({wfm:
                                        WFM
                                        [T,
                                         MT,
                                         restrict
                                         [[ordstruct, ordstruct],
                                          [MT, MT],
                                          boolean]
                                         (ordinals.<)]
                                        |
                                        pvs0_tcc_termination_pred
                                        (ebool, eop1, eop2)
                                        (pvs0_gcd)
                                        (wfm)}))]
                        (m, n)
                     - 1"
                                                               "pvs0_gcd"
                                                               "pvs0_gcd"
                                                               "LAMBDA (v_1: (vr?)): (m, n - m)")
                                                              (("1"
                                                                (beta)
                                                                (("1"
                                                                  (lemma
                                                                   "Omega_eval_TCC4")
                                                                  (("1"
                                                                    (inst
                                                                     -1
                                                                     "ebool"
                                                                     "eop1"
                                                                     "eop2"
                                                                     "pvs0_gcd"
                                                                     "(m,n-m)"
                                                                     "_")
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       " choose({wfm:
                   WFM
                       [T, MT,
                        restrict[[ordstruct, ordstruct], [MT, MT], boolean]
                            (ordinals.<)]
                   |
                   pvs0_tcc_termination_pred(ebool, eop1, eop2)
                                            (pvs0_gcd)
                                            (wfm)})")
                                                                      (("1"
                                                                        (inst
                                                                         -1
                                                                         " Omega
             [Val[T],
              lt_val(ebool, eop1, eop2)(pvs0_gcd)
                    (choose({wfm:
                               WFM
                                   [T,
                                    MT,
                                    restrict
                                    [[ordstruct, ordstruct],
                                     [MT, MT],
                                     boolean]
                                    (ordinals.<)]
                               |
                               pvs0_tcc_termination_pred(ebool, eop1, eop2)
                                                        (pvs0_gcd)
                                                        (wfm)}))]
             (m, n - m)")
                                                                        (("1"
                                                                          (expand
                                                                           "eval")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("2"
                                                                            (lemma
                                                                             "Omega_eval_TCC3")
                                                                            (("2"
                                                                              (inst?)
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "Omega_eval_TCC1")
                                                                                  (("1"
                                                                                    (inst?)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "well_founded_le")
                                                                                  (("2"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("3"
                                                                            (lemma
                                                                             "Omega_eval_TCC2")
                                                                            (("3"
                                                                              (inst?)
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "Omega_eval_TCC1")
                                                                                  (("1"
                                                                                    (inst?)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "well_founded_le")
                                                                                  (("2"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("4"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("4"
                                                                            (lemma
                                                                             "Omega_eval_TCC1")
                                                                            (("4"
                                                                              (inst?)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("5"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("5"
                                                                            (lemma
                                                                             "well_founded_le")
                                                                            (("5"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         1)
                                                                        (("2"
                                                                          (lemma
                                                                           "Omega_eval_TCC1")
                                                                          (("2"
                                                                            (inst?)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (hide-all-but
                                                                         1)
                                                                        (("3"
                                                                          (lemma
                                                                           "well_founded_le")
                                                                          (("3"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (1
                                                                  4
                                                                  5
                                                                  -5))
                                                                (("2"
                                                                  (lemma
                                                                   "omega_increasing[[nat,nat],lt_val
                [T, MT,
                 restrict[[ordstruct, ordstruct], [MT, MT], boolean]
                     (ordinals.<)]
                (ebool, eop1, eop2)(pvs0_gcd)
                (choose
                     [WFM
                          [T, MT,
                           restrict
                               [[ordstruct, ordstruct], [MT, MT], boolean]
                               (ordinals.<)]]
                     ({wfm:
                         WFM
                             [T, MT,
                              restrict
                                  [[ordstruct, ordstruct], [MT, MT],
                                   boolean]
                                  (ordinals.<)]
                         |
                         pvs0_tcc_termination_pred
                             [T, MT,
                              restrict
                                  [[ordstruct, ordstruct], [MT, MT],
                                   boolean]
                                  (ordinals.<)]
                             (ebool, eop1, eop2)(pvs0_gcd)(wfm)}))]")
                                                                  (("1"
                                                                    (inst
                                                                     -1
                                                                     "(m,n)"
                                                                     "(m,n-m)")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (expand
                                                                         "lt_val")
                                                                        (("2"
                                                                          (inst
                                                                           1
                                                                           "(# cnds
                             := (: pvs0bool(op1(1, vr)),
                                   pvs0not(op1(0, vr)) :),
                           path := (: 1, 2 :),
                           rec_expr := rec(op1(3, vr)) #)")
                                                                          (("1"
                                                                            (prop)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "semantic_rel_expr")
                                                                                (("1"
                                                                                  (expand
                                                                                   "semantic_rel_expr")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "eop1")
                                                                                    (("1"
                                                                                      (inst
                                                                                       1
                                                                                       "(m,n)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "eval_conds_rec")
                                                                              (("2"
                                                                                (expand
                                                                                 "eval_conds_rec")
                                                                                (("2"
                                                                                  (expand
                                                                                   "eval_conds_rec")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "semantic_rel_expr")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "semantic_rel_expr")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "eop1")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "boole")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "ebool")
                                                                                            (("2"
                                                                                              (prop)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 1
                                                                                                 "(1,0)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     1
                                                                                                     "(m,n)")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst
                                                                                                 1
                                                                                                 "(0,0)")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     1
                                                                                                     "(m,n)")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (typepred
                                                                               "choose
                [WFM
                     [T, MT,
                      restrict[[ordstruct, ordstruct], [MT, MT], boolean]
                          (ordinals.<)]]
                ({wfm:
                    WFM
                        [T, MT,
                         restrict[[ordstruct, ordstruct], [MT, MT], boolean]
                             (ordinals.<)]
                    |
                    pvs0_tcc_termination_pred
                        [T, MT,
                         restrict[[ordstruct, ordstruct], [MT, MT], boolean]
                             (ordinals.<)]
                        (ebool, eop1, eop2)(pvs0_gcd)(wfm)})")
                                                                              (("3"
                                                                                (expand
                                                                                 "pvs0_tcc_termination_pred"
                                                                                 -1
                                                                                 1)
                                                                                (("3"
                                                                                  (inst
                                                                                   -1
                                                                                   "lambda(x : (vr?)): (m,n)")
                                                                                  (("3"
                                                                                    (inst
                                                                                     -1
                                                                                     "(# cnds
                             := (: pvs0bool(op1(1, vr)),
                                   pvs0not(op1(0, vr)) :),
                           path := (: 1, 2 :),
                           rec_expr := rec(op1(3, vr)) #)")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "(m,n-m)")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "restrict")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (hide
                                                                                             2)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "eval_conds_rec")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "eval_conds_rec")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "eval_conds_rec")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "semantic_rel_expr")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "semantic_rel_expr")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "eop1")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "boole")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "ebool")
                                                                                                            (("1"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 1
                                                                                                                 "(m,n)")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (inst
                                                                                                                 1
                                                                                                                 "(1,0)")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "(m,n)")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (inst
                                                                                                                 1
                                                                                                                 "(0,0)")
                                                                                                                (("3"
                                                                                                                  (assert)
                                                                                                                  (("3"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "(m,n)")
                                                                                                                    (("3"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide
                                                                                       2)
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "pvs0_ccs(pvs0_gcd)")
                                                                                        (("2"
                                                                                          (rewrite
                                                                                           "every_nth")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "0")
                                                                                            (("1"
                                                                                              (case
                                                                                               "(# cnds
                := (: pvs0bool[Val[T]](op1[Val[T]](1, vr[Val[T]])),
                      pvs0not[Val[T]](op1[Val[T]](0, vr[Val[T]])) :),
              path := (: 1, 2 :),
              rec_expr := rec[Val[T]](op1[Val[T]](3, vr[Val[T]])) #) = nth(pvs0_ccs(pvs0_gcd), 0)")
                                                                                              (("1"
                                                                                                (replaces
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("3"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("3"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("2"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("3"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (typepred
                                                                             "pvs0_ccs(pvs0_gcd)")
                                                                            (("2"
                                                                              (rewrite
                                                                               "every_nth")
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "0")
                                                                                (("1"
                                                                                  (case
                                                                                   "(# cnds
                := (: pvs0bool[Val[T]](op1[Val[T]](1, vr[Val[T]])),
                      pvs0not[Val[T]](op1[Val[T]](0, vr[Val[T]])) :),
              path := (: 1, 2 :),
              rec_expr := rec[Val[T]](op1[Val[T]](3, vr[Val[T]])) #) = nth(pvs0_ccs(pvs0_gcd), 0)")
                                                                                  (("1"
                                                                                    (replaces
                                                                                     -1)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("2"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("3"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (("2"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("3"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("2"
                                                                      (lemma
                                                                       "Omega_eval_TCC3")
                                                                      (("2"
                                                                        (inst?)
                                                                        (("1"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("1"
                                                                            (lemma
                                                                             "Omega_eval_TCC1")
                                                                            (("1"
                                                                              (inst?)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("2"
                                                                            (lemma
                                                                             "well_founded_le")
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("3"
                                                                      (lemma
                                                                       "Omega_eval_TCC2")
                                                                      (("3"
                                                                        (inst?)
                                                                        (("1"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("1"
                                                                            (lemma
                                                                             "Omega_eval_TCC1")
                                                                            (("1"
                                                                              (inst?)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("2"
                                                                            (lemma
                                                                             "well_founded_le")
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("4"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("4"
                                                                      (lemma
                                                                       "Omega_eval_TCC1")
                                                                      (("4"
                                                                        (inst?)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("5"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("5"
                                                                      (lemma
                                                                       "well_founded_le")
                                                                      (("5"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (hide-all-but
                                                                 1)
                                                                (("3"
                                                                  (lemma
                                                                   "Omega_eval_TCC3")
                                                                  (("3"
                                                                    (inst?)
                                                                    (("1"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("1"
                                                                        (lemma
                                                                         "Omega_eval_TCC1")
                                                                        (("1"
                                                                          (inst?)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("2"
                                                                        (lemma
                                                                         "well_founded_le")
                                                                        (("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("4"
                                                                (hide-all-but
                                                                 1)
                                                                (("4"
                                                                  (lemma
                                                                   "Omega_eval_TCC2")
                                                                  (("4"
                                                                    (inst?)
                                                                    (("1"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("1"
                                                                        (lemma
                                                                         "Omega_eval_TCC1")
                                                                        (("1"
                                                                          (inst?)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("2"
                                                                        (lemma
                                                                         "well_founded_le")
                                                                        (("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("5"
                                                                (hide-all-but
                                                                 1)
                                                                (("5"
                                                                  (lemma
                                                                   "Omega_eval_TCC1")
                                                                  (("5"
                                                                    (inst?)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("6"
                                                                (hide-all-but
                                                                 1)
                                                                (("6"
                                                                  (lemma
                                                                   "well_founded_le")
                                                                  (("6"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide-all-but 1)
                                      (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (hide-all-but (-3 1 5 6))
                                (("2" (grind) nil nil))
                                nil)
                               ("3"
                                (hide-all-but 1)
                                (("3" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("4" (hide-all-but 1) (("4" (grind) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("4" (expand "gcd_pvs0" 2 1)
          (("4" (expand "Omega_eval")
            (("4" (expand "eval")
              (("4" (expand "pvs0_gcd" 2 1)
                (("4" (expand "eval_expr")
                  (("4" (assert)
                    (("4" (lift-if)
                      (("4" (prop)
                        (("1" (grind) nil nil)
                         ("2" (hide-all-but (-1 3 4 5))
                          (("2" (grind) nil nil)) nil)
                         ("3" (expand "eval_expr" 2)
                          (("3" (assert)
                            (("3" (lift-if)
                              (("3"
                                (prop)
                                (("1"
                                  (hide-all-but (-1 4 5 6))
                                  (("1" (grind) nil nil))
                                  nil)
                                 ("2"
                                  (expand "eval_expr" 2)
                                  (("2"
                                    (lift-if)
                                    (("2"
                                      (prop)
                                      (("1"
                                        (expand "eval_expr" 1 2)
                                        (("1"
                                          (expand "eval_expr" 1 2)
                                          (("1"
                                            (expand "eval_expr" 1 2)
                                            (("1"
                                              (expand "eop1" 1 2)
                                              (("1"
                                                (expand "gcd_pvs0" 1)
                                                (("1"
                                                  (expand "Omega_eval")
                                                  (("1"
                                                    (expand "eval")
                                                    (("1"
                                                      (lemma
                                                       "eval_expr_ge_n")
                                                      (("1"
                                                        (inst
                                                         -1
                                                         "ebool"
                                                         "eop1"
                                                         "eop2"
                                                         "Omega
                         [Val[T],
                          lt_val(ebool, eop1, eop2)(pvs0_gcd)
                                (choose({wfm:
                                         WFM
                                         [T,
                                          MT,
                                          restrict
                                          [[ordstruct, ordstruct],
                                           [MT, MT],
                                           boolean]
                                          (ordinals.<)]
                                         |
                                         pvs0_tcc_termination_pred
                                         (ebool, eop1, eop2)
                                         (pvs0_gcd)
                                         (wfm)}))]
                         (n, m)"
                                                         "Omega
                        [Val[T],
                         lt_val(ebool, eop1, eop2)(pvs0_gcd)
                               (choose({wfm:
                                        WFM
                                        [T,
                                         MT,
                                         restrict
                                         [[ordstruct, ordstruct],
                                          [MT, MT],
                                          boolean]
                                         (ordinals.<)]
                                        |
                                        pvs0_tcc_termination_pred
                                        (ebool, eop1, eop2)
                                        (pvs0_gcd)
                                        (wfm)}))]
                        (m, n)
                     - 1"
                                                         "pvs0_gcd"
                                                         "pvs0_gcd"
                                                         "LAMBDA (v: (vr?[Val[Val[T]]])): (n, m)")
                                                        (("1"
                                                          (beta)
                                                          (("1"
                                                            (lemma
                                                             "Omega_eval_TCC4")
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "ebool"
                                                               "eop1"
                                                               "eop2"
                                                               "pvs0_gcd"
                                                               "(n,m)"
                                                               "_")
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 "choose({wfm:
                   WFM
                       [T, MT,
                        restrict[[ordstruct, ordstruct], [MT, MT], boolean]
                            (ordinals.<)]
                   |
                   pvs0_tcc_termination_pred(ebool, eop1, eop2)
                                            (pvs0_gcd)
                                            (wfm)})")
                                                                (("1"
                                                                  (inst
                                                                   -1
                                                                   "Omega
             [Val[T],
              lt_val(ebool, eop1, eop2)(pvs0_gcd)
                    (choose({wfm:
                               WFM
                                   [T,
                                    MT,
                                    restrict
                                    [[ordstruct, ordstruct],
                                     [MT, MT],
                                     boolean]
                                    (ordinals.<)]
                               |
                               pvs0_tcc_termination_pred(ebool, eop1, eop2)
                                                        (pvs0_gcd)
                                                        (wfm)}))]
             (n, m)")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "eval")
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("2"
                                                                      (lemma
                                                                       "Omega_eval_TCC3")
                                                                      (("2"
                                                                        (inst?)
                                                                        (("1"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("1"
                                                                            (lemma
                                                                             "Omega_eval_TCC1")
                                                                            (("1"
                                                                              (inst?)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("2"
                                                                            (lemma
                                                                             "well_founded_le")
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("3"
                                                                      (lemma
                                                                       "Omega_eval_TCC2")
                                                                      (("3"
                                                                        (inst?)
                                                                        (("1"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("1"
                                                                            (lemma
                                                                             "Omega_eval_TCC1")
                                                                            (("1"
                                                                              (inst?)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("2"
                                                                            (lemma
                                                                             "well_founded_le")
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("4"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("4"
                                                                      (lemma
                                                                       "Omega_eval_TCC1")
                                                                      (("4"
                                                                        (inst?)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("5"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("5"
                                                                      (lemma
                                                                       "well_founded_le")
                                                                      (("5"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (lemma
                                                                     "Omega_eval_TCC1")
                                                                    (("2"
                                                                      (inst?)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("3"
                                                                    (lemma
                                                                     "well_founded_le")
                                                                    (("3"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           (1 6 7 8))
                                                          (("2"
                                                            (lemma
                                                             "omega_increasing[[nat,nat],lt_val
                [T, MT,
                 restrict[[ordstruct, ordstruct], [MT, MT], boolean]
                     (ordinals.<)]
                (ebool, eop1, eop2)(pvs0_gcd)
                (choose
                     [WFM
                          [T, MT,
                           restrict
                               [[ordstruct, ordstruct], [MT, MT], boolean]
                               (ordinals.<)]]
                     ({wfm:
                         WFM
                             [T, MT,
                              restrict
                                  [[ordstruct, ordstruct], [MT, MT],
                                   boolean]
                                  (ordinals.<)]
                         |
                         pvs0_tcc_termination_pred
                             [T, MT,
                              restrict
                                  [[ordstruct, ordstruct], [MT, MT],
                                   boolean]
                                  (ordinals.<)]
                             (ebool, eop1, eop2)(pvs0_gcd)(wfm)}))]")
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "(m,n)"
                                                               "(n,m)")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (hide
                                                                 2)
                                                                (("2"
                                                                  (expand
                                                                   "lt_val")
                                                                  (("2"
                                                                    (inst
                                                                     1
                                                                     " (# cnds
                             := (: pvs0not(op1(1, vr)),
                                   pvs0not(op1(0, vr)) :),
                           path := (: 2, 2 :),
                           rec_expr := rec(op1(4, vr)) #)")
                                                                    (("1"
                                                                      (prop)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "semantic_rel_expr")
                                                                          (("1"
                                                                            (expand
                                                                             "semantic_rel_expr")
                                                                            (("1"
                                                                              (expand
                                                                               "eop1")
                                                                              (("1"
                                                                                (inst
                                                                                 1
                                                                                 "(m,n)")
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "eval_conds_rec")
                                                                        (("2"
                                                                          (expand
                                                                           "eval_conds_rec")
                                                                          (("2"
                                                                            (expand
                                                                             "eval_conds_rec")
                                                                            (("2"
                                                                              (expand
                                                                               "semantic_rel_expr")
                                                                              (("2"
                                                                                (expand
                                                                                 "semantic_rel_expr")
                                                                                (("2"
                                                                                  (expand
                                                                                   "eop1")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "boole")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "ebool")
                                                                                      (("2"
                                                                                        (prop)
                                                                                        (("1"
                                                                                          (inst
                                                                                           1
                                                                                           "(0,0)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (inst
                                                                                               1
                                                                                               "(m,n)")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (inst
                                                                                           1
                                                                                           "(0,0)")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (inst
                                                                                               1
                                                                                               "(m,n)")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (typepred
                                                                         "choose
                [WFM
                     [T, MT,
                      restrict[[ordstruct, ordstruct], [MT, MT], boolean]
                          (ordinals.<)]]
                ({wfm:
                    WFM
                        [T, MT,
                         restrict[[ordstruct, ordstruct], [MT, MT], boolean]
                             (ordinals.<)]
                    |
                    pvs0_tcc_termination_pred
                        [T, MT,
                         restrict[[ordstruct, ordstruct], [MT, MT], boolean]
                             (ordinals.<)]
                        (ebool, eop1, eop2)(pvs0_gcd)(wfm)})")
                                                                        (("3"
                                                                          (expand
                                                                           "pvs0_tcc_termination_pred"
                                                                           -1
                                                                           1)
                                                                          (("3"
                                                                            (inst
                                                                             -1
                                                                             "lambda(x : (vr?)): (m,n)")
                                                                            (("3"
                                                                              (inst
                                                                               -1
                                                                               " (# cnds
                             := (: pvs0not(op1(1, vr)),
                                   pvs0not(op1(0, vr)) :),
                           path := (: 2, 2 :),
                           rec_expr := rec(op1(4, vr)) #)")
                                                                              (("1"
                                                                                (inst
                                                                                 -1
                                                                                 "(n,m)")
                                                                                (("1"
                                                                                  (expand
                                                                                   "restrict")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (hide
                                                                                       2)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "eval_conds_rec")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "eval_conds_rec")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "eval_conds_rec")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "semantic_rel_expr")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "semantic_rel_expr")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "eop1")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "boole")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "ebool")
                                                                                                      (("1"
                                                                                                        (prop)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           1
                                                                                                           "(m,n)")
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (inst
                                                                                                           1
                                                                                                           "(0,0)")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               1
                                                                                                               "(m,n)")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("3"
                                                                                                          (inst
                                                                                                           1
                                                                                                           "(0,0)")
                                                                                                          (("3"
                                                                                                            (assert)
                                                                                                            (("3"
                                                                                                              (inst
                                                                                                               1
                                                                                                               "(m,n)")
                                                                                                              (("3"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 2)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "pvs0_ccs(pvs0_gcd)")
                                                                                  (("2"
                                                                                    (rewrite
                                                                                     "every_nth")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -1
                                                                                       "1")
                                                                                      (("1"
                                                                                        (case
                                                                                         "(# cnds
                := (: pvs0not[Val[T]](op1[Val[T]](1, vr[Val[T]])),
                      pvs0not[Val[T]](op1[Val[T]](0, vr[Val[T]])) :),
              path := (: 2, 2 :),
              rec_expr := rec[Val[T]](op1[Val[T]](4, vr[Val[T]])) #) = nth(pvs0_ccs(pvs0_gcd), 1)")
                                                                                        (("1"
                                                                                          (replaces
                                                                                           -1)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("3"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("3"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (typepred
                                                                       "pvs0_ccs(pvs0_gcd)")
                                                                      (("2"
                                                                        (rewrite
                                                                         "every_nth")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "1")
                                                                          (("1"
                                                                            (case
                                                                             "(# cnds
                := (: pvs0not[Val[T]](op1[Val[T]](1, vr[Val[T]])),
                      pvs0not[Val[T]](op1[Val[T]](0, vr[Val[T]])) :),
              path := (: 2, 2 :),
              rec_expr := rec[Val[T]](op1[Val[T]](4, vr[Val[T]])) #) = nth(pvs0_ccs(pvs0_gcd), 1)")
                                                                            (("1"
                                                                              (replaces
                                                                               -1)
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("3"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("3"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               1)
                                                              (("2"
                                                                (lemma
                                                                 "Omega_eval_TCC3")
                                                                (("2"
                                                                  (inst?)
                                                                  (("1"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("1"
                                                                      (lemma
                                                                       "Omega_eval_TCC1")
                                                                      (("1"
                                                                        (inst?)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("2"
                                                                      (lemma
                                                                       "well_founded_le")
                                                                      (("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("3"
                                                              (hide-all-but
                                                               1)
                                                              (("3"
                                                                (lemma
                                                                 "Omega_eval_TCC2")
                                                                (("3"
                                                                  (inst?)
                                                                  (("1"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("1"
                                                                      (lemma
                                                                       "Omega_eval_TCC1")
                                                                      (("1"
                                                                        (inst?)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("2"
                                                                      (lemma
                                                                       "well_founded_le")
                                                                      (("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("4"
                                                              (hide-all-but
                                                               1)
                                                              (("4"
                                                                (lemma
                                                                 "Omega_eval_TCC1")
                                                                (("4"
                                                                  (inst?)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("5"
                                                              (hide-all-but
                                                               1)
                                                              (("5"
                                                                (lemma
                                                                 "well_founded_le")
                                                                (("5"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (hide-all-but
                                                           1)
                                                          (("3"
                                                            (lemma
                                                             "Omega_eval_TCC3")
                                                            (("3"
                                                              (inst?)
                                                              (("1"
                                                                (hide-all-but
                                                                 1)
                                                                (("1"
                                                                  (lemma
                                                                   "Omega_eval_TCC1")
                                                                  (("1"
                                                                    (inst?)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (lemma
                                                                   "well_founded_le")
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("4"
                                                          (hide-all-but
                                                           1)
                                                          (("4"
                                                            (lemma
                                                             "Omega_eval_TCC2")
                                                            (("4"
                                                              (inst?)
                                                              (("1"
                                                                (hide-all-but
                                                                 1)
                                                                (("1"
                                                                  (lemma
                                                                   "Omega_eval_TCC1")
                                                                  (("1"
                                                                    (inst?)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (lemma
                                                                   "well_founded_le")
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("5"
                                                          (hide-all-but
                                                           1)
                                                          (("5"
                                                            (lemma
                                                             "Omega_eval_TCC1")
                                                            (("5"
                                                              (inst?)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("6"
                                                          (hide-all-but
                                                           1)
                                                          (("6"
                                                            (lemma
                                                             "well_founded_le")
                                                            (("6"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide-all-but 1)
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (hide-all-but 1)
                                  (("3" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("4" (hide-all-but 1) (("4" (grind) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (/= const-decl "boolean" notequal nil)
    (pred type-eq-decl nil defined_types nil)
    (well_founded? const-decl "bool" orders nil)
    (eop2 const-decl "Val" gcd_pvs0 nil)
    (PVS0Expr type-decl nil PVS0Expr_adt nil)
    (nonempty? const-decl "bool" sets nil)
    (set type-eq-decl nil sets nil)
    (WFM type-eq-decl nil measure_termination_defs nil)
    (Val type-eq-decl nil pvs0_expr nil)
    (choose const-decl "(p)" sets nil)
    (lt_val const-decl "bool" measure_termination nil)
    (is_finite const-decl "bool" finite_sets nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (upfrom nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (cnst? adt-recognizer-decl "[PVS0Expr -> boolean]" PVS0Expr_adt
     nil)
    (vr? adt-recognizer-decl "[PVS0Expr -> boolean]" PVS0Expr_adt nil)
    (op1? adt-recognizer-decl "[PVS0Expr -> boolean]" PVS0Expr_adt nil)
    (op2? adt-recognizer-decl "[PVS0Expr -> boolean]" PVS0Expr_adt nil)
    (rec? adt-recognizer-decl "[PVS0Expr -> boolean]" PVS0Expr_adt nil)
    (ite? adt-recognizer-decl "[PVS0Expr -> boolean]" PVS0Expr_adt nil)
    nil (Val type-eq-decl nil pvs0_expr nil)
    (Omega_eval_TCC4 subtype-tcc nil measure_termination nil)
    (Omega_eval_TCC2 subtype-tcc nil measure_termination nil)
    (Omega_eval_TCC1 subtype-tcc nil measure_termination nil)
    (well_founded_le formula-decl nil ordinals nil)
    (Omega_eval_TCC3 assuming-tcc nil measure_termination nil)
    (pvs0_tcc_termination const-decl "bool" measure_termination_defs
     nil)
    (omega_increasing formula-decl nil omega "orders/")
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (Conditions type-eq-decl nil pvs0_cc nil)
    (PVS0Expr_CC type-eq-decl nil pvs0_cc nil)
    (pvs0_tcc_valid_cc const-decl "bool" pvs0_cc nil)
    (PVS0Bool type-decl nil PVS0Bool_adt nil)
    (pvs0bool? adt-recognizer-decl "[PVS0Bool -> boolean]" PVS0Bool_adt
     nil)
    (pvs0bool adt-constructor-decl "[PVS0Expr[T] -> (pvs0bool?)]"
     PVS0Bool_adt nil)
    (op1 adt-constructor-decl "[[nat, PVS0Expr] -> (op1?)]"
     PVS0Expr_adt nil)
    (vr adt-constructor-decl "(vr?)" PVS0Expr_adt nil)
    (pvs0not? adt-recognizer-decl "[PVS0Bool -> boolean]" PVS0Bool_adt
     nil)
    (pvs0not adt-constructor-decl "[PVS0Expr[T] -> (pvs0not?)]"
     PVS0Bool_adt nil)
    (rec adt-constructor-decl "[PVS0Expr -> (rec?)]" PVS0Expr_adt nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (every_nth formula-decl nil list_props nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (below type-eq-decl nil nat_types nil)
    (nth def-decl "T" list_props nil)
    (valid_paths def-decl "{res: list[(valid_path(expr))] |
         FORALL (p: (valid_path(expr))): member(p, res)}" pvs0_props
                 nil)
    (append def-decl "list[T]" list_props nil)
    (subterm_at def-decl "({res: PVS0Expr | subterm(res, expr)})"
                pvs0_cc nil)
    (rac const-decl "T" more_list_props "structures/")
    (reverse def-decl "list[T]" list_props nil)
    (rdc const-decl "list[T]" more_list_props "structures/")
    (path_conditions def-decl "Conditions" pvs0_cc nil)
    (pvs0_ccs_rec def-decl "{res: list[(pvs0_tcc_valid_cc(def))] |
         FORALL (p: (valid_path(def))):
           LET subexpr = subterm_at(def, p) IN
             member(p, paths) AND rec?(subexpr) IMPLIES
              LET cc: (pvs0_tcc_valid_cc(def)) =
                    (# `path := p,
                       `rec_expr := subexpr,
                       `cnds := path_conditions(def, p) #)
                IN member(cc, res)}" pvs0_to_dg nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (below type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (< const-decl "bool" reals nil)
    (pvs0_ccs const-decl "list[(pvs0_tcc_valid_cc(def))]" pvs0_to_dg
              nil)
    (eval_conds_rec def-decl "bool" pvs0_cc nil)
    (semantic_rel_expr inductive-decl "bool" pvs0_expr nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (eval_expr_ge_n formula-decl nil pvs0_expr nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (eval_expr_semantic_rel_j rec-application-judgement
     "{myv: Maybe[Val] |
         some?(myv) IMPLIES
          semantic_rel_expr(true_val, eval_op1, eval_op2)
                           (expr, body, env, val(myv))}" gcd_pvs0 nil)
    (eval_expr_ge_n_j rec-application-judgement "{myv: Maybe[Val] |
         some?(myv) IMPLIES
          n > 0 AND
           (FORALL (m: upfrom(n)):
              myv =
               eval_expr(true_val, eval_op1, eval_op2)
                        (m, expr, body, env))}" gcd_pvs0 nil)
    (pvs0_gcd_tcc_termination name-judgement "(pvs0_tcc_termination)"
     gcd_pvs0 nil)
    (gcd_pvs0 const-decl "nat" gcd_pvs0 nil)
    (Omega_eval const-decl "Val" measure_termination nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (T type-eq-decl nil gcd_pvs0 nil)
    (ordstruct type-decl nil ordstruct_adt nil)
    (ordinal? def-decl "bool" ordinals nil)
    (MT type-eq-decl nil gcd_pvs0 nil)
    (restrict const-decl "R" restrict nil)
    (< def-decl "bool" ordinals nil)
    (Omega const-decl "nat" omega "orders/")
    (pvs0_tcc_termination_pred const-decl "bool"
     measure_termination_defs nil)
    (pvs0_gcd const-decl "PVS0" gcd_pvs0 nil)
    (eval_expr def-decl "Maybe[Val]" pvs0_expr nil)
    (boole const-decl "Val" gcd_pvs0 nil)
    (eop1 const-decl "Val" gcd_pvs0 nil)
    (ebool const-decl "bool" gcd_pvs0 nil))
   shostak)))

