(fibonacci
 (fibonacci_TCC1 0
  (fibonacci_TCC1-1 nil 3602873179 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (fibonacci_TCC2 0
  (fibonacci_TCC2-1 nil 3602873179 ("" (termination-tcc) nil nil) nil
   nil))
 (fibonacci_TCC3 0
  (fibonacci_TCC3-1 nil 3602873179 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (fibonacci_TCC4 0
  (fibonacci_TCC4-1 nil 3602873179 ("" (termination-tcc) nil nil) nil
   nil))
 (eop1_TCC1 0
  (eop1_TCC1-1 nil 3602873179 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil))
 (eval_fibo_TCC1 0
  (eval_fibo_TCC1-1 nil 3602873179 ("" (subtype-tcc) nil nil)
   ((pvs0_fibonacci const-decl "PVS0" fibonacci nil)) nil))
 (eval_fibo_TCC2 0
  (eval_fibo_TCC2-1 nil 3602873179 ("" (subtype-tcc) nil nil) nil nil))
 (pvs0_fibo1 0
  (pvs0_fibo1-1 nil 3602873191 ("" (grind) nil nil)
   ((pvs0_fibonacci const-decl "PVS0" fibonacci nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (eval_expr def-decl "Maybe[Val]" lang nil)
    (eop1 const-decl "nat" fibonacci nil)
    (ebool const-decl "bool" fibonacci nil)
    (eop2 const-decl "nat" fibonacci nil)
    (eval const-decl "Maybe[Val]" lang nil)
    (eval_fibo const-decl "nat" fibonacci nil)
    (fibonacci def-decl "nat" fibonacci nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (eval_expr_ge_n_j rec-application-judgement "{myv: Maybe[Val] |
         some?(myv) IMPLIES
          n > 0 AND
           (FORALL (m: upfrom(n)):
              myv =
               eval_expr(eval_bool, eval_op1, eval_op2)
                        (m, expr, body, env))}" fibonacci nil))
   shostak))
 (pvs0_fibo0 0
  (pvs0_fibo0-1 nil 3602874839 ("" (grind) nil nil)
   ((pvs0_fibonacci const-decl "PVS0" fibonacci nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (eval_expr def-decl "Maybe[Val]" lang nil)
    (eop1 const-decl "nat" fibonacci nil)
    (ebool const-decl "bool" fibonacci nil)
    (eval const-decl "Maybe[Val]" lang nil)
    (eval_fibo const-decl "nat" fibonacci nil)
    (fibonacci def-decl "nat" fibonacci nil)
    (eval_expr_ge_n_j rec-application-judgement "{myv: Maybe[Val] |
         some?(myv) IMPLIES
          n > 0 AND
           (FORALL (m: upfrom(n)):
              myv =
               eval_expr(eval_bool, eval_op1, eval_op2)
                        (m, expr, body, env))}" fibonacci nil))
   shostak))
 (pvs0_fibo2 0
  (pvs0_fibo2-1 nil 3602874669
   ("" (measure-induct+ "n" ("n"))
    (("" (copy -1)
      (("" (case "x!1 < 2")
        (("1" (hide -2 -3) (("1" (grind) nil nil)) nil)
         ("2" (expand eval_fibo 2)
          (("2" (inst -1 "x!1 -1")
            (("1" (assert)
              (("1" (inst -2 "x!1 -2")
                (("1" (assert)
                  (("1" (expand fibonacci 2)
                    (("1" (replace -1 2 rl)
                      (("1" (replace -2 2 rl)
                        (("1" (hide -)
                          (("1" (expand eval)
                            (("1" (expand eval_expr)
                              (("1"
                                (lift-if)
                                (("1"
                                  (prop)
                                  (("1"
                                    (hide +)
                                    (("1" (grind) nil nil))
                                    nil)
                                   ("2"
                                    (hide +)
                                    (("2" (grind) nil nil))
                                    nil)
                                   ("3"
                                    (hide +)
                                    (("3" (grind) nil nil))
                                    nil)
                                   ("4"
                                    (hide +)
                                    (("4" (grind) nil nil))
                                    nil)
                                   ("5"
                                    (expand pvs0_fibonacci -1)
                                    (("5"
                                      (assert)
                                      (("5"
                                        (lift-if)
                                        (("5"
                                          (expand "pvs0_fibonacci" 1 3)
                                          (("5"
                                            (prop)
                                            (("1"
                                              (expand
                                               "pvs0_fibonacci"
                                               -2
                                               1)
                                              (("1"
                                                (expand eval_expr -2)
                                                (("1"
                                                  (expand
                                                   "pvs0_fibonacci"
                                                   -2
                                                   1)
                                                  (("1"
                                                    (expand
                                                     eval_expr
                                                     -2)
                                                    (("1"
                                                      (expand eop1 -2)
                                                      (("1"
                                                        (expand
                                                         pvs0_fibonacci
                                                         1)
                                                        (("1"
                                                          (expand
                                                           eval_expr
                                                           1)
                                                          (("1"
                                                            (hide-all-but
                                                             -1)
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand eval_expr 1)
                                              (("2"
                                                (prop)
                                                (("1"
                                                  (expand eop1 1 1)
                                                  (("1"
                                                    (prop)
                                                    (("1"
                                                      (expand ebool 1)
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand ebool 1)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (expand
                                                       "pvs0_fibonacci"
                                                       4
                                                       1)
                                                      (("3"
                                                        (expand
                                                         eval_expr
                                                         4)
                                                        (("3"
                                                          (lift-if)
                                                          (("3"
                                                            (prop)
                                                            (("1"
                                                              (expand
                                                               eop2
                                                               1
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 eval_expr
                                                                 1
                                                                 1)
                                                                (("1"
                                                                  (lift-if)
                                                                  (("1"
                                                                    (prop)
                                                                    (("1"
                                                                      (expand
                                                                       eval_expr
                                                                       1
                                                                       2)
                                                                      (("1"
                                                                        (lift-if)
                                                                        (("1"
                                                                          (prop)
                                                                          (("1"
                                                                            (expand
                                                                             eop1
                                                                             1
                                                                             2)
                                                                            (("1"
                                                                              (lift-if)
                                                                              (("1"
                                                                                (prop)
                                                                                (("1"
                                                                                  (hide-all-but
                                                                                   -1)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   eval_expr
                                                                                   2
                                                                                   2)
                                                                                  (("2"
                                                                                    (lift-if)
                                                                                    (("2"
                                                                                      (prop)
                                                                                      (("2"
                                                                                        (expand
                                                                                         eop1
                                                                                         1
                                                                                         2)
                                                                                        (("2"
                                                                                          (lift-if)
                                                                                          (("2"
                                                                                            (prop)
                                                                                            (("2"
                                                                                              (expand
                                                                                               eval_expr
                                                                                               2
                                                                                               2)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 eval_expr
                                                                                                 2
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (prop)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       eval_expr
                                                                                                       1
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (lift-if)
                                                                                                        (("2"
                                                                                                          (prop)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             eop1
                                                                                                             1
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (lift-if)
                                                                                                              (("2"
                                                                                                                (prop)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   eval_expr
                                                                                                                   2
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     eval_fibo
                                                                                                                     2)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       eval
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           eval_expr
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             eval_expr
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 ebool
                                                                                                                                 7)
                                                                                                                                (("2"
                                                                                                                                  (postpone)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (expand
                                                                               eval_expr
                                                                               1)
                                                                              (("2"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       eval_expr
                                                                       1)
                                                                      (("2"
                                                                        (lift-if)
                                                                        (("2"
                                                                          (prop)
                                                                          (("1"
                                                                            (expand
                                                                             eval_expr
                                                                             1)
                                                                            (("1"
                                                                              (lift-if)
                                                                              (("1"
                                                                                (prop)
                                                                                (("1"
                                                                                  (expand
                                                                                   eval_expr
                                                                                   1)
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             eval_expr
                                                                             1)
                                                                            (("2"
                                                                              (lift-if)
                                                                              (("2"
                                                                                (prop)
                                                                                (("2"
                                                                                  (expand
                                                                                   eval_expr
                                                                                   1)
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               eval_expr
                                                               1)
                                                              (("2"
                                                                (lift-if)
                                                                (("2"
                                                                  (prop)
                                                                  (("1"
                                                                    (expand
                                                                     eval_expr
                                                                     1
                                                                     2)
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (prop)
                                                                        (("1"
                                                                          (expand
                                                                           eval_expr
                                                                           1
                                                                           2)
                                                                          (("1"
                                                                            (expand
                                                                             eop1
                                                                             1
                                                                             2)
                                                                            (("1"
                                                                              (reveal
                                                                               -1
                                                                               -2)
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 (-1
                                                                                  1))
                                                                                (("1"
                                                                                  (expand
                                                                                   eval_fibo)
                                                                                  (("1"
                                                                                    (expand
                                                                                     eval)
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "fibonacci(x!1 - 1)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (postpone)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     eval_expr
                                                                     1)
                                                                    (("2"
                                                                      (lift-if)
                                                                      (("2"
                                                                        (prop)
                                                                        (("2"
                                                                          (expand
                                                                           eval_expr
                                                                           1)
                                                                          (("2"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("3"
                                                              (reveal
                                                               -1
                                                               -2)
                                                              (("3"
                                                                (hide-all-but
                                                                 (-2
                                                                  1))
                                                                (("3"
                                                                  (expand
                                                                   eval_expr)
                                                                  (("3"
                                                                    (lift-if)
                                                                    (("3"
                                                                      (prop)
                                                                      (("1"
                                                                        (expand
                                                                         eval_expr
                                                                         1
                                                                         2)
                                                                        (("1"
                                                                          (lift-if)
                                                                          (("1"
                                                                            (prop)
                                                                            (("1"
                                                                              (expand
                                                                               eop1
                                                                               1
                                                                               2)
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (prop)
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     -1)
                                                                                    (("1"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     eval_expr
                                                                                     2
                                                                                     2)
                                                                                    (("2"
                                                                                      (lift-if)
                                                                                      (("2"
                                                                                        (prop)
                                                                                        (("1"
                                                                                          (expand
                                                                                           eop1
                                                                                           1
                                                                                           2)
                                                                                          (("1"
                                                                                            (lift-if)
                                                                                            (("1"
                                                                                              (prop)
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (expand
                                                                                                 eval_expr
                                                                                                 2
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -1
                                                                                                   -2
                                                                                                   -3)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     eval_fibo)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       eval
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         1
                                                                                                         3)
                                                                                                        (("2"
                                                                                                          (lemma
                                                                                                           recursion_levels)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             ebool
                                                                                                             eop1
                                                                                                             eop2
                                                                                                             pvs0_fibonacci
                                                                                                             "x!1 - 2"
                                                                                                             "x!1 - 1"
                                                                                                             x!1)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (prop)
                                                                                                                (("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (postpone)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (postpone)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (postpone)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (postpone)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand eval_expr 1)
                                                  (("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (expand eval_expr 1)
                                              (("3"
                                                (lift-if)
                                                (("3"
                                                  (prop)
                                                  (("1"
                                                    (hide-all-but -1)
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide-all-but -1)
                                                    (("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("3"
                                                    (expand
                                                     pvs0_fibonacci
                                                     1
                                                     1)
                                                    (("3"
                                                      (hide-all-but
                                                       (-1 1 9))
                                                      (("3"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("4"
                                                    (hide-all-but -1)
                                                    (("4"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("5"
                                                    (hide-all-but -1)
                                                    (("5"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("6"
                                                    (typepred
                                                     "get_cond(get_body(pvs0_fibonacci))")
                                                    (("6"
                                                      (assert)
                                                      (("6"
                                                        (hide-all-but
                                                         -2)
                                                        (("6"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("6"
                                    (hide 2)
                                    (("6"
                                      (typepred
                                       "get_body(pvs0_fibonacci)")
                                      (("6"
                                        (assert)
                                        (("6" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (assert) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (IMP_pvs0_to_ccg_TCC1 0
  (IMP_pvs0_to_ccg_TCC1-1 nil 3602874276 ("" (subtype-tcc) nil nil) nil
   nil))
 (verts_TCC1 0
  (verts_TCC1-1 nil 3604681238 ("" (subtype-tcc) nil nil)
   ((pvs0_fibonacci const-decl "PVS0" fibonacci nil)) nil))
 (cc1_TCC1 0
  (cc1_TCC1-1 nil 3602874276 ("" (subtype-tcc) nil nil) nil nil))
 (cc2_TCC1 0
  (cc2_TCC1-1 nil 3602874276 ("" (subtype-tcc) nil nil) nil nil))
 (remove_cc1_cc1 0
  (remove_cc1_cc1-1 nil 3602874278
   ("" (eval-expr "cc1")
    (("" (eval-expr "cc2")
      (("" (eval-expr "verts")
        (("" (expand remove_edge)
          (("" (expand semantics)
            (("" (skeep) (("" (postpone) nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)))

