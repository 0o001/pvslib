%************************************************************************************************%
% This theory proves that the halting problem is undecidable in computable PVS0 functions, i.e., %
% There is no computable function in PVS0[nat] that decides whether or not a partial recursvie   %
% function pvs0 in PVS0[nat] terminates on an given natural number n.                            % 
%************************************************************************************************%

pvs0_halting[false_val:nat,lop1:list[[nat->nat]],lop2:list[[[nat,nat]->nat]]] : THEORY
BEGIN

  IMPORTING pvs0_computable[false_val,lop1,lop2],
  	    pvs0_eval[nat],
            structures@more_list_props

  to_PVS0   : (surjective?[nat,PVS0_partial_recursive])

  from_PVS0 : (injective?[PVS0_partial_recursive,nat]) = inverse(to_PVS0)

  true_val : {x : Val | x /= false_val}

  pvs0_undecidability: THEOREM
    NOT EXISTS (oracle:PVS0_computable): FORALL (pvs0:PVS0_partial_recursive,n:nat): 
      pvs0_eval(oracle)(from_PVS0(pvs0)) /= false_val IFF determined?(pvs0,n)

END pvs0_halting
