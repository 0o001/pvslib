measure_termination_wNatAsMT[T:TYPE+, N: posnat] : THEORY
% Ideal would be working with an arbitrary measure space MT, instead nat. But the problem is
% that semantic termination allows building a measure over naturals giving 
% pvs0 termination and not building a measure over an abstract measure space MT. 
BEGIN
  IMPORTING pvs0_to_ccg[T,nat, < , N]

  IMPORTING lang[T],
            BoolPVS0[T],
            structures@set_as_list,
	    structures@more_list_props[nat],
	    measure_termination_defs[T,nat,<]

  eval_bool : VAR [Val -> bool] 
  eval_op1  : VAR [nat->[Val->Val]]
  eval_op2  : VAR [nat->[[Val,Val]->Val]]
  
  mu_soundness: LEMMA
  FORALL(def: Def):
    LET body = get_body(def) IN
    terminates(eval_bool,eval_op1,eval_op2)(def)
    IMPLIES FORALL(cc: (pvs0_tcc_valid_cc(def))):
    	    FORALL(env: Environment):
	    FORALL(actual: Val): 
              semantic_rel_expr(eval_bool,eval_op1,eval_op2)(get_arg(cc`rec_expr),body,env,actual) AND 
              eval_conds_rec(eval_bool,eval_op1,eval_op2)(body,cc`cnds,env)  
	      IMPLIES mu(eval_bool,eval_op1,eval_op2)(def)(actual) < 
                      mu(eval_bool,eval_op1,eval_op2)(def)(env(vr))

  terminates_implies_pvs0_termination : THEOREM
    FORALL (def : Def) : 
      terminates(eval_bool,eval_op1,eval_op2)(def) 
      IMPLIES pvs0_tcc_termination(eval_bool,eval_op1,eval_op2)(def)

  
  IMPORTING lex2_generic

  pvs0_termination_terminates : THEOREM
    FORALL (def : Def) : 
      pvs0_tcc_termination(eval_bool,eval_op1,eval_op2)(def) => terminates(eval_bool,eval_op1,eval_op2)(def)
  
END measure_termination_wNatAsMT

