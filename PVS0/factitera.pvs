factitera : THEORY
BEGIN

  factitera(n,a:nat) : RECURSIVE nat =
    IF n = 0 THEN a
    ELSE factitera(n-1,a*n)
    ENDIF
  MEASURE n

  factorial(n:nat) : nat = factitera(n,1)

  IMPORTING lang[[nat,nat]]

  ebool(n,a:nat) : bool = n /= 0

  boole(b:bool) : Val = (IF NOT b THEN 0 ELSE 1 ENDIF,0)

  eop1(op:nat)(n,a:nat) : Val = 
    COND op = 0 -> boole(n = 0),
         op = 1 -> (a,0),
         op = 2 -> IF n = 0 THEN (0,0) ELSE (n-1,a*n) ENDIF,
         ELSE -> (n,a)
    ENDCOND

  eop2(op:nat)(v1,v2:Val) : Val = v1

% Interpretation:
%   vr         : (n,a)
%   bool(n,a) : n /= 0
%   op1 0     : (n,a) -> bool(n=0)
%   op1 1     : (n,a) -> (a,0)
%   op1 2     : (n,a) -> (n-1)*a

  pvs0_factitera : PVS0 =
    def(ite(op1(0,vr),op1(1,vr),rec(op1(2,vr))))

  eval_factorial(n:nat) : nat =
    LET v = eval(ebool,eop1,eop2)(n+1,pvs0_factitera)(val2env(n,1)) IN
    IF some?(v) THEN val(v)`1
    ELSE 0
    ENDIF

  pvs0_fact6 : LEMMA
    factorial(6) = eval_factorial(6)

  IMPORTING pvs0_to_ccg[[nat,nat],nat,<,2]

END factitera
