(ack_pvs0
 (eop1_TCC1 0
  (eop1_TCC1-1 nil 3643792193 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (eop1_TCC2 0
  (eop1_TCC2-1 nil 3643792193 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (eop2_TCC1 0
  (eop2_TCC1-1 nil 3643792193 ("" (subtype-tcc) nil nil)
   ((int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (mt_lex2_TCC1 0
  (mt_lex2_TCC1-1 nil 3643792193
   ("" (use "well_founded_le") (("" (grind) nil nil)) nil)
   ((restrict const-decl "R" restrict nil)
    (well_founded? const-decl "bool" orders nil)
    (well_founded_le formula-decl nil ordinals nil))
   nil))
 (pvs0_ack_tcc_termination_TCC1 0
  (pvs0_ack_tcc_termination_TCC1-1 nil 3651141947
   ("" (subtype-tcc) nil nil)
   ((pvs0_ack const-decl "PVS0" ack_pvs0 nil)) nil))
 (pvs0_ack_tcc_termination 0
  (pvs0_ack_tcc_termination-1 nil 3651310635
   ("" (expand "pvs0_tcc_termination")
    (("" (inst 1 "lex2")
      (("" (skeep)
        (("" (skeep)
          (("" (skeep)
            (("" (typepred "cc")
              (("" (use "pvs0_ccs_completness")
                (("" (eval-expr "pvs0_ccs(pvs0_ack)")
                  (("1" (replaces -1)
                    (("1" (expand "member")
                      (("1" (expand* "member")
                        (("1" (expand* "member")
                          (("1" (expand* "member")
                            (("1" (prop)
                              (("1"
                                (replaces -1)
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand "semantic_rel_expr")
                                    (("1"
                                      (expand "semantic_rel_expr")
                                      (("1"
                                        (expand "eop1" -2)
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (replaces -2)
                                            (("1"
                                              (replaces -2)
                                              (("1"
                                                (hide -1)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (prop)
                                                    (("1"
                                                      (lemma "lex2_lt")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "env(vr)`1"
                                                           "env(vr)`2")
                                                          (("1"
                                                            (hide -2)
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "eval_conds_rec")
                                                      (("2"
                                                        (expand
                                                         "eval_conds_rec")
                                                        (("2"
                                                          (expand
                                                           "eval_conds_rec")
                                                          (("2"
                                                            (prop)
                                                            (("2"
                                                              (skeep*)
                                                              (("2"
                                                                (expand
                                                                 "semantic_rel_expr"
                                                                 -4)
                                                                (("2"
                                                                  (expand
                                                                   "semantic_rel_expr"
                                                                   -4)
                                                                  (("2"
                                                                    (skeep)
                                                                    (("2"
                                                                      (replaces
                                                                       -4)
                                                                      (("2"
                                                                        (hide
                                                                         (1
                                                                          -2))
                                                                        (("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (replaces -1)
                                (("2"
                                  (hide -1)
                                  (("2"
                                    (assert)
                                    (("2"
                                      (expand "semantic_rel_expr" -1)
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (replaces -3)
                                          (("2"
                                            (expand
                                             "semantic_rel_expr"
                                             -1)
                                            (("2"
                                              (replaces -1)
                                              (("2"
                                                (expand "eop2" 1)
                                                (("2"
                                                  (lift-if)
                                                  (("2"
                                                    (prop)
                                                    (("1"
                                                      (lemma "lex2_lt")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "env(vr)`1"
                                                           "env(vr)`2")
                                                          (("1"
                                                            (hide
                                                             -3
                                                             -4)
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide -1 2)
                                                      (("2"
                                                        (grind)
                                                        (("2"
                                                          (hide -1)
                                                          (("2"
                                                            (expand
                                                             "semantic_rel_expr")
                                                            (("2"
                                                              (expand
                                                               "semantic_rel_expr")
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (hide -2)
                                (("3"
                                  (replaces -1)
                                  (("3"
                                    (assert)
                                    (("3"
                                      (expand "semantic_rel_expr" -1)
                                      (("3"
                                        (expand "semantic_rel_expr" -1)
                                        (("3"
                                          (skeep)
                                          (("3"
                                            (replaces -1)
                                            (("3"
                                              (replaces -1)
                                              (("3"
                                                (expand "eop1" 1)
                                                (("3"
                                                  (lift-if)
                                                  (("3"
                                                    (prop)
                                                    (("1"
                                                      (lemma "lex2_lt")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "env(vr)`1"
                                                           "env(vr)`2")
                                                          (("1"
                                                            (hide -2)
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide 1)
                                                      (("2"
                                                        (grind)
                                                        (("2"
                                                          (hide -4 -5)
                                                          (("2"
                                                            (expand
                                                             "semantic_rel_expr")
                                                            (("2"
                                                              (expand
                                                               "semantic_rel_expr")
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (rewrite "mt_lex2_TCC1") nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (Val type-eq-decl nil lang nil)
    (ordstruct type-decl nil ordstruct_adt nil)
    (ordinal? def-decl "bool" ordinals nil)
    (ordinal nonempty-type-eq-decl nil ordinals nil)
    (restrict const-decl "R" restrict nil)
    (< def-decl "bool" ordinals nil)
    (WFM type-eq-decl nil measure_termination_defs nil)
    (lex2 const-decl "ordinal" lex2 nil)
    (pvs0_ack const-decl "PVS0" ack_pvs0 nil)
    (pvs0_tcc_valid_cc const-decl "bool" lang nil)
    (PVS0_CC type-eq-decl nil lang nil)
    (rec? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (list type-decl nil list_adt nil)
    (Conditions type-eq-decl nil lang nil)
    (Def type-eq-decl nil PVS0_adt nil)
    (def? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (PVS0 type-decl nil PVS0_adt nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (TRUE const-decl "bool" booleans nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (bijective? const-decl "bool" functions nil)
    (op2 adt-constructor-decl "[[nat, Expr, Expr] -> (op2?)]" PVS0_adt
     nil)
    (rec adt-constructor-decl "[Expr -> (rec?)]" PVS0_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (pvsnot adt-constructor-decl "[Expr[T] -> (pvsnot?)]" BoolPVS0_adt
     nil)
    (pvsnot? adt-recognizer-decl "[BoolPVS0 -> boolean]" BoolPVS0_adt
     nil)
    (vr adt-constructor-decl "(vr?)" PVS0_adt nil)
    (op1 adt-constructor-decl "[[nat, Expr] -> (op1?)]" PVS0_adt nil)
    (pvsbool adt-constructor-decl "[Expr[T] -> (pvsbool?)]"
     BoolPVS0_adt nil)
    (pvsbool? adt-recognizer-decl "[BoolPVS0 -> boolean]" BoolPVS0_adt
     nil)
    (Expr type-eq-decl nil PVS0_adt nil)
    (ite? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op2? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op1? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (vr? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (cnst? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (BoolPVS0 type-decl nil BoolPVS0_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (pvs0_ccs const-decl "list[(pvs0_tcc_valid_cc(def))]" pvs0_to_dg
              nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (member def-decl "bool" list_props nil)
    (eval_conds_rec def-decl "bool" lang nil)
    (/= const-decl "boolean" notequal nil)
    (ebool const-decl "bool" ack_pvs0 nil)
    (boole const-decl "Val" ack_pvs0 nil)
    (lex2_lt formula-decl nil lex2 nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (env skolem-const-decl "Environment[[nat, nat]]" ack_pvs0 nil)
    (Environment type-eq-decl nil lang nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (eop1 const-decl "Val" ack_pvs0 nil)
    (semantic_rel_expr inductive-decl "bool" lang nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (eop2 const-decl "Val" ack_pvs0 nil)
    (pvs0_ccs_completness formula-decl nil pvs0_to_dg nil)
    (pvs0_tcc_termination const-decl "bool" measure_termination_defs
     nil))
   nil))
 (R__TCC1 0
  (R__TCC1-1 nil 3643792193
   ("" (inst 1 "LAMBDA(x,x_: MT_):FALSE") (("" (grind) nil nil)) nil)
   ((FALSE const-decl "bool" booleans nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (MT_ nonempty-type-decl nil ack_pvs0 nil))
   nil))
 (pvs0_ack_pvs0_tcc_gen_termination 0
  (pvs0_ack_pvs0_tcc_gen_termination-1 nil 3651570446
   ("" (postpone) nil nil) nil shostak))
 (IMP_ack_ax_R_wf_TCC1 0
  (IMP_ack_ax_R_wf_TCC1-1 nil 3650811373
   ("" (typepred "R_") (("" (grind) nil nil)) nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (MT_ nonempty-type-decl nil ack_pvs0 nil)
    (pred type-eq-decl nil defined_types nil)
    (well_founded? const-decl "bool" orders nil)
    (R_ const-decl "(well_founded?[MT_])" ack_pvs0 nil))
   nil))
 (IMP_ack_ax_wfm_ack_dec_1_TCC1 0
  (IMP_ack_ax_wfm_ack_dec_1_TCC1-1 nil 3650811373
   ("" (lemma "pvs0_ack_pvs0_tcc_gen_termination")
    (("" (skeep)
      (("" (inst -1 "lambda(x : (vr?)): (m,n)" "_" "(m-1,1)")
        (("1" (assert)
          (("1"
            (inst -1 "(# cnds
                                 := (: pvsbool(op1(1, vr)),
                                       pvsnot(op1(0, vr)) :),
                               path := (: 1, 2 :),
                               rec_expr := rec(op1(3, vr)) #)")
            (("1" (assert)
              (("1" (expand "eval_conds_rec")
                (("1" (expand "eval_conds_rec")
                  (("1" (expand "eval_conds_rec")
                    (("1" (expand "semantic_rel_expr")
                      (("1" (expand "semantic_rel_expr")
                        (("1" (expand "eop1")
                          (("1" (expand "ebool")
                            (("1" (expand "boole")
                              (("1"
                                (prop)
                                (("1"
                                  (inst 1 "(m,n)")
                                  (("1" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (inst 1 "(1,0)")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (inst 1 "(m,n)")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (inst 1 "(0,0)")
                                  (("3"
                                    (assert)
                                    (("3"
                                      (inst 1 "(m,n)")
                                      (("3" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (typepred "pvs0_ccs[[nat, nat]](pvs0_ack)")
              (("2" (rewrite "every_nth")
                (("2" (inst -1 "0")
                  (("1"
                    (case "(# cnds
                             := (: pvsbool[Val[[nat, nat]]]
                                       (op1[Val[[nat, nat]]](1, vr[Val[[nat, nat]]])),
                                   pvsnot[Val[[nat, nat]]]
                                       (op1[Val[[nat, nat]]]
                                            (0, vr[Val[[nat, nat]]])) :),
                           path := (: 1, 2 :),
                           rec_expr
                             := rec[Val[[nat, nat]]]
                                    (op1[Val[[nat, nat]]](3, vr[Val[[nat, nat]]])) #) = nth(pvs0_ccs[[nat, nat]](pvs0_ack), 0)")
                    (("1" (replaces -1) (("1" (assert) nil nil)) nil)
                     ("2" (hide-all-but 1)
                      (("2" (eval-formula) nil nil)) nil)
                     ("3" (hide-all-but 1)
                      (("3" (eval-formula) nil nil)) nil))
                    nil)
                   ("2" (hide-all-but 1) (("2" (eval-formula) nil nil))
                    nil))
                  nil))
                nil))
              nil)
             ("3" (hide-all-but 1) (("3" (eval-formula) nil nil)) nil))
            nil))
          nil)
         ("2" (assert) nil nil))
        nil))
      nil))
    nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (pvs0_ccs const-decl "list[(pvs0_tcc_valid_cc(def))]" pvs0_to_dg
              nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (< const-decl "bool" reals nil)
    (length def-decl "nat" list_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil)
    (nth def-decl "T" list_props nil)
    (below type-eq-decl nil nat_types nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (every_nth formula-decl nil list_props nil)
    (semantic_rel_expr inductive-decl "bool" lang nil)
    (eop1 const-decl "Val" ack_pvs0 nil)
    (boole const-decl "Val" ack_pvs0 nil)
    (ebool const-decl "bool" ack_pvs0 nil)
    (eval_conds_rec def-decl "bool" lang nil)
    (def? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Def type-eq-decl nil PVS0_adt nil)
    (Conditions type-eq-decl nil lang nil)
    (rec? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (PVS0_CC type-eq-decl nil lang nil)
    (pvs0_tcc_valid_cc const-decl "bool" lang nil)
    (pvs0_ack const-decl "PVS0" ack_pvs0 nil)
    (BoolPVS0 type-decl nil BoolPVS0_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (cnst? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op1? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op2? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (ite? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Expr type-eq-decl nil PVS0_adt nil)
    (pvsbool? adt-recognizer-decl "[BoolPVS0 -> boolean]" BoolPVS0_adt
     nil)
    (pvsbool adt-constructor-decl "[Expr[T] -> (pvsbool?)]"
     BoolPVS0_adt nil)
    (op1 adt-constructor-decl "[[nat, Expr] -> (op1?)]" PVS0_adt nil)
    (vr adt-constructor-decl "(vr?)" PVS0_adt nil)
    (pvsnot? adt-recognizer-decl "[BoolPVS0 -> boolean]" BoolPVS0_adt
     nil)
    (pvsnot adt-constructor-decl "[Expr[T] -> (pvsnot?)]" BoolPVS0_adt
     nil)
    (rec adt-constructor-decl "[Expr -> (rec?)]" PVS0_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (Environment type-eq-decl nil lang nil)
    (vr? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (PVS0 type-decl nil PVS0_adt nil) (Val type-eq-decl nil lang nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (m skolem-const-decl "nat" ack_pvs0 nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (pvs0_ack_pvs0_tcc_gen_termination formula-decl nil ack_pvs0 nil))
   nil))
 (IMP_ack_ax_wfm_ack_dec_2_TCC1 0
  (IMP_ack_ax_wfm_ack_dec_2_TCC1-3 nil 3653172084
   ("" (lemma "pvs0_ack_pvs0_tcc_gen_termination")
    (("" (skeep)
      (("" (inst -1 "lambda(vr : (vr?)): (m,n)" "_" "(m,n-1)")
        (("1" (assert)
          (("1"
            (inst -1 "(# cnds
                                     := (: pvsnot(op1(1, vr)),
                                           pvsnot(op1(0, vr)) :),
                                   path := (: 1, 0, 2, 2 :),
                                   rec_expr := rec(op1(4, vr)) #)")
            (("1" (expand "eval_conds_rec")
              (("1" (expand "eval_conds_rec")
                (("1" (expand "eval_conds_rec")
                  (("1" (expand "semantic_rel_expr")
                    (("1" (expand "semantic_rel_expr")
                      (("1" (expand "ebool")
                        (("1" (expand "eop1")
                          (("1" (expand "boole")
                            (("1" (prop)
                              (("1"
                                (inst 1 "(m,n)")
                                (("1" (grind) nil nil))
                                nil)
                               ("2"
                                (inst 1 "(0,0)")
                                (("2"
                                  (assert)
                                  (("2"
                                    (inst 1 "(m,n)")
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (inst 1 "(0,0)")
                                (("3"
                                  (assert)
                                  (("3"
                                    (inst 1 "(m,n)")
                                    (("3" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (typepred "pvs0_ccs[[nat,nat]](pvs0_ack)")
              (("2" (rewrite "every_nth")
                (("2" (inst -1 "2")
                  (("1"
                    (case "(# cnds
                                          := (: pvsnot[Val[[nat, nat]]]
                                                    (op1[Val[[nat, nat]]](1, vr[Val[[nat, nat]]])),
                                                pvsnot[Val[[nat, nat]]]
                                                    (op1[Val[[nat, nat]]]
                                                         (0, vr[Val[[nat, nat]]])) :),
                                        path := (: 1, 0, 2, 2 :),
                                        rec_expr
                                          := rec[Val[[nat, nat]]]
                                                 (op1[Val[[nat, nat]]](4, vr[Val[[nat, nat]]])) #) =nth(pvs0_ccs[[nat, nat]](pvs0_ack), 2)")
                    (("1" (replaces -1) (("1" (assert) nil nil)) nil)
                     ("2" (hide-all-but 1)
                      (("2" (eval-formula) nil nil)) nil)
                     ("3" (hide-all-but 1)
                      (("3" (eval-formula) nil nil)) nil))
                    nil)
                   ("2" (hide-all-but 1) (("2" (eval-formula) nil nil))
                    nil))
                  nil))
                nil))
              nil)
             ("3" (hide-all-but 1) (("3" (eval-formula) nil nil)) nil))
            nil))
          nil)
         ("2" (assert) nil nil))
        nil))
      nil))
    nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (pvs0_ccs const-decl "list[(pvs0_tcc_valid_cc(def))]" pvs0_to_dg
              nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (< const-decl "bool" reals nil)
    (length def-decl "nat" list_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil)
    (nth def-decl "T" list_props nil)
    (below type-eq-decl nil nat_types nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (every_nth formula-decl nil list_props nil)
    (eval_conds_rec def-decl "bool" lang nil)
    (eop1 const-decl "Val" ack_pvs0 nil)
    (boole const-decl "Val" ack_pvs0 nil)
    (ebool const-decl "bool" ack_pvs0 nil)
    (semantic_rel_expr inductive-decl "bool" lang nil)
    (def? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Def type-eq-decl nil PVS0_adt nil)
    (Conditions type-eq-decl nil lang nil)
    (rec? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (PVS0_CC type-eq-decl nil lang nil)
    (pvs0_tcc_valid_cc const-decl "bool" lang nil)
    (pvs0_ack const-decl "PVS0" ack_pvs0 nil)
    (BoolPVS0 type-decl nil BoolPVS0_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (cnst? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op1? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op2? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (ite? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Expr type-eq-decl nil PVS0_adt nil)
    (pvsnot? adt-recognizer-decl "[BoolPVS0 -> boolean]" BoolPVS0_adt
     nil)
    (pvsnot adt-constructor-decl "[Expr[T] -> (pvsnot?)]" BoolPVS0_adt
     nil)
    (op1 adt-constructor-decl "[[nat, Expr] -> (op1?)]" PVS0_adt nil)
    (vr adt-constructor-decl "(vr?)" PVS0_adt nil)
    (rec adt-constructor-decl "[Expr -> (rec?)]" PVS0_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (Environment type-eq-decl nil lang nil)
    (vr? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (PVS0 type-decl nil PVS0_adt nil) (Val type-eq-decl nil lang nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (n skolem-const-decl "nat" ack_pvs0 nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (pvs0_ack_pvs0_tcc_gen_termination formula-decl nil ack_pvs0 nil))
   nil))
 (IMP_ack_ax_wfm_ack_dec_3_TCC1 0
  (IMP_ack_ax_wfm_ack_dec_3_TCC1-1 nil 3650811373
   ("" (measure-induct+ "v(m,n-1)" ("m" "n" "v"))
    (("1" (postpone) nil nil) ("2" (postpone) nil nil)
     ("3" (postpone) nil nil) ("4" (postpone) nil nil)
     ("5" (postpone) nil nil) ("6" (postpone) nil nil)
     ("7" (postpone) nil nil) ("8" (postpone) nil nil)
     ("9" (postpone) nil nil) ("10" (postpone) nil nil)
     ("11" (postpone) nil nil) ("12" (postpone) nil nil)
     ("13" (postpone) nil nil) ("14" (postpone) nil nil)
     ("15" (postpone) nil nil) ("16" (postpone) nil nil)
     ("17" (postpone) nil nil))
    nil)
   nil nil))
 (IMP_omega_TCC1 0
  (IMP_omega_TCC1-2 nil 3653086705
   ("" (expand "lt_concrete_val")
    (("" (use "lt_val_wf")
      (("1" (grind) nil nil)
       ("2" (expand "pvs0_ack") (("2" (propax) nil nil)) nil))
      nil))
    nil)
   ((lt_val_wf formula-decl nil measure_termination nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (ordstruct type-decl nil ordstruct_adt nil)
    (ordinal? def-decl "bool" ordinals nil)
    (ordinal nonempty-type-eq-decl nil ordinals nil)
    (restrict const-decl "R" restrict nil)
    (< def-decl "bool" ordinals nil)
    (mf const-decl "mt_lex2.WFM" ack_pvs0 nil)
    (WFM type-eq-decl nil measure_termination_defs nil)
    (eop2 const-decl "Val" ack_pvs0 nil)
    (eop1 const-decl "Val" ack_pvs0 nil)
    (ebool const-decl "bool" ack_pvs0 nil)
    (Def type-eq-decl nil PVS0_adt nil)
    (pvs0_ack const-decl "PVS0" ack_pvs0 nil)
    (Val type-eq-decl nil lang nil)
    (def? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (PVS0 type-decl nil PVS0_adt nil)
    (well_founded? const-decl "bool" orders nil)
    (lt_val const-decl "bool" measure_termination nil)
    (lex2 const-decl "ordinal" lex2 nil)
    (lt_concrete_val const-decl "bool" ack_pvs0 nil))
   nil))
 (IMP_omega_TCC2 0
  (IMP_omega_TCC2-2 nil 3653086736
   ("" (skeep)
    (("" (expand "lt_concrete_val")
      (("" (use "lt_val_no_desc_inf_branch")
        (("" (expand "pvs0_ack") (("" (propax) nil nil)) nil)) nil))
      nil))
    nil)
   ((lt_concrete_val const-decl "bool" ack_pvs0 nil)
    (PVS0 type-decl nil PVS0_adt nil)
    (def? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Def type-eq-decl nil PVS0_adt nil) (Val type-eq-decl nil lang nil)
    (pvs0_ack const-decl "PVS0" ack_pvs0 nil)
    (ebool const-decl "bool" ack_pvs0 nil)
    (eop1 const-decl "Val" ack_pvs0 nil)
    (eop2 const-decl "Val" ack_pvs0 nil)
    (WFM type-eq-decl nil measure_termination_defs nil)
    (mf const-decl "mt_lex2.WFM" ack_pvs0 nil)
    (< def-decl "bool" ordinals nil)
    (restrict const-decl "R" restrict nil)
    (ordinal nonempty-type-eq-decl nil ordinals nil)
    (ordinal? def-decl "bool" ordinals nil)
    (ordstruct type-decl nil ordstruct_adt nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (lt_val_no_desc_inf_branch formula-decl nil measure_termination
     nil))
   nil))
 (ack_pvs0_TCC1 0
  (ack_pvs0_TCC1-1 nil 3653172232
   ("" (measure-induct+ "Omega_ack(m,n)" ("m" "n"))
    (("1" (expand "eval" 1)
      (("1" (expand "pvs0_ack" 1 1)
        (("1" (expand "eval_expr" 1)
          (("1" (lift-if)
            (("1" (prop)
              (("1" (hide-all-but -1) (("1" (grind) nil nil)) nil)
               ("2" (expand "eval_expr" 1)
                (("2" (assert)
                  (("2" (lift-if)
                    (("2" (prop)
                      (("1" (assert) nil nil)
                       ("2" (expand "eval_expr" 1)
                        (("2" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("3" (expand "eval_expr" 1)
                (("3" (assert)
                  (("3" (prop)
                    (("1" (expand "eval_expr" 1)
                      (("1" (expand "eop1" 1)
                        (("1" (expand "boole" 1)
                          (("1" (expand "ebool" 1)
                            (("1" (prop)
                              (("1"
                                (lift-if)
                                (("1"
                                  (prop)
                                  (("1"
                                    (expand "eval_expr" 2)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (lift-if)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (expand "eval_expr" -1)
                                            (("1"
                                              (expand "eval_expr" -1)
                                              (("1"
                                                (expand "eop1" -1)
                                                (("1"
                                                  (expand "boole" -1)
                                                  (("1"
                                                    (expand "ebool" -1)
                                                    (("1"
                                                      (lift-if)
                                                      (("1"
                                                        (prop)
                                                        (("1"
                                                          (expand
                                                           "eval_expr"
                                                           2)
                                                          (("1"
                                                            (lift-if)
                                                            (("1"
                                                              (prop)
                                                              (("1"
                                                                (expand
                                                                 "eval_expr"
                                                                 1
                                                                 2)
                                                                (("1"
                                                                  (expand
                                                                   "eval_expr"
                                                                   1
                                                                   2)
                                                                  (("1"
                                                                    (expand
                                                                     "eop1"
                                                                     1
                                                                     2)
                                                                    (("1"
                                                                      (inst
                                                                       -6
                                                                       "x!1-1"
                                                                       "1")
                                                                      (("1"
                                                                        (lemma
                                                                         "omega_increasing")
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "(x!1,x!2)"
                                                                           "(x!1-1,1)")
                                                                          (("1"
                                                                            (expand
                                                                             "Omega_ack"
                                                                             -7
                                                                             (1
                                                                              2))
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (lemma
                                                                                 "eval_expr_ge_n_j")
                                                                                (("1"
                                                                                  (expand
                                                                                   "eval"
                                                                                   -8)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -1
                                                                                     "get_body(pvs0_ack)"
                                                                                     "LAMBDA (v_1: (vr?)): (x!1 - 1, 1)"
                                                                                     "ebool"
                                                                                     "eop1"
                                                                                     "eop2"
                                                                                     "get_body(pvs0_ack)"
                                                                                     "Omega(x!1 - 1, 1)")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "Omega_ack")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (prop)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -2
                                                                                             "omega.Omega(x!1, x!2) - 1")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (lemma
                                                                                               "IMP_omega_TCC1")
                                                                                              (("2"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (lemma
                                                                                       "IMP_omega_TCC1")
                                                                                      (("2"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "lt_concrete_val")
                                                                            (("2"
                                                                              (expand
                                                                               "lt_val")
                                                                              (("2"
                                                                                (hide-all-but
                                                                                 (5
                                                                                  4
                                                                                  1
                                                                                  -2))
                                                                                (("2"
                                                                                  (inst
                                                                                   1
                                                                                   " (# cnds
                                                             := (: pvsbool(op1(1, vr)),
                                                                   pvsnot(op1(0, vr)) :),
                                                           path := (: 1, 2 :),
                                                           rec_expr := rec(op1(3, vr)) #)")
                                                                                  (("1"
                                                                                    (prop)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "semantic_rel_expr")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "semantic_rel_expr")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "eop1")
                                                                                            (("1"
                                                                                              (inst
                                                                                               1
                                                                                               "(x!1,x!2)")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "eval_conds_rec")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "eval_conds_rec")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "eval_conds_rec")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "semantic_rel_expr")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "semantic_rel_expr")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "ebool")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "eop1")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "boole")
                                                                                                    (("2"
                                                                                                      (prop)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         1
                                                                                                         "(1,0)")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             1
                                                                                                             "(x!1,x!2)")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (inst
                                                                                                         1
                                                                                                         "(0,0)")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             1
                                                                                                             "(x!1,x!2)")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (expand
                                                                                       "mf")
                                                                                      (("3"
                                                                                        (use
                                                                                         "lex2_lt")
                                                                                        (("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (typepred
                                                                                     "pvs0_ccs[[nat, nat]](pvs0_ack)")
                                                                                    (("2"
                                                                                      (rewrite
                                                                                       "every_nth")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -1
                                                                                         "0")
                                                                                        (("1"
                                                                                          (case
                                                                                           "(# cnds
                                                                      := (: pvsbool[Val[[nat, nat]]]
                                                                                (op1[Val[[nat, nat]]](1, vr[Val[[nat, nat]]])),
                                                                            pvsnot[Val[[nat, nat]]]
                                                                                (op1[Val[[nat, nat]]]
                                                                                     (0, vr[Val[[nat, nat]]])) :),
                                                                    path := (: 1, 2 :),
                                                                    rec_expr
                                                                      := rec[Val[[nat, nat]]]
                                                                             (op1[Val[[nat, nat]]](3, vr[Val[[nat, nat]]])) #) = nth(pvs0_ccs
                                                                                      [[nat, nat]]
                                                                                      (pvs0_ack),
                                                                                  0)")
                                                                                          (("1"
                                                                                            (replaces
                                                                                             -1)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide-all-but
                                                                                             1)
                                                                                            (("2"
                                                                                              (eval-formula)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (hide-all-but
                                                                                             1)
                                                                                            (("3"
                                                                                              (eval-formula)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (eval-formula)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("3"
                                                                                      (eval-formula)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "eval_expr"
                                                                 1)
                                                                (("2"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "eval_expr" 1)
                                            (("2"
                                              (expand "eval_expr" 1)
                                              (("2"
                                                (expand "eop1" 1)
                                                (("2"
                                                  (expand "boole" 1)
                                                  (("2"
                                                    (expand "ebool" 1)
                                                    (("2"
                                                      (lift-if)
                                                      (("2"
                                                        (prop)
                                                        (("1"
                                                          (expand
                                                           "eval_expr"
                                                           2)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (lift-if)
                                                              (("1"
                                                                (prop)
                                                                (("1"
                                                                  (expand
                                                                   "eval_expr"
                                                                   1
                                                                   2)
                                                                  (("1"
                                                                    (expand
                                                                     "eval_expr"
                                                                     1
                                                                     2)
                                                                    (("1"
                                                                      (expand
                                                                       "eval_expr"
                                                                       1
                                                                       2)
                                                                      (("1"
                                                                        (expand
                                                                         "eval_expr"
                                                                         1
                                                                         3)
                                                                        (("1"
                                                                          (expand
                                                                           "eval_expr"
                                                                           1
                                                                           3)
                                                                          (("1"
                                                                            (expand
                                                                             "eop1"
                                                                             1
                                                                             3)
                                                                            (("1"
                                                                              (inst-cp
                                                                               -6
                                                                               "x!1"
                                                                               "x!2-1")
                                                                              (("1"
                                                                                (expand
                                                                                 "Omega_ack")
                                                                                (("1"
                                                                                  (use
                                                                                   "omega_increasing")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "eval"
                                                                                       -8)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "eval_expr_ge_n")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -1
                                                                                           "ebool"
                                                                                           "eop1"
                                                                                           "eop2"
                                                                                           "Omega(x!1, x!2 - 1)"
                                                                                           "Omega(x!1, x!2)-1"
                                                                                           "get_body(pvs0_ack)"
                                                                                           "get_body(pvs0_ack)"
                                                                                           " LAMBDA
                                                                              (v_1: (vr?)):
                                                                              (x!1, x!2 - 1)")
                                                                                          (("1"
                                                                                            (beta)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "eval_expr"
                                                                                                   1
                                                                                                   2)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "eval_expr"
                                                                                                     -3)
                                                                                                    (("1"
                                                                                                      (lift-if)
                                                                                                      (("1"
                                                                                                        (prop)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "eop2"
                                                                                                           1
                                                                                                           2)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -9
                                                                                                             "x!1-1"
                                                                                                             "val(eval_expr(ebool, eop1, eop2)
                                                                                 (omega.Omega(x!1, x!2),
                                                                                  rec(op1(4, vr)),
                                                                                  get_body(pvs0_ack),
                                                                                  LAMBDA
                                                                                  (v: (vr?[Val[[nat, nat]]])):
                                                                                  (x!1, x!2)))`1")
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "omega_increasing")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "(x!1, x!2)"
                                                                                                                 "(x!1 - 1,
                                                           val(eval_expr(ebool, eop1, eop2)
                                                                        (omega.Omega(x!1, x!2), rec(op1(4, vr)),
                                                                         get_body(pvs0_ack),
                                                                         LAMBDA (v: (vr?[Val[[nat, nat]]])):
                                                                           (x!1, x!2)))`1)")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "eval")
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "eval_expr_ge_n")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "ebool"
                                                                                                                         "eop1"
                                                                                                                         "eop2"
                                                                                                                         "omega.Omega
                                                                             (x!1 - 1,
                                                                              val(eval_expr(ebool, eop1, eop2)
                                                                                           (omega.Omega(x!1, x!2),
                                                                                            rec(op1(4, vr)),
                                                                                            get_body(pvs0_ack),
                                                                                            LAMBDA
                                                                                            (v: (vr?[Val[[nat, nat]]])):
                                                                                            (x!1, x!2)))`1)"
                                                                                                                         "omega.Omega(x!1, x!2) - 1"
                                                                                                                         "get_body(pvs0_ack)"
                                                                                                                         "get_body(pvs0_ack)"
                                                                                                                         " LAMBDA (v_1: (vr?[Val[[nat, nat]]])):
                                                                           (x!1 - 1,
                                                                            val(eval_expr(ebool, eop1, eop2)
                                                                                         (omega.Omega(x!1, x!2),
                                                                                          rec(op1(4, vr)),
                                                                                          get_body(pvs0_ack),
                                                                                          LAMBDA
                                                                                          (v: (vr?[Val[[nat, nat]]])):
                                                                                          (x!1, x!2)))`1)")
                                                                                                                        (("1"
                                                                                                                          (beta)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (lemma
                                                                                                                           "IMP_omega_TCC1")
                                                                                                                          (("2"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "lt_concrete_val")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "lt_val")
                                                                                                                    (("2"
                                                                                                                      (hide-all-but
                                                                                                                       (1
                                                                                                                        3
                                                                                                                        4
                                                                                                                        5))
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         1
                                                                                                                         "(# cnds
                                                                                 := (: pvsnot(op1(1, vr)),
                                                                                       pvsnot(op1(0, vr)) :),
                                                                               path := (: 2, 2 :),
                                                                               rec_expr
                                                                                 := rec(op2(0, vr, rec(op1(4, vr)))) #)")
                                                                                                                        (("1"
                                                                                                                          (prop)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "semantic_rel_expr"
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 1
                                                                                                                                 "(x!1, x!2)"
                                                                                                                                 "val[Val[[nat, nat]]]
                                                                           (eval_expr[[nat, nat]]
                                                                                (ebool, eop1, eop2)
                                                                                (omega[[nat, nat], lt_concrete_val].Omega(x!1, x!2),
                                                                                 rec[Val[[nat, nat]]]
                                                                                     (op1[Val[[nat, nat]]](4, vr[Val[[nat, nat]]])),
                                                                                 get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                 LAMBDA (v: (vr?[Val[[nat, nat]]])): (x!1, x!2)))")
                                                                                                                                (("1"
                                                                                                                                  (prop)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "semantic_rel_expr")
                                                                                                                                    (("1"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (reveal
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (lemma
                                                                                                                                       "eval_expr_semantic_rel")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -1
                                                                                                                                         "ebool"
                                                                                                                                         "eop1"
                                                                                                                                         "eop2"
                                                                                                                                         " LAMBDA (v: (vr?[Val[[nat, nat]]])): (x!1, x!2)"
                                                                                                                                         "rec(op1(4, vr))"
                                                                                                                                         "get_body(pvs0_ack)"
                                                                                                                                         "val[Val[[nat, nat]]]
                                                                                                (eval_expr[[nat, nat]]
                                                                                                     (ebool, eop1, eop2)
                                                                                                     (omega[[nat, nat], lt_concrete_val].Omega
                                                                                                          (x!1, x!2),
                                                                                                      rec[Val[[nat, nat]]]
                                                                                                          (op1[Val[[nat, nat]]]
                                                                                                           (4, vr[Val[[nat, nat]]])),
                                                                                                      get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                                      LAMBDA (v: (vr?[Val[[nat, nat]]])):
                                                                                                        (x!1, x!2)))"
                                                                                                                                         "omega[[nat, nat], lt_concrete_val].Omega
                                                                                                          (x!1, x!2)")
                                                                                                                                        (("1"
                                                                                                                                          (beta)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (lemma
                                                                                                                                           "IMP_omega_TCC1")
                                                                                                                                          (("2"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("3"
                                                                                                                                    (expand
                                                                                                                                     "eop2"
                                                                                                                                     1
                                                                                                                                     2)
                                                                                                                                    (("3"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (reveal
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("3"
                                                                                                                                  (expand
                                                                                                                                   "pvs0_ack")
                                                                                                                                  (("3"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("4"
                                                                                                                                  (lemma
                                                                                                                                   "IMP_omega_TCC1")
                                                                                                                                  (("4"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (expand
                                                                                                                             "eval_conds_rec")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "eval_conds_rec")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "eval_conds_rec")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "semantic_rel_expr")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "semantic_rel_expr")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "eop1")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "boole")
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "ebool")
                                                                                                                                          (("2"
                                                                                                                                            (prop)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               1
                                                                                                                                               "(0,0)")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   1
                                                                                                                                                   "(x!1,x!2)")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (inst
                                                                                                                                               1
                                                                                                                                               "(0,0)")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   1
                                                                                                                                                   "(x!1,x!2)")
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (expand
                                                                                                                             "mf")
                                                                                                                            (("3"
                                                                                                                              (use
                                                                                                                               "lex2_lt")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (lemma
                                                                                                                                 "IMP_omega_TCC1")
                                                                                                                                (("2"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (typepred
                                                                                                                           "pvs0_ccs [[nat, nat]](pvs0_ack)")
                                                                                                                          (("2"
                                                                                                                            (rewrite
                                                                                                                             "every_nth")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "1")
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "(# cnds
                                                                                := (: pvsnot[Val[[nat, nat]]]
                                                                                          (op1[Val[[nat, nat]]](1, vr[Val[[nat, nat]]])),
                                                                                      pvsnot[Val[[nat, nat]]]
                                                                                          (op1[Val[[nat, nat]]]
                                                                                               (0, vr[Val[[nat, nat]]])) :),
                                                                              path := (: 2, 2 :),
                                                                              rec_expr
                                                                                := rec[Val[[nat, nat]]]
                                                                                       (op2[Val[[nat, nat]]]
                                                                                            (0, vr[Val[[nat, nat]]],
                                                                                             rec[Val[[nat, nat]]]
                                                                                                 (op1[Val[[nat, nat]]]
                                                                                                      (4, vr[Val[[nat, nat]]])))) #) = nth(pvs0_ccs
                                                                                                [[nat, nat]]
                                                                                                (pvs0_ack),
                                                                                            1)")
                                                                                                                                (("1"
                                                                                                                                  (replaces
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide-all-but
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (eval-formula)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("3"
                                                                                                                                  (hide-all-but
                                                                                                                                   1)
                                                                                                                                  (("3"
                                                                                                                                    (eval-formula)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide-all-but
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (eval-formula)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (hide-all-but
                                                                                                                           1)
                                                                                                                          (("3"
                                                                                                                            (eval-formula)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("3"
                                                                                                                  (lemma
                                                                                                                   "IMP_omega_TCC1")
                                                                                                                  (("3"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (lemma
                                                                                                               "IMP_omega_TCC1")
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (lemma
                                                                                             "IMP_omega_TCC1")
                                                                                            (("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "lt_concrete_val")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "lt_val")
                                                                                      (("2"
                                                                                        (hide-all-but
                                                                                         (1
                                                                                          3
                                                                                          4))
                                                                                        (("2"
                                                                                          (inst
                                                                                           1
                                                                                           " (# cnds
                                                                 := (: pvsnot(op1(1, vr)),
                                                                       pvsnot(op1(0, vr)) :),
                                                               path := (: 1, 0, 2, 2 :),
                                                               rec_expr := rec(op1(4, vr)) #)")
                                                                                          (("1"
                                                                                            (prop)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "semantic_rel_expr")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "semantic_rel_expr")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "eop1")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     1
                                                                                                     "(x!1,x!2)")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               "eval_conds_rec")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "eval_conds_rec")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "eval_conds_rec")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "semantic_rel_expr")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "semantic_rel_expr")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "eop1")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "boole")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "ebool")
                                                                                                            (("2"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 1
                                                                                                                 "(0,0)")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "(x!1,x!2)")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (inst
                                                                                                                 1
                                                                                                                 "(0,0)")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "(x!1,x!2)")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (expand
                                                                                               "mf")
                                                                                              (("3"
                                                                                                (use
                                                                                                 "lex2_lt")
                                                                                                (("3"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (typepred
                                                                                             "pvs0_ccs[[nat, nat]](pvs0_ack)")
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "every_nth")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "2")
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "(# cnds
                                                                          := (: pvsnot[Val[[nat, nat]]]
                                                                                    (op1[Val[[nat, nat]]](1, vr[Val[[nat, nat]]])),
                                                                                pvsnot[Val[[nat, nat]]]
                                                                                    (op1[Val[[nat, nat]]]
                                                                                         (0, vr[Val[[nat, nat]]])) :),
                                                                        path := (: 1, 0, 2, 2 :),
                                                                        rec_expr
                                                                          := rec[Val[[nat, nat]]]
                                                                                 (op1[Val[[nat, nat]]](4, vr[Val[[nat, nat]]])) #) = nth(pvs0_ccs
                                                                                          [[nat, nat]]
                                                                                          (pvs0_ack),
                                                                                      2)")
                                                                                                  (("1"
                                                                                                    (replaces
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (eval-formula)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("3"
                                                                                                      (eval-formula)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (eval-formula)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (hide-all-but
                                                                                             1)
                                                                                            (("3"
                                                                                              (eval-formula)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "eval_expr"
                                                                   1)
                                                                  (("2"
                                                                    (lift-if)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (prop)
                                                                        (("2"
                                                                          (expand
                                                                           "eval_expr"
                                                                           1)
                                                                          (("2"
                                                                            (lift-if)
                                                                            (("2"
                                                                              (prop)
                                                                              (("1"
                                                                                (expand
                                                                                 "eval_expr"
                                                                                 1
                                                                                 2)
                                                                                (("1"
                                                                                  (expand
                                                                                   "eval_expr"
                                                                                   1
                                                                                   2)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "eop1"
                                                                                     1
                                                                                     2)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -6
                                                                                       "x!1"
                                                                                       "x!2-1")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "Omega_ack")
                                                                                        (("1"
                                                                                          (use
                                                                                           "omega_increasing")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "eval_expr_ge_n")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "eval")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "ebool"
                                                                                                   "eop1"
                                                                                                   "eop2"
                                                                                                   "omega.Omega(x!1, x!2 - 1)"
                                                                                                   "omega.Omega(x!1, x!2) - 1"
                                                                                                   "get_body(pvs0_ack)"
                                                                                                   "get_body(pvs0_ack)"
                                                                                                   "LAMBDA (v_1: (vr?)): (x!1, x!2 - 1)")
                                                                                                  (("1"
                                                                                                    (beta)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (lemma
                                                                                                     "IMP_omega_TCC1")
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "lt_concrete_val"
                                                                                             1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "lt_val")
                                                                                              (("2"
                                                                                                (hide-all-but
                                                                                                 (1
                                                                                                  4
                                                                                                  5))
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   1
                                                                                                   "(# cnds
                                                                     := (: pvsnot(op1(1, vr)),
                                                                           pvsnot(op1(0, vr)) :),
                                                                   path := (: 1, 0, 2, 2 :),
                                                                   rec_expr := rec(op1(4, vr)) #)")
                                                                                                  (("1"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "semantic_rel_expr")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "semantic_rel_expr")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "eop1")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               1
                                                                                                               "(x!1,x!2)")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       "eval_conds_rec")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "eval_conds_rec")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "eval_conds_rec")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "semantic_rel_expr")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "semantic_rel_expr")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "ebool")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "eop1")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "boole"
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (prop)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         1
                                                                                                                         "(0,0)")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             1
                                                                                                                             "(x!1,x!2)")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (inst
                                                                                                                         1
                                                                                                                         "(0,0)")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             1
                                                                                                                             "(x!1,x!2)")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (expand
                                                                                                       "mf")
                                                                                                      (("3"
                                                                                                        (use
                                                                                                         "lex2_lt")
                                                                                                        (("3"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (typepred
                                                                                                     "pvs0_ccs[[nat, nat]](pvs0_ack)")
                                                                                                    (("2"
                                                                                                      (rewrite
                                                                                                       "every_nth")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "2")
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "(# cnds
                                                                              := (: pvsnot[Val[[nat, nat]]]
                                                                                        (op1[Val[[nat, nat]]](1, vr[Val[[nat, nat]]])),
                                                                                    pvsnot[Val[[nat, nat]]]
                                                                                        (op1[Val[[nat, nat]]]
                                                                                             (0, vr[Val[[nat, nat]]])) :),
                                                                            path := (: 1, 0, 2, 2 :),
                                                                            rec_expr
                                                                              := rec[Val[[nat, nat]]]
                                                                                     (op1[Val[[nat, nat]]](4, vr[Val[[nat, nat]]])) #) = nth(pvs0_ccs
                                                                                              [[nat, nat]]
                                                                                              (pvs0_ack),
                                                                                          2)")
                                                                                                          (("1"
                                                                                                            (replaces
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (eval-formula)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("3"
                                                                                                              (eval-formula)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (eval-formula)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("3"
                                                                                                      (eval-formula)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "eval_expr"
                                                                                 1)
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (expand "eval_expr" 1)
                                            (("3" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "eval_expr" 1)
                      (("2" (propax) nil nil)) nil))
                    nil))
                  nil))
                nil)
               ("4" (expand "eval_expr" 1)
                (("4" (assert)
                  (("4" (lift-if)
                    (("4" (prop)
                      (("1" (assert) nil nil)
                       ("2" (expand "eval_expr" 1)
                        (("2" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (expand "pvs0_ack") (("2" (propax) nil nil)) nil)
     ("3" (expand "pvs0_ack") (("3" (propax) nil nil)) nil)
     ("4" (expand "pvs0_ack") (("4" (propax) nil nil)) nil)
     ("5" (expand "pvs0_ack") (("5" (propax) nil nil)) nil))
    nil)
   ((eval_expr def-decl "Maybe[Val]" lang nil)
    (Omega const-decl "nat" omega "orders/")
    (eval_expr_semantic_rel_j rec-application-judgement
     "{myv: Maybe[Val] |
         some?(myv) IMPLIES
          semantic_rel_expr(eval_bool, eval_op1, eval_op2)
                           (expr, body, env, val(myv))}" ack_pvs0 nil)
    (eval_expr_ge_n_j rec-application-judgement "{myv: Maybe[Val] |
         some?(myv) IMPLIES
          n > 0 AND
           (FORALL (m: upfrom(n)):
              myv =
               eval_expr(eval_bool, eval_op1, eval_op2)
                        (m, expr, body, env))}" ack_pvs0 nil)
    (boole const-decl "Val" ack_pvs0 nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (x!1 skolem-const-decl "nat" ack_pvs0 nil)
    (x!2 skolem-const-decl "nat" ack_pvs0 nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (IMP_omega_TCC1 subtype-tcc nil ack_pvs0 nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (upfrom nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (cnst? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op1? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op2? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (rec? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (ite? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Expr type-eq-decl nil PVS0_adt nil)
    (get_body adt-accessor-decl "[Def -> Expr]" PVS0_adt nil)
    (eval_expr_ge_n_j recursive-judgement-axiom nil lang nil)
    (lt_val const-decl "bool" measure_termination nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (Conditions type-eq-decl nil lang nil)
    (PVS0_CC type-eq-decl nil lang nil)
    (pvs0_tcc_valid_cc const-decl "bool" lang nil)
    (BoolPVS0 type-decl nil BoolPVS0_adt nil)
    (pvsbool? adt-recognizer-decl "[BoolPVS0 -> boolean]" BoolPVS0_adt
     nil)
    (pvsbool adt-constructor-decl "[Expr[T] -> (pvsbool?)]"
     BoolPVS0_adt nil)
    (op1 adt-constructor-decl "[[nat, Expr] -> (op1?)]" PVS0_adt nil)
    (vr adt-constructor-decl "(vr?)" PVS0_adt nil)
    (pvsnot? adt-recognizer-decl "[BoolPVS0 -> boolean]" BoolPVS0_adt
     nil)
    (pvsnot adt-constructor-decl "[Expr[T] -> (pvsnot?)]" BoolPVS0_adt
     nil)
    (rec adt-constructor-decl "[Expr -> (rec?)]" PVS0_adt nil)
    (mf const-decl "mt_lex2.WFM" ack_pvs0 nil)
    (lex2_lt formula-decl nil lex2 nil)
    (eval_conds_rec def-decl "bool" lang nil)
    (semantic_rel_expr inductive-decl "bool" lang nil)
    (every_nth formula-decl nil list_props nil)
    (below type-eq-decl nil nat_types nil)
    (nth def-decl "T" list_props nil)
    (TRUE const-decl "bool" booleans nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (bijective? const-decl "bool" functions nil)
    (below type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (pvs0_ccs const-decl "list[(pvs0_tcc_valid_cc(def))]" pvs0_to_dg
              nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (lt_concrete_val const-decl "bool" ack_pvs0 nil)
    (omega_increasing formula-decl nil omega "orders/")
    (eval_expr_semantic_rel formula-decl nil lang nil)
    (op2 adt-constructor-decl "[[nat, Expr, Expr] -> (op2?)]" PVS0_adt
     nil)
    (val adt-accessor-decl "[(some?) -> T]" Maybe "structures/")
    (eval_expr_ge_n formula-decl nil lang nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (eop2 const-decl "Val" ack_pvs0 nil)
    (eop1 const-decl "Val" ack_pvs0 nil)
    (ebool const-decl "bool" ack_pvs0 nil)
    (eval const-decl "Maybe[Val]" lang nil)
    (Environment type-eq-decl nil lang nil)
    (vr? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Def type-eq-decl nil PVS0_adt nil)
    (some? adt-recognizer-decl "[Maybe -> boolean]" Maybe
     "structures/")
    (Maybe type-decl nil Maybe "structures/")
    (Val type-eq-decl nil lang nil) (PVS0 type-decl nil PVS0_adt nil)
    (def? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (pvs0_ack const-decl "PVS0" ack_pvs0 nil)
    (wf_nat formula-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (Omega_ack const-decl "nat" ack_pvs0 nil)
    (naturalnumber type-eq-decl nil naturalnumbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (measure_induction formula-decl nil measure_induction nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil))
   nil)
  (ack_pvs0_TCC1-2 nil 3653088913
   ("" (measure-induct+ "Omega_ack(m,n)" ("m" "n"))
    (("1" (expand "eval" 1)
      (("1" (expand "pvs0_ack" 1 1)
        (("1" (expand "eval_expr" 1)
          (("1" (lift-if)
            (("1" (prop)
              (("1" (hide-all-but -1) (("1" (grind) nil nil)) nil)
               ("2" (expand "eval_expr" 1)
                (("2" (assert)
                  (("2" (lift-if)
                    (("2" (prop)
                      (("1" (assert) nil nil)
                       ("2" (expand "eval_expr" 1)
                        (("2" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("3" (expand "eval_expr" 1)
                (("3" (assert)
                  (("3" (prop)
                    (("1" (expand "eval_expr" 1)
                      (("1" (expand "eop1" 1)
                        (("1" (expand "boole" 1)
                          (("1" (expand "ebool" 1)
                            (("1" (prop)
                              (("1"
                                (lift-if)
                                (("1"
                                  (prop)
                                  (("1"
                                    (expand "eval_expr" 2)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (lift-if)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (expand "eval_expr" -1)
                                            (("1"
                                              (expand "eval_expr" -1)
                                              (("1"
                                                (expand "eop1" -1)
                                                (("1"
                                                  (expand "boole" -1)
                                                  (("1"
                                                    (expand "ebool" -1)
                                                    (("1"
                                                      (lift-if)
                                                      (("1"
                                                        (prop)
                                                        (("1"
                                                          (expand
                                                           "eval_expr"
                                                           2)
                                                          (("1"
                                                            (lift-if)
                                                            (("1"
                                                              (prop)
                                                              (("1"
                                                                (expand
                                                                 "eval_expr"
                                                                 1
                                                                 2)
                                                                (("1"
                                                                  (expand
                                                                   "eval_expr"
                                                                   1
                                                                   2)
                                                                  (("1"
                                                                    (expand
                                                                     "eop1"
                                                                     1
                                                                     2)
                                                                    (("1"
                                                                      (inst
                                                                       -6
                                                                       "x!1-1"
                                                                       "1")
                                                                      (("1"
                                                                        (lemma
                                                                         "omega_increasing")
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "(x!1,x!2)"
                                                                           "(x!1-1,1)")
                                                                          (("1"
                                                                            (expand
                                                                             "Omega_ack"
                                                                             -7
                                                                             (1
                                                                              2))
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (lemma
                                                                                 "eval_expr_ge_n_j")
                                                                                (("1"
                                                                                  (expand
                                                                                   "eval"
                                                                                   -8)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -1
                                                                                     "get_body(pvs0_ack)"
                                                                                     "LAMBDA (v_1: (vr?)): (x!1 - 1, 1)"
                                                                                     "ebool"
                                                                                     "eop1"
                                                                                     "eop2"
                                                                                     "get_body(pvs0_ack)"
                                                                                     "Omega(x!1 - 1, 1)")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "Omega_ack")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (prop)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -2
                                                                                             "omega.Omega(x!1, x!2) - 1")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (lemma
                                                                                               "IMP_omega_TCC1")
                                                                                              (("2"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (lemma
                                                                                       "IMP_omega_TCC1")
                                                                                      (("2"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "lt_concrete_val")
                                                                            (("2"
                                                                              (expand
                                                                               "lt_val")
                                                                              (("2"
                                                                                (hide-all-but
                                                                                 (5
                                                                                  4
                                                                                  1
                                                                                  -2))
                                                                                (("2"
                                                                                  (inst
                                                                                   1
                                                                                   " (# cnds
                                             := (: pvsbool(op1(1, vr)),
                                                   pvsnot(op1(0, vr)) :),
                                           path := (: 1, 2 :),
                                           rec_expr := rec(op1(3, vr)) #)")
                                                                                  (("1"
                                                                                    (prop)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "semantic_rel_expr")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "semantic_rel_expr")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "eop1")
                                                                                            (("1"
                                                                                              (inst
                                                                                               1
                                                                                               "(x!1,x!2)")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "eval_conds_rec")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "eval_conds_rec")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "eval_conds_rec")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "semantic_rel_expr")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "semantic_rel_expr")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "ebool")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "eop1")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "boole")
                                                                                                    (("2"
                                                                                                      (prop)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         1
                                                                                                         "(1,0)")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             1
                                                                                                             "(x!1,x!2)")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (inst
                                                                                                         1
                                                                                                         "(0,0)")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             1
                                                                                                             "(x!1,x!2)")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (expand
                                                                                       "mf")
                                                                                      (("3"
                                                                                        (use
                                                                                         "lex2_lt")
                                                                                        (("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (typepred
                                                                                     "pvs0_ccs[[nat, nat], ordinal,
                             restrict[[ordstruct, ordstruct], [ordinal, ordinal], boolean]
                                 (ordinals.<)](pvs0_ack)")
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "every_nth")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "0")
                                                                                        (("1"
                                                                                          (case
                                                                                           "(# cnds
                                           := (: pvsbool[Val[[nat, nat]]]
                                                     (op1[Val[[nat, nat]]](1, vr[Val[[nat, nat]]])),
                                                 pvsnot[Val[[nat, nat]]]
                                                     (op1[Val[[nat, nat]]]
                                                          (0, vr[Val[[nat, nat]]])) :),
                                         path := (: 1, 2 :),
                                         rec_expr
                                           := rec[Val[[nat, nat]]]
                                                  (op1[Val[[nat, nat]]](3, vr[Val[[nat, nat]]])) #) = nth(pvs0_ccs
                                                           [[nat, nat], ordinal,
                                                            restrict
                                                                [[ordstruct, ordstruct],
                                                                 [ordinal, ordinal],
                                                                 boolean]
                                                                (ordinals.<)]
                                                           (pvs0_ack),
                                                       0)")
                                                                                          (("1"
                                                                                            (replaces
                                                                                             -1)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide-all-but
                                                                                             1)
                                                                                            (("2"
                                                                                              (eval-formula)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (hide-all-but
                                                                                             1)
                                                                                            (("3"
                                                                                              (eval-formula)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("2"
                                                                                            (eval-formula)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (lemma
                                                                                       "mt_lex2_TCC1")
                                                                                      (("2"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("3"
                                                                                      (eval-formula)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "eval_expr"
                                                                 1)
                                                                (("2"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "eval_expr" 1)
                                            (("2"
                                              (expand "eval_expr" 1)
                                              (("2"
                                                (expand "eop1" 1)
                                                (("2"
                                                  (expand "boole" 1)
                                                  (("2"
                                                    (expand "ebool" 1)
                                                    (("2"
                                                      (lift-if)
                                                      (("2"
                                                        (prop)
                                                        (("1"
                                                          (expand
                                                           "eval_expr"
                                                           2)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (lift-if)
                                                              (("1"
                                                                (prop)
                                                                (("1"
                                                                  (expand
                                                                   "eval_expr"
                                                                   1
                                                                   2)
                                                                  (("1"
                                                                    (expand
                                                                     "eval_expr"
                                                                     1
                                                                     2)
                                                                    (("1"
                                                                      (expand
                                                                       "eval_expr"
                                                                       1
                                                                       2)
                                                                      (("1"
                                                                        (expand
                                                                         "eval_expr"
                                                                         1
                                                                         3)
                                                                        (("1"
                                                                          (expand
                                                                           "eval_expr"
                                                                           1
                                                                           3)
                                                                          (("1"
                                                                            (expand
                                                                             "eop1"
                                                                             1
                                                                             3)
                                                                            (("1"
                                                                              (inst-cp
                                                                               -6
                                                                               "x!1"
                                                                               "x!2-1")
                                                                              (("1"
                                                                                (expand
                                                                                 "Omega_ack")
                                                                                (("1"
                                                                                  (use
                                                                                   "omega_increasing")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "eval"
                                                                                       -8)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "eval_expr_ge_n")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -1
                                                                                           "ebool"
                                                                                           "eop1"
                                                                                           "eop2"
                                                                                           "Omega(x!1, x!2 - 1)"
                                                                                           "Omega(x!1, x!2)-1"
                                                                                           "get_body(pvs0_ack)"
                                                                                           "get_body(pvs0_ack)"
                                                                                           " LAMBDA
                                                            (v_1: (vr?)):
                                                            (x!1, x!2 - 1)")
                                                                                          (("1"
                                                                                            (beta)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "eval_expr"
                                                                                                   1
                                                                                                   2)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "eval_expr"
                                                                                                     -3)
                                                                                                    (("1"
                                                                                                      (lift-if)
                                                                                                      (("1"
                                                                                                        (prop)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "eop2"
                                                                                                           1
                                                                                                           2)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -9
                                                                                                             "x!1-1"
                                                                                                             "val(eval_expr(ebool, eop1, eop2)
                                                           (omega.Omega(x!1, x!2),
                                                            rec(op1(4, vr)),
                                                            get_body(pvs0_ack),
                                                            LAMBDA
                                                            (v: (vr?[Val[[nat, nat]]])):
                                                            (x!1, x!2)))`1")
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "omega_increasing")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "(x!1, x!2)"
                                                                                                                 "(x!1 - 1,
                                   val(eval_expr(ebool, eop1, eop2)
                                                (omega.Omega(x!1, x!2), rec(op1(4, vr)),
                                                 get_body(pvs0_ack),
                                                 LAMBDA (v: (vr?[Val[[nat, nat]]])):
                                                   (x!1, x!2)))`1)")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "eval")
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "eval_expr_ge_n")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "ebool"
                                                                                                                         "eop1"
                                                                                                                         "eop2"
                                                                                                                         "omega.Omega
                                                   (x!1 - 1,
                                                    val(eval_expr(ebool, eop1, eop2)
                                                                 (omega.Omega(x!1, x!2),
                                                                  rec(op1(4, vr)),
                                                                  get_body(pvs0_ack),
                                                                  LAMBDA
                                                                  (v: (vr?[Val[[nat, nat]]])):
                                                                  (x!1, x!2)))`1)"
                                                                                                                         "omega.Omega(x!1, x!2) - 1"
                                                                                                                         "get_body(pvs0_ack)"
                                                                                                                         "get_body(pvs0_ack)"
                                                                                                                         " LAMBDA (v_1: (vr?[Val[[nat, nat]]])):
                                                 (x!1 - 1,
                                                  val(eval_expr(ebool, eop1, eop2)
                                                               (omega.Omega(x!1, x!2),
                                                                rec(op1(4, vr)),
                                                                get_body(pvs0_ack),
                                                                LAMBDA
                                                                (v: (vr?[Val[[nat, nat]]])):
                                                                (x!1, x!2)))`1)")
                                                                                                                        (("1"
                                                                                                                          (beta)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (lemma
                                                                                                                           "IMP_omega_TCC1")
                                                                                                                          (("2"
                                                                                                                            (propax)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "lt_concrete_val")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "lt_val")
                                                                                                                    (("2"
                                                                                                                      (hide-all-but
                                                                                                                       (1
                                                                                                                        3
                                                                                                                        4
                                                                                                                        5))
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         1
                                                                                                                         "(# cnds
                                                       := (: pvsnot(op1(1, vr)),
                                                             pvsnot(op1(0, vr)) :),
                                                     path := (: 2, 2 :),
                                                     rec_expr
                                                       := rec(op2(0, vr, rec(op1(4, vr)))) #)")
                                                                                                                        (("1"
                                                                                                                          (prop)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "semantic_rel_expr"
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 1
                                                                                                                                 "(x!1, x!2)"
                                                                                                                                 "val[Val[[nat, nat]]]
                                             (eval_expr[[nat, nat]]
                                                  (ebool, eop1, eop2)
                                                  (omega[[nat, nat], lt_concrete_val].Omega(x!1, x!2),
                                                   rec[Val[[nat, nat]]]
                                                       (op1[Val[[nat, nat]]](4, vr[Val[[nat, nat]]])),
                                                   get_body[Val[[nat, nat]]](pvs0_ack),
                                                   LAMBDA (v: (vr?[Val[[nat, nat]]])): (x!1, x!2)))")
                                                                                                                                (("1"
                                                                                                                                  (prop)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "semantic_rel_expr")
                                                                                                                                    (("1"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (reveal
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (lemma
                                                                                                                                       "eval_expr_semantic_rel")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -1
                                                                                                                                         "ebool"
                                                                                                                                         "eop1"
                                                                                                                                         "eop2"
                                                                                                                                         " LAMBDA (v: (vr?[Val[[nat, nat]]])): (x!1, x!2)"
                                                                                                                                         "rec(op1(4, vr))"
                                                                                                                                         "get_body(pvs0_ack)"
                                                                                                                                         "val[Val[[nat, nat]]]
                                                              (eval_expr[[nat, nat]]
                                                                   (ebool, eop1, eop2)
                                                                   (omega[[nat, nat], lt_concrete_val].Omega
                                                                        (x!1, x!2),
                                                                    rec[Val[[nat, nat]]]
                                                                        (op1[Val[[nat, nat]]]
                                                                         (4, vr[Val[[nat, nat]]])),
                                                                    get_body[Val[[nat, nat]]](pvs0_ack),
                                                                    LAMBDA (v: (vr?[Val[[nat, nat]]])):
                                                                      (x!1, x!2)))"
                                                                                                                                         "omega[[nat, nat], lt_concrete_val].Omega
                                                                        (x!1, x!2)")
                                                                                                                                        (("1"
                                                                                                                                          (beta)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (lemma
                                                                                                                                           "IMP_omega_TCC1")
                                                                                                                                          (("2"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("3"
                                                                                                                                    (expand
                                                                                                                                     "eop2"
                                                                                                                                     1
                                                                                                                                     2)
                                                                                                                                    (("3"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (reveal
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("3"
                                                                                                                                  (expand
                                                                                                                                   "pvs0_ack")
                                                                                                                                  (("3"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("4"
                                                                                                                                  (lemma
                                                                                                                                   "IMP_omega_TCC1")
                                                                                                                                  (("4"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (expand
                                                                                                                             "eval_conds_rec")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "eval_conds_rec")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "eval_conds_rec")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "semantic_rel_expr")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "semantic_rel_expr")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "eop1")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "boole")
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "ebool")
                                                                                                                                          (("2"
                                                                                                                                            (prop)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               1
                                                                                                                                               "(0,0)")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   1
                                                                                                                                                   "(x!1,x!2)")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (inst
                                                                                                                                               1
                                                                                                                                               "(0,0)")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   1
                                                                                                                                                   "(x!1,x!2)")
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (expand
                                                                                                                             "mf")
                                                                                                                            (("3"
                                                                                                                              (use
                                                                                                                               "lex2_lt")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (lemma
                                                                                                                                 "IMP_omega_TCC1")
                                                                                                                                (("2"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (typepred
                                                                                                                           "pvs0_ccs [[nat, nat], ordinal,
                                       restrict[[ordstruct, ordstruct], [ordinal, ordinal], boolean]
                                           (ordinals.<)](pvs0_ack)")
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "every_nth")
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "1")
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "(# cnds
                                                := (: pvsnot[Val[[nat, nat]]]
                                                          (op1[Val[[nat, nat]]](1, vr[Val[[nat, nat]]])),
                                                      pvsnot[Val[[nat, nat]]]
                                                          (op1[Val[[nat, nat]]]
                                                               (0, vr[Val[[nat, nat]]])) :),
                                              path := (: 2, 2 :),
                                              rec_expr
                                                := rec[Val[[nat, nat]]]
                                                       (op2[Val[[nat, nat]]]
                                                            (0, vr[Val[[nat, nat]]],
                                                             rec[Val[[nat, nat]]]
                                                                 (op1[Val[[nat, nat]]]
                                                                      (4, vr[Val[[nat, nat]]])))) #) = nth(pvs0_ccs
                                                                [[nat, nat], ordinal,
                                                                 restrict
                                                                     [[ordstruct, ordstruct],
                                                                      [ordinal, ordinal],
                                                                      boolean]
                                                                     (ordinals.<)]
                                                                (pvs0_ack),
                                                            1)")
                                                                                                                                (("1"
                                                                                                                                  (replaces
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide-all-but
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (eval-formula)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("3"
                                                                                                                                  (hide-all-but
                                                                                                                                   1)
                                                                                                                                  (("3"
                                                                                                                                    (eval-formula)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide-all-but
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (eval-formula)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (lemma
                                                                                                                             "mt_lex2_TCC1")
                                                                                                                            (("2"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (hide-all-but
                                                                                                                           1)
                                                                                                                          (("3"
                                                                                                                            (eval-formula)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("3"
                                                                                                                  (lemma
                                                                                                                   "IMP_omega_TCC1")
                                                                                                                  (("3"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (lemma
                                                                                                               "IMP_omega_TCC1")
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (lemma
                                                                                             "IMP_omega_TCC1")
                                                                                            (("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "lt_concrete_val")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "lt_val")
                                                                                      (("2"
                                                                                        (hide-all-but
                                                                                         (1
                                                                                          3
                                                                                          4))
                                                                                        (("2"
                                                                                          (inst
                                                                                           1
                                                                                           " (# cnds
                                               := (: pvsnot(op1(1, vr)),
                                                     pvsnot(op1(0, vr)) :),
                                             path := (: 1, 0, 2, 2 :),
                                             rec_expr := rec(op1(4, vr)) #)")
                                                                                          (("1"
                                                                                            (prop)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "semantic_rel_expr")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "semantic_rel_expr")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "eop1")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     1
                                                                                                     "(x!1,x!2)")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               "eval_conds_rec")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "eval_conds_rec")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "eval_conds_rec")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "semantic_rel_expr")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "semantic_rel_expr")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "eop1")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "boole")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "ebool")
                                                                                                            (("2"
                                                                                                              (prop)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 1
                                                                                                                 "(0,0)")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "(x!1,x!2)")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (inst
                                                                                                                 1
                                                                                                                 "(0,0)")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "(x!1,x!2)")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (expand
                                                                                               "mf")
                                                                                              (("3"
                                                                                                (use
                                                                                                 "lex2_lt")
                                                                                                (("3"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (typepred
                                                                                             "pvs0_ccs[[nat, nat], ordinal,
                               restrict[[ordstruct, ordstruct], [ordinal, ordinal], boolean]
                                   (ordinals.<)](pvs0_ack)")
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "every_nth")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "2")
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "(# cnds
                                             := (: pvsnot[Val[[nat, nat]]]
                                                       (op1[Val[[nat, nat]]](1, vr[Val[[nat, nat]]])),
                                                   pvsnot[Val[[nat, nat]]]
                                                       (op1[Val[[nat, nat]]]
                                                            (0, vr[Val[[nat, nat]]])) :),
                                           path := (: 1, 0, 2, 2 :),
                                           rec_expr
                                             := rec[Val[[nat, nat]]]
                                                    (op1[Val[[nat, nat]]](4, vr[Val[[nat, nat]]])) #) = nth(pvs0_ccs
                                                             [[nat, nat], ordinal,
                                                              restrict
                                                                  [[ordstruct, ordstruct],
                                                                   [ordinal, ordinal],
                                                                   boolean]
                                                                  (ordinals.<)]
                                                             (pvs0_ack),
                                                         2)")
                                                                                                  (("1"
                                                                                                    (replaces
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (eval-formula)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("3"
                                                                                                      (eval-formula)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (eval-formula)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (lemma
                                                                                               "mt_lex2_TCC1")
                                                                                              (("2"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (hide-all-but
                                                                                             1)
                                                                                            (("3"
                                                                                              (eval-formula)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "eval_expr"
                                                                   1)
                                                                  (("2"
                                                                    (lift-if)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (prop)
                                                                        (("2"
                                                                          (expand
                                                                           "eval_expr"
                                                                           1)
                                                                          (("2"
                                                                            (lift-if)
                                                                            (("2"
                                                                              (prop)
                                                                              (("1"
                                                                                (expand
                                                                                 "eval_expr"
                                                                                 1
                                                                                 2)
                                                                                (("1"
                                                                                  (expand
                                                                                   "eval_expr"
                                                                                   1
                                                                                   2)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "eop1"
                                                                                     1
                                                                                     2)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -6
                                                                                       "x!1"
                                                                                       "x!2-1")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "Omega_ack")
                                                                                        (("1"
                                                                                          (use
                                                                                           "omega_increasing")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "eval_expr_ge_n")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "eval")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "ebool"
                                                                                                   "eop1"
                                                                                                   "eop2"
                                                                                                   "omega.Omega(x!1, x!2 - 1)"
                                                                                                   "omega.Omega(x!1, x!2) - 1"
                                                                                                   "get_body(pvs0_ack)"
                                                                                                   "get_body(pvs0_ack)"
                                                                                                   "LAMBDA (v_1: (vr?)): (x!1, x!2 - 1)")
                                                                                                  (("1"
                                                                                                    (beta)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (lemma
                                                                                                     "IMP_omega_TCC1")
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "lt_concrete_val"
                                                                                             1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "lt_val")
                                                                                              (("2"
                                                                                                (hide-all-but
                                                                                                 (1
                                                                                                  4
                                                                                                  5))
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   1
                                                                                                   "(# cnds
                                                 := (: pvsnot(op1(1, vr)),
                                                       pvsnot(op1(0, vr)) :),
                                               path := (: 1, 0, 2, 2 :),
                                               rec_expr := rec(op1(4, vr)) #)")
                                                                                                  (("1"
                                                                                                    (prop)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "semantic_rel_expr")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "semantic_rel_expr")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "eop1")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               1
                                                                                                               "(x!1,x!2)")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       "eval_conds_rec")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "eval_conds_rec")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "eval_conds_rec")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "semantic_rel_expr")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "semantic_rel_expr")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "ebool")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "eop1")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "boole"
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (prop)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         1
                                                                                                                         "(0,0)")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             1
                                                                                                                             "(x!1,x!2)")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (inst
                                                                                                                         1
                                                                                                                         "(0,0)")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             1
                                                                                                                             "(x!1,x!2)")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (expand
                                                                                                       "mf")
                                                                                                      (("3"
                                                                                                        (use
                                                                                                         "lex2_lt")
                                                                                                        (("3"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (typepred
                                                                                                     "pvs0_ccs[[nat, nat], ordinal,
                                 restrict[[ordstruct, ordstruct], [ordinal, ordinal], boolean]
                                     (ordinals.<)](pvs0_ack)")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "every_nth")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "2")
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "(# cnds
                                               := (: pvsnot[Val[[nat, nat]]]
                                                         (op1[Val[[nat, nat]]](1, vr[Val[[nat, nat]]])),
                                                     pvsnot[Val[[nat, nat]]]
                                                         (op1[Val[[nat, nat]]]
                                                              (0, vr[Val[[nat, nat]]])) :),
                                             path := (: 1, 0, 2, 2 :),
                                             rec_expr
                                               := rec[Val[[nat, nat]]]
                                                      (op1[Val[[nat, nat]]](4, vr[Val[[nat, nat]]])) #) = nth(pvs0_ccs
                                                               [[nat, nat], ordinal,
                                                                restrict
                                                                    [[ordstruct, ordstruct],
                                                                     [ordinal, ordinal],
                                                                     boolean]
                                                                    (ordinals.<)]
                                                               (pvs0_ack),
                                                           2)")
                                                                                                          (("1"
                                                                                                            (replaces
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (eval-formula)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("3"
                                                                                                              (eval-formula)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (eval-formula)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (lemma
                                                                                                       "mt_lex2_TCC1")
                                                                                                      (("2"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("3"
                                                                                                      (eval-formula)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "eval_expr"
                                                                                 1)
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (expand "eval_expr" 1)
                                            (("3" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "eval_expr" 1)
                      (("2" (propax) nil nil)) nil))
                    nil))
                  nil))
                nil)
               ("4" (expand "eval_expr" 1)
                (("4" (assert)
                  (("4" (lift-if)
                    (("4" (prop)
                      (("1" (assert) nil nil)
                       ("2" (expand "eval_expr" 1)
                        (("2" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (expand "pvs0_ack") (("2" (propax) nil nil)) nil)
     ("3" (expand "pvs0_ack") (("3" (propax) nil nil)) nil)
     ("4" (expand "pvs0_ack") (("4" (propax) nil nil)) nil)
     ("5" (expand "pvs0_ack") (("5" (propax) nil nil)) nil))
    nil)
   ((eval_expr def-decl "Maybe[Val]" lang nil)
    (Omega const-decl "nat" omega "orders/")
    (cnst? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op1? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op2? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (rec? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (ite? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Expr type-eq-decl nil PVS0_adt nil)
    (get_body adt-accessor-decl "[Def -> Expr]" PVS0_adt nil)
    (eval_expr_ge_n_j recursive-judgement-axiom nil lang nil)
    (lt_val const-decl "bool" measure_termination nil)
    (Conditions type-eq-decl nil lang nil)
    (PVS0_CC type-eq-decl nil lang nil)
    (pvs0_tcc_valid_cc const-decl "bool" lang nil)
    (BoolPVS0 type-decl nil BoolPVS0_adt nil)
    (pvsbool? adt-recognizer-decl "[BoolPVS0 -> boolean]" BoolPVS0_adt
     nil)
    (pvsbool adt-constructor-decl "[Expr[T] -> (pvsbool?)]"
     BoolPVS0_adt nil)
    (op1 adt-constructor-decl "[[nat, Expr] -> (op1?)]" PVS0_adt nil)
    (vr adt-constructor-decl "(vr?)" PVS0_adt nil)
    (pvsnot? adt-recognizer-decl "[BoolPVS0 -> boolean]" BoolPVS0_adt
     nil)
    (pvsnot adt-constructor-decl "[Expr[T] -> (pvsnot?)]" BoolPVS0_adt
     nil)
    (rec adt-constructor-decl "[Expr -> (rec?)]" PVS0_adt nil)
    (eval_conds_rec def-decl "bool" lang nil)
    (semantic_rel_expr inductive-decl "bool" lang nil)
    (omega_increasing formula-decl nil omega "orders/")
    (eval_expr_semantic_rel formula-decl nil lang nil)
    (op2 adt-constructor-decl "[[nat, Expr, Expr] -> (op2?)]" PVS0_adt
     nil)
    (val adt-accessor-decl "[(some?) -> T]" Maybe "structures/")
    (eval_expr_ge_n formula-decl nil lang nil)
    (eval const-decl "Maybe[Val]" lang nil)
    (Environment type-eq-decl nil lang nil)
    (vr? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Def type-eq-decl nil PVS0_adt nil)
    (some? adt-recognizer-decl "[Maybe -> boolean]" Maybe
     "structures/")
    (Maybe type-decl nil Maybe "structures/")
    (Val type-eq-decl nil lang nil) (PVS0 type-decl nil PVS0_adt nil)
    (def? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (well_founded? const-decl "bool" orders nil))
   nil))
 (pvs0_ack_eval 0
  (pvs0_ack_eval-1 nil 3653171918
   ("" (measure-induct+ "Omega_ack(m,n)" ("m" "n"))
    (("" (expand "Omega_ack")
      (("" (expand "ack_pvs0" 1)
        (("" (expand "eval")
          (("" (expand "Omega_ack")
            (("" (expand "pvs0_ack" 1 1)
              (("" (expand "eval_expr" 1)
                (("" (lift-if)
                  (("" (prop)
                    (("1" (hide-all-but -1) (("1" (grind) nil nil))
                      nil)
                     ("2" (hide -3) (("2" (grind) nil nil)) nil)
                     ("3" (expand "eval_expr" 1)
                      (("3" (assert)
                        (("3" (prop)
                          (("1" (expand "eval_expr" 1)
                            (("1" (expand "eop1" 1)
                              (("1"
                                (expand "boole" 1)
                                (("1"
                                  (expand "ebool" 1)
                                  (("1"
                                    (lift-if)
                                    (("1"
                                      (prop)
                                      (("1"
                                        (expand "eval_expr" 2)
                                        (("1"
                                          (lift-if)
                                          (("1"
                                            (prop)
                                            (("1"
                                              (expand "eval_expr" -1)
                                              (("1"
                                                (prop)
                                                (("1"
                                                  (expand
                                                   "eval_expr"
                                                   -2)
                                                  (("1"
                                                    (expand "eop1" -2)
                                                    (("1"
                                                      (expand
                                                       "boole"
                                                       -2)
                                                      (("1"
                                                        (expand
                                                         "ebool"
                                                         -2)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (prop)
                                                            (("1"
                                                              (expand
                                                               "eval_expr"
                                                               2)
                                                              (("1"
                                                                (lift-if)
                                                                (("1"
                                                                  (prop)
                                                                  (("1"
                                                                    (expand
                                                                     "eval_expr"
                                                                     1
                                                                     2)
                                                                    (("1"
                                                                      (expand
                                                                       "eval_expr"
                                                                       1
                                                                       2)
                                                                      (("1"
                                                                        (expand
                                                                         "eval_expr"
                                                                         1
                                                                         2)
                                                                        (("1"
                                                                          (expand
                                                                           "eop1"
                                                                           1
                                                                           2)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "ack"
                                                                                 1)
                                                                                (("1"
                                                                                  (inst
                                                                                   -8
                                                                                   "x!1-1"
                                                                                   "1")
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "omega_increasing")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "(x!1,x!2)"
                                                                                       "(x!1-1,1)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "ack_pvs0")
                                                                                          (("1"
                                                                                            (expand*
                                                                                             "eval"
                                                                                             "Omega_ack")
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "eval_expr_ge_n")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "ebool"
                                                                                                 "eop1"
                                                                                                 "eop2"
                                                                                                 "omega.Omega(x!1 - 1, 1)"
                                                                                                 "omega.Omega(x!1, x!2) - 1"
                                                                                                 "get_body(pvs0_ack)"
                                                                                                 "get_body(pvs0_ack)"
                                                                                                 "LAMBDA (v_1: (vr?)): (x!1 - 1, 1)")
                                                                                                (("1"
                                                                                                  (beta)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "ack_pvs0_TCC1")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "x!1-1"
                                                                                                         "1")
                                                                                                        (("1"
                                                                                                          (expand*
                                                                                                           "eval"
                                                                                                           "Omega_ack")
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (lemma
                                                                                                   "IMP_omega_TCC1")
                                                                                                  (("2"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (-2
                                                                                          1
                                                                                          4))
                                                                                        (("2"
                                                                                          (expand*
                                                                                           "lt_concrete_val"
                                                                                           "lt_val")
                                                                                          (("2"
                                                                                            (inst
                                                                                             1
                                                                                             "(# cnds
                                                                       := (: pvsbool(op1(1, vr)),
                                                                             pvsnot(op1(0, vr)) :),
                                                                     path := (: 1, 2 :),
                                                                     rec_expr := rec(op1(3, vr)) #)")
                                                                                            (("1"
                                                                                              (prop)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "semantic_rel_expr")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "semantic_rel_expr")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "eop1")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       1
                                                                                                       "(x!1,x!2)")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (expand
                                                                                                 "eval_conds_rec")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "eval_conds_rec")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "eval_conds_rec")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "semantic_rel_expr")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "semantic_rel_expr")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "ebool")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "eop1")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "boole")
                                                                                                              (("2"
                                                                                                                (prop)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   1
                                                                                                                   "(1,0)")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       1
                                                                                                                       "(x!1,x!2)")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (inst
                                                                                                                   1
                                                                                                                   "(0,0)")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       1
                                                                                                                       "(x!1,x!2)")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("3"
                                                                                                (expand
                                                                                                 "mf")
                                                                                                (("3"
                                                                                                  (use
                                                                                                   "lex2_lt")
                                                                                                  (("3"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (typepred
                                                                                               "pvs0_ccs [[nat, nat]](pvs0_ack)")
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "every_nth")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "0")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "(# cnds
                                                                                           := (: pvsbool[Val[[nat, nat]]]
                                                                                                     (op1[Val[[nat, nat]]](1, vr[Val[[nat, nat]]])),
                                                                                                 pvsnot[Val[[nat, nat]]]
                                                                                                     (op1[Val[[nat, nat]]]
                                                                                                          (0, vr[Val[[nat, nat]]])) :),
                                                                                         path := (: 1, 2 :),
                                                                                         rec_expr
                                                                                           := rec[Val[[nat, nat]]]
                                                                                                  (op1[Val[[nat, nat]]](3, vr[Val[[nat, nat]]])) #) = nth(pvs0_ccs
                                                                                                           [[nat, nat]]
                                                                                                           (pvs0_ack),
                                                                                                       0)")
                                                                                                    (("1"
                                                                                                      (replaces
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide-all-but
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (eval-formula)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (hide-all-but
                                                                                                       1)
                                                                                                      (("3"
                                                                                                        (eval-formula)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (eval-formula)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("3"
                                                                                                (eval-formula)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "eval_expr"
                                                                     1)
                                                                    (("2"
                                                                      (lift-if)
                                                                      (("2"
                                                                        (prop)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand "eval_expr" 1)
                                              (("2"
                                                (prop)
                                                (("2"
                                                  (expand
                                                   "eval_expr"
                                                   1)
                                                  (("2"
                                                    (expand "eop1" 1)
                                                    (("2"
                                                      (expand "boole")
                                                      (("2"
                                                        (expand
                                                         "ebool"
                                                         1)
                                                        (("2"
                                                          (lift-if)
                                                          (("2"
                                                            (prop)
                                                            (("1"
                                                              (expand
                                                               "eval_expr"
                                                               2)
                                                              (("1"
                                                                (lift-if)
                                                                (("1"
                                                                  (prop)
                                                                  (("1"
                                                                    (expand
                                                                     "eval_expr"
                                                                     1
                                                                     2)
                                                                    (("1"
                                                                      (expand
                                                                       "eval_expr"
                                                                       1
                                                                       2)
                                                                      (("1"
                                                                        (expand
                                                                         "eval_expr"
                                                                         1
                                                                         2)
                                                                        (("1"
                                                                          (expand
                                                                           "eval_expr"
                                                                           1
                                                                           2)
                                                                          (("1"
                                                                            (expand
                                                                             "eval_expr"
                                                                             1
                                                                             2)
                                                                            (("1"
                                                                              (expand
                                                                               "eval_expr"
                                                                               1
                                                                               3)
                                                                              (("1"
                                                                                (expand
                                                                                 "eval_expr"
                                                                                 1
                                                                                 3)
                                                                                (("1"
                                                                                  (expand
                                                                                   "eval_expr"
                                                                                   1
                                                                                   3)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "eop1"
                                                                                     1
                                                                                     3)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "ack_pvs0_TCC1")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "x!1"
                                                                                             "x!2-1")
                                                                                            (("1"
                                                                                              (expand*
                                                                                               "eval"
                                                                                               "Omega_ack")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "omega_increasing")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "(x!1,x!2)"
                                                                                                   "(x!1,x!2-1)")
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "eval_expr_ge_n")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "ebool"
                                                                                                       "eop1"
                                                                                                       "eop2"
                                                                                                       "Omega(x!1, x!2 - 1)"
                                                                                                       "omega.Omega(x!1, x!2) - 1"
                                                                                                       "get_body(pvs0_ack)"
                                                                                                       "get_body(pvs0_ack)"
                                                                                                       " LAMBDA
                                                                                          (v_1: (vr?)):
                                                                                          (x!1, x!2 - 1)")
                                                                                                      (("1"
                                                                                                        (beta)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "eval_expr"
                                                                                                               1
                                                                                                               2)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "eop2"
                                                                                                                 1
                                                                                                                 2)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "eval_expr"
                                                                                                                   1
                                                                                                                   2)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "eval_expr"
                                                                                                                     1
                                                                                                                     2)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "eval_expr"
                                                                                                                       1
                                                                                                                       3)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "eval_expr"
                                                                                                                         1
                                                                                                                         3)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "eop1"
                                                                                                                           1
                                                                                                                           3)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "ack"
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (inst-cp
                                                                                                                               -11
                                                                                                                               "x!1-1"
                                                                                                                               "val(eval_expr(ebool, eop1, eop2)
                                                                                           (omega.Omega(x!1, x!2) - 1,
                                                                                            get_body(pvs0_ack),
                                                                                            get_body(pvs0_ack),
                                                                                            LAMBDA
                                                                                            (v_1: (vr?)):
                                                                                            (x!1, x!2 - 1)))`1")
                                                                                                                              (("1"
                                                                                                                                (lemma
                                                                                                                                 "omega_increasing")
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "(x!1,x!2)"
                                                                                                                                   "(x!1-1,val(eval_expr(ebool, eop1, eop2)
                                                                                                 (omega.Omega(x!1, x!2) - 1,
                                                                                                  get_body(pvs0_ack),
                                                                                                  get_body(pvs0_ack),
                                                                                                  LAMBDA
                                                                                                  (v_1: (vr?)):
                                                                                                  (x!1, x!2 - 1)))`1)")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -12
                                                                                                                                     "x!1"
                                                                                                                                     "x!2-1")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "ack_pvs0")
                                                                                                                                        (("1"
                                                                                                                                          (expand*
                                                                                                                                           "eval"
                                                                                                                                           "Omega_ack")
                                                                                                                                          (("1"
                                                                                                                                            (lemma
                                                                                                                                             "eval_expr_ge_n")
                                                                                                                                            (("1"
                                                                                                                                              (inst-cp
                                                                                                                                               -1
                                                                                                                                               "ebool"
                                                                                                                                               "eop1"
                                                                                                                                               "eop2"
                                                                                                                                               "omega.Omega(x!1, x!2 - 1)"
                                                                                                                                               "omega.Omega(x!1, x!2) - 1"
                                                                                                                                               " get_body(pvs0_ack)"
                                                                                                                                               " get_body(pvs0_ack)"
                                                                                                                                               " LAMBDA (v_1: (vr?)): (x!1, x!2 - 1)")
                                                                                                                                              (("1"
                                                                                                                                                (beta)
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "ack_pvs0_TCC1")
                                                                                                                                                  (("1"
                                                                                                                                                    (inst-cp
                                                                                                                                                     -1
                                                                                                                                                     "x!1"
                                                                                                                                                     "x!2-1")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand*
                                                                                                                                                       "eval"
                                                                                                                                                       "Omega_ack")
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -2)
                                                                                                                                                        (("1"
                                                                                                                                                          (replaces
                                                                                                                                                           -6)
                                                                                                                                                          (("1"
                                                                                                                                                            (replaces
                                                                                                                                                             -11
                                                                                                                                                             :dir
                                                                                                                                                             rl)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -3
                                                                                                                                                               "ebool"
                                                                                                                                                               "eop1"
                                                                                                                                                               "eop2"
                                                                                                                                                               "omega.Omega(x!1 - 1, ack(x!1, x!2 - 1))"
                                                                                                                                                               "omega.Omega(x!1, x!2) - 1"
                                                                                                                                                               "get_body(pvs0_ack)"
                                                                                                                                                               "get_body(pvs0_ack)"
                                                                                                                                                               "LAMBDA (v: (vr?)): (x!1 - 1, ack(x!1, x!2 - 1))")
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 -1
                                                                                                                                                                 "x!1 - 1"
                                                                                                                                                                 "ack(x!1, x!2 - 1)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (replace
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "IMP_ack_ax_wfm_ack_dec_3_TCC1")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("3"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "IMP_ack_ax_wfm_ack_dec_2_TCC1")
                                                                                                                                                                  (("3"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("4"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "IMP_ack_ax_wfm_ack_dec_1_TCC1")
                                                                                                                                                                  (("4"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("5"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "IMP_ack_ax_R_wf_TCC1")
                                                                                                                                                                  (("5"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil)
                                                                                                                                                               ("3"
                                                                                                                                                                (lemma
                                                                                                                                                                 "IMP_omega_TCC1")
                                                                                                                                                                (("3"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("4"
                                                                                                                                                                (lemma
                                                                                                                                                                 "IMP_ack_ax_wfm_ack_dec_3_TCC1")
                                                                                                                                                                (("4"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("5"
                                                                                                                                                                (lemma
                                                                                                                                                                 "IMP_ack_ax_wfm_ack_dec_2_TCC1")
                                                                                                                                                                (("5"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("6"
                                                                                                                                                                (lemma
                                                                                                                                                                 "IMP_ack_ax_wfm_ack_dec_1_TCC1")
                                                                                                                                                                (("6"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("7"
                                                                                                                                                                (lemma
                                                                                                                                                                 "IMP_ack_ax_R_wf_TCC1")
                                                                                                                                                                (("7"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (lemma
                                                                                                                                                 "IMP_omega_TCC1")
                                                                                                                                                (("2"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide-all-but
                                                                                                                                     (1
                                                                                                                                      3
                                                                                                                                      4))
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "lt_concrete_val")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "lt_val")
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "(# cnds
                                                                                               := (: pvsnot(op1(1, vr)),
                                                                                                     pvsnot(op1(0, vr)) :),
                                                                                             path := (: 2, 2 :),
                                                                                             rec_expr
                                                                                               := rec(op2(0, vr, rec(op1(4, vr)))) #)")
                                                                                                                                          (("1"
                                                                                                                                            (prop)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "semantic_rel_expr")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "eop2"
                                                                                                                                                   1
                                                                                                                                                   4)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "semantic_rel_expr"
                                                                                                                                                     1
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       1
                                                                                                                                                       "(x!1,x!2)"
                                                                                                                                                       "_")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "semantic_rel_expr")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "semantic_rel_expr"
                                                                                                                                                           1
                                                                                                                                                           1)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "semantic_rel_expr"
                                                                                                                                                             1
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "eop1"
                                                                                                                                                               1
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 1
                                                                                                                                                                 "(val[Val[[nat, nat]]]
                                                                                           (eval_expr[[nat, nat]]
                                                                                                (ebool, eop1, eop2)
                                                                                                (omega[[nat, nat], lt_concrete_val].Omega(x!1, x!2) - 1,
                                                                                                 get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                                 get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                                 LAMBDA (v_1: (vr?[Val[[nat, nat]]])): (x!1, x!2 - 1)))`1,val[Val[[nat, nat]]]
                                                                                           (eval_expr[[nat, nat]]
                                                                                                (ebool, eop1, eop2)
                                                                                                (omega[[nat, nat], lt_concrete_val].Omega(x!1, x!2) - 1,
                                                                                                 get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                                 get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                                 LAMBDA (v_1: (vr?[Val[[nat, nat]]])): (x!1, x!2 - 1)))`2)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   1
                                                                                                                                                                   "(x!1,x!2-1)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (prop)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       1
                                                                                                                                                                       "(x!1,x!2)")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "eval_expr_semantic_rel")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -1
                                                                                                                                                                         "ebool"
                                                                                                                                                                         "eop1"
                                                                                                                                                                         "eop2"
                                                                                                                                                                         "LAMBDA (v: (vr?)): (x!1, x!2 - 1)"
                                                                                                                                                                         "get_body[Val[[nat, nat]]](pvs0_ack)"
                                                                                                                                                                         "get_body[Val[[nat, nat]]](pvs0_ack)"
                                                                                                                                                                         "val[Val[[nat, nat]]]
                                                                                                                       (eval_expr[[nat, nat]]
                                                                                                                            (ebool, eop1, eop2)
                                                                                                                            (omega[[nat, nat], lt_concrete_val].Omega
                                                                                                                                 (x!1, x!2)
                                                                                                                              - 1,
                                                                                                                             get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                                                             get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                                                             LAMBDA (v_1: (vr?[Val[[nat, nat]]])):
                                                                                                                               (x!1, x!2 - 1)))"
                                                                                                                                                                         "omega[[nat, nat], lt_concrete_val].Omega
                                                                                                                                 (x!1, x!2)
                                                                                                                              - 1")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (beta)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (reveal
                                                                                                                                                                             (-4
                                                                                                                                                                              -2))
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replaces
                                                                                                                                                                                 -1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (case
                                                                                                                                                                                   "val[Val[[nat, nat]]]
                                                                                                                            (eval_expr[[nat, nat]]
                                                                                                                                 (ebool, eop1, eop2)
                                                                                                                                 (omega[[nat, nat], lt_concrete_val].Omega
                                                                                                                                      (x!1, x!2)
                                                                                                                                   - 1,
                                                                                                                                  get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                                                                  get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                                                                  LAMBDA (v_1: (vr?[Val[[nat, nat]]])):
                                                                                                                                    (x!1, x!2 - 1))) = (val[Val[[nat, nat]]]
                                                                                                                             (eval_expr[[nat, nat]]
                                                                                                                                  (ebool, eop1, eop2)
                                                                                                                                  (omega[[nat, nat], lt_concrete_val].Omega
                                                                                                                                       (x!1, x!2)
                                                                                                                                    - 1,
                                                                                                                                   get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                                                                   get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                                                                   LAMBDA (v_1: (vr?[Val[[nat, nat]]])):
                                                                                                                                     (x!1, x!2 - 1)))`1,
                                                                                                                         val[Val[[nat, nat]]]
                                                                                                                             (eval_expr[[nat, nat]]
                                                                                                                                  (ebool, eop1, eop2)
                                                                                                                                  (omega[[nat, nat], lt_concrete_val].Omega
                                                                                                                                       (x!1, x!2)
                                                                                                                                    - 1,
                                                                                                                                   get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                                                                   get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                                                                   LAMBDA (v_1: (vr?[Val[[nat, nat]]])):
                                                                                                                                     (x!1, x!2 - 1)))`2)")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (replaces
                                                                                                                                                                                     -1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (decompose-equality)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (lemma
                                                                                                                                                                                         "IMP_omega_TCC1")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (propax)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("3"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "IMP_omega_TCC1")
                                                                                                                                                                                    (("3"
                                                                                                                                                                                      (propax)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (lemma
                                                                                                                                                                           "IMP_omega_TCC1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (propax)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "pvs0_ack")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("3"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "IMP_omega_TCC1")
                                                                                                                                                                  (("3"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "eval_conds_rec")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "eval_conds_rec")
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "eval_conds_rec")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "semantic_rel_expr")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "semantic_rel_expr")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "ebool")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "eop1")
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "boole")
                                                                                                                                                            (("2"
                                                                                                                                                              (prop)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 1
                                                                                                                                                                 "(0,0)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     1
                                                                                                                                                                     "(x!1,x!2)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (inst
                                                                                                                                                                 1
                                                                                                                                                                 "(0,0)")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     1
                                                                                                                                                                     "(x!1,x!2)")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("3"
                                                                                                                                              (expand
                                                                                                                                               "mf")
                                                                                                                                              (("3"
                                                                                                                                                (use
                                                                                                                                                 "lex2_lt")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (lemma
                                                                                                                                                   "IMP_omega_TCC1")
                                                                                                                                                  (("2"
                                                                                                                                                    (propax)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (typepred
                                                                                                                                             "pvs0_ccs [[nat, nat]](pvs0_ack)")
                                                                                                                                            (("2"
                                                                                                                                              (rewrite
                                                                                                                                               "every_nth")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "1")
                                                                                                                                                (("1"
                                                                                                                                                  (case
                                                                                                                                                   "(# cnds
                                                                                                                   := (: pvsnot[Val[[nat, nat]]]
                                                                                                                             (op1[Val[[nat, nat]]](1, vr[Val[[nat, nat]]])),
                                                                                                                         pvsnot[Val[[nat, nat]]]
                                                                                                                             (op1[Val[[nat, nat]]]
                                                                                                                                  (0, vr[Val[[nat, nat]]])) :),
                                                                                                                 path := (: 2, 2 :),
                                                                                                                 rec_expr
                                                                                                                   := rec[Val[[nat, nat]]]
                                                                                                                          (op2[Val[[nat, nat]]]
                                                                                                                               (0, vr[Val[[nat, nat]]],
                                                                                                                                rec[Val[[nat, nat]]]
                                                                                                                                    (op1[Val[[nat, nat]]]
                                                                                                                                         (4, vr[Val[[nat, nat]]])))) #) = nth(pvs0_ccs
                                                                                                                                   [[nat, nat]]
                                                                                                                                   (pvs0_ack),
                                                                                                                               1)")
                                                                                                                                                  (("1"
                                                                                                                                                    (replaces
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (eval-formula)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("3"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     1)
                                                                                                                                                    (("3"
                                                                                                                                                      (eval-formula)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (hide-all-but
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (eval-formula)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("3"
                                                                                                                                            (hide-all-but
                                                                                                                                             1)
                                                                                                                                            (("3"
                                                                                                                                              (eval-formula)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("3"
                                                                                                                                    (lemma
                                                                                                                                     "IMP_omega_TCC1")
                                                                                                                                    (("3"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (lemma
                                                                                                                                 "IMP_omega_TCC1")
                                                                                                                                (("2"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (lemma
                                                                                                         "IMP_omega_TCC1")
                                                                                                        (("3"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     (1
                                                                                                      3
                                                                                                      4))
                                                                                                    (("2"
                                                                                                      (expand*
                                                                                                       "lt_concrete_val"
                                                                                                       "lt_val")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         1
                                                                                                         " (# cnds
                                                                             := (: pvsnot(op1(1, vr)),
                                                                                   pvsnot(op1(0, vr)) :),
                                                                           path := (: 1, 0, 2, 2 :),
                                                                           rec_expr := rec(op1(4, vr)) #)")
                                                                                                        (("1"
                                                                                                          (prop)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "semantic_rel_expr")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "semantic_rel_expr")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "eop1")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   1
                                                                                                                   "(x!1,x!2)")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "eval_conds_rec")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "eval_conds_rec")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "eval_conds_rec")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "semantic_rel_expr")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "semantic_rel_expr")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "ebool")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "eop1")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "boole")
                                                                                                                          (("2"
                                                                                                                            (prop)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               1
                                                                                                                               "(0,0)")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   1
                                                                                                                                   "(x!1,x!2)")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (inst
                                                                                                                               1
                                                                                                                               "(0,0)")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   1
                                                                                                                                   "(x!1,x!2)")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (expand
                                                                                                             "mf")
                                                                                                            (("3"
                                                                                                              (use
                                                                                                               "lex2_lt")
                                                                                                              (("3"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (typepred
                                                                                                           "pvs0_ccs[[nat, nat]](pvs0_ack)")
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "every_nth")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "2")
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "(# cnds
                                                                                                 := (: pvsnot[Val[[nat, nat]]]
                                                                                                           (op1[Val[[nat, nat]]](1, vr[Val[[nat, nat]]])),
                                                                                                       pvsnot[Val[[nat, nat]]]
                                                                                                           (op1[Val[[nat, nat]]]
                                                                                                                (0, vr[Val[[nat, nat]]])) :),
                                                                                               path := (: 1, 0, 2, 2 :),
                                                                                               rec_expr
                                                                                                 := rec[Val[[nat, nat]]]
                                                                                                        (op1[Val[[nat, nat]]](4, vr[Val[[nat, nat]]])) #) = nth(pvs0_ccs
                                                                                                                 [[nat, nat]]
                                                                                                                 (pvs0_ack),
                                                                                                             2)")
                                                                                                                (("1"
                                                                                                                  (replaces
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (eval-formula)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("3"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("3"
                                                                                                                    (eval-formula)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide-all-but
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (eval-formula)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("3"
                                                                                                          (hide-all-but
                                                                                                           1)
                                                                                                          (("3"
                                                                                                            (eval-formula)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "eval_expr"
                                                                     1)
                                                                    (("2"
                                                                      (lift-if)
                                                                      (("2"
                                                                        (prop)
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "eval_expr"
                                                                           1)
                                                                          (("2"
                                                                            (lift-if)
                                                                            (("2"
                                                                              (prop)
                                                                              (("1"
                                                                                (expand
                                                                                 "eval_expr"
                                                                                 1
                                                                                 2)
                                                                                (("1"
                                                                                  (expand
                                                                                   "eval_expr"
                                                                                   1
                                                                                   2)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "eval_expr"
                                                                                     1
                                                                                     2)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "eop1"
                                                                                       1
                                                                                       2)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "omega_increasing")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "(x!1,x!2)"
                                                                                               "(x!1,x!2-1)")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "eval_expr_ge_n")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "ebool"
                                                                                                   "eop1"
                                                                                                   "eop2"
                                                                                                   "Omega(x!1, x!2 - 1)"
                                                                                                   "omega.Omega(x!1, x!2) - 1"
                                                                                                   "get_body(pvs0_ack)"
                                                                                                   "get_body(pvs0_ack)"
                                                                                                   "LAMBDA (v_1: (vr?)): (x!1, x!2 - 1)")
                                                                                                  (("1"
                                                                                                    (beta)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "ack_pvs0_TCC1")
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (expand*
                                                                                                           "eval"
                                                                                                           "Omega_ack")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (lemma
                                                                                                     "IMP_omega_TCC1")
                                                                                                    (("3"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 (1
                                                                                                  5
                                                                                                  6))
                                                                                                (("2"
                                                                                                  (expand*
                                                                                                   "lt_concrete_val"
                                                                                                   "lt_val")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     1
                                                                                                     "(# cnds
                                                                                         := (: pvsnot(op1(1, vr)),
                                                                                               pvsnot(op1(0, vr)) :),
                                                                                       path := (: 1, 0, 2, 2 :),
                                                                                       rec_expr := rec(op1(4, vr)) #)")
                                                                                                    (("1"
                                                                                                      (prop)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "semantic_rel_expr")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "semantic_rel_expr")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "eop1")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               1
                                                                                                               "(x!1,x!2)")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "eval_conds_rec")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "eval_conds_rec")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "eval_conds_rec")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "semantic_rel_expr")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "semantic_rel_expr")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "ebool")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "eop1")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "boole")
                                                                                                                      (("2"
                                                                                                                        (prop)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           1
                                                                                                                           "(0,0)")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               1
                                                                                                                               "(x!1,x!2)")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (inst
                                                                                                                           1
                                                                                                                           "(0,0)")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               1
                                                                                                                               "(x!1,x!2)")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (expand
                                                                                                         "mf")
                                                                                                        (("3"
                                                                                                          (use
                                                                                                           "lex2_lt")
                                                                                                          (("3"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (typepred
                                                                                                       "pvs0_ccs[[nat, nat]](pvs0_ack)")
                                                                                                      (("2"
                                                                                                        (rewrite
                                                                                                         "every_nth")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "2")
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "(# cnds
                                                                                                             := (: pvsnot[Val[[nat, nat]]]
                                                                                                                       (op1[Val[[nat, nat]]](1, vr[Val[[nat, nat]]])),
                                                                                                                   pvsnot[Val[[nat, nat]]]
                                                                                                                       (op1[Val[[nat, nat]]]
                                                                                                                            (0, vr[Val[[nat, nat]]])) :),
                                                                                                           path := (: 1, 0, 2, 2 :),
                                                                                                           rec_expr
                                                                                                             := rec[Val[[nat, nat]]]
                                                                                                                    (op1[Val[[nat, nat]]](4, vr[Val[[nat, nat]]])) #) = nth(pvs0_ccs
                                                                                                                             [[nat, nat]]
                                                                                                                             (pvs0_ack),
                                                                                                                         2)")
                                                                                                            (("1"
                                                                                                              (replaces
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide-all-but
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (eval-formula)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("3"
                                                                                                              (hide-all-but
                                                                                                               1)
                                                                                                              (("3"
                                                                                                                (eval-formula)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (eval-formula)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (hide-all-but
                                                                                                       1)
                                                                                                      (("3"
                                                                                                        (eval-formula)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "eval_expr"
                                                                                 1)
                                                                                (("2"
                                                                                  (lift-if)
                                                                                  (("2"
                                                                                    (prop)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (expand "eval_expr" 1)
                                              (("3"
                                                (lift-if)
                                                (("3"
                                                  (prop)
                                                  (("3"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "eval_expr" 1)
                            (("2" (propax) nil nil)) nil))
                          nil))
                        nil))
                      nil)
                     ("4" (expand "eval_expr" 1)
                      (("4" (assert)
                        (("4" (lift-if)
                          (("4" (prop)
                            (("1" (assert) nil nil)
                             ("2" (expand "eval_expr")
                              (("2" (propax) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((eval const-decl "Maybe[Val]" lang nil)
    (pvs0_ack const-decl "PVS0" ack_pvs0 nil)
    (val adt-accessor-decl "[(some?) -> T]" Maybe "structures/")
    (some? adt-recognizer-decl "[Maybe -> boolean]" Maybe
     "structures/")
    (Maybe type-decl nil Maybe "structures/")
    (IMP_ack_ax_R_wf_TCC1 mapped-axiom-tcc nil ack_pvs0 nil)
    (IMP_ack_ax_wfm_ack_dec_1_TCC1 mapped-axiom-tcc nil ack_pvs0 nil)
    (IMP_ack_ax_wfm_ack_dec_2_TCC1 mapped-axiom-tcc nil ack_pvs0 nil)
    (IMP_ack_ax_wfm_ack_dec_3_TCC1 mapped-axiom-tcc nil ack_pvs0 nil)
    (op2 adt-constructor-decl "[[nat, Expr, Expr] -> (op2?)]" PVS0_adt
     nil)
    (eval_expr_semantic_rel formula-decl nil lang nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (x!1 skolem-const-decl "nat" ack_pvs0 nil)
    (x!2 skolem-const-decl "nat" ack_pvs0 nil)
    (eval_expr_ge_n formula-decl nil lang nil)
    (IMP_omega_TCC1 subtype-tcc nil ack_pvs0 nil)
    (ack_pvs0_TCC1 subtype-tcc nil ack_pvs0 nil)
    (eop2 const-decl "Val" ack_pvs0 nil)
    (upfrom nonempty-type-eq-decl nil integers nil)
    (PVS0 type-decl nil PVS0_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (cnst? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (vr? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op1? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op2? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (rec? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (ite? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Expr type-eq-decl nil PVS0_adt nil)
    (def? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Def type-eq-decl nil PVS0_adt nil)
    (get_body adt-accessor-decl "[Def -> Expr]" PVS0_adt nil)
    (Environment type-eq-decl nil lang nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (lt_val const-decl "bool" measure_termination nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (pvs0_ccs const-decl "list[(pvs0_tcc_valid_cc(def))]" pvs0_to_dg
              nil)
    (length def-decl "nat" list_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil)
    (nth def-decl "T" list_props nil)
    (below type-eq-decl nil nat_types nil)
    (every_nth formula-decl nil list_props nil)
    (semantic_rel_expr inductive-decl "bool" lang nil)
    (eval_conds_rec def-decl "bool" lang nil)
    (lex2_lt formula-decl nil lex2 nil)
    (mf const-decl "mt_lex2.WFM" ack_pvs0 nil)
    (rec adt-constructor-decl "[Expr -> (rec?)]" PVS0_adt nil)
    (pvsnot adt-constructor-decl "[Expr[T] -> (pvsnot?)]" BoolPVS0_adt
     nil)
    (pvsnot? adt-recognizer-decl "[BoolPVS0 -> boolean]" BoolPVS0_adt
     nil)
    (vr adt-constructor-decl "(vr?)" PVS0_adt nil)
    (op1 adt-constructor-decl "[[nat, Expr] -> (op1?)]" PVS0_adt nil)
    (pvsbool adt-constructor-decl "[Expr[T] -> (pvsbool?)]"
     BoolPVS0_adt nil)
    (pvsbool? adt-recognizer-decl "[BoolPVS0 -> boolean]" BoolPVS0_adt
     nil)
    (BoolPVS0 type-decl nil BoolPVS0_adt nil)
    (pvs0_tcc_valid_cc const-decl "bool" lang nil)
    (PVS0_CC type-eq-decl nil lang nil)
    (Conditions type-eq-decl nil lang nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (lt_concrete_val const-decl "bool" ack_pvs0 nil)
    (omega_increasing formula-decl nil omega "orders/")
    (int_minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (boole const-decl "Val" ack_pvs0 nil)
    (eop1 const-decl "Val" ack_pvs0 nil)
    (ebool const-decl "bool" ack_pvs0 nil)
    (/= const-decl "boolean" notequal nil)
    (eval_expr_ge_n_j rec-application-judgement "{myv: Maybe[Val] |
         some?(myv) IMPLIES
          n > 0 AND
           (FORALL (m: upfrom(n)):
              myv =
               eval_expr(eval_bool, eval_op1, eval_op2)
                        (m, expr, body, env))}" ack_pvs0 nil)
    (eval_expr_semantic_rel_j rec-application-judgement
     "{myv: Maybe[Val] |
         some?(myv) IMPLIES
          semantic_rel_expr(eval_bool, eval_op1, eval_op2)
                           (expr, body, env, val(myv))}" ack_pvs0 nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (Omega const-decl "nat" omega "orders/")
    (eval_expr def-decl "Maybe[Val]" lang nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (ack_pvs0 const-decl "nat" ack_pvs0 nil)
    (ack def-decl "nat" ack_ax nil)
    (wfm_ack_ const-decl "mt_gen.WFM" ack_pvs0 nil)
    (WFM type-eq-decl nil measure_termination_defs nil)
    (Val type-eq-decl nil lang nil)
    (R_ const-decl "(well_founded?[MT_])" ack_pvs0 nil)
    (MT_ nonempty-type-decl nil ack_pvs0 nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (wf_nat formula-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (Omega_ack const-decl "nat" ack_pvs0 nil)
    (naturalnumber type-eq-decl nil naturalnumbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (measure_induction formula-decl nil measure_induction nil)
    (well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil))
   nil)
  (pvs0_ack_eval-3 nil 3653088037
   ("" (measure-induct+ "Omega_ack(m,n)" ("m" "n"))
    (("" (expand "Omega_ack")
      (("" (expand "ack_pvs0" 1)
        (("" (expand "eval")
          (("" (expand "Omega_ack")
            (("" (expand "pvs0_ack" 1 1)
              (("" (expand "eval_expr" 1)
                (("" (lift-if)
                  (("" (prop)
                    (("1" (hide-all-but -1) (("1" (grind) nil nil))
                      nil)
                     ("2" (hide -3) (("2" (grind) nil nil)) nil)
                     ("3" (expand "eval_expr" 1)
                      (("3" (assert)
                        (("3" (prop)
                          (("1" (expand "eval_expr" 1)
                            (("1" (expand "eop1" 1)
                              (("1"
                                (expand "boole" 1)
                                (("1"
                                  (expand "ebool" 1)
                                  (("1"
                                    (lift-if)
                                    (("1"
                                      (prop)
                                      (("1"
                                        (expand "eval_expr" 2)
                                        (("1"
                                          (lift-if)
                                          (("1"
                                            (prop)
                                            (("1"
                                              (expand "eval_expr" -1)
                                              (("1"
                                                (prop)
                                                (("1"
                                                  (expand
                                                   "eval_expr"
                                                   -2)
                                                  (("1"
                                                    (expand "eop1" -2)
                                                    (("1"
                                                      (expand
                                                       "boole"
                                                       -2)
                                                      (("1"
                                                        (expand
                                                         "ebool"
                                                         -2)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (prop)
                                                            (("1"
                                                              (expand
                                                               "eval_expr"
                                                               2)
                                                              (("1"
                                                                (lift-if)
                                                                (("1"
                                                                  (prop)
                                                                  (("1"
                                                                    (expand
                                                                     "eval_expr"
                                                                     1
                                                                     2)
                                                                    (("1"
                                                                      (expand
                                                                       "eval_expr"
                                                                       1
                                                                       2)
                                                                      (("1"
                                                                        (expand
                                                                         "eval_expr"
                                                                         1
                                                                         2)
                                                                        (("1"
                                                                          (expand
                                                                           "eop1"
                                                                           1
                                                                           2)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "ack"
                                                                                 1)
                                                                                (("1"
                                                                                  (inst
                                                                                   -8
                                                                                   "x!1-1"
                                                                                   "1")
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "omega_increasing")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "(x!1,x!2)"
                                                                                       "(x!1-1,1)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "ack_pvs0")
                                                                                          (("1"
                                                                                            (expand*
                                                                                             "eval"
                                                                                             "Omega_ack")
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "eval_expr_ge_n")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "ebool"
                                                                                                 "eop1"
                                                                                                 "eop2"
                                                                                                 "omega.Omega(x!1 - 1, 1)"
                                                                                                 "omega.Omega(x!1, x!2) - 1"
                                                                                                 "get_body(pvs0_ack)"
                                                                                                 "get_body(pvs0_ack)"
                                                                                                 "LAMBDA (v_1: (vr?)): (x!1 - 1, 1)")
                                                                                                (("1"
                                                                                                  (beta)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "ack_pvs0_TCC1")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "x!1-1"
                                                                                                         "1")
                                                                                                        (("1"
                                                                                                          (expand*
                                                                                                           "eval"
                                                                                                           "Omega_ack")
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (lemma
                                                                                                   "IMP_omega_TCC1")
                                                                                                  (("2"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         (-2
                                                                                          1
                                                                                          4))
                                                                                        (("2"
                                                                                          (expand*
                                                                                           "lt_concrete_val"
                                                                                           "lt_val")
                                                                                          (("2"
                                                                                            (inst
                                                                                             1
                                                                                             "(# cnds
                                                         := (: pvsbool(op1(1, vr)),
                                                               pvsnot(op1(0, vr)) :),
                                                       path := (: 1, 2 :),
                                                       rec_expr := rec(op1(3, vr)) #)")
                                                                                            (("1"
                                                                                              (prop)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "semantic_rel_expr")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "semantic_rel_expr")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "eop1")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       1
                                                                                                       "(x!1,x!2)")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (expand
                                                                                                 "eval_conds_rec")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "eval_conds_rec")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "eval_conds_rec")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "semantic_rel_expr")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "semantic_rel_expr")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "ebool")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "eop1")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "boole")
                                                                                                              (("2"
                                                                                                                (prop)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   1
                                                                                                                   "(1,0)")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       1
                                                                                                                       "(x!1,x!2)")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (inst
                                                                                                                   1
                                                                                                                   "(0,0)")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       1
                                                                                                                       "(x!1,x!2)")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("3"
                                                                                                (expand
                                                                                                 "mf")
                                                                                                (("3"
                                                                                                  (use
                                                                                                   "lex2_lt")
                                                                                                  (("3"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (typepred
                                                                                               "pvs0_ccs [[nat, nat], ordinal,
                                           restrict[[ordstruct, ordstruct], [ordinal, ordinal], boolean]
                                               (ordinals.<)](pvs0_ack)")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "every_nth")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "0")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "(# cnds
                                                                  := (: pvsbool[Val[[nat, nat]]]
                                                                            (op1[Val[[nat, nat]]](1, vr[Val[[nat, nat]]])),
                                                                        pvsnot[Val[[nat, nat]]]
                                                                            (op1[Val[[nat, nat]]]
                                                                                 (0, vr[Val[[nat, nat]]])) :),
                                                                path := (: 1, 2 :),
                                                                rec_expr
                                                                  := rec[Val[[nat, nat]]]
                                                                         (op1[Val[[nat, nat]]](3, vr[Val[[nat, nat]]])) #) = nth(pvs0_ccs
                                                                                  [[nat, nat], ordinal,
                                                                                   restrict
                                                                                       [[ordstruct, ordstruct],
                                                                                        [ordinal, ordinal],
                                                                                        boolean]
                                                                                       (ordinals.<)]
                                                                                  (pvs0_ack),
                                                                              0)")
                                                                                                    (("1"
                                                                                                      (replaces
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide-all-but
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (eval-formula)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (hide-all-but
                                                                                                       1)
                                                                                                      (("3"
                                                                                                        (eval-formula)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (eval-formula)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (lemma
                                                                                                 "mt_lex2_TCC1")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (hide-all-but
                                                                                               1)
                                                                                              (("3"
                                                                                                (eval-formula)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "eval_expr"
                                                                     1)
                                                                    (("2"
                                                                      (lift-if)
                                                                      (("2"
                                                                        (prop)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand "eval_expr" 1)
                                              (("2"
                                                (prop)
                                                (("2"
                                                  (expand
                                                   "eval_expr"
                                                   1)
                                                  (("2"
                                                    (expand "eop1" 1)
                                                    (("2"
                                                      (expand "boole")
                                                      (("2"
                                                        (expand
                                                         "ebool"
                                                         1)
                                                        (("2"
                                                          (lift-if)
                                                          (("2"
                                                            (prop)
                                                            (("1"
                                                              (expand
                                                               "eval_expr"
                                                               2)
                                                              (("1"
                                                                (lift-if)
                                                                (("1"
                                                                  (prop)
                                                                  (("1"
                                                                    (expand
                                                                     "eval_expr"
                                                                     1
                                                                     2)
                                                                    (("1"
                                                                      (expand
                                                                       "eval_expr"
                                                                       1
                                                                       2)
                                                                      (("1"
                                                                        (expand
                                                                         "eval_expr"
                                                                         1
                                                                         2)
                                                                        (("1"
                                                                          (expand
                                                                           "eval_expr"
                                                                           1
                                                                           2)
                                                                          (("1"
                                                                            (expand
                                                                             "eval_expr"
                                                                             1
                                                                             2)
                                                                            (("1"
                                                                              (expand
                                                                               "eval_expr"
                                                                               1
                                                                               3)
                                                                              (("1"
                                                                                (expand
                                                                                 "eval_expr"
                                                                                 1
                                                                                 3)
                                                                                (("1"
                                                                                  (expand
                                                                                   "eval_expr"
                                                                                   1
                                                                                   3)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "eop1"
                                                                                     1
                                                                                     3)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "ack_pvs0_TCC1")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "x!1"
                                                                                             "x!2-1")
                                                                                            (("1"
                                                                                              (expand*
                                                                                               "eval"
                                                                                               "Omega_ack")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "omega_increasing")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "(x!1,x!2)"
                                                                                                   "(x!1,x!2-1)")
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "eval_expr_ge_n")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "ebool"
                                                                                                       "eop1"
                                                                                                       "eop2"
                                                                                                       "Omega(x!1, x!2 - 1)"
                                                                                                       "omega.Omega(x!1, x!2) - 1"
                                                                                                       "get_body(pvs0_ack)"
                                                                                                       "get_body(pvs0_ack)"
                                                                                                       " LAMBDA
                                                                          (v_1: (vr?)):
                                                                          (x!1, x!2 - 1)")
                                                                                                      (("1"
                                                                                                        (beta)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "eval_expr"
                                                                                                               1
                                                                                                               2)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "eop2"
                                                                                                                 1
                                                                                                                 2)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "eval_expr"
                                                                                                                   1
                                                                                                                   2)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "eval_expr"
                                                                                                                     1
                                                                                                                     2)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "eval_expr"
                                                                                                                       1
                                                                                                                       3)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "eval_expr"
                                                                                                                         1
                                                                                                                         3)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "eop1"
                                                                                                                           1
                                                                                                                           3)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "ack"
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (inst-cp
                                                                                                                               -11
                                                                                                                               "x!1-1"
                                                                                                                               "val(eval_expr(ebool, eop1, eop2)
                                                                         (omega.Omega(x!1, x!2) - 1,
                                                                          get_body(pvs0_ack),
                                                                          get_body(pvs0_ack),
                                                                          LAMBDA
                                                                          (v_1: (vr?)):
                                                                          (x!1, x!2 - 1)))`1")
                                                                                                                              (("1"
                                                                                                                                (lemma
                                                                                                                                 "omega_increasing")
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "(x!1,x!2)"
                                                                                                                                   "(x!1-1,val(eval_expr(ebool, eop1, eop2)
                                                                             (omega.Omega(x!1, x!2) - 1,
                                                                              get_body(pvs0_ack),
                                                                              get_body(pvs0_ack),
                                                                              LAMBDA
                                                                              (v_1: (vr?)):
                                                                              (x!1, x!2 - 1)))`1)")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -12
                                                                                                                                     "x!1"
                                                                                                                                     "x!2-1")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "ack_pvs0")
                                                                                                                                        (("1"
                                                                                                                                          (expand*
                                                                                                                                           "eval"
                                                                                                                                           "Omega_ack")
                                                                                                                                          (("1"
                                                                                                                                            (lemma
                                                                                                                                             "eval_expr_ge_n")
                                                                                                                                            (("1"
                                                                                                                                              (inst-cp
                                                                                                                                               -1
                                                                                                                                               "ebool"
                                                                                                                                               "eop1"
                                                                                                                                               "eop2"
                                                                                                                                               "omega.Omega(x!1, x!2 - 1)"
                                                                                                                                               "omega.Omega(x!1, x!2) - 1"
                                                                                                                                               " get_body(pvs0_ack)"
                                                                                                                                               " get_body(pvs0_ack)"
                                                                                                                                               " LAMBDA (v_1: (vr?)): (x!1, x!2 - 1)")
                                                                                                                                              (("1"
                                                                                                                                                (beta)
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "ack_pvs0_TCC1")
                                                                                                                                                  (("1"
                                                                                                                                                    (inst-cp
                                                                                                                                                     -1
                                                                                                                                                     "x!1"
                                                                                                                                                     "x!2-1")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand*
                                                                                                                                                       "eval"
                                                                                                                                                       "Omega_ack")
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -2)
                                                                                                                                                        (("1"
                                                                                                                                                          (replaces
                                                                                                                                                           -6)
                                                                                                                                                          (("1"
                                                                                                                                                            (replaces
                                                                                                                                                             -11
                                                                                                                                                             :dir
                                                                                                                                                             rl)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -3
                                                                                                                                                               "ebool"
                                                                                                                                                               "eop1"
                                                                                                                                                               "eop2"
                                                                                                                                                               "omega.Omega(x!1 - 1, ack(x!1, x!2 - 1))"
                                                                                                                                                               "omega.Omega(x!1, x!2) - 1"
                                                                                                                                                               "get_body(pvs0_ack)"
                                                                                                                                                               "get_body(pvs0_ack)"
                                                                                                                                                               "LAMBDA (v: (vr?)): (x!1 - 1, ack(x!1, x!2 - 1))")
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 -1
                                                                                                                                                                 "x!1 - 1"
                                                                                                                                                                 "ack(x!1, x!2 - 1)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (replace
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "IMP_ack_ax_wfm_ack_dec_3_TCC1")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("3"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "IMP_ack_ax_wfm_ack_dec_2_TCC1")
                                                                                                                                                                  (("3"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("4"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "IMP_ack_ax_wfm_ack_dec_1_TCC1")
                                                                                                                                                                  (("4"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("5"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "IMP_ack_ax_R_wf_TCC1")
                                                                                                                                                                  (("5"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil)
                                                                                                                                                               ("3"
                                                                                                                                                                (lemma
                                                                                                                                                                 "IMP_omega_TCC1")
                                                                                                                                                                (("3"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("4"
                                                                                                                                                                (lemma
                                                                                                                                                                 "IMP_ack_ax_wfm_ack_dec_3_TCC1")
                                                                                                                                                                (("4"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("5"
                                                                                                                                                                (lemma
                                                                                                                                                                 "IMP_ack_ax_wfm_ack_dec_2_TCC1")
                                                                                                                                                                (("5"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("6"
                                                                                                                                                                (lemma
                                                                                                                                                                 "IMP_ack_ax_wfm_ack_dec_1_TCC1")
                                                                                                                                                                (("6"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("7"
                                                                                                                                                                (lemma
                                                                                                                                                                 "IMP_ack_ax_R_wf_TCC1")
                                                                                                                                                                (("7"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (lemma
                                                                                                                                                 "IMP_omega_TCC1")
                                                                                                                                                (("2"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide-all-but
                                                                                                                                     (1
                                                                                                                                      3
                                                                                                                                      4))
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "lt_concrete_val")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "lt_val")
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "(# cnds
                                                                         := (: pvsnot(op1(1, vr)),
                                                                               pvsnot(op1(0, vr)) :),
                                                                       path := (: 2, 2 :),
                                                                       rec_expr
                                                                         := rec(op2(0, vr, rec(op1(4, vr)))) #)")
                                                                                                                                          (("1"
                                                                                                                                            (prop)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "semantic_rel_expr")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "eop2"
                                                                                                                                                   1
                                                                                                                                                   4)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "semantic_rel_expr"
                                                                                                                                                     1
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       1
                                                                                                                                                       "(x!1,x!2)"
                                                                                                                                                       "_")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "semantic_rel_expr")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "semantic_rel_expr"
                                                                                                                                                           1
                                                                                                                                                           1)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "semantic_rel_expr"
                                                                                                                                                             1
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "eop1"
                                                                                                                                                               1
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 1
                                                                                                                                                                 "(val[Val[[nat, nat]]]
                                                                 (eval_expr[[nat, nat]]
                                                                      (ebool, eop1, eop2)
                                                                      (omega[[nat, nat], lt_concrete_val].Omega(x!1, x!2) - 1,
                                                                       get_body[Val[[nat, nat]]](pvs0_ack),
                                                                       get_body[Val[[nat, nat]]](pvs0_ack),
                                                                       LAMBDA (v_1: (vr?[Val[[nat, nat]]])): (x!1, x!2 - 1)))`1,val[Val[[nat, nat]]]
                                                                 (eval_expr[[nat, nat]]
                                                                      (ebool, eop1, eop2)
                                                                      (omega[[nat, nat], lt_concrete_val].Omega(x!1, x!2) - 1,
                                                                       get_body[Val[[nat, nat]]](pvs0_ack),
                                                                       get_body[Val[[nat, nat]]](pvs0_ack),
                                                                       LAMBDA (v_1: (vr?[Val[[nat, nat]]])): (x!1, x!2 - 1)))`2)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   1
                                                                                                                                                                   "(x!1,x!2-1)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (prop)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       1
                                                                                                                                                                       "(x!1,x!2)")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "eval_expr_semantic_rel")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -1
                                                                                                                                                                         "ebool"
                                                                                                                                                                         "eop1"
                                                                                                                                                                         "eop2"
                                                                                                                                                                         "LAMBDA (v: (vr?)): (x!1, x!2 - 1)"
                                                                                                                                                                         "get_body[Val[[nat, nat]]](pvs0_ack)"
                                                                                                                                                                         "get_body[Val[[nat, nat]]](pvs0_ack)"
                                                                                                                                                                         "val[Val[[nat, nat]]]
                                                                                         (eval_expr[[nat, nat]]
                                                                                              (ebool, eop1, eop2)
                                                                                              (omega[[nat, nat], lt_concrete_val].Omega
                                                                                                   (x!1, x!2)
                                                                                                - 1,
                                                                                               get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                               get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                               LAMBDA (v_1: (vr?[Val[[nat, nat]]])):
                                                                                                 (x!1, x!2 - 1)))"
                                                                                                                                                                         "omega[[nat, nat], lt_concrete_val].Omega
                                                                                                   (x!1, x!2)
                                                                                                - 1")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (beta)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (reveal
                                                                                                                                                                             (-4
                                                                                                                                                                              -2))
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replaces
                                                                                                                                                                                 -1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (case
                                                                                                                                                                                   "val[Val[[nat, nat]]]
                                                                                            (eval_expr[[nat, nat]]
                                                                                                 (ebool, eop1, eop2)
                                                                                                 (omega[[nat, nat], lt_concrete_val].Omega
                                                                                                      (x!1, x!2)
                                                                                                   - 1,
                                                                                                  get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                                  get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                                  LAMBDA (v_1: (vr?[Val[[nat, nat]]])):
                                                                                                    (x!1, x!2 - 1))) = (val[Val[[nat, nat]]]
                                                                                             (eval_expr[[nat, nat]]
                                                                                                  (ebool, eop1, eop2)
                                                                                                  (omega[[nat, nat], lt_concrete_val].Omega
                                                                                                       (x!1, x!2)
                                                                                                    - 1,
                                                                                                   get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                                   get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                                   LAMBDA (v_1: (vr?[Val[[nat, nat]]])):
                                                                                                     (x!1, x!2 - 1)))`1,
                                                                                         val[Val[[nat, nat]]]
                                                                                             (eval_expr[[nat, nat]]
                                                                                                  (ebool, eop1, eop2)
                                                                                                  (omega[[nat, nat], lt_concrete_val].Omega
                                                                                                       (x!1, x!2)
                                                                                                    - 1,
                                                                                                   get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                                   get_body[Val[[nat, nat]]](pvs0_ack),
                                                                                                   LAMBDA (v_1: (vr?[Val[[nat, nat]]])):
                                                                                                     (x!1, x!2 - 1)))`2)")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (replaces
                                                                                                                                                                                     -1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (decompose-equality)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (lemma
                                                                                                                                                                                         "IMP_omega_TCC1")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (propax)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("3"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "IMP_omega_TCC1")
                                                                                                                                                                                    (("3"
                                                                                                                                                                                      (propax)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (lemma
                                                                                                                                                                           "IMP_omega_TCC1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (propax)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "pvs0_ack")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("3"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "IMP_omega_TCC1")
                                                                                                                                                                  (("3"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "eval_conds_rec")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "eval_conds_rec")
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "eval_conds_rec")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "semantic_rel_expr")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "semantic_rel_expr")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "ebool")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "eop1")
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "boole")
                                                                                                                                                            (("2"
                                                                                                                                                              (prop)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 1
                                                                                                                                                                 "(0,0)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     1
                                                                                                                                                                     "(x!1,x!2)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (inst
                                                                                                                                                                 1
                                                                                                                                                                 "(0,0)")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     1
                                                                                                                                                                     "(x!1,x!2)")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("3"
                                                                                                                                              (expand
                                                                                                                                               "mf")
                                                                                                                                              (("3"
                                                                                                                                                (use
                                                                                                                                                 "lex2_lt")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (lemma
                                                                                                                                                   "IMP_omega_TCC1")
                                                                                                                                                  (("2"
                                                                                                                                                    (propax)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (typepred
                                                                                                                                             "pvs0_ccs [[nat, nat], ordinal,
                                                           restrict[[ordstruct, ordstruct], [ordinal, ordinal], boolean]
                                                               (ordinals.<)](pvs0_ack)")
                                                                                                                                            (("1"
                                                                                                                                              (rewrite
                                                                                                                                               "every_nth")
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "1")
                                                                                                                                                (("1"
                                                                                                                                                  (case
                                                                                                                                                   "(# cnds
                                                                                  := (: pvsnot[Val[[nat, nat]]]
                                                                                            (op1[Val[[nat, nat]]](1, vr[Val[[nat, nat]]])),
                                                                                        pvsnot[Val[[nat, nat]]]
                                                                                            (op1[Val[[nat, nat]]]
                                                                                                 (0, vr[Val[[nat, nat]]])) :),
                                                                                path := (: 2, 2 :),
                                                                                rec_expr
                                                                                  := rec[Val[[nat, nat]]]
                                                                                         (op2[Val[[nat, nat]]]
                                                                                              (0, vr[Val[[nat, nat]]],
                                                                                               rec[Val[[nat, nat]]]
                                                                                                   (op1[Val[[nat, nat]]]
                                                                                                        (4, vr[Val[[nat, nat]]])))) #) = nth(pvs0_ccs
                                                                                                  [[nat, nat], ordinal,
                                                                                                   restrict
                                                                                                       [[ordstruct, ordstruct],
                                                                                                        [ordinal, ordinal],
                                                                                                        boolean]
                                                                                                       (ordinals.<)]
                                                                                                  (pvs0_ack),
                                                                                              1)")
                                                                                                                                                  (("1"
                                                                                                                                                    (replaces
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (eval-formula)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("3"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     1)
                                                                                                                                                    (("3"
                                                                                                                                                      (eval-formula)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (hide-all-but
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (eval-formula)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (lemma
                                                                                                                                               "mt_lex2_TCC1")
                                                                                                                                              (("2"
                                                                                                                                                (propax)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("3"
                                                                                                                                            (hide-all-but
                                                                                                                                             1)
                                                                                                                                            (("3"
                                                                                                                                              (eval-formula)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("3"
                                                                                                                                    (lemma
                                                                                                                                     "IMP_omega_TCC1")
                                                                                                                                    (("3"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (lemma
                                                                                                                                 "IMP_omega_TCC1")
                                                                                                                                (("2"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (lemma
                                                                                                         "IMP_omega_TCC1")
                                                                                                        (("3"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     (1
                                                                                                      3
                                                                                                      4))
                                                                                                    (("2"
                                                                                                      (expand*
                                                                                                       "lt_concrete_val"
                                                                                                       "lt_val")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         1
                                                                                                         " (# cnds
                                                             := (: pvsnot(op1(1, vr)),
                                                                   pvsnot(op1(0, vr)) :),
                                                           path := (: 1, 0, 2, 2 :),
                                                           rec_expr := rec(op1(4, vr)) #)")
                                                                                                        (("1"
                                                                                                          (prop)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "semantic_rel_expr")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "semantic_rel_expr")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "eop1")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   1
                                                                                                                   "(x!1,x!2)")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "eval_conds_rec")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "eval_conds_rec")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "eval_conds_rec")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "semantic_rel_expr")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "semantic_rel_expr")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "ebool")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "eop1")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "boole")
                                                                                                                          (("2"
                                                                                                                            (prop)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               1
                                                                                                                               "(0,0)")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   1
                                                                                                                                   "(x!1,x!2)")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (inst
                                                                                                                               1
                                                                                                                               "(0,0)")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   1
                                                                                                                                   "(x!1,x!2)")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (expand
                                                                                                             "mf")
                                                                                                            (("3"
                                                                                                              (use
                                                                                                               "lex2_lt")
                                                                                                              (("3"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (typepred
                                                                                                           "pvs0_ccs[[nat, nat], ordinal,
                                               restrict[[ordstruct, ordstruct], [ordinal, ordinal], boolean]
                                                   (ordinals.<)](pvs0_ack)")
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             "every_nth")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "2")
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "(# cnds
                                                                      := (: pvsnot[Val[[nat, nat]]]
                                                                                (op1[Val[[nat, nat]]](1, vr[Val[[nat, nat]]])),
                                                                            pvsnot[Val[[nat, nat]]]
                                                                                (op1[Val[[nat, nat]]]
                                                                                     (0, vr[Val[[nat, nat]]])) :),
                                                                    path := (: 1, 0, 2, 2 :),
                                                                    rec_expr
                                                                      := rec[Val[[nat, nat]]]
                                                                             (op1[Val[[nat, nat]]](4, vr[Val[[nat, nat]]])) #) = nth(pvs0_ccs
                                                                                      [[nat, nat], ordinal,
                                                                                       restrict
                                                                                           [[ordstruct, ordstruct],
                                                                                            [ordinal, ordinal],
                                                                                            boolean]
                                                                                           (ordinals.<)]
                                                                                      (pvs0_ack),
                                                                                  2)")
                                                                                                                (("1"
                                                                                                                  (replaces
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (eval-formula)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("3"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("3"
                                                                                                                    (eval-formula)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide-all-but
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (eval-formula)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (lemma
                                                                                                             "mt_lex2_TCC1")
                                                                                                            (("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("3"
                                                                                                          (hide-all-but
                                                                                                           1)
                                                                                                          (("3"
                                                                                                            (eval-formula)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "eval_expr"
                                                                     1)
                                                                    (("2"
                                                                      (lift-if)
                                                                      (("2"
                                                                        (prop)
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "eval_expr"
                                                                           1)
                                                                          (("2"
                                                                            (lift-if)
                                                                            (("2"
                                                                              (prop)
                                                                              (("1"
                                                                                (expand
                                                                                 "eval_expr"
                                                                                 1
                                                                                 2)
                                                                                (("1"
                                                                                  (expand
                                                                                   "eval_expr"
                                                                                   1
                                                                                   2)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "eval_expr"
                                                                                     1
                                                                                     2)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "eop1"
                                                                                       1
                                                                                       2)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "omega_increasing")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "(x!1,x!2)"
                                                                                               "(x!1,x!2-1)")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "eval_expr_ge_n")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "ebool"
                                                                                                   "eop1"
                                                                                                   "eop2"
                                                                                                   "Omega(x!1, x!2 - 1)"
                                                                                                   "omega.Omega(x!1, x!2) - 1"
                                                                                                   "get_body(pvs0_ack)"
                                                                                                   "get_body(pvs0_ack)"
                                                                                                   "LAMBDA (v_1: (vr?)): (x!1, x!2 - 1)")
                                                                                                  (("1"
                                                                                                    (beta)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "ack_pvs0_TCC1")
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (expand*
                                                                                                           "eval"
                                                                                                           "Omega_ack")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (lemma
                                                                                                     "IMP_omega_TCC1")
                                                                                                    (("3"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 (1
                                                                                                  5
                                                                                                  6))
                                                                                                (("2"
                                                                                                  (expand*
                                                                                                   "lt_concrete_val"
                                                                                                   "lt_val")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     1
                                                                                                     "(# cnds
                                                                     := (: pvsnot(op1(1, vr)),
                                                                           pvsnot(op1(0, vr)) :),
                                                                   path := (: 1, 0, 2, 2 :),
                                                                   rec_expr := rec(op1(4, vr)) #)")
                                                                                                    (("1"
                                                                                                      (prop)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "semantic_rel_expr")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "semantic_rel_expr")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "eop1")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               1
                                                                                                               "(x!1,x!2)")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "eval_conds_rec")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "eval_conds_rec")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "eval_conds_rec")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "semantic_rel_expr")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "semantic_rel_expr")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "ebool")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "eop1")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "boole")
                                                                                                                      (("2"
                                                                                                                        (prop)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           1
                                                                                                                           "(0,0)")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               1
                                                                                                                               "(x!1,x!2)")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (inst
                                                                                                                           1
                                                                                                                           "(0,0)")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               1
                                                                                                                               "(x!1,x!2)")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (expand
                                                                                                         "mf")
                                                                                                        (("3"
                                                                                                          (use
                                                                                                           "lex2_lt")
                                                                                                          (("3"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (typepred
                                                                                                       "pvs0_ccs[[nat, nat], ordinal,
                                                       restrict[[ordstruct, ordstruct], [ordinal, ordinal], boolean]
                                                           (ordinals.<)](pvs0_ack)")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "every_nth")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "2")
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "(# cnds
                                                                              := (: pvsnot[Val[[nat, nat]]]
                                                                                        (op1[Val[[nat, nat]]](1, vr[Val[[nat, nat]]])),
                                                                                    pvsnot[Val[[nat, nat]]]
                                                                                        (op1[Val[[nat, nat]]]
                                                                                             (0, vr[Val[[nat, nat]]])) :),
                                                                            path := (: 1, 0, 2, 2 :),
                                                                            rec_expr
                                                                              := rec[Val[[nat, nat]]]
                                                                                     (op1[Val[[nat, nat]]](4, vr[Val[[nat, nat]]])) #) = nth(pvs0_ccs
                                                                                              [[nat, nat], ordinal,
                                                                                               restrict
                                                                                                   [[ordstruct, ordstruct],
                                                                                                    [ordinal, ordinal],
                                                                                                    boolean]
                                                                                                   (ordinals.<)]
                                                                                              (pvs0_ack),
                                                                                          2)")
                                                                                                            (("1"
                                                                                                              (replaces
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide-all-but
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (eval-formula)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("3"
                                                                                                              (hide-all-but
                                                                                                               1)
                                                                                                              (("3"
                                                                                                                (eval-formula)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (eval-formula)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (lemma
                                                                                                         "mt_lex2_TCC1")
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (hide-all-but
                                                                                                       1)
                                                                                                      (("3"
                                                                                                        (eval-formula)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "eval_expr"
                                                                                 1)
                                                                                (("2"
                                                                                  (lift-if)
                                                                                  (("2"
                                                                                    (prop)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (expand "eval_expr" 1)
                                              (("3"
                                                (lift-if)
                                                (("3"
                                                  (prop)
                                                  (("3"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "eval_expr" 1)
                            (("2" (propax) nil nil)) nil))
                          nil))
                        nil))
                      nil)
                     ("4" (expand "eval_expr" 1)
                      (("4" (assert)
                        (("4" (lift-if)
                          (("4" (prop)
                            (("1" (assert) nil nil)
                             ("2" (expand "eval_expr")
                              (("2" (propax) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((eval const-decl "Maybe[Val]" lang nil)
    (val adt-accessor-decl "[(some?) -> T]" Maybe "structures/")
    (some? adt-recognizer-decl "[Maybe -> boolean]" Maybe
     "structures/")
    (Maybe type-decl nil Maybe "structures/")
    (op2 adt-constructor-decl "[[nat, Expr, Expr] -> (op2?)]" PVS0_adt
     nil)
    (eval_expr_semantic_rel formula-decl nil lang nil)
    (eval_expr_ge_n formula-decl nil lang nil)
    (PVS0 type-decl nil PVS0_adt nil)
    (cnst? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (vr? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op1? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (op2? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (rec? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (ite? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Expr type-eq-decl nil PVS0_adt nil)
    (def? adt-recognizer-decl "[PVS0 -> boolean]" PVS0_adt nil)
    (Def type-eq-decl nil PVS0_adt nil)
    (get_body adt-accessor-decl "[Def -> Expr]" PVS0_adt nil)
    (Environment type-eq-decl nil lang nil)
    (lt_val const-decl "bool" measure_termination nil)
    (semantic_rel_expr inductive-decl "bool" lang nil)
    (eval_conds_rec def-decl "bool" lang nil)
    (rec adt-constructor-decl "[Expr -> (rec?)]" PVS0_adt nil)
    (pvsnot adt-constructor-decl "[Expr[T] -> (pvsnot?)]" BoolPVS0_adt
     nil)
    (pvsnot? adt-recognizer-decl "[BoolPVS0 -> boolean]" BoolPVS0_adt
     nil)
    (vr adt-constructor-decl "(vr?)" PVS0_adt nil)
    (op1 adt-constructor-decl "[[nat, Expr] -> (op1?)]" PVS0_adt nil)
    (pvsbool adt-constructor-decl "[Expr[T] -> (pvsbool?)]"
     BoolPVS0_adt nil)
    (pvsbool? adt-recognizer-decl "[BoolPVS0 -> boolean]" BoolPVS0_adt
     nil)
    (BoolPVS0 type-decl nil BoolPVS0_adt nil)
    (pvs0_tcc_valid_cc const-decl "bool" lang nil)
    (PVS0_CC type-eq-decl nil lang nil)
    (Conditions type-eq-decl nil lang nil)
    (omega_increasing formula-decl nil omega "orders/")
    (Omega const-decl "nat" omega "orders/")
    (eval_expr def-decl "Maybe[Val]" lang nil)
    (ack def-decl "nat" ack_ax nil)
    (WFM type-eq-decl nil measure_termination_defs nil)
    (Val type-eq-decl nil lang nil)
    (well_founded? const-decl "bool" orders nil))
   nil))
 (IMP_ccg_to_pvs0_TCC1 0
  (IMP_ccg_to_pvs0_TCC1-1 nil 3653171790
   ("" (rewrite "wf_nat") nil nil)
   ((wf_nat formula-decl nil naturalnumbers nil)) nil)))

