ex_ack : THEORY
BEGIN

  MT: TYPE+ % abstract type for measure

  wfm_ack: [[nat,nat] -> MT] % the measure function has to be defined on both parameters of ack.

  R: pred[[MT,MT]]   % relation to compare measures

  R_wf: AXIOM % for ack_TCC1 
    well_founded?(LAMBDA (x: MT, y: MT): R(x, y));

  wfm_ack_dec_1: AXIOM 
   FORALL (m, n: nat):
     n = 0 AND NOT m = 0 IMPLIES R(wfm_ack(m - 1, 1), wfm_ack(m, n));

  wfm_ack_dec_2: AXIOM 
   FORALL (m, n: nat):
     NOT n = 0 AND NOT m = 0 IMPLIES R(wfm_ack(m, n - 1), wfm_ack(m, n));

  wfm_ack_dec_3: AXIOM 
    FORALL (m, n: nat,
          v: [{z: [nat, nat] | R(wfm_ack(z), wfm_ack(m, n))} -> nat]):
      NOT n = 0 AND NOT m = 0 IMPLIES
       R(wfm_ack(m - 1, v(m, n - 1)), wfm_ack(m, n));

  ack(m,n:nat) : RECURSIVE nat =
    IF m = 0 THEN n+1
    ELSIF n = 0 THEN ack(m-1,1)
      ELSE ack(m-1,ack(m,n-1))
    ENDIF
  MEASURE wfm_ack BY R
  

END ex_ack
