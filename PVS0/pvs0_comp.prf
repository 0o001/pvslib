(pvs0_comp
 (to_PVS0 0
  (to_PVS0-1 nil 3707309217 ("" (postpone) nil nil) nil shostak))
 (T_to_nat_TCC1 0
  (T_to_nat_TCC1-1 nil 3676392924
   ("" (lemma countable) (("" (skeep) (("" (inst?) nil nil)) nil)) nil)
   ((T formal-nonempty-type-decl nil pvs0_comp nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (bijective? const-decl "bool" functions nil)
    (f skolem-const-decl "[T -> nat]" pvs0_comp nil)
    (countable formula-decl nil pvs0_comp nil))
   nil))
 (T_to_list_TCC1 0
  (T_to_list_TCC1-1 nil 3679240880
   ("" (existence-tcc)
    (("" (lemma listable)
      (("" (skeep)
        (("" (inst 1 "f")
          (("" (expand "bijective?")
            (("" (expand "injective?")
              (("" (expand "surjective?") (("" (propax) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((listable formula-decl nil pvs0_comp nil)
    (surjective? const-decl "bool" functions nil)
    (injective? const-decl "bool" functions nil)
    (T formal-nonempty-type-decl nil pvs0_comp nil)
    (number nonempty-type-decl nil numbers nil)
    (list type-decl nil list_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (bijective? const-decl "bool" functions nil)
    (f skolem-const-decl "[T -> (cons?[nat])]" pvs0_comp nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil))
   nil))
 (T_to_PVS0_TCC1 0
  (T_to_PVS0_TCC1-1 nil 3679243301
   ("" (lemma "to_PVS0") (("" (skeep) (("" (inst?) nil nil)) nil)) nil)
   ((T formal-nonempty-type-decl nil pvs0_comp nil)
    (Val type-eq-decl nil pvs0_expr nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (EvalOp1 type-eq-decl nil pvs0_expr nil)
    (EvalOp2 type-eq-decl nil pvs0_expr nil)
    (PVS0Expr type-decl nil PVS0Expr_adt nil)
    (PVS0 type-eq-decl nil pvs0_lang nil)
    (surjective? const-decl "bool" functions nil)
    (f skolem-const-decl "[T -> PVS0[T]]" pvs0_comp nil)
    (to_PVS0 formula-decl nil pvs0_comp nil))
   nil))
 (eop2_TCC1 0
  (eop2_TCC1-1 nil 3679241549
   ("" (subtype-tcc)
    (("" (typepred "T_to_list(t1!1)") (("" (grind) nil nil)) nil)) nil)
   ((T_to_list const-decl "(bijective?[T, (cons?[nat])])" pvs0_comp
     nil)
    (bijective? const-decl "bool" functions nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (T formal-nonempty-type-decl nil pvs0_comp nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (length def-decl "nat" list_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil))
   nil))
 (eop2x_bool_TCC1 0
  (eop2x_bool_TCC1-1 nil 3679244995 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (eop2x_TCC1 0
  (eop2x_TCC1-1 nil 3679245064
   ("" (skeep)
    (("" (expand "nonempty?")
      (("" (expand "empty?")
        (("" (expand "eop2x_bool")
          (("" (case "op = 0")
            (("1" (assert)
              (("1"
                (case "NOT (EXISTS (t: T):
                                semantic_rel(T_to_PVS0(t1), t2, t))")
                (("1" (assert)
                  (("1" (inst -2 "nat_to_T(1)")
                    (("1" (expand "member")
                      (("1" (replace 1) (("1" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil)
                 ("2" (copy -1)
                  (("2" (skeep)
                    (("2" (inst -4 "t")
                      (("2" (expand "member") (("2" (prop) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (assert)
              (("2" (case "op = 1")
                (("1" (assert)
                  (("1"
                    (case "EXISTS (t: T): minimizator(T_to_PVS0(t1), t2, t)")
                    (("1" (replace -1)
                      (("1" (skeep)
                        (("1" (inst -3 "t")
                          (("1" (expand "member")
                            (("1" (propax) nil nil)) nil))
                          nil))
                        nil))
                      nil)
                     ("2" (replace 1)
                      (("2" (inst -2 "nat_to_T(0)")
                        (("2" (expand "member")
                          (("2" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (assert)
                  (("2" (case "op = 2")
                    (("1" (assert)
                      (("1"
                        (case "EXISTS (t: T): minimizator(T_to_PVS0(t1), t2, t)")
                        (("1" (replace -1)
                          (("1" (inst -3 "nat_to_T(1)")
                            (("1" (expand "member")
                              (("1" (propax) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (replace 1)
                          (("2" (inst -2 "nat_to_T(0)")
                            (("2" (expand "member")
                              (("2" (propax) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (assert)
                      (("2" (case "op = 3")
                        (("1" (assert)
                          (("1"
                            (case "EXISTS (t: T): semantic_rel(T_to_PVS0(t1), t2, t)")
                            (("1" (replace -1)
                              (("1"
                                (inst -3 "nat_to_T(1)")
                                (("1"
                                  (expand "member")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (replace 1)
                              (("2"
                                (inst -2 "nat_to_T(0)")
                                (("2"
                                  (expand "member")
                                  (("2" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2"
                          (case "EXISTS (t: T):
                                  semantic_rel(T_to_PVS0(t1), t2, t)")
                          (("1" (replace -1)
                            (("1" (assert)
                              (("1"
                                (inst -2 "eop2(op - 4)(t1, t2)")
                                (("1"
                                  (expand "member")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert)
                            (("2" (inst -1 "eop2(op - 4)(t1, t2)")
                              (("2"
                                (expand "member")
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nonempty? const-decl "bool" sets nil)
    (eop2x_bool const-decl "bool" pvs0_comp nil)
    (eop2 const-decl "T" pvs0_comp nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minimizator inductive-decl "bool" pvs0_comp nil)
    (member const-decl "bool" sets nil)
    (nat_to_T const-decl "[nat -> T]" pvs0_comp nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-nonempty-type-decl nil pvs0_comp nil)
    (Val type-eq-decl nil pvs0_expr nil)
    (EvalOp1 type-eq-decl nil pvs0_expr nil)
    (EvalOp2 type-eq-decl nil pvs0_expr nil)
    (PVS0Expr type-decl nil PVS0Expr_adt nil)
    (PVS0 type-eq-decl nil pvs0_lang nil)
    (semantic_rel const-decl "bool" pvs0_lang nil)
    (surjective? const-decl "bool" functions nil)
    (T_to_PVS0 const-decl "(surjective?[T, PVS0[T]])" pvs0_comp nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (empty? const-decl "bool" sets nil))
   nil))
 (PVS0_to_T_TCC1 0
  (PVS0_to_T_TCC1-1 nil 3679402784
   ("" (skeep)
    (("" (expand "nonempty?")
      (("" (expand "empty?")
        (("" (typepred "T_to_PVS0")
          (("" (expand "surjective? ")
            (("" (inst -1 "p")
              (("" (skeep)
                (("" (inst?)
                  (("" (expand "member") (("" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nonempty? const-decl "bool" sets nil)
    (T_to_PVS0 const-decl "(surjective?[T, PVS0[T]])" pvs0_comp nil)
    (surjective? const-decl "bool" functions nil)
    (PVS0 type-eq-decl nil pvs0_lang nil)
    (PVS0Expr type-decl nil PVS0Expr_adt nil)
    (EvalOp2 type-eq-decl nil pvs0_expr nil)
    (EvalOp1 type-eq-decl nil pvs0_expr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (Val type-eq-decl nil pvs0_expr nil)
    (T formal-nonempty-type-decl nil pvs0_comp nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (member const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil))
   nil))
 (T_to_PVS0_to_T 0
  (T_to_PVS0_to_T-1 nil 3681568803 ("" (grind) nil nil)
   ((PVS0_to_T const-decl "T" pvs0_comp nil)) shostak))
 (composition 0
  (composition-2 nil 3681564609
   ("" (skeep)
    (("" (prop)
      (("1" (case "determined?(pvs0_sim(f, g), t)")
        (("1" (lemma "mu_terminates")
          (("1" (inst -1 "pvs0_sim(f, g)" "t")
            (("1" (skoletin* -1)
              (("1" (expand "eval")
                (("1" (expand "pvs0_sim" -2)
                  (("1" (expand "eval_expr")
                    (("1" (case-replace "mun=0")
                      (("1" (assert) nil nil)
                       ("2" (assert)
                        (("2" (expand "eval_expr" -2 1)
                          (("2" (expand "eval_expr" -2 1)
                            (("2" (expand "eval_expr" -2 1)
                              (("2"
                                (expand "eval_expr" -2 1)
                                (("2"
                                  (expand "eval_expr" -2 1)
                                  (("2"
                                    (expand "eval_expr" -2 1)
                                    (("2"
                                      (expand "eval_expr" -2 1)
                                      (("2"
                                        (expand "eval_expr" -2 1)
                                        (("2"
                                          (expand "eop2x" -2 1)
                                          (("2"
                                            (expand "eop2x_bool" -2 1)
                                            (("2"
                                              (rewrite
                                               "T_to_PVS0_to_T")
                                              (("2"
                                                (case
                                                 "EXISTS (t_1: T): semantic_rel(g, t, t_1)")
                                                (("1"
                                                  (replace -1)
                                                  (("1"
                                                    (typepred
                                                     "choose({t_1: T | t_1 = nat_to_T(1)})")
                                                    (("1"
                                                      (replaces -1)
                                                      (("1"
                                                        (expand
                                                         "eval_expr"
                                                         -3)
                                                        (("1"
                                                          (expand
                                                           "eval_expr"
                                                           -3
                                                           1)
                                                          (("1"
                                                            (expand
                                                             "eval_expr"
                                                             -3
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "eval_expr"
                                                               -3
                                                               1)
                                                              (("1"
                                                                (expand
                                                                 "eval_expr"
                                                                 -3
                                                                 1)
                                                                (("1"
                                                                  (expand
                                                                   "eval_expr"
                                                                   -3
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "eval_expr"
                                                                     -3
                                                                     1)
                                                                    (("1"
                                                                      (expand
                                                                       "eval_expr"
                                                                       -3
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "eval_expr"
                                                                         -3
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "eval_expr"
                                                                           -3
                                                                           1)
                                                                          (("1"
                                                                            (expand
                                                                             "eval_expr"
                                                                             -3
                                                                             1)
                                                                            (("1"
                                                                              (expand
                                                                               "eval_expr"
                                                                               -3
                                                                               1)
                                                                              (("1"
                                                                                (expand
                                                                                 "eval_expr"
                                                                                 -3
                                                                                 1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "eval_expr"
                                                                                   -3
                                                                                   1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "eval_expr"
                                                                                     -3
                                                                                     1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "eval_expr"
                                                                                       -3
                                                                                       1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "eval_expr"
                                                                                         -3
                                                                                         1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "eop2x"
                                                                                           -3
                                                                                           2)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "eop2x_bool"
                                                                                             -3)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "T_to_PVS0_to_T")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "eop2x"
                                                                                                   -3
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "eop2x_bool"
                                                                                                     -3)
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "T_to_PVS0_to_T")
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "EXISTS (t_1: T):
                                           semantic_rel(f,
                                                        choose
                                                        ({t_1: T
                                                          |
                                                          semantic_rel(g, t, t_1)}),
                                                        t_1)")
                                                                                                        (("1"
                                                                                                          (hide-all-but
                                                                                                           (-1
                                                                                                            -2
                                                                                                            -7
                                                                                                            2))
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "pvs0_sim")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "semantic_rel"
                                                                                                               -3)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "semantic_rel_expr"
                                                                                                                 -3)
                                                                                                                (("1"
                                                                                                                  (skeep
                                                                                                                   -3)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "semantic_rel_expr"
                                                                                                                     -3)
                                                                                                                    (("1"
                                                                                                                      (skeep
                                                                                                                       -3)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "semantic_rel_expr"
                                                                                                                         -3)
                                                                                                                        (("1"
                                                                                                                          (replaces
                                                                                                                           -3)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "semantic_rel_expr"
                                                                                                                             -3)
                                                                                                                            (("1"
                                                                                                                              (replaces
                                                                                                                               -3)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "eop2x"
                                                                                                                                 -3)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "eop2x_bool"
                                                                                                                                   -3)
                                                                                                                                  (("1"
                                                                                                                                    (rewrite
                                                                                                                                     "T_to_PVS0_to_T")
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -2)
                                                                                                                                      (("1"
                                                                                                                                        (typepred
                                                                                                                                         "choose({t_1: T | t_1 = nat_to_T(1)})")
                                                                                                                                        (("1"
                                                                                                                                          (replaces
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (replaces
                                                                                                                                             -3)
                                                                                                                                            (("1"
                                                                                                                                              (case
                                                                                                                                               "nat_to_T(0) /= nat_to_T(1)")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "semantic_rel_expr"
                                                                                                                                                   -4)
                                                                                                                                                  (("1"
                                                                                                                                                    (skeep
                                                                                                                                                     -4)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "semantic_rel_expr"
                                                                                                                                                       -3)
                                                                                                                                                      (("1"
                                                                                                                                                        (skeep
                                                                                                                                                         -3)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "semantic_rel_expr"
                                                                                                                                                           -3)
                                                                                                                                                          (("1"
                                                                                                                                                            (replaces
                                                                                                                                                             -3)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "semantic_rel_expr"
                                                                                                                                                               -3)
                                                                                                                                                              (("1"
                                                                                                                                                                (skeep
                                                                                                                                                                 -3)
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "semantic_rel_expr"
                                                                                                                                                                   -3)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replaces
                                                                                                                                                                     -3)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "semantic_rel_expr"
                                                                                                                                                                       -3)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replaces
                                                                                                                                                                         -3)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "eop2x"
                                                                                                                                                                           -3)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (expand
                                                                                                                                                                             "eop2x_bool"
                                                                                                                                                                             -3)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (rewrite
                                                                                                                                                                               "T_to_PVS0_to_T")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -2)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replaces
                                                                                                                                                                                   -3)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "eop2x"
                                                                                                                                                                                     -3)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "eop2x_bool"
                                                                                                                                                                                       -3)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (rewrite
                                                                                                                                                                                         "T_to_PVS0_to_T")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -1)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (typepred
                                                                                                                                                                                             "choose({t_1: T | t_1 = nat_to_T(1)})")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (replaces
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (replaces
                                                                                                                                                                                                 -3)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "semantic_rel_expr"
                                                                                                                                                                                                     -3)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (skeep
                                                                                                                                                                                                       -3)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "semantic_rel_expr"
                                                                                                                                                                                                         -3)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (replaces
                                                                                                                                                                                                           -3)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "semantic_rel_expr"
                                                                                                                                                                                                             -3)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (skeep
                                                                                                                                                                                                               -3)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "semantic_rel_expr"
                                                                                                                                                                                                                 -3)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (replaces
                                                                                                                                                                                                                   -3)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "semantic_rel_expr"
                                                                                                                                                                                                                     -3)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (replaces
                                                                                                                                                                                                                       -3)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "eop2x"
                                                                                                                                                                                                                         -3)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "eop2x_bool"
                                                                                                                                                                                                                           -3)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (rewrite
                                                                                                                                                                                                                             "T_to_PVS0_to_T")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (replace
                                                                                                                                                                                                                               -2)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (replaces
                                                                                                                                                                                                                                 -3)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                   "eop2x"
                                                                                                                                                                                                                                   -3)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                     "eop2x_bool"
                                                                                                                                                                                                                                     -3)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (rewrite
                                                                                                                                                                                                                                       "T_to_PVS0_to_T")
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (replace
                                                                                                                                                                                                                                         -1)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (typepred
                                                                                                                                                                                                                                           "choose({t_1: T |
                 semantic_rel(f,
                              choose({t_1: T | semantic_rel(g, t, t_1)}),
                              t_1)})")
                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                            (replace
                                                                                                                                                                                                                                             -4
                                                                                                                                                                                                                                             :dir
                                                                                                                                                                                                                                             rl)
                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                              (typepred
                                                                                                                                                                                                                                               "choose({t_1: T | semantic_rel(g, t, t_1)})")
                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                                 2
                                                                                                                                                                                                                                                 "choose({t_1: T | semantic_rel(g, t, t_1)})")
                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                                                                                   (-4
                                                                                                                                                                                                                                                    1))
                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                     "nonempty?")
                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                                       "empty?")
                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                        (skeep)
                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                          (inst
                                                                                                                                                                                                                                                           -1
                                                                                                                                                                                                                                                           "t_1")
                                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                                            (grind)
                                                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                                            (hide-all-but
                                                                                                                                                                                                                                             (-1
                                                                                                                                                                                                                                              1))
                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                                               "nonempty?")
                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                                 "empty?")
                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                  (skeep)
                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                    (inst
                                                                                                                                                                                                                                                     -1
                                                                                                                                                                                                                                                     "t_1")
                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                      (grind)
                                                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (hide-all-but
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (grind)
                                                                                                                                                  (("2"
                                                                                                                                                    (typepred
                                                                                                                                                     "T_to_nat")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "bijective?")
                                                                                                                                                      (("2"
                                                                                                                                                        (prop)
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "injective?")
                                                                                                                                                          (("2"
                                                                                                                                                            (lemma
                                                                                                                                                             "epsilon_ax[T]")
                                                                                                                                                            (("2"
                                                                                                                                                              (inst-cp
                                                                                                                                                               -1
                                                                                                                                                               "lambda(x:T): T_to_nat(x) = 0")
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 -1
                                                                                                                                                                 "lambda(x:T): T_to_nat(x) = 1")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "surjective?")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst-cp
                                                                                                                                                                     -4
                                                                                                                                                                     "0")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       -4
                                                                                                                                                                       "1")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           -4)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -5)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (replace
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (typepred
                                                                                                             "choose({t_1: T | t_1 = nat_to_T(0)})")
                                                                                                            (("1"
                                                                                                              (replaces
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "nat_to_T(1) = nat_to_T(0)")
                                                                                                                (("1"
                                                                                                                  (hide-all-but
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (grind)
                                                                                                                    (("1"
                                                                                                                      (typepred
                                                                                                                       "T_to_nat")
                                                                                                                      (("1"
                                                                                                                        (lemma
                                                                                                                         "epsilon_ax[T]")
                                                                                                                        (("1"
                                                                                                                          (inst-cp
                                                                                                                           -1
                                                                                                                           "lambda(x:T):T_to_nat(x) = 1")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -1
                                                                                                                             "lambda(x:T):T_to_nat(x) = 0")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "bijective?")
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "surjective? ")
                                                                                                                                  (("1"
                                                                                                                                    (inst-cp
                                                                                                                                     -4
                                                                                                                                     "0")
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -4
                                                                                                                                       "1")
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         -4)
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -5)
                                                                                                                                          (("1"
                                                                                                                                            (grind)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "eval_expr"
                                                                                                                     -3)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "eval_expr"
                                                                                                                       -3
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (lemma
                                                                                                                         "mu_min")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "pvs0_sim(f, g)"
                                                                                                                           "t"
                                                                                                                           "mun-1")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "eval")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "pvs0_sim")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "eval_expr"
                                                                                                                                   -3
                                                                                                                                   2)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide-all-but
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "nonempty?")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "empty?")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "nat_to_T(0)")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "member")
                                                                                                                      (("2"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("3"
                                                                                                          (hide-all-but
                                                                                                           (-1
                                                                                                            1))
                                                                                                          (("3"
                                                                                                            (skeep)
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "nonempty?")
                                                                                                              (("3"
                                                                                                                (expand
                                                                                                                 "empty?")
                                                                                                                (("3"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "t_1")
                                                                                                                  (("3"
                                                                                                                    (expand
                                                                                                                     "member")
                                                                                                                    (("3"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (expand
                                                         "nonempty?")
                                                        (("2"
                                                          (expand
                                                           "empty?")
                                                          (("2"
                                                            (inst
                                                             -1
                                                             "nat_to_T(1)")
                                                            (("2"
                                                              (expand
                                                               "member")
                                                              (("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (replace 1)
                                                  (("2"
                                                    (typepred
                                                     "choose({t_1: T | t_1 = nat_to_T(0)})")
                                                    (("1"
                                                      (replaces -1)
                                                      (("1"
                                                        (case
                                                         "nat_to_T(1) = nat_to_T(0)")
                                                        (("1"
                                                          (hide-all-but
                                                           -1)
                                                          (("1"
                                                            (grind)
                                                            (("1"
                                                              (typepred
                                                               "T_to_nat")
                                                              (("1"
                                                                (lemma
                                                                 "epsilon_ax[T]")
                                                                (("1"
                                                                  (inst-cp
                                                                   -1
                                                                   "lambda(x:T): T_to_nat(x) = 1")
                                                                  (("1"
                                                                    (inst
                                                                     -1
                                                                     "lambda(x:T): T_to_nat(x) = 0")
                                                                    (("1"
                                                                      (expand
                                                                       "bijective?")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (expand
                                                                           "surjective?")
                                                                          (("1"
                                                                            (inst-cp
                                                                             -4
                                                                             "0")
                                                                            (("1"
                                                                              (inst
                                                                               -4
                                                                               "1")
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "eval_expr")
                                                            (("2"
                                                              (expand
                                                               "eval_expr"
                                                               -2
                                                               1)
                                                              (("2"
                                                                (expand
                                                                 "eval_expr"
                                                                 -2
                                                                 2)
                                                                (("2"
                                                                  (lemma
                                                                   "mu_min")
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "pvs0_sim(f, g)"
                                                                     "t"
                                                                     "mun-1")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (expand
                                                                         "eval")
                                                                        (("2"
                                                                          (expand
                                                                           "pvs0_sim"
                                                                           1)
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (expand
                                                         "nonempty?")
                                                        (("2"
                                                          (expand
                                                           "empty?")
                                                          (("2"
                                                            (inst
                                                             -1
                                                             "nat_to_T(0)")
                                                            (("2"
                                                              (expand
                                                               "member")
                                                              (("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (expand "determined?") (("2" (inst 1 "v") nil nil)) nil))
        nil)
       ("2" (skeep)
        (("2" (expand "pvs0_sim")
          (("2" (expand "semantic_rel" 1)
            (("2" (expand "semantic_rel_expr" 1)
              (("2" (inst 1 "nat_to_T(1)")
                (("2" (prop)
                  (("1" (expand "semantic_rel_expr" 1)
                    (("1" (expand "semantic_rel_expr" 1)
                      (("1" (inst 1 "PVS0_to_T(g)" "t")
                        (("1" (expand "eop2x" 1)
                          (("1" (expand "eop2x_bool" 1)
                            (("1" (rewrite "T_to_PVS0_to_T")
                              (("1"
                                (case
                                 "EXISTS (t_1: T): semantic_rel(g, t, t_1)")
                                (("1"
                                  (replace -1)
                                  (("1"
                                    (typepred
                                     "choose({t_1: T | t_1 = nat_to_T(1)})")
                                    (("1" (replaces -1) nil nil)
                                     ("2"
                                      (hide-all-but 1)
                                      (("2"
                                        (expand "nonempty?")
                                        (("2"
                                          (expand "empty?")
                                          (("2"
                                            (inst -1 "nat_to_T(1)")
                                            (("2"
                                              (expand "member")
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (inst 1 "w") nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (expand "semantic_rel_expr")
                    (("2" (expand "semantic_rel_expr" 2 1)
                      (("2" (expand "semantic_rel_expr" 2 1)
                        (("2" (expand "semantic_rel_expr" 2 1)
                          (("2" (expand "semantic_rel_expr" 2 1)
                            (("2" (expand "semantic_rel_expr" 2 1)
                              (("2"
                                (inst 2 "nat_to_T(1)")
                                (("2"
                                  (prop)
                                  (("1"
                                    (inst 1 "PVS0_to_T(f)" "_")
                                    (("1"
                                      (expand "eop2x" 1 1)
                                      (("1"
                                        (expand "eop2x_bool" 1 1)
                                        (("1"
                                          (inst
                                           1
                                           "choose({t1: T |
                        
                         semantic_rel(g, t, t1)
                        })")
                                          (("1"
                                            (prop)
                                            (("1"
                                              (inst
                                               1
                                               "PVS0_to_T(g)"
                                               "t")
                                              (("1"
                                                (rewrite
                                                 "T_to_PVS0_to_T")
                                                (("1"
                                                  (case
                                                   "(EXISTS (t_1: T): semantic_rel(g, t, t_1))")
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (inst 1 "w")
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand "eop2x")
                                              (("2"
                                                (expand "eop2x_bool")
                                                (("2"
                                                  (rewrite
                                                   "T_to_PVS0_to_T")
                                                  (("2"
                                                    (case
                                                     " EXISTS (t_1: T):
                      semantic_rel(f,
                                   choose({t1: T
                                           |
                                           semantic_rel(g, t, t1)}),
                                   t_1)")
                                                    (("1"
                                                      (replace -1)
                                                      (("1"
                                                        (typepred
                                                         "choose({t_1: T | t_1 = nat_to_T(1)})")
                                                        (("1"
                                                          (replaces -1)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "nonempty?")
                                                          (("2"
                                                            (expand
                                                             "empty?")
                                                            (("2"
                                                              (inst
                                                               -1
                                                               "nat_to_T(1)")
                                                              (("2"
                                                                (expand
                                                                 "member")
                                                                (("2"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide 2 3)
                                                      (("2"
                                                        (inst 1 "v")
                                                        (("2"
                                                          (typepred
                                                           "choose({t1: T | semantic_rel(g, t, t1)})")
                                                          (("2"
                                                            (lemma
                                                             "deterministic")
                                                            (("2"
                                                              (inst?)
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 "w")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "nonempty?")
                                                                (("2"
                                                                  (expand
                                                                   "empty?")
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "w")
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (expand
                                                       "nonempty?")
                                                      (("3"
                                                        (expand
                                                         "empty?")
                                                        (("3"
                                                          (inst -1 "w")
                                                          (("3"
                                                            (expand
                                                             "member")
                                                            (("3"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "nonempty?")
                                            (("2"
                                              (expand "empty?")
                                              (("2"
                                                (inst -1 "w")
                                                (("2"
                                                  (expand "member")
                                                  (("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (expand "semantic_rel_expr")
                                    (("2"
                                      (expand "semantic_rel_expr" 2 1)
                                      (("2"
                                        (inst
                                         2
                                         "PVS0_to_T(f)"
                                         "choose({t1: T |
                          semantic_rel(g,
                                           t,
                                           t1)
                         })")
                                        (("1"
                                          (expand "semantic_rel_expr")
                                          (("1"
                                            (expand
                                             "semantic_rel_expr")
                                            (("1"
                                              (prop)
                                              (("1"
                                                (inst
                                                 1
                                                 "PVS0_to_T(g)"
                                                 "t")
                                                (("1"
                                                  (expand "eop2x")
                                                  (("1"
                                                    (expand
                                                     "eop2x_bool")
                                                    (("1"
                                                      (rewrite
                                                       "T_to_PVS0_to_T")
                                                      (("1"
                                                        (case
                                                         "(EXISTS (t_1: T): semantic_rel(g, t, t_1))")
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (inst 1 "w")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand "eop2x")
                                                (("2"
                                                  (expand "eop2x_bool")
                                                  (("2"
                                                    (rewrite
                                                     "T_to_PVS0_to_T")
                                                    (("2"
                                                      (case
                                                       "(EXISTS (t_1: T):
                           semantic_rel(f,
                                        choose
                                        ({t1: T | semantic_rel(g, t, t1)}),
                                        t_1))")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (typepred
                                                           "choose({t1: T | semantic_rel(g, t, t1)})")
                                                          (("1"
                                                            (lemma
                                                             "deterministic")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 "w")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (replaces
                                                                     -1)
                                                                    (("1"
                                                                      (typepred
                                                                       "choose({t_1: T | semantic_rel(f, w, t_1)})")
                                                                      (("1"
                                                                        (lemma
                                                                         "deterministic")
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "w"
                                                                           "f"
                                                                           "choose({t_1: T | semantic_rel(f, w, t_1)})"
                                                                           "v")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "nonempty?")
                                                                            (("2"
                                                                              (expand
                                                                               "empty?")
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "v")
                                                                                (("2"
                                                                                  (expand
                                                                                   "member")
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "nonempty?")
                                                                        (("2"
                                                                          (expand
                                                                           "empty?")
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "v")
                                                                            (("2"
                                                                              (expand
                                                                               "member")
                                                                              (("2"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "nonempty?")
                                                                (("2"
                                                                  (expand
                                                                   "empty?")
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "w")
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (typepred
                                                         "choose({t1: T | semantic_rel(g, t, t1)})")
                                                        (("2"
                                                          (lemma
                                                           "deterministic")
                                                          (("2"
                                                            (inst?)
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "w")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   -1)
                                                                  (("1"
                                                                    (inst
                                                                     1
                                                                     "v")
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "nonempty?")
                                                              (("2"
                                                                (expand
                                                                 "empty?")
                                                                (("2"
                                                                  (inst
                                                                   -1
                                                                   "w")
                                                                  (("2"
                                                                    (expand
                                                                     "member")
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (expand
                                                         "nonempty?")
                                                        (("3"
                                                          (expand
                                                           "empty?")
                                                          (("3"
                                                            (inst
                                                             -1
                                                             "w")
                                                            (("3"
                                                              (expand
                                                               "member")
                                                              (("3"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "nonempty?")
                                          (("2"
                                            (expand "empty?")
                                            (("2"
                                              (inst -1 "w")
                                              (("2"
                                                (expand "member")
                                                (("2"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (hide-all-but -1)
                    (("3" (grind)
                      (("3" (typepred "T_to_nat")
                        (("3" (expand "bijective?")
                          (("3" (prop)
                            (("3" (expand "surjective?")
                              (("3"
                                (inst-cp -2 "0")
                                (("3"
                                  (inst -2 "1")
                                  (("3"
                                    (lemma "epsilon_ax[T]")
                                    (("3"
                                      (inst-cp
                                       -1
                                       "lambda(x:T): T_to_nat(x) = 0")
                                      (("3"
                                        (inst
                                         -1
                                         "lambda(x:T): T_to_nat(x) = 1")
                                        (("3"
                                          (replace -4)
                                          (("3"
                                            (replace -5)
                                            (("3" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((mu_terminates formula-decl nil pvs0_lang nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (mu const-decl "posnat" pvs0_lang nil)
    (Maybe type-decl nil Maybe "structures/")
    (some? adt-recognizer-decl "[Maybe -> boolean]" Maybe
     "structures/")
    (eval const-decl "Maybe[Val]" pvs0_lang nil)
    (eop2x const-decl "T" pvs0_comp nil)
    (T_to_PVS0_to_T formula-decl nil pvs0_comp nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (mu_min formula-decl nil pvs0_lang nil)
    (/= const-decl "boolean" notequal nil)
    (empty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (inverse const-decl "D" function_inverse nil)
    (bijective_inverse_is_bijective application-judgement
     "(bijective?[R, D])" function_inverse nil)
    (injective? const-decl "bool" functions nil)
    (pred type-eq-decl nil defined_types nil)
    (surjective? const-decl "bool" functions nil)
    (epsilon_ax formula-decl nil epsilons nil)
    (T_to_nat const-decl "(bijective?[T, nat])" pvs0_comp nil)
    (bijective? const-decl "bool" functions nil)
    (semantic_rel_expr inductive-decl "bool" pvs0_expr nil)
    (nat_to_T const-decl "[nat -> T]" pvs0_comp nil)
    (choose const-decl "(p)" sets nil)
    (nonempty? const-decl "bool" sets nil)
    (set type-eq-decl nil sets nil)
    (semantic_rel const-decl "bool" pvs0_lang nil)
    (eop2x_bool const-decl "bool" pvs0_comp nil)
    (eval_expr_semantic_rel_j rec-application-judgement
     "{myv: Maybe[Val] |
         some?(myv) IMPLIES
          semantic_rel_expr(false_val, eval_op1, eval_op2)
                           (expr, body, env, val(myv))}" pvs0_comp nil)
    (eval_expr_ge_n_j rec-application-judgement "{myv: Maybe[Val] |
         some?(myv) IMPLIES
          n > 0 AND
           (FORALL (m: upfrom(n)):
              myv =
               eval_expr(false_val, eval_op1, eval_op2)
                        (m, expr, body, env))}" pvs0_comp nil)
    (eval_expr def-decl "Maybe[Val]" pvs0_expr nil)
    (f skolem-const-decl "PVS0[T]" pvs0_comp nil)
    (g skolem-const-decl "PVS0[T]" pvs0_comp nil)
    (t skolem-const-decl "T" pvs0_comp nil)
    (T formal-nonempty-type-decl nil pvs0_comp nil)
    (Val type-eq-decl nil pvs0_expr nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (EvalOp1 type-eq-decl nil pvs0_expr nil)
    (EvalOp2 type-eq-decl nil pvs0_expr nil)
    (PVS0Expr type-decl nil PVS0Expr_adt nil)
    (PVS0 type-eq-decl nil pvs0_lang nil)
    (determined? const-decl "bool" pvs0_lang nil)
    (pvs0_sim const-decl "PVS0" pvs0_comp nil)
    (PVS0_to_T const-decl "T" pvs0_comp nil)
    (deterministic formula-decl nil pvs0_lang nil)
    (w skolem-const-decl "T" pvs0_comp nil))
   nil)
  (composition-1 nil 3679413380
   ("" (skeep)
    (("" (prop)
      (("1" (expand "pvs0_comp" -1)
        (("1" (expand "semantic_rel" -1)
          (("1" (expand "semantic_rel_expr" -1)
            (("1" (skeep)
              (("1" (expand "eop2x" -3)
                (("1" (expand "eop2x_bool" -3)
                  (("1" (expand "semantic_rel_expr" -1)
                    (("1" (replaces -1)
                      (("1" (expand "semantic_rel_expr" -1)
                        (("1" (skeep)
                          (("1" (expand "semantic_rel_expr" -1)
                            (("1" (replaces -1)
                              (("1"
                                (expand "semantic_rel_expr" -1)
                                (("1"
                                  (replaces -1)
                                  (("1"
                                    (expand "eop2x" -1)
                                    (("1"
                                      (expand "eop2x_bool")
                                      (("1"
                                        (rewrite "T_to_PVS0_to_T")
                                        (("1"
                                          (rewrite "T_to_PVS0_to_T")
                                          (("1"
                                            (typepred "g")
                                            (("1"
                                              (expand "terminating?")
                                              (("1"
                                                (expand
                                                 "terminates_expr")
                                                (("1"
                                                  (expand
                                                   "semantic_rel"
                                                   -5
                                                   1)
                                                  (("1"
                                                    (inst -4 "t")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (replace -4)
                                                        (("1"
                                                          (typepred
                                                           "f")
                                                          (("1"
                                                            (expand
                                                             "terminating?")
                                                            (("1"
                                                              (expand
                                                               "terminates_expr")
                                                              (("1"
                                                                (inst
                                                                 -4
                                                                 "valarg2")
                                                                (("1"
                                                                  (expand
                                                                   "semantic_rel"
                                                                   -10
                                                                   1)
                                                                  (("1"
                                                                    (replace
                                                                     -4)
                                                                    (("1"
                                                                      (inst
                                                                       1
                                                                       "valarg2")
                                                                      (("1"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (skeep)
        (("2" (expand "pvs0_comp")
          (("2" (expand "semantic_rel" 1)
            (("2" (expand "semantic_rel_expr" 1)
              (("2" (expand "eop2x" 1 3)
                (("2" (expand "eop2x_bool")
                  (("2" (expand "semantic_rel_expr" 1 1)
                    (("2" (inst 1 "PVS0_to_T(f)" "_")
                      (("2" (expand "semantic_rel_expr" 1 1)
                        (("2" (expand "eop2x" 1 3)
                          (("2" (expand "eop2x_bool")
                            (("2" (expand "semantic_rel_expr" 1 1)
                              (("2"
                                (expand "semantic_rel_expr" 1 1)
                                (("2"
                                  (inst 1 "w")
                                  (("2"
                                    (prop)
                                    (("1"
                                      (inst 1 "PVS0_to_T(g)" "t")
                                      (("1"
                                        (rewrite "T_to_PVS0_to_T")
                                        (("1"
                                          (typepred "g")
                                          (("1"
                                            (expand "terminating?")
                                            (("1"
                                              (expand
                                               "terminates_expr")
                                              (("1"
                                                (expand
                                                 "semantic_rel"
                                                 1
                                                 1)
                                                (("1"
                                                  (inst -4 "t")
                                                  (("1"
                                                    (replace -4)
                                                    (("1"
                                                      (hide-all-but
                                                       (-4 -5 1))
                                                      (("1"
                                                        (typepred
                                                         "choose({t_1: T | semantic_rel(g, t, t_1)})")
                                                        (("1"
                                                          (lemma
                                                           "deterministic")
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "t"
                                                             "g"
                                                             "choose({t_1: T | semantic_rel(g, t, t_1)})"
                                                             "w")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "nonempty?"
                                                               1)
                                                              (("2"
                                                                (expand
                                                                 "empty?"
                                                                 -1)
                                                                (("2"
                                                                  (inst
                                                                   -1
                                                                   "w")
                                                                  (("2"
                                                                    (expand
                                                                     "member")
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "nonempty?")
                                                          (("2"
                                                            (expand
                                                             "empty?")
                                                            (("2"
                                                              (inst
                                                               -1
                                                               "w")
                                                              (("2"
                                                                (expand
                                                                 "member")
                                                                (("2"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (rewrite "T_to_PVS0_to_T")
                                      (("2"
                                        (typepred "f")
                                        (("2"
                                          (expand "terminating?")
                                          (("2"
                                            (expand "terminates_expr")
                                            (("2"
                                              (inst -4 "w")
                                              (("2"
                                                (expand
                                                 "semantic_rel"
                                                 1
                                                 1)
                                                (("2"
                                                  (replaces -4)
                                                  (("2"
                                                    (hide-all-but
                                                     (-5 1))
                                                    (("2"
                                                      (typepred
                                                       "choose({t: T | semantic_rel(f, w, t)})")
                                                      (("1"
                                                        (lemma
                                                         "deterministic")
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "w"
                                                           "f"
                                                           "v"
                                                           "choose({t: T | semantic_rel(f, w, t)})")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "nonempty?")
                                                            (("2"
                                                              (expand
                                                               "empty?")
                                                              (("2"
                                                                (inst
                                                                 -1
                                                                 "v")
                                                                (("2"
                                                                  (expand
                                                                   "member")
                                                                  (("2"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "nonempty?")
                                                        (("2"
                                                          (expand
                                                           "empty?")
                                                          (("2"
                                                            (inst
                                                             -1
                                                             "v")
                                                            (("2"
                                                              (expand
                                                               "member")
                                                              (("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((choose const-decl "(p)" sets nil)
    (nonempty? const-decl "bool" sets nil)
    (set type-eq-decl nil sets nil) (empty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (deterministic formula-decl nil pvs0_lang nil)
    (semantic_rel_expr inductive-decl "bool" pvs0_expr nil)
    (Val type-eq-decl nil pvs0_expr nil)
    (EvalOp1 type-eq-decl nil pvs0_expr nil)
    (EvalOp2 type-eq-decl nil pvs0_expr nil)
    (PVS0Expr type-decl nil PVS0Expr_adt nil)
    (PVS0 type-eq-decl nil pvs0_lang nil)
    (terminating? const-decl "bool" pvs0_lang nil)
    (terminates_expr const-decl "bool" pvs0_expr nil)
    (semantic_rel const-decl "bool" pvs0_lang nil))
   shostak))
 (minimizator_is_min 0
  (minimizator_is_min-1 nil 3680546648
   ("" (skeep)
    (("" (lemma "minimizator_induction")
      (("" (insteep -1 :but "P")
        (("" (assert)
          (("" (inst -1 "lambda(i:T): semantic_rel(g, t, nat_to_T(0))")
            (("" (prop)
              (("1" (inst?) (("1" (assert) nil nil)) nil)
               ("2" (hide -1 2)
                (("2" (skeep) (("2" (prop) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((minimizator_induction formula-decl nil pvs0_comp nil)
    (nat_to_T const-decl "[nat -> T]" pvs0_comp nil)
    (semantic_rel const-decl "bool" pvs0_lang nil)
    (T formal-nonempty-type-decl nil pvs0_comp nil)
    (Val type-eq-decl nil pvs0_expr nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (EvalOp1 type-eq-decl nil pvs0_expr nil)
    (EvalOp2 type-eq-decl nil pvs0_expr nil)
    (PVS0Expr type-decl nil PVS0Expr_adt nil)
    (PVS0 type-eq-decl nil pvs0_lang nil))
   shostak))
 (minimizator_is_min2 0
  (minimizator_is_min2-1 nil 3680868943
   ("" (skeep)
    (("" (lemma "minimizator_induction")
      (("" (insteep -1 :but "P")
        (("" (assert)
          ((""
            (inst -1 "lambda(i:T): FORALL (h: T):
        T_to_nat(i) <= T_to_nat(h) AND T_to_nat(h) < T_to_nat(t) =>
         NOT semantic_rel(g, h, nat_to_T(0))")
            (("" (prop)
              (("1" (inst?) (("1" (assert) nil nil)) nil)
               ("2" (hide -1 2)
                (("2" (skeep)
                  (("2" (prop)
                    (("1" (grind) nil nil)
                     ("2" (skeep)
                      (("2" (inst -2 "h")
                        (("2"
                          (case "forall(n: nat): T_to_nat(nat_to_T(n))=n")
                          (("1" (inst?)
                            (("1" (replaces -1)
                              (("1"
                                (assert)
                                (("1"
                                  (case "i_1=h")
                                  (("1" (assert) nil nil)
                                   ("2"
                                    (case
                                     "T_to_nat(i_1) = T_to_nat(h)")
                                    (("1"
                                      (hide-all-but (-1 1))
                                      (("1"
                                        (grind)
                                        (("1"
                                          (typepred "T_to_nat")
                                          (("1"
                                            (expand "bijective?")
                                            (("1"
                                              (prop)
                                              (("1"
                                                (expand "injective?")
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (grind)
                              (("2"
                                (typepred "T_to_nat")
                                (("2"
                                  (lemma "epsilon_ax[T]")
                                  (("2"
                                    (inst
                                     -1
                                     "lambda(x: T): T_to_nat(x) = n!1")
                                    (("2"
                                      (expand "bijective?")
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (expand "surjective?")
                                          (("2"
                                            (inst -3 "n!1")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((minimizator_induction formula-decl nil pvs0_comp nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (surjective? const-decl "bool" functions nil)
    (injective? const-decl "bool" functions nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (epsilon_ax formula-decl nil epsilons nil)
    (pred type-eq-decl nil defined_types nil)
    (bijective_inverse_is_bijective application-judgement
     "(bijective?[R, D])" function_inverse nil)
    (inverse const-decl "D" function_inverse nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nat_to_T const-decl "[nat -> T]" pvs0_comp nil)
    (semantic_rel const-decl "bool" pvs0_lang nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (< const-decl "bool" reals nil)
    (T_to_nat const-decl "(bijective?[T, nat])" pvs0_comp nil)
    (bijective? const-decl "bool" functions nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (T formal-nonempty-type-decl nil pvs0_comp nil)
    (Val type-eq-decl nil pvs0_expr nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (EvalOp1 type-eq-decl nil pvs0_expr nil)
    (EvalOp2 type-eq-decl nil pvs0_expr nil)
    (PVS0Expr type-decl nil PVS0Expr_adt nil)
    (PVS0 type-eq-decl nil pvs0_lang nil))
   shostak))
 (minimization 0
  (minimization-1 nil 3679756049
   ("" (skeep)
    (("" (expand "semantic_rel" -1)
      (("" (expand "exists_min")
        (("" (expand "semantic_rel_expr" -1)
          (("" (skeep)
            (("" (expand "semantic_rel_expr" -1)
              (("" (replaces -1)
                (("" (expand "semantic_rel_expr" -1)
                  (("" (replaces -1)
                    (("" (expand "eop2x" -1)
                      (("" (expand "eop2x_bool" -1)
                        ((""
                          (case "EXISTS (t: T):
                      minimizator(T_to_PVS0(PVS0_to_T(f)), i, t)")
                          (("1" (rewrite "T_to_PVS0_to_T")
                            (("1" (hide -2)
                              (("1"
                                (expand "min")
                                (("1"
                                  (expand "semantic_rel" -2)
                                  (("1"
                                    (expand "semantic_rel_expr" -2)
                                    (("1"
                                      (skeep -2)
                                      (("1"
                                        (expand "semantic_rel_expr" -2)
                                        (("1"
                                          (skeep -2)
                                          (("1"
                                            (expand
                                             "semantic_rel_expr"
                                             -2)
                                            (("1"
                                              (replaces -2)
                                              (("1"
                                                (expand
                                                 "semantic_rel_expr"
                                                 -2)
                                                (("1"
                                                  (replaces -2)
                                                  (("1"
                                                    (expand "eop2x" -2)
                                                    (("1"
                                                      (expand
                                                       "eop2x_bool"
                                                       -2)
                                                      (("1"
                                                        (rewrite
                                                         "T_to_PVS0_to_T")
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (typepred
                                                             "choose({t: T | t = nat_to_T(1)})")
                                                            (("1"
                                                              (replaces
                                                               -1)
                                                              (("1"
                                                                (replaces
                                                                 -2)
                                                                (("1"
                                                                  (split
                                                                   -2)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (expand
                                                                       "semantic_rel_expr"
                                                                       -1)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (expand
                                                                           "semantic_rel_expr"
                                                                           -1)
                                                                          (("1"
                                                                            (replaces
                                                                             -1)
                                                                            (("1"
                                                                              (expand
                                                                               "semantic_rel_expr"
                                                                               -1)
                                                                              (("1"
                                                                                (replaces
                                                                                 -1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "eop2x"
                                                                                   -1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "eop2x_bool")
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "T_to_PVS0_to_T")
                                                                                      (("1"
                                                                                        (replace
                                                                                         -2)
                                                                                        (("1"
                                                                                          (typepred
                                                                                           "choose({t: T | minimizator(f, i, t)})")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -2
                                                                                             :dir
                                                                                             rl)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "minimizator_is_min")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "minimizator_is_min2")
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "nonempty?")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "empty?")
                                                                                              (("2"
                                                                                                (skeep)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "t!1")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "member")
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (hide-all-but
                                                                       -1)
                                                                      (("2"
                                                                        (lemma
                                                                         "epsilon_ax[T]")
                                                                        (("2"
                                                                          (inst-cp
                                                                           -1
                                                                           "lambda(x:T):T_to_nat(x)=0")
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "lambda(x:T):T_to_nat(x)=1")
                                                                            (("2"
                                                                              (typepred
                                                                               "T_to_nat")
                                                                              (("2"
                                                                                (expand
                                                                                 "bijective?")
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "surjective?")
                                                                                    (("2"
                                                                                      (inst-cp
                                                                                       -2
                                                                                       "0")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -2
                                                                                         "1")
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               1)
                                                              (("2"
                                                                (expand
                                                                 "nonempty?")
                                                                (("2"
                                                                  (expand
                                                                   "empty?")
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "nat_to_T(1)")
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (replace 1)
                            (("2"
                              (typepred
                               "choose({t: T | t = nat_to_T(0)})")
                              (("1"
                                (replaces -1)
                                (("1"
                                  (hide-all-but -1)
                                  (("1"
                                    (grind)
                                    (("1"
                                      (typepred "T_to_nat")
                                      (("1"
                                        (lemma "epsilon_ax[T]")
                                        (("1"
                                          (inst-cp
                                           -1
                                           "lambda(x: T): T_to_nat(x) = 1")
                                          (("1"
                                            (inst
                                             -1
                                             "lambda(x: T): T_to_nat(x) = 0")
                                            (("1"
                                              (expand "bijective?")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (expand
                                                   "surjective?")
                                                  (("1"
                                                    (inst-cp -4 "1")
                                                    (("1"
                                                      (inst -4 "0")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (hide-all-but 1)
                                (("2"
                                  (expand "nonempty?")
                                  (("2"
                                    (expand "empty?")
                                    (("2"
                                      (inst -1 "nat_to_T(0)")
                                      (("2"
                                        (expand "member")
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((semantic_rel const-decl "bool" pvs0_lang nil)
    (semantic_rel_expr inductive-decl "bool" pvs0_expr nil)
    (eop2x const-decl "T" pvs0_comp nil)
    (PVS0_to_T const-decl "T" pvs0_comp nil)
    (T_to_PVS0 const-decl "(surjective?[T, PVS0[T]])" pvs0_comp nil)
    (surjective? const-decl "bool" functions nil)
    (minimizator inductive-decl "bool" pvs0_comp nil)
    (PVS0 type-eq-decl nil pvs0_lang nil)
    (PVS0Expr type-decl nil PVS0Expr_adt nil)
    (EvalOp2 type-eq-decl nil pvs0_expr nil)
    (EvalOp1 type-eq-decl nil pvs0_expr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (Val type-eq-decl nil pvs0_expr nil)
    (T formal-nonempty-type-decl nil pvs0_comp nil)
    (minimizator_is_min formula-decl nil pvs0_comp nil)
    (minimizator_is_min2 formula-decl nil pvs0_comp nil)
    (empty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil)
    (T_to_nat const-decl "(bijective?[T, nat])" pvs0_comp nil)
    (bijective? const-decl "bool" functions nil)
    (pred type-eq-decl nil defined_types nil)
    (bijective_inverse_is_bijective application-judgement
     "(bijective?[R, D])" function_inverse nil)
    (inverse const-decl "D" function_inverse nil)
    (injective? const-decl "bool" functions nil)
    (epsilon_ax formula-decl nil epsilons nil)
    (nat_to_T const-decl "[nat -> T]" pvs0_comp nil)
    (choose const-decl "(p)" sets nil)
    (nonempty? const-decl "bool" sets nil)
    (set type-eq-decl nil sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (min const-decl "PVS0" pvs0_comp nil)
    (T_to_PVS0_to_T formula-decl nil pvs0_comp nil)
    (eop2x_bool const-decl "bool" pvs0_comp nil)
    (exists_min const-decl "PVS0" pvs0_comp nil))
   shostak)))

