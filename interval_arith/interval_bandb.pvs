interval_bandb : THEORY
BEGIN

  IMPORTING interval_bexpr,
            structures@array2list[real],
            structures@Maybe,
            reals@real_orders

  IMPORTING gbandb_boolexpr

  IMPORTING structures@branch_and_bound[BoolExpr,IntervalOutput,ProperBox,nat]

  v         : VAR nat
  maxdepth  : VAR nat
  dir,
  eamd      : VAR bool
  expr      : VAR BoolExpr
  box       : VAR ProperBox
  dirvar    : VAR DirVar
  dirvars   : VAR DirVarStack
  M,M1,M2   : VAR IntervalOutput
  out       : VAR Output
  select    : VAR DirVarSelector
  acc       : VAR IntervalOutput

  evaluate(box,expr) : IntervalOutput = 
    LET bet  = BEval(expr,box),
        bef  = IF none?(bet) THEN
                 LET bm = BEval(expr,Midbox(box)) IN
                 IF some?(bm) AND NOT val(bm) THEN bm
                 ELSE bet
                 ENDIF
               ELSE bet
               ENDIF IN
    (#
      answer    := bef,
      counterex := IF some?(bef) AND NOT val(bef) THEN 
                     map(LAMBDA(i:Interval):midpoint(i))(box) 
                   ELSE null ENDIF, 
      error := FALSE
     #)

  interval(maxdepth,select,eamd)(expr,box) : Output =
    b_and_b_id(evaluate,branch,subdivide,denorm,combine,prune_chk,le_chk,ge_chk(eamd,maxdepth),
               select,accumulate,maxdepth,expr,box)

  sound?(box,expr,M) : bool = 
    some?(M`answer)  IMPLIES
      ((val(M`answer) = FORALL (vs:(vars_in_box?(box))): beval(expr,vs,length(box))) AND
       (cons?(counterex(M)) IMPLIES 
          LET vs = list2array(0)(counterex(M)) IN
           vars_in_box?(box)(vs) AND NOT beval(expr,vs,length(box))))

  interval_soundness : THEOREM
    sound?(box,expr,interval(maxdepth,select,eamd)(expr,box)`ans)

END interval_bandb
