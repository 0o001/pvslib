(attachments
 
 strategies4Q

 (defattach |to_iexpr| (expr-str)
   "given a numerical expression returns its IntervalExpr representation"
   (let*((expr (typecheck (extra-get-expr expr-str)))
   	 (vars (ia-complete-vars
   		(enlist-it nil)
   		(ia-get-vars-from-expr expr nil)))
   	 (iae  (ia-interval-expr expr 3 vars)))
     (eval (pvs2cl (pc-typecheck (pc-parse s 'expr))))))
 
 (defattach |to_iexprstr| (expr-str)
   "given a numerical expression returns its IntervalExpr representation"
   (let*((expr (typecheck (extra-get-expr expr-str)))
   	 (vars (ia-complete-vars
   		(enlist-it nil)
   		(ia-get-vars-from-expr expr nil)))
   	 (iae  (ia-interval-expr expr 3 vars)))
     iae))

 (defattach |expr_vars| (expr-str var-ranges)
   "Returns a string representation of the IntervalExpr corresponding to the given expression and the list of ranges ordered by the appearence order of the variables in the expression. "
   (let*((expr (typecheck (extra-get-expr expr-str)))
   	 (vars (ia-complete-vars
   		(enlist-it nil)
   		(ia-get-vars-from-expr expr nil)))
   	 (iae  (ia-interval-expr expr 3 vars))
	 (rgs  (index_sorting var-ranges vars (lambda (a b) (string= a b))))
	 (result `#( ,iae ,rgs )))
     result))

 (defattach |numerical_str| (expr-str ranges maxdepth prec)
  (let*((expr (typecheck (extra-get-expr expr-str)))
	(vars (ia-complete-vars (enlist-it nil)
				(ia-get-vars-from-expr expr nil)))
	(iae  (ia-interval-expr expr 3 vars))
	(stre (format nil
		      "numerical(~a,~a,altdir_maxvar,0)(~a,~a)" maxdepth prec
		      iae ranges))
	(result (evalexpr stre)))
    (format t "~a" result))))
   
