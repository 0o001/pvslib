(attachments
 
 strategies4Q

 (defattach |to_iexpr| (expr-str)
   "given a numerical expression returns its IntervalExpr representation"
   (let*((expr (typecheck (extra-get-expr expr-str)))
   	 (vars (ia-complete-vars
   		(enlist-it nil)
   		(ia-get-vars-from-expr expr nil)))
   	 (iae  (ia-interval-expr expr 3 vars *ia-builtin*)))
     (eval (pvs2cl (pc-typecheck (pc-parse s 'expr))))))
 
 (defattach |to_iexprstr| (expr-str)
   "given a numerical expression returns its IntervalExpr representation"
   (let*((expr (typecheck (extra-get-expr expr-str)))
   	 (vars (ia-complete-vars
   		(enlist-it nil)
   		(ia-get-vars-from-expr expr nil)))
   	 (iae  (ia-interval-expr expr 3 vars *ia-builtin*)))
     iae))

 (defun index_sorting (data indexes test_pred)
  (loop for i in indexes
	collect (loop for l in data
		      ;; when (funcall test_pred (car l) i)
		      ;; return (car(cdr l)))))
		      when (funcall test_pred (aref l 0) i)
		      return (aref l 1))))
 
 (defattach |expr_vars| (expr-str var-ranges)
   "Returns a string representation of the IntervalExpr corresponding to the given expression and the list of ranges ordered by the appearence order of the variables in the expression. "
   (let*((expr (typecheck (extra-get-expr expr-str)))
   	 (vars (ia-complete-vars
   		(enlist-it nil)
   		(ia-get-vars-from-expr expr nil)))
   	 (iae  (ia-interval-expr expr 3 vars *ia-builtin*))
	 (rgs  (index_sorting var-ranges vars (lambda (a b) (string= a b))))
	 (result `#( ,iae ,rgs )))
     result)))
   
