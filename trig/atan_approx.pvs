atan_approx: THEORY
%-----------------------------------------------------------------------------
%      atan_approx by David Lester
%      -----------
%      Defines upper and lower bounds on atan and pi:
%           - atan_lb(a,n) <= atan(a) <= atan_ub(a,n)
%           - pi_lb(a,n) <= pi <= pi_ub(n)
%
%      Additions 2012 by Anthony Narkawicz
%      Alterations 2014 by Aaron Dutle
%
%-----------------------------------------------------------------------------
  BEGIN

  IMPORTING  atan, sincos_def, reals@sqrt_approx, analysis@sqrt_derivative,
             analysis@restriction_cont_fun[posreal,nnreal] 
             %% analysis@integral_chg_var
	     
  m,n           : VAR nat
  x,a             : VAR real
  px,py,px1,px2 : VAR posreal
 
  reduce_fun(x): real = x/(1+sqrt(1+x*x))
  
  reduce_pos: JUDGEMENT reduce_fun(px) HAS_TYPE posreal 

  reduce_n(x, n): RECURSIVE real = 
     IF n=0 THEN x 
     ELSE 
     reduce_n(reduce_fun(x),n-1)
     ENDIF 
     MEASURE n

  reduce_alt(px): {x:posreal | x= reduce_fun(px)} =
    1/(1/px+sqrt(1/sq(px)+1)) 
   
  reduce_n_increasing: LEMMA 
    px<=py IMPLIES reduce_n(px,n) <= reduce_n(py,n) 

   reduce_ub(px,n): {x: posreal | reduce_alt(px)<= x} = 
      1/(1/px+sqrt_lb(1/sq(px)+1,n))

   reduce_ub_increasing: LEMMA 
      px<=py IMPLIES 
      reduce_ub(px,n) <= reduce_ub(py,n)

   reduce_ub_n(px,n,m): RECURSIVE 
     {x:posreal | reduce_n(px,n)<=x} =
     IF n=0 THEN px
     ELSE reduce_ub_n(reduce_ub(px,m),n-1, m)
     ENDIF
     MEASURE n
    
   reduce_ub_n_increasing: LEMMA 
      px<=py IMPLIES 
      reduce_ub_n(px,n,m) <= reduce_ub_n(py,n,m)  

   reduce_lb(px,n): {x:posreal | reduce_alt(px) >= x} = 
      1/(1/px+sqrt_ub(1/sq(px)+1,n ))

   reduce_lb_increasing: LEMMA 
     px<=py IMPLIES 
     reduce_lb(px,n)<=reduce_lb(py,n)

   reduce_lb_n(px,n,m): RECURSIVE 
     {x:posreal | reduce_n(px,n)>=x} =
     IF n=0 THEN px
     ELSE reduce_lb_n(reduce_lb(px,m),n-1, m)
     ENDIF
     MEASURE n
    
   reduce_lb_n_increasing: LEMMA 
      px<=py IMPLIES 
      reduce_lb_n(px,n,m) <= reduce_lb_n(py,n,m)   

  reduce_deriv(x): real = 1/((1+sqrt(1+x*x))*sqrt(1+x*x))

 reduce_fun_prep: LEMMA 
  derivable?(reduce_fun) 
  AND deriv(reduce_fun) = reduce_deriv
  AND continuous?(reduce_deriv)

  %%
  IMPORTING trig_basic
  %%

  reduce_is_equal: LEMMA 
    2*atan(reduce_fun(px)) = atan(px)
  
  reduce_n_is_equal: LEMMA 
    2^n*atan(reduce_n(px,n)) = atan(px)
  
  atan_series_iter(x,n,a): RECURSIVE real = 
     IF n=0 THEN x*a 
     ELSE atan_series_iter(x,n-1,1-(2*n-1)*x*x*a/(2*n+1))
     ENDIF
     MEASURE n 

  atan_series_it(x,n): real = atan_series_iter(x,n,1)

  atan_series_eq: LEMMA atan_series_it(x,n) = atan_series_n(x,n)

  
  atan_pos_le1_ub(n,x): real = atan_series_it(x,2*n)
  atan_pos_le1_lb(n,x): real = atan_series_it(x,2*n+1)

  atan_pos_le1_ub_lt : LEMMA
    0 < x AND x <= 1 IMPLIES
    atan_pos_le1_ub(n+1,x) < atan_pos_le1_ub(n,x)

  atan_pos_le1_lb_lt : LEMMA
    0 < x AND x <= 1 IMPLIES
    atan_pos_le1_lb(n,x) < atan_pos_le1_lb(n+1,x)

  atan_pos_le1_bounds: LEMMA 0 < x AND x <= 1 IMPLIES
    (atan_pos_le1_lb(n,x) < atan(x) AND atan(x) < atan_pos_le1_ub(n,x)) %%

  atan_pos_le1_lb_inc: LEMMA px <= 1 AND n < m =>
                             atan_pos_le1_lb(n,px) < atan_pos_le1_lb(m,px)

  atan_pos_le1_ub_dec: LEMMA px <= 1 AND n < m =>
                             atan_pos_le1_ub(m,px) < atan_pos_le1_ub(n,px)

  pi_lbn(n): real = 4*(4*atan_pos_le1_lb(n,1/5) - atan_pos_le1_ub(n,1/239))
  pi_ubn(n): real = 4*(4*atan_pos_le1_ub(n,1/5) - atan_pos_le1_lb(n,1/239))

  pi_lbn_lt : LEMMA
    pi_lbn(n) < pi_lbn(n+1)

  pi_lbn_LT : LEMMA
    FORALL (k:above(n)):
      pi_lbn(n) < pi_lbn(k)

  pi_bounds: LEMMA pi_lbn(n) < pi AND pi < pi_ubn(n)

  pi_lb_pos : JUDGEMENT
    pi_lbn(n) HAS_TYPE posreal 

  pi_ub_pos : JUDGEMENT
    pi_ubn(n) HAS_TYPE posreal 

  pi_bounds0: LEMMA pi_lbn(0) = 281476/89625 AND    % > 3.1405
                    pi_ubn(0) = 651864872/204778785 % < 3.1837

  pi_lb : posreal = 31415926/10000000

  pi_ub : posreal = 31415927/10000000

  pi_div8_lb: posreal = 31415926/80000000

  pi_div8_ub: posreal = 31415927/80000000

  pi_bounds2: LEMMA pi_lb < pi_lbn(2) AND pi_ubn(2) < pi_ub

  pi_bound : JUDGEMENT pi HAS_TYPE {r:posreal | pi_lb < r AND r < pi_ub}

  pi_lb_inc: LEMMA n < m => pi_lbn(n) < pi_lbn(m)

  pi_ub_dec: LEMMA n < m => pi_ubn(m) < pi_ubn(n)
  
  atan_pos_le1_alt_lb(n,px): real = 
       IF px<5/12 THEN 
          atan_pos_le1_lb(n,px) 
       ELSE  
          max(atan_pos_le1_lb(n,5/12), 
              2*atan_pos_le1_lb(n,max(reduce_lb(px,n),1/5)))
       ENDIF  

  atan_pos_le1_alt_ub(n,px): real = 
       IF px<5/12 THEN 
          atan_pos_le1_ub(n,px) 
       ELSE  
          max(atan_pos_le1_ub(n,5/12), 
              2*atan_pos_le1_ub(n,reduce_ub(px,n)))
       ENDIF

 
  atan_pos_le1__alt_bounds: LEMMA 0 < x AND x <= 1 IMPLIES
    (atan_pos_le1_alt_lb(n,x) < atan(x) AND atan(x) < atan_pos_le1_alt_ub(n,x))
 
  atan_pos_le1_alt_lb_inc: LEMMA px <= 1 AND n < m =>
                             atan_pos_le1_alt_lb(n,px) < atan_pos_le1_alt_lb(m,px)

  atan_pos_le1_alt_ub_dec: LEMMA px <= 1 AND n < m =>
                             atan_pos_le1_alt_ub(m,px) < atan_pos_le1_alt_ub(n,px)

  atan_pos_le1_alt_lb_increasing: LEMMA    
           increasing?(LAMBDA (x:{xx:posreal |xx<=1}): atan_pos_le1_alt_lb(n,x))

  atan_pos_le1_alt_ub_increasing: LEMMA    
           increasing?(LAMBDA (x:{xx:posreal |xx<=1}): atan_pos_le1_alt_ub(n,x))

  atan_pos_le1_alt_ge0: LEMMA atan_pos_le1_alt_lb(n,px)>=0 AND   
                              atan_pos_le1_alt_ub(n,px)>=0 

  atan_pos_lb(n,px): real = IF px <= 1 THEN atan_pos_le1_alt_lb(n,px) 
                            ELSE max(atan_pos_le1_alt_lb(n,1),pi_lbn(n)/2 - atan_pos_le1_alt_ub(n,1/px)) ENDIF

  atan_pos_ub(n,px): real = IF px <= 1 THEN atan_pos_le1_alt_ub(n,px) ELSE
                            max(atan_pos_le1_alt_ub(n,1),pi_ubn(n)/2 - atan_pos_le1_alt_lb(n,1/px)) ENDIF

  atan_pos_bounds: LEMMA 0 < x IMPLIES
    (atan_pos_lb(n,x) < atan(x) AND atan(x) < atan_pos_ub(n,x))

  atan_pos_lb_increasing: LEMMA    
           increasing?(LAMBDA (x:posreal): atan_pos_lb(n,x))

  atan_pos_ub_increasing: LEMMA    
           increasing?(LAMBDA (x:posreal): atan_pos_ub(n,x))

  atan_pos_lb_inc: LEMMA n < m =>
                             atan_pos_lb(n,px) <= atan_pos_lb(m,px)

  atan_pos_ub_dec: LEMMA n < m =>
                             atan_pos_ub(m,px) <= atan_pos_ub(n,px)

  atan_pos_ge0: LEMMA atan_pos_lb(n,px)>=0 AND   
                      atan_pos_ub(n,px)>=0

  atan_lb(x,n): real = IF    x > 0 THEN atan_pos_lb(n,x)
                       ELSIF x = 0 THEN 0
                                   ELSE -atan_pos_ub(n,-x) ENDIF

  atan_ub(x,n): real = IF    x > 0 THEN atan_pos_ub(n,x)
                       ELSIF x = 0 THEN 0
                                   ELSE -atan_pos_lb(n,-x) ENDIF

  atan_bounds: LEMMA atan_lb(x,n) <= atan(x) AND atan(x) <= atan_ub(x,n)

  atan_lb_increasing: LEMMA increasing?(LAMBDA (x:real): atan_lb(x,n))

  atan_ub_increasing: LEMMA increasing?(LAMBDA (x:real): atan_ub(x,n))

  atan_lb_inc: LEMMA n <= m => atan_lb(x,n) <= atan_lb(x,m)

  atan_ub_dec: LEMMA n <= m => atan_ub(x,m) <= atan_ub(x,n)

  pi_lb_pi: LEMMA pi-pi_lbn(n) <= 16*((1/5)^(4*n+5)/(4*n+5)) +
                                  4*((1/239)^(4*n+3)/(4*n+3))

  pi_ub_pi: LEMMA pi_ubn(n)-pi <= 16*((1/5)^(4*n+3)/(4*n+3)) +
                                  4*((1/239)^(4*n+5)/(4*n+5))

  pi_lb_diff: LEMMA pi_lbn(n+1)-pi_lbn(n) = 
                    16*(1/5)^(4*n+5)*(1/(4*n+5) - 1/(25*(4*n+7))) +
                    4*(1/239)^(4*n+3)*(1/(4*n+3) - 1/(57121*(4*n+5)))

  pi_ub_diff: LEMMA pi_ubn(n)-pi_ubn(n+1) = 
                   16*(((1/5)^(3+4*n))*(1/(3+4*n)))
		   -16*(((1/5)^(5+4*n))*(1/(5+4*n)))
		   +4*(((1/239)^(5+4*n))*(1/(5+4*n)))
		   -4*(((1/239)^(7+4*n))*(1/(7+4*n)))

  pi_lb_diff_bounds: LEMMA n>=5 IMPLIES
    LET xdiff = pi_lbn(n+1)-pi_lbn(n) IN
    14*(1/5)^(5*n+5) < xdiff AND xdiff < (116/25)*(1/5)^(4*n+3)

  pi_lb_quot_bounds: LEMMA 
    LET xquot = pi_lbn(n)/pi_lbn(n+1) IN
    1-14.5*(1/5)^(4*n+3) <= xquot AND xquot <= 1

  pi_ub_diff_bounds: LEMMA n>=5 IMPLIES
    LET xdiff = pi_ubn(n)-pi_ubn(n+1) IN
    32*(1/5)^(5*n+3) < xdiff AND xdiff < (7/5)*(1/5)^(4*n+3)

  pi_ub_quot_bounds: LEMMA 
    LET xquot = pi_ubn(n+1)/pi_ubn(n) IN
    1-(9/5)*(1/5)^(4*n+3) <= xquot AND xquot <= 1

  

  END atan_approx
