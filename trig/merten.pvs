merten: THEORY
BEGIN
   IMPORTING series@power_series, reals@sigma, reals@real_fun_ops, reals@sigma_nat, series@series,
   	     series@absconv_series,reals@sigma_swap[nat]

  a,b: VAR sequence[real]

  i,j,k,m,n,N,M: VAR nat

  Np: VAR posnat

  epsil: VAR posreal


  series_prod(a,b)(i): real = sigma(0,i,LAMBDA (j:nat): IF j<=i THEN a(j)*b(i-j) ELSE 0 ENDIF)

  merten_init1: LEMMA
    series(series_prod(a,b))(n) = sigma(0,n,LAMBDA (i): IF i<=n THEN a(n-i)*series(b)(i) ELSE 0 ENDIF)

  merten_init2: LEMMA FORALL (B:real):
    series(series_prod(a,b))(n) = series(a)(n)*B+
      sigma(0,n,LAMBDA (i): IF i<=n THEN 
        a(n-i)*(series(b)(i)-B) ELSE 0 ENDIF)

  merten_init3: LEMMA
    (conv_series?(abs(a)) AND conv_series?(b)) IMPLIES
    EXISTS (N:posnat): FORALL (n): n>=N IMPLIES
    abs(series(b)(n)-inf_sum(b)) <= epsil/(3*(inf_sum(abs(a))+1))

  merten_init4: LEMMA
    (conv_series?(abs(a)) AND conv_series?(b)) IMPLIES
    FORALL (Np): EXISTS (M:nat,X:posreal): FORALL (n): n>=M IMPLIES
    FORALL (i): i<=Np IMPLIES (abs(series(b)(i)-inf_sum(b))<X AND
    abs(a(n))<= epsil/(3*Np*(X+1)))

  merten_init5: LEMMA
    (conv_series?(abs(a)) AND conv_series?(b)) IMPLIES
    EXISTS (L:posnat): FORALL (n): n>=L IMPLIES
    abs(series(a)(n)-inf_sum(a))<= epsil/(3*(abs(inf_sum(b))+1))

  merten1: LEMMA (conv_series?(abs(a)) AND conv_series?(b))
    IMPLIES conv_series?(series_prod(a,b)) AND
      inf_sum(series_prod(a,b))=
      inf_sum(a)*inf_sum(b)

  merten: LEMMA (conv_series?(a) AND conv_series?(b)) AND
    (conv_series?(abs(a)) OR conv_series?(abs(b)))
    IMPLIES conv_series?(series_prod(a,b)) AND
      inf_sum(series_prod(a,b))=
      inf_sum(a)*inf_sum(b)

END merten

