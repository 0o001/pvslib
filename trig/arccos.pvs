arccos: THEORY
%----------------------------------------------------------------------------
% Interface to Inverse Trig Functions (Connecting Multiple Definitions)
%
% NOTE: We begin we smaller domains where the derivatives are defined
%
%  sin, cos <- tan <- atan (inverse) <- asin, acos
%        \
%         \-- arc_sin (inverse), arc_cos(inverse)  <- arcsin, arccos  == asin, acos
%                  (-1,1)                              [-1,1]
%
% Rick Butler 6/23/17
%----------------------------------------------------------------------------
BEGIN
   IMPORTING trig_basic, trig_ineq,
             derivative_props[posreal_lt_pi]

  a: VAR real

  cos_restrict_range: LEMMA
     FORALL (x: posreal_lt_pi): -1 < cos(x) AND cos(x) < 1;


%  -------------------- cos_restrict --------------------

  cos_restrict(x: posreal_lt_pi): MACRO real_abs_lt1 = cos(x)

  cos_restrict_inj  : LEMMA injective?(cos_restrict)
  cos_restrict_surj : LEMMA surjective?[posreal_lt_pi, real_abs_lt1](cos_restrict)
  cos_restrict_bij  : LEMMA bijective?(cos_restrict)

  del_neigh_lem2: LEMMA del_neigh_all?[posreal_lt_pi]

  deriv_cos_restrict: LEMMA derivable?[posreal_lt_pi](cos_restrict) AND
                             deriv[posreal_lt_pi](cos_restrict) 
                                  = (LAMBDA (x: posreal_lt_pi): -sin(x))


%  -------------------- Arc_Cos --------------------

  IMPORTING analysis@derivative_inverse

  arc_cos_exists: LEMMA
      EXISTS (f: [y: real_abs_lt1 -> {x: posreal_lt_pi | y = cos(x)}]): TRUE

  arc_cos(y: real_abs_lt1): {x: posreal_lt_pi | y = cos(x)} 

  arc_cos_inverse: LEMMA arc_cos = inverse(cos_restrict)

  cos_arc_cos: LEMMA (FORALL (y: real_abs_lt1): cos(arc_cos(y)) = y)
  arc_cos_cos: LEMMA (FORALL (x: posreal_lt_pi): arc_cos(cos(x)) = x)

  arc_cos_derivable: LEMMA derivable?[real_abs_lt1](arc_cos) 

  arc_cos_range_lt: LEMMA FORALL (x: real_abs_lt1): 
      0 < arc_cos(x) AND arc_cos(x) < pi

  deriv_arc_cos_prep: LEMMA FORALL (x: real_abs_lt1): 1 - sq(x) > 0

  deriv_arc_cos_fun: THEOREM derivable?[real_abs_lt1](arc_cos) AND
                          deriv[real_abs_lt1](arc_cos) = (LAMBDA (x:real_abs_lt1): -1/sqrt(1-sq(x)))  
  arc_cos_continuous: LEMMA continuous?[real_abs_lt1](arc_cos)

  arc_cos_bij: LEMMA bijective?[real_abs_lt1,posreal_lt_pi](arc_cos)

  arccos(y: real_abs_le1): nnreal_le_pi =
      IF y = -1 THEN pi ELSIF y < 1 THEN arc_cos(y) ELSE 0 ENDIF

  arc_cos_0: LEMMA arc_cos(0) = pi / 2
 
END arccos
