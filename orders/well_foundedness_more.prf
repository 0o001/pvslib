(well_foundedness_more
 (lt_wf 0
  (lt_wf-1 nil 3821027871
   ("" (skeep)
    (("" (typepred "wf")
      (("" (rewrite "no_infinite_descending_sequence[M]")
        (("" (rewrite "no_infinite_descending_sequence[T]")
          (("" (expand "empty?")
            (("" (expand "member")
              (("" (expand "descending?")
                (("" (skeep)
                  (("" (expand "lt")
                    (("" (inst -1 "LAMBDA(i:nat):m(x(i))") nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((well_founded? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (M formal-type-decl nil well_foundedness_more nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (MeasureFun type-eq-decl nil well_foundedness_more nil)
    (lt const-decl "bool" well_foundedness_more nil)
    (T formal-type-decl nil well_foundedness_more nil)
    (member const-decl "bool" sets nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (sequence type-eq-decl nil sequences nil)
    (descending? const-decl "bool" monotone_sequences nil)
    (empty? const-decl "bool" sets nil)
    (no_infinite_descending_sequence formula-decl nil well_foundedness
     nil))
   nil
   (lt_wf subtype
    "well_foundedness_more.lt(well_foundedness_more.m, well_foundedness_more.wf)"
    "(orders[well_foundedness_more.T].well_founded?)"))))

