cbound_cpr_latZone: THEORY
BEGIN

  IMPORTING PRECISA@precIOsa

  r_Y0, r_Y1: real

  x_0_aeexpr: string = "aebound_div(((59 * r_Y0) - (60 * r_Y1)), aebound_sub((59 * r_Y0), aebound_mul(59, 0, r_Y0, 0), (60 * r_Y1), aebound_mul(60, 0, r_Y1, 0)), 131072, 0)"
  j_0_aeexpr: string = "aebound_flr(((((59 * r_Y0) - (60 * r_Y1)) / 131072) + 0.5), aebound_add((((59 * r_Y0) - (60 * r_Y1)) / 131072), aebound_div(((59 * r_Y0) - (60 * r_Y1)), aebound_sub((59 * r_Y0), aebound_mul(59, 0, r_Y0, 00), (60 * r_Y1), aebound_mul(60, 0, r_Y1, 0)), 131072, 0), 0.5, 0))"
  
  % LET ranges = (: [|-100,100|], [|-600,600|], [|-100,100|], [|-600,600|] :),
  %     maxdepth = 20,
  %     prec = 0.00001 IN
  % numerical_str(tau_1_aeexpr,ranges,maxdepth,prec);

  x_0(var_ranges: list[[string,ProperInterval]],maxdepth:nat,prec:posreal): void =
    numerical_str(x_0_aeexpr,var_ranges,maxdepth,prec);
  j_0(var_ranges: list[[string,ProperInterval]],maxdepth:nat,prec:posreal): void =
    numerical_str(j_0_aeexpr,var_ranges,maxdepth,prec);

  test(var_ranges: list[[string,ProperInterval]],maxdepth:nat,prec:posreal,display_prec: nat):void =
    set_precision(display_prec) &
    printf("x_0 = ") & x_0(var_ranges,maxdepth,prec) &
    printf("j_0 = ") & j_0(var_ranges,maxdepth,prec) 

  main(maxdepth:nat,prec:posreal,display_prec: nat):void =
    test((: ("r_Y0",[|0,131072|]), ("r_Y1",[|0,131072|]) :), maxdepth,prec,display_prec)

%% Runs:
%%
%% <PVSio> LET maxdepth=10,prec=0.00000000001 IN main(maxdepth,prec,30);
%% x_0 = lb: 0 & ub: 0.00000667572021484375 & md: 10 & sp: 18  
%% j_0 = lb: 1.0000000894069671630859375 & ub: 1.00001049041748046875 & md: 5 & sp: 6  

END cbound_cpr_latZone
