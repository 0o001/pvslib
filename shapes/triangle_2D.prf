(triangle_2D
 (perimeter_TCC1 0
  (perimeter_TCC1-1 nil 3814549071
   ("" (skeep*)
    (("" (typepred "points(T)")
      (("" (lemma "non_collinear_different_points")
        (("" (insteep)
          (("" (expand "non_collinear?")
            (("" (replaces (-3 -4 -5) :dir rl)
              (("" (assert)
                (("" (flatten)
                  (("" (case "norm(AB) > 0")
                    (("1" (assert) nil nil)
                     ("2" (replaces -1)
                      (("2" (hide-all-but (1 2))
                        (("2" (lemma "norm_eq_0")
                          (("2" (inst?)
                            (("2" (assert)
                              (("2" (rewrite "sub_eq_zero") nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((points adt-accessor-decl "[Triangle_2D -> NonCollinearPoints]"
     triangle_2D nil)
    (NonCollinearPoints type-eq-decl nil angle_2D nil)
    (Triangle_2D type-decl nil triangle_2D nil)
    (non_collinear? const-decl "bool" angle_2D nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (norm_eq_0 formula-decl nil vectors_2D vectors)
    (sub_eq_zero formula-decl nil vectors_2D vectors)
    (- const-decl "Vector" vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (> const-decl "bool" reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (non_collinear_different_points formula-decl nil angle_2D nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (perimeter subtype
    "(number_fields.+)((number_fields.+)(vectors_2D.norm(triangle_2D.AB), vectors_2D.norm(triangle_2D.BC)), vectors_2D.norm(triangle_2D.CA))"
    "posreal")))
 (area_TCC1 0
  (area_TCC1-1 nil 3814549071
   ("" (skeep*)
    (("" (typepred "points(T)") (("" (grind) nil nil)) nil)) nil)
   ((points adt-accessor-decl "[Triangle_2D -> NonCollinearPoints]"
     triangle_2D nil)
    (NonCollinearPoints type-eq-decl nil angle_2D nil)
    (Triangle_2D type-decl nil triangle_2D nil)
    (non_collinear? const-decl "bool" angle_2D nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (det const-decl "real" det_2D vectors)
    (- const-decl "Vector" vectors_2D vectors)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   nil
   (area subtype
    "number_fields./(real_defs.abs(det_2D.det(triangle_2D.AB, triangle_2D.AC)), 2)"
    "posreal")))
 (vertices_TCC1 0
  (vertices_TCC1-1 nil 3814549071 ("" (grind) nil nil)
   ((- const-decl "Vector" vectors_2D vectors)
    (det const-decl "real" det_2D vectors)
    (length def-decl "nat" list_props nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (vertices subtype
    "(: triangle_2D.A, triangle_2D.B, triangle_2D.C :)"
    "listn[Vect2].listn(3)")))
 (vertices_TCC2 0
  (vertices_TCC2-1 nil 3814549071 ("" (grind) nil nil)
   ((- const-decl "Vector" vectors_2D vectors)
    (det const-decl "real" det_2D vectors)
    (length def-decl "nat" list_props nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (vertices subtype
    "(: triangle_2D.A, triangle_2D.C, triangle_2D.B :)"
    "listn[Vect2].listn(3)")))
 (vertices_of_triangle_TCC1 0
  (vertices_of_triangle_TCC1-1 nil 3814549071
   ("" (subtype-tcc) nil nil)
   ((real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (det const-decl "real" det_2D vectors)
    (- const-decl "Vector" vectors_2D vectors))
   nil (vertices_of_triangle subtype "0" "below[length[Vect2](l)]")))
 (vertices_of_triangle_TCC2 0
  (vertices_of_triangle_TCC2-1 nil 3814549071
   ("" (subtype-tcc) nil nil)
   ((real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (det const-decl "real" det_2D vectors)
    (- const-decl "Vector" vectors_2D vectors))
   nil (vertices_of_triangle subtype "1" "below[length[Vect2](l)]")))
 (vertices_of_triangle_TCC3 0
  (vertices_of_triangle_TCC3-1 nil 3814549071
   ("" (subtype-tcc) nil nil)
   ((real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (det const-decl "real" det_2D vectors)
    (- const-decl "Vector" vectors_2D vectors))
   nil (vertices_of_triangle subtype "2" "below[length[Vect2](l)]")))
 (vertices_of_triangle 0
  (vertices_of_triangle-1 nil 3814549129
   ("" (skeep) (("" (typepred "points(T)") (("" (grind) nil nil)) nil))
    nil)
   ((points adt-accessor-decl "[Triangle_2D -> NonCollinearPoints]"
     triangle_2D nil)
    (NonCollinearPoints type-eq-decl nil angle_2D nil)
    (Triangle_2D type-decl nil triangle_2D nil)
    (non_collinear? const-decl "bool" angle_2D nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (nth def-decl "T" list_props nil)
    (vertices const-decl "listn[Vect2](3)" triangle_2D nil)
    (det const-decl "real" det_2D vectors)
    (- const-decl "Vector" vectors_2D vectors)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   shostak))
 (def_points_in_triangle 0
  (def_points_in_triangle-1 nil 3814549132 ("" (grind) nil nil)
   ((- const-decl "Vector" vectors_2D vectors)
    (det const-decl "real" det_2D vectors)
    (point_in? const-decl "bool" triangle_2D nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   shostak))
 (def_points_not_striclty_in_triangle 0
  (def_points_not_striclty_in_triangle-1 nil 3814549133
   ("" (grind) nil nil)
   ((- const-decl "Vector" vectors_2D vectors)
    (det const-decl "real" det_2D vectors)
    (point_strictly_in? const-decl "bool" triangle_2D nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   shostak))
 (test_acute_TCC1 0
  (test_acute_TCC1-1 nil 3814549071 ("" (subtype-tcc) nil nil)
   ((minus_odd_is_odd application-judgement "odd_int" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (non_collinear? const-decl "bool" angle_2D nil)
    (det const-decl "real" det_2D vectors)
    (- const-decl "Vector" vectors_2D vectors))
   nil
   (test_acute subtype
    "((# x := (number_fields.-)(3), y := 0 #), (# x := 1, y := 3 #), (# x := 0, y := (number_fields.-)(2) #))"
    "NonCollinearPoints")))
 (test_acute_TCC2 0
  (test_acute_TCC2-1 nil 3814549071 ("" (subtype-tcc) nil nil)
   ((- const-decl "Vector" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sign3 const-decl "Sign3" sign3 reals)
    (type_by_angle const-decl "int" triangle_2D nil)
    (acute? const-decl "bool" triangle_2D nil)
    (det const-decl "real" det_2D vectors)
    (non_collinear? const-decl "bool" angle_2D nil)
    (odd_minus_even_is_odd application-judgement "odd_int" integers
     nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil))
   nil
   (test_acute subtype
    "((# x := 1, y := 3 #), (# x := 4, y := 1 #), (# x := 0, y := (number_fields.-)(2) #))"
    "NonCollinearPoints")))
 (test_acute 0
  (test_acute-1 nil 3814549134 ("" (grind) nil nil)
   ((even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (odd_minus_even_is_odd application-judgement "odd_int" integers
     nil)
    (acute? const-decl "bool" triangle_2D nil)
    (type_by_angle const-decl "int" triangle_2D nil)
    (sign3 const-decl "Sign3" sign3 reals)
    (* const-decl "real" vectors_2D vectors)
    (- const-decl "Vector" vectors_2D vectors))
   shostak))
 (test_obtuse_TCC1 0
  (test_obtuse_TCC1-1 nil 3814549071 ("" (subtype-tcc) nil nil)
   ((minus_odd_is_odd application-judgement "odd_int" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (non_collinear? const-decl "bool" angle_2D nil)
    (det const-decl "real" det_2D vectors)
    (- const-decl "Vector" vectors_2D vectors))
   nil
   (test_obtuse subtype
    "((# x := (number_fields.-)(1), y := 0 #), (# x := 1, y := 3 #), (# x := 0, y := (number_fields.-)(2) #))"
    "NonCollinearPoints")))
 (test_obtuse_TCC2 0
  (test_obtuse_TCC2-1 nil 3814549071 ("" (subtype-tcc) nil nil)
   ((- const-decl "Vector" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sign3 const-decl "Sign3" sign3 reals)
    (type_by_angle const-decl "int" triangle_2D nil)
    (obtuse? const-decl "bool" triangle_2D nil)
    (det const-decl "real" det_2D vectors)
    (non_collinear? const-decl "bool" angle_2D nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (odd_minus_even_is_odd application-judgement "odd_int" integers
     nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil))
   nil
   (test_obtuse subtype
    "((# x := 1, y := 3 #), (# x := 2, y := 1 #), (# x := 0, y := (number_fields.-)(2) #))"
    "NonCollinearPoints")))
 (test_obtuse 0
  (test_obtuse-1 nil 3814549135 ("" (grind) nil nil)
   ((even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (- const-decl "Vector" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sign3 const-decl "Sign3" sign3 reals)
    (type_by_angle const-decl "int" triangle_2D nil)
    (obtuse? const-decl "bool" triangle_2D nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (odd_minus_even_is_odd application-judgement "odd_int" integers
     nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil))
   shostak))
 (test_isosceles_TCC1 0
  (test_isosceles_TCC1-1 nil 3814549071 ("" (subtype-tcc) nil nil)
   ((- const-decl "Vector" vectors_2D vectors)
    (det const-decl "real" det_2D vectors)
    (non_collinear? const-decl "bool" angle_2D nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil))
   nil
   (test_isosceles subtype
    "((# x := (number_fields.-)(2), y := 0 #), (# x := 0, y := 3 #), (# x := 2, y := 0 #))"
    "NonCollinearPoints")))
 (test_isosceles_TCC2 0
  (test_isosceles_TCC2-1 nil 3814549071 ("" (subtype-tcc) nil nil)
   ((minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (non_collinear? const-decl "bool" angle_2D nil)
    (det const-decl "real" det_2D vectors)
    (isosceles? const-decl "bool" triangle_2D nil)
    (type_by_side const-decl "int" triangle_2D nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (- const-decl "Vector" vectors_2D vectors))
   nil
   (test_isosceles subtype
    "((# x := 1, y := 1 #), (# x := 1, y := 3 #), (# x := 3, y := 1 #))"
    "NonCollinearPoints")))
 (test_isosceles 0
  (test_isosceles-1 nil 3814549135 ("" (grind) nil nil)
   ((even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (isosceles? const-decl "bool" triangle_2D nil)
    (type_by_side const-decl "int" triangle_2D nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (- const-decl "Vector" vectors_2D vectors))
   shostak))
 (test_scalene_TCC1 0
  (test_scalene_TCC1-1 nil 3814549071 ("" (subtype-tcc) nil nil)
   ((minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (odd_minus_even_is_odd application-judgement "odd_int" integers
     nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (non_collinear? const-decl "bool" angle_2D nil)
    (det const-decl "real" det_2D vectors)
    (- const-decl "Vector" vectors_2D vectors))
   nil
   (test_scalene subtype
    "((# x := (number_fields.-)(2), y := 0 #), (# x := 1, y := 3 #), (# x := 0, y := (number_fields.-)(2) #))"
    "NonCollinearPoints")))
 (test_scalene_TCC2 0
  (test_scalene_TCC2-1 nil 3814549071 ("" (subtype-tcc) nil nil)
   ((minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (odd_minus_even_is_odd application-judgement "odd_int" integers
     nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (non_collinear? const-decl "bool" angle_2D nil)
    (det const-decl "real" det_2D vectors)
    (scalene? const-decl "bool" triangle_2D nil)
    (type_by_side const-decl "int" triangle_2D nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (- const-decl "Vector" vectors_2D vectors))
   nil
   (test_scalene subtype
    "((# x := 1, y := 3 #), (# x := 0, y := (number_fields.-)(2) #), (# x := 3, y := 1 #))"
    "NonCollinearPoints")))
 (test_scalene 0
  (test_scalene-1 nil 3814549136 ("" (grind) nil nil)
   ((even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (- const-decl "Vector" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (type_by_side const-decl "int" triangle_2D nil)
    (scalene? const-decl "bool" triangle_2D nil)
    (odd_minus_even_is_odd application-judgement "odd_int" integers
     nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil))
   shostak))
 (test_triangle_cw_TCC1 0
  (test_triangle_cw_TCC1-1 nil 3814549071 ("" (subtype-tcc) nil nil)
   ((even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (even_plus_even_is_even application-judgement "even_int" integers
     nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (int_times_even_is_even application-judgement "even_int" integers
     nil)
    (nzint_times_nzint_is_nzint application-judgement "nzint" integers
     nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (- const-decl "Vector" vectors_2D vectors)
    (det const-decl "real" det_2D vectors)
    (non_collinear? const-decl "bool" angle_2D nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (test_triangle_cw subtype
    "(triangle_2D.A, triangle_2D.B, triangle_2D.C)"
    "NonCollinearPoints")))
 (test_is_right_cw 0
  (test_is_right_cw-1 nil 3814549136 ("" (grind) nil nil)
   ((test_triangle_cw const-decl "Triangle_2D" triangle_2D nil)
    (- const-decl "Vector" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sign3 const-decl "Sign3" sign3 reals)
    (type_by_angle const-decl "int" triangle_2D nil)
    (right? const-decl "bool" triangle_2D nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (odd_minus_even_is_odd application-judgement "odd_int" integers
     nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil))
   shostak))
 (test_area_cw 0
  (test_area_cw-1 nil 3814549137 ("" (grind) nil nil)
   ((minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (odd_minus_even_is_odd application-judgement "odd_int" integers
     nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (area const-decl "posreal" triangle_2D nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (det const-decl "real" det_2D vectors)
    (- const-decl "Vector" vectors_2D vectors)
    (test_triangle_cw const-decl "Triangle_2D" triangle_2D nil))
   shostak))
 (test_vertices_cw 0
  (test_vertices_cw-1 nil 3814549138 ("" (grind) nil nil)
   ((test_triangle_cw const-decl "Triangle_2D" triangle_2D nil)
    (- const-decl "Vector" vectors_2D vectors)
    (det const-decl "real" det_2D vectors)
    (vertices const-decl "listn[Vect2](3)" triangle_2D nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (odd_minus_even_is_odd application-judgement "odd_int" integers
     nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil))
   shostak))
 (test_Q_in_T_cw 0
  (test_Q_in_T_cw-1 nil 3814549138 ("" (grind) nil nil)
   ((real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (test_triangle_cw const-decl "Triangle_2D" triangle_2D nil)
    (point_strictly_in? const-decl "bool" triangle_2D nil)
    (point_in? const-decl "bool" triangle_2D nil)
    (det const-decl "real" det_2D vectors)
    (- const-decl "Vector" vectors_2D vectors))
   shostak))
 (test_triangle_ccw_TCC1 0
  (test_triangle_ccw_TCC1-1 nil 3814549071 ("" (subtype-tcc) nil nil)
   ((even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (even_plus_odd_is_odd application-judgement "odd_int" integers nil)
    (posint_times_posint_is_posint application-judgement "posint"
     integers nil)
    (odd_times_odd_is_odd application-judgement "odd_int" integers nil)
    (nzint_times_nzint_is_nzint application-judgement "nzint" integers
     nil)
    (int_times_even_is_even application-judgement "even_int" integers
     nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (- const-decl "Vector" vectors_2D vectors)
    (det const-decl "real" det_2D vectors)
    (non_collinear? const-decl "bool" angle_2D nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (test_triangle_ccw subtype
    "(triangle_2D.A, triangle_2D.B, triangle_2D.C)"
    "NonCollinearPoints")))
 (test_is_right_ccw 0
  (test_is_right_ccw-1 nil 3814549139 ("" (grind) nil nil)
   ((test_triangle_ccw const-decl "Triangle_2D" triangle_2D nil)
    (- const-decl "Vector" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sign3 const-decl "Sign3" sign3 reals)
    (type_by_angle const-decl "int" triangle_2D nil)
    (right? const-decl "bool" triangle_2D nil)
    (odd_minus_even_is_odd application-judgement "odd_int" integers
     nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil))
   shostak))
 (test_area_ccw 0
  (test_area_ccw-1 nil 3814549140 ("" (grind) nil nil)
   ((test_triangle_ccw const-decl "Triangle_2D" triangle_2D nil)
    (- const-decl "Vector" vectors_2D vectors)
    (det const-decl "real" det_2D vectors)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (area const-decl "posreal" triangle_2D nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil))
   shostak))
 (test_vertices_ccw 0
  (test_vertices_ccw-1 nil 3814549141 ("" (grind) nil nil)
   ((test_triangle_ccw const-decl "Triangle_2D" triangle_2D nil)
    (- const-decl "Vector" vectors_2D vectors)
    (det const-decl "real" det_2D vectors)
    (vertices const-decl "listn[Vect2](3)" triangle_2D nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (odd_minus_even_is_odd application-judgement "odd_int" integers
     nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_even_is_even application-judgement "even_int" integers nil))
   shostak))
 (test_Q_in_T_ccw 0
  (test_Q_in_T_ccw-1 nil 3814549141 ("" (grind) nil nil)
   ((real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_times_even_is_even application-judgement "even_int" integers
     nil)
    (nzint_times_nzint_is_nzint application-judgement "nzint" integers
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (test_triangle_ccw const-decl "Triangle_2D" triangle_2D nil)
    (point_strictly_in? const-decl "bool" triangle_2D nil)
    (point_in? const-decl "bool" triangle_2D nil)
    (det const-decl "real" det_2D vectors)
    (- const-decl "Vector" vectors_2D vectors))
   shostak)))

