rectangle_2D : THEORY
BEGIN

  IMPORTING parallelogram_2D
   
  % A rectangle is a parallelogram originated by right angle ACB
  rectangle?(P:Parallelogram_2D) : bool =
    LET (A,C,B) = points(P),
        CA = A-C,
        CB = B-C IN 
      CA*CB = 0

  Rectangle_2D : TYPE = (rectangle?)

  % An arbitrarly oriented rectangle of sides AB, BC, CD, DA is made
  % from points A,B and signed height h, where  A /= B, h /= 0, |AB| = |CD|, 
  % and |h| = |BC| = |DA|.
  % If h is positive, the point D is to the right of the side AB
  % If h is negative, the point D is to the left of the side AB
  mk_rectangle(A:Vect2,B:{B : Vect2 | B /= A},h:nzreal) : Rectangle_2D =
    LET L = h*^(perpR(B-A)),
        D = A+L IN
      mk_parallelogram(B,A,D)

  IMPORTING reals@abs_lems

  perimeter_of_rectangle : LEMMA
    FORALL (A:Vect2,B:{B : Vect2 | B /= A},h:nzreal) :
      LET R = mk_rectangle(A,B,h) IN
        perimeter(R) = 2*(abs(h)+norm(B-A))

  area_of_rectangle : LEMMA
    FORALL (A:Vect2,B:{B : Vect2 | B /= A},h:nzreal) :
      LET R = mk_rectangle(A,B,h) IN
        area(R) = abs(h)*norm(B-A)

  % Vertices A,B,C,D of a rectangle satisfy
  % CD is perpendicular to DA, DA is perpendicular to AB
  vertices_of_rectangle: LEMMA
    FORALL (R:Rectangle_2D,clockwise:bool) : 
      LET l  = vertices(R,clockwise),
          P1 = nth(l,0),
          P2 = nth(l,1),
          P3 = nth(l,2),
          P4 = nth(l,3),
          P12 = P2-P1,
          P23 = P3-P2,
          P34 = P4-P3,
          P41 = P1-P4 IN
        P12*P23 = 0 AND P23*P34 = 0 AND P34*P41 = 0 AND P41*P12 = 0

  % Test rectangle 
   test_rectangle_cw : Rectangle_2D = 
    LET A : Vect2 = (0,-2),
        B : Vect2 = (-2,0),
        D : Vect2 = (3,1) IN
      mk_parallelogram(B,A,D) 

  test_mk_rectangle_cw : LEMMA
    LET A : Vect2 = (0,-2),
        B : Vect2 = (-2,0),
        h = 3*sqrt(2) IN
    vertices(mk_rectangle(A,B,h),TRUE) = vertices(test_rectangle_cw,TRUE) 

  test_area_rectangle_cw : LEMMA
    area(test_rectangle_cw) = 12

  test_vertices_rectangle_cw : LEMMA
    vertices(test_rectangle_cw,TRUE) = (: mk_vect2(0,-2), mk_vect2(-2,0), mk_vect2(1,3), mk_vect2(3,1) :) AND
    vertices(test_rectangle_cw,FALSE) = (: mk_vect2(0,-2), mk_vect2(3,1), mk_vect2(1,3), mk_vect2(-2,0) :)
  
  test_Q_in_R_cw : LEMMA
    LET R  = test_rectangle_cw,
        Q1 : Vect2 = (0,0),
        Q2 : Vect2 = (-1,1),
        Q3 : Vect2 = (3,2) IN
      point_in?(R)(Q1) AND
      point_in?(R)(Q2) AND
      NOT point_in?(R)(Q3) AND
      NOT point_strictly_in?(R)(Q2)

  test_rectangle_ccw : Rectangle_2D = 
    LET A : Vect2 = (0,-2),
        B : Vect2 = (3,1),
        D : Vect2 = (-2,0) IN
      mk_parallelogram(B,A,D) 

  test_mk_rectangle_ccw : LEMMA
    LET A : Vect2 = (0,-2),
        B : Vect2 = (3,1),
        h = -2*sqrt(2) IN
    vertices(mk_rectangle(A,B,h),FALSE) = vertices(test_rectangle_ccw,FALSE) 

  test_area_rectangle_ccw : LEMMA
    area(test_rectangle_ccw) = 12

  test_vertices_rectangle_ccw : LEMMA
    vertices(test_rectangle_ccw,FALSE) = (: mk_vect2(0,-2), mk_vect2(3,1), mk_vect2(1,3), mk_vect2(-2,0) :) AND
    vertices(test_rectangle_ccw,TRUE) = (: mk_vect2(0,-2), mk_vect2(-2,0), mk_vect2(1,3), mk_vect2(3,1) :) 
  
  test_Q_in_R_ccw : LEMMA
    LET R  = test_rectangle_ccw,
        Q1 : Vect2 = (2,1),
        Q2 : Vect2 = (2,2),
        Q3 : Vect2 = (3,3) IN
      point_in?(R)(Q1) AND
      point_in?(R)(Q2) AND
      NOT point_in?(R)(Q3) AND
      NOT point_strictly_in?(R)(Q2)
            
END rectangle_2D
