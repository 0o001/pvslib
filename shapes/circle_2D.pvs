circle_2D : THEORY
  BEGIN 

    IMPORTING circular_segment_2D

    circle_2D?(CS:CircularSegment_2D) : bool =
      LET (A,C,B) = arc(CS) IN
        A = B

    Circle_2D : TYPE = (circle_2D?)    
  
    mk_circle(C:Vect2,R:posreal) : Circle_2D =
      LET A = C+(R,0) IN
        mk_circular_segment(A,C,A)

    % Function returns true if point Q is inside circle CC (including borders) 
    point_in?(CC:Circle_2D)(Q:Vect2) : bool =
      LET (C,A,B) = arc(CC) IN
        sqv(Q-C) <= sqv(A-C)

    % Function returns true if point Q is inside circle CC (excluding borders) 
    point_stricly_in?(CC:Circle_2D)(Q:Vect2) : bool =
      LET (C,A,B) = arc(CC) IN
        sqv(Q-C) < sqv(A-C)

  END circle_2D