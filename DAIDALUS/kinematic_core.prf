(kinematic_core
 (defcore_TCC1 0
  (defcore_TCC1-1 nil 3647640597 ("" (subtype-tcc) nil nil) nil nil))
 (defcore_TCC2 0
  (defcore_TCC2-1 nil 3647640597 ("" (subtype-tcc) nil nil) nil nil))
 (defcore_TCC3 0
  (defcore_TCC3-1 nil 3647640597 ("" (subtype-tcc) nil nil)
   ((gen_most_urg const-decl "int" los_and_cd nil)) nil))
 (defcore_TCC4 0
  (defcore_TCC4-1 nil 3647640597 ("" (subtype-tcc) nil nil) nil nil))
 (update_from_param_all_TCC1 0
  (update_from_param_all_TCC1-1 nil 3647640597
   ("" (subtype-tcc) nil nil) nil nil))
 (update_from_param_all_TCC2 0
  (update_from_param_all_TCC2-1 nil 3647640597
   ("" (subtype-tcc) nil nil) nil nil))
 (update_from_param_all_TCC3 0
  (update_from_param_all_TCC3-1 nil 3647640597
   ("" (subtype-tcc) nil nil) nil nil))
 (update_from_param_all_TCC4 0
  (update_from_param_all_TCC4-1 nil 3647640597
   ("" (subtype-tcc) nil nil) nil nil))
 (update_from_param_all_TCC5 0
  (update_from_param_all_TCC5-1 nil 3647640597
   ("" (subtype-tcc) nil nil) nil nil))
 (update_from_param_all_TCC6 0
  (update_from_param_all_TCC6-1 nil 3647640597
   ("" (subtype-tcc) nil nil) nil nil))
 (update_from_param_all_TCC7 0
  (update_from_param_all_TCC7-1 nil 3647640597
   ("" (subtype-tcc) nil nil) nil nil))
 (update_from_param_all_TCC8 0
  (update_from_param_all_TCC8-1 nil 3647640597
   ("" (subtype-tcc) nil nil) nil nil))
 (update_from_param_all_TCC9 0
  (update_from_param_all_TCC9-1 nil 3647640597
   ("" (subtype-tcc) nil nil) nil nil))
 (update_from_param_all_TCC10 0
  (update_from_param_all_TCC10-1 nil 3647640597
   ("" (subtype-tcc) nil nil) nil nil))
 (update_from_param_all_TCC11 0
  (update_from_param_all_TCC11-1 nil 3647640597
   ("" (subtype-tcc) nil nil) nil nil))
 (update_from_param_all_TCC12 0
  (update_from_param_all_TCC12-1 nil 3647640597
   ("" (subtype-tcc) nil nil) nil nil))
 (update_from_param_all_TCC13 0
  (update_from_param_all_TCC13-1 nil 3647640597
   ("" (subtype-tcc) nil nil) nil nil))
 (update_from_param_all_TCC14 0
  (update_from_param_all_TCC14-1 nil 3647640597
   ("" (subtype-tcc) nil nil) nil nil))
 (update_from_param_all_TCC15 0
  (update_from_param_all_TCC15-1 nil 3647640597
   ("" (subtype-tcc) nil nil) nil nil))
 (update_from_param_all_TCC16 0
  (update_from_param_all_TCC16-1 nil 3647640597
   ("" (subtype-tcc) nil nil) nil nil))
 (update_from_param_all_TCC17 0
  (update_from_param_all_TCC17-1 nil 3647640597
   ("" (subtype-tcc) nil nil) nil nil))
 (update_from_param_all_TCC18 0
  (update_from_param_all_TCC18-1 nil 3647640597
   ("" (subtype-tcc) nil nil) nil nil))
 (update_from_param_all_TCC19 0
  (update_from_param_all_TCC19-1 nil 3647640597
   ("" (subtype-tcc) nil nil) nil nil))
 (delay?_TCC1 0
  (delay?_TCC1-1 nil 3647640597 ("" (subtype-tcc) nil nil) nil nil))
 (delay?_TCC2 0
  (delay?_TCC2-1 nil 3647640597 ("" (subtype-tcc) nil nil) nil nil))
 (delay?_TCC3 0
  (delay?_TCC3-1 nil 3647640597 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (string type-eq-decl nil strings nil)
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (Aircraft type-eq-decl nil int_bands nil)
    (list type-decl nil list_adt nil)
    (length def-decl "nat" list_props nil)
    (listn type-eq-decl nil listn "structures/")
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (delay?_TCC4 0
  (delay?_TCC4-1 nil 3647640597 ("" (termination-tcc) nil nil) nil
   nil))
 (delay?_TCC5 0
  (delay?_TCC5-1 nil 3647640597 ("" (subtype-tcc) nil nil) nil nil))
 (update_delay_TCC1 0
  (update_delay_TCC1-1 nil 3647640597 ("" (subtype-tcc) nil nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (cd2bool const-decl "bool" los_and_cd nil)
    (delay? const-decl "bool" kinematic_core nil))
   nil))
 (update_add_traffic_TCC1 0
  (update_add_traffic_TCC1-1 nil 3647640597 ("" (subtype-tcc) nil nil)
   nil nil))
 (update_add_traffic_TCC2 0
  (update_add_traffic_TCC2-1 nil 3647640597
   ("" (termination-tcc) nil nil)
   ((length def-decl "nat" list_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (update_omega_TCC1 0
  (update_omega_TCC1-1 nil 3647640597 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (gs const-decl "nnreal" definitions "ACCoRD/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (< const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (pi const-decl "posreal" atan "trig_fnd/")
    (ConfDetector type-eq-decl nil los_and_cd nil)
    (Aircraft type-eq-decl nil int_bands nil)
    (Traffic type-eq-decl nil int_bands nil)
    (Sign type-eq-decl nil sign "reals/")
    (MostUrgent type-eq-decl nil los_and_cd nil)
    (Core type-eq-decl nil kinematic_core nil)
    (* const-decl "real" vectors_2D "vectors/")
    (sqv const-decl "nnreal" vectors_2D "vectors/")
    (norm const-decl "nnreal" vectors_2D "vectors/")
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (/= const-decl "boolean" notequal nil)
    (Tan? const-decl "bool" trig_basic "trig/"))
   nil))
 (update_omega_TCC2 0
  (update_omega_TCC2-1 nil 3647640597 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (< const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (pi const-decl "posreal" atan "trig_fnd/")
    (ConfDetector type-eq-decl nil los_and_cd nil)
    (Aircraft type-eq-decl nil int_bands nil)
    (Traffic type-eq-decl nil int_bands nil)
    (Sign type-eq-decl nil sign "reals/")
    (MostUrgent type-eq-decl nil los_and_cd nil)
    (Core type-eq-decl nil kinematic_core nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (/= const-decl "boolean" notequal nil)
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (* const-decl "real" vectors_2D "vectors/")
    (sqv const-decl "nnreal" vectors_2D "vectors/")
    (norm const-decl "nnreal" vectors_2D "vectors/")
    (gs const-decl "nnreal" definitions "ACCoRD/")
    (real_times_real_is_real application-judgement "real" reals nil))
   nil))
 (update_omega_TCC3 0
  (update_omega_TCC3-1 nil 3647640597 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (< const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (pi const-decl "posreal" atan "trig_fnd/")
    (ConfDetector type-eq-decl nil los_and_cd nil)
    (Aircraft type-eq-decl nil int_bands nil)
    (Traffic type-eq-decl nil int_bands nil)
    (Sign type-eq-decl nil sign "reals/")
    (MostUrgent type-eq-decl nil los_and_cd nil)
    (Core type-eq-decl nil kinematic_core nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (/= const-decl "boolean" notequal nil)
    (tan const-decl "real" trig_basic "trig/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (* const-decl "real" vectors_2D "vectors/")
    (sqv const-decl "nnreal" vectors_2D "vectors/")
    (norm const-decl "nnreal" vectors_2D "vectors/")
    (gs const-decl "nnreal" definitions "ACCoRD/")
    (real_times_real_is_real application-judgement "real" reals nil)
    (sin_range application-judgement "trig_range" trig_basic "trig/")
    (cos_range application-judgement "trig_range" trig_basic "trig/")
    (real_div_nzreal_is_real application-judgement "real" reals nil))
   nil))
 (update_RA_thr_TCC1 0
  (update_RA_thr_TCC1-1 nil 3647640597 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (update_RA_thr_TCC2 0
  (update_RA_thr_TCC2-1 nil 3647640597 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (update_RA_thr_TCC3 0
  (update_RA_thr_TCC3-1 nil 3647640597 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (update_RA_thr_TCC4 0
  (update_RA_thr_TCC4-1 nil 3647640597 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (/= const-decl "boolean" notequal nil)
    (ft const-decl "posreal" units "TCASII/"))
   nil))
 (update_RA_thr_TCC5 0
  (update_RA_thr_TCC5-1 nil 3647640597 ("" (subtype-tcc) nil nil) nil
   nil))
 (update_RA_thr_TCC6 0
  (update_RA_thr_TCC6-1 nil 3647640597 ("" (subtype-tcc) nil nil) nil
   nil))
 (update_RA_thr_TCC7 0
  (update_RA_thr_TCC7-1 nil 3647640597 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (/= const-decl "boolean" notequal nil))
   nil))
 (update_RA_thr_TCC8 0
  (update_RA_thr_TCC8-1 nil 3647640597 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (/= const-decl "boolean" notequal nil)
    (ft const-decl "posreal" units "TCASII/"))
   nil))
 (update_RA_thr_TCC9 0
  (update_RA_thr_TCC9-1 nil 3647640597 ("" (subtype-tcc) nil nil) nil
   nil))
 (update_RA_thr_TCC10 0
  (update_RA_thr_TCC10-1 nil 3647640597 ("" (subtype-tcc) nil nil) nil
   nil)))

