(polygon_miter_sequences
 (rightward_crossing_index_TCC1 0
  (rightward_crossing_index_TCC1-2 nil 3874129022
   ("" (skeep)
    (("" (use "leftmost_crossing_on_perim")
      (("" (use "perimeter_find_index_any")
        (("" (ground)
          (("" (typepred "find_index_any(G, q)")
            (("" (assert) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (rightward_crossing_index subtype "polygon_miter_sequences.i"
    "naturalnumbers.below(polygon_miter_sequences.G`num_vertices)"))
  (rightward_crossing_index_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (rightward_crossing_index subtype "polygon_miter_sequences.i"
    "naturalnumbers.below(polygon_miter_sequences.G`num_vertices)")))
 (rightward_crossing_index_reverse_TCC1 0
  (rightward_crossing_index_reverse_TCC1-2 nil 3874129022
   ("" (skeep) (("" (use "reverse_polygon_is_simple") nil nil)) nil)
   nil shostak
   (rightward_crossing_index_reverse subtype
    "reverse_polygons.reverse_polygon(polygon_miter_sequences.G)"
    "simple_polygon_2d"))
  (rightward_crossing_index_reverse_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (rightward_crossing_index_reverse subtype
    "reverse_polygons.reverse_polygon(polygon_miter_sequences.G)"
    "simple_polygon_2d")))
 (rightward_crossing_index_reverse_TCC2 0
  (rightward_crossing_index_reverse_TCC2-2 nil 3874129022
   ("" (skeep)
    (("" (rewrite "reverse_has_rightward_crossings" :dir rl) nil nil))
    nil)
   nil shostak
   (rightward_crossing_index_reverse subtype
    "polygon_miter_sequences.p"
    "(rightward_crossings.has_rightward_crossings?(reverse_polygons.reverse_polygon(polygon_miter_sequences.G)))"))
  (rightward_crossing_index_reverse_TCC2-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (rightward_crossing_index_reverse subtype
    "polygon_miter_sequences.p"
    "(rightward_crossings.has_rightward_crossings?(reverse_polygons.reverse_polygon(polygon_miter_sequences.G)))")))
 (rightward_crossing_index_reverse 0
  (rightward_crossing_index_reverse-1 nil 3874129022
   ("" (skeep)
    (("" (name-replace "q" "leftmost_intersection_point(G, p)")
      (("" (use "leftmost_crossing_on_perim")
        (("" (replace -2)
          (("" (use "perimeter_find_index_any")
            (("" (assert)
              (("" (expand "rightward_crossing_index")
                (("" (rewrite "leftmost_crossing_same_in_reverse")
                  (("" (replace -3)
                    (("" (apply (repeat (lift-if)))
                      (("" (ground)
                        (("1" (expand "vertex_crossing_index")
                          (("1"
                            (name-replace "i" "find_index_any(G, q)"
                             :hide? nil)
                            (("1"
                              (name-replace "j"
                               "find_index_any(reverse_polygon(G), q)"
                               :hide? nil)
                              (("1"
                                (expand "edges_of_polygon")
                                (("1"
                                  (replace -3 -1)
                                  (("1"
                                    (rewrite
                                     "find_index_any_vertex_reverse")
                                    (("1"
                                      (equate
                                       "prev_index(reverse_polygon(G), j)"
                                       "prev_index(G, j)")
                                      (("1"
                                        (equate
                                         "next_index(reverse_polygon(G), j)"
                                         "next_index(G, j)")
                                        (("1"
                                          (expand "reverse_polygon" 1)
                                          (("1"
                                            (replace -1 :dir rl)
                                            (("1"
                                              (rewrite
                                               "next_index_rev_index_prev"
                                               :dir
                                               rl)
                                              (("1"
                                                (rewrite
                                                 "rev_rev_polygon_index")
                                                (("1"
                                                  (rewrite
                                                   "next_index_rev_index_prev")
                                                  (("1"
                                                    (rewrite
                                                     "rev_rev_polygon_index")
                                                    (("1"
                                                      (apply
                                                       (repeat
                                                        (lift-if)))
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (rewrite*
                                                           "prev_index_rev_index_next")
                                                          (("1"
                                                            (equate
                                                             "cross(G`vertices(prev_index(G, i)) - G`vertices(i),
                                     G`vertices(next_index(G, i)) - G`vertices(i))"
                                                             "-cross(G`vertices(next_index(G, i)) - G`vertices(i),
                                     G`vertices(prev_index(G, i)) - G`vertices(i))")
                                                            (("1"
                                                              (real-props)
                                                              (("1"
                                                                (ground)
                                                                (("1"
                                                                  (use
                                                                   "only_one_edge_adj_leftmost_is_horiz")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (inst
                                                                       +
                                                                       "edges_of_polygon(G)(prev_index(G, i))"
                                                                       "edges_of_polygon(G)(i)"
                                                                       "i")
                                                                      (("1"
                                                                        (expand
                                                                         "edges_of_polygon")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (use
                                                                   "edge_y_above_or_below_imp_cross_neq_0")
                                                                  (("2"
                                                                    (ground)
                                                                    (("2"
                                                                      (rewrite
                                                                       "cross_antisymmetric"
                                                                       1)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (use
                                                                   "edge_y_above_or_below_imp_cross_neq_0")
                                                                  (("3"
                                                                    (ground)
                                                                    (("3"
                                                                      (rewrite
                                                                       "cross_antisymmetric"
                                                                       1)
                                                                      (("3"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("4"
                                                                  (use
                                                                   "edge_y_above_or_below_imp_cross_neq_0")
                                                                  (("4"
                                                                    (ground)
                                                                    (("4"
                                                                      (rewrite
                                                                       "cross_antisymmetric"
                                                                       1)
                                                                      (("4"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               1)
                                                              (("2"
                                                                (rewrite
                                                                 "cross_antisymmetric")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide-all-but 1)
                                          (("2" (grind) nil nil))
                                          nil)
                                         ("3" (assert) nil nil)
                                         ("4" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (hide-all-but 1)
                                        (("2" (grind) nil nil))
                                        nil)
                                       ("3" (assert) nil nil)
                                       ("4" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide 2)
                          (("2" (use "point_on_find_index_segment")
                            (("2" (ground)
                              (("2"
                                (use "find_index_any_reverse")
                                (("2"
                                  (expand "segment_endpoint?")
                                  (("2"
                                    (ground)
                                    (("1"
                                      (replace -1 :hide? t)
                                      (("1"
                                        (expand "reverse_polygon" -2 1)
                                        (("1"
                                          (rewrite
                                           "prev_index_rev_index_next")
                                          (("1"
                                            (rewrite
                                             "rev_rev_polygon_index")
                                            nil
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (expand "edges_of_polygon")
                                      (("2" (propax) nil nil))
                                      nil)
                                     ("3"
                                      (expand "edges_of_polygon")
                                      (("3" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("3" (use "find_index_any_vertex_reverse")
                          (("3" (replace -2 2)
                            (("3" (replace -1)
                              (("3"
                                (expand "reverse_polygon" 2)
                                (("3"
                                  (rewrite "rev_rev_polygon_index")
                                  nil
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("4" (rewrite "find_index_any_reverse")
                          (("1" (use "point_on_find_index_segment")
                            (("1" (assert) nil nil)) nil)
                           ("2" (expand "segment_endpoint?")
                            (("2" (expand "edges_of_polygon")
                              (("2"
                                (expand "reverse_polygon" 3 1)
                                (("2"
                                  (replace -1 3)
                                  (("2"
                                    (rewrite
                                     "find_index_any_vertex_reverse")
                                    (("2"
                                      (rewrite "rev_rev_polygon_index")
                                      nil
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (crossed_edge_rising_or_falling 0
  (crossed_edge_rising_or_falling-1 nil 3874129022
   ("" (skeep)
    (("" (skoletin)
      (("" (flatten)
        (("" (expand "segment_rising?")
          (("" (expand "segment_falling?")
            (("" (expand "rightward_crossing_index")
              (("" (lift-if)
                ((""
                  (name-replace "q" "leftmost_intersection_point(G, p)"
                   :hide? nil)
                  ((""
                    (name-replace "i" "find_index_any(G, q)" :hide?
                     nil)
                    (("" (case "i >= 0")
                      (("1" (ground)
                        (("1"
                          (name-replace*
                           ("s" "edges_of_polygon(G)(prev_index(G, i))"
                            "h" "edges_of_polygon(G)(i)"))
                          (("1" (case-replace "h`p1 = q & s`p2 = q")
                            (("1" (flatten)
                              (("1"
                                (expand "vertex_crossing_index")
                                (("1"
                                  (lift-if)
                                  (("1"
                                    (replace -3)
                                    (("1"
                                      (replace -4)
                                      (("1"
                                        (ground)
                                        (("1"
                                          (use
                                           "only_one_edge_adj_leftmost_is_horiz")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (inst + "s" "h" "i")
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "edges_of_polygon")
                              (("2" (assert) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (use "leftmost_is_horiz_edge_endpoint")
                          (("2" (assert)
                            (("2" (replace -5)
                              (("2"
                                (use "point_on_find_index_segment")
                                (("2"
                                  (assert)
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (expand "segment_endpoint?")
                                        (("2"
                                          (expand "edges_of_polygon")
                                          (("2" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (use "perimeter_find_index_any")
                        (("2" (use "leftmost_crossing_on_perim")
                          (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (leftmost_intersection_on_crossed_edge 0
  (leftmost_intersection_on_crossed_edge-1 nil 3874129022
   ("" (skeep)
    (("" (skoletin*)
      (("" (expand "rightward_crossing_index")
        (("" (lift-if)
          (("" (replace -1 :dir rl)
            (("" (use "leftmost_crossing_on_perim")
              (("" (use "perimeter_find_index_any")
                (("" (assert)
                  (("" (replace -3 :dir rl)
                    (("" (use "point_on_find_index_segment")
                      (("" (assert)
                        (("" (flatten)
                          (("" (ground)
                            ((""
                              (name-replace "i" "find_index_any(G, q)")
                              ((""
                                (expand "vertex_crossing_index")
                                ((""
                                  (apply (repeat (lift-if)))
                                  ((""
                                    (equate
                                     "edges_of_polygon(G)(i)`p1"
                                     "G`vertices(i)")
                                    (("1"
                                      (equate
                                       "edges_of_polygon(G)(i)`p2"
                                       "G`vertices(next_index(G,i))")
                                      (("1"
                                        (case
                                         "point_on_segment?(q, edges_of_polygon(G)(prev_index(G, i)))")
                                        (("1" (ground) nil nil)
                                         ("2"
                                          (hide-all-but (-1 1))
                                          (("2"
                                            (replace -1)
                                            (("2"
                                              (expand
                                               "edges_of_polygon")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (expand
                                                   "point_on_segment?")
                                                  (("2"
                                                    (inst + "1")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (rewrite
                                                         "next_prev_is_original")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("3" (propax) nil nil))
                                        nil)
                                       ("2"
                                        (hide-all-but 1)
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide-all-but 1)
                                      (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (crossing_within_falling_edge_y_range 0
  (crossing_within_falling_edge_y_range-1 nil 3874129022
   ("" (skeep)
    (("" (assert)
      (("" (flatten)
        (("" (use "leftmost_intersection_on_crossed_edge")
          (("" (assert)
            ((""
              (name-replace*
               ("i" "rightward_crossing_index(G, p)" "q"
                "leftmost_intersection_point(G, p)" "e"
                "edges_of_polygon(G)(i)"))
              (("" (case "p`y = q`y")
                (("1" (rewrite "point_on_segment_has_offset")
                  (("1" (skeep)
                    (("1" (replace -5 -1)
                      (("1" (replace -1 1)
                        (("1" (expand "segment_falling?")
                          (("1" (hide-all-but (-6 -7 1))
                            (("1" (grind)
                              (("1"
                                (cancel-add 1)
                                (("1" (cancel-by 1 "d") nil nil))
                                nil)
                               ("2"
                                (move-terms 1 r 1)
                                (("2"
                                  (factor 1 r)
                                  (("2"
                                    (name-replace
                                     "ey"
                                     "e`p2`y - e`p1`y")
                                    (("2"
                                      (mult-cases 1 :mult-op 1*)
                                      (("2"
                                        (expand "ey")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (expand "leftmost_intersection_point")
                  (("2" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (cross_horiz_seq_with_falling_edge_pos 0
  (cross_horiz_seq_with_falling_edge_pos-1 nil 3874129022
   ("" (skeep)
    (("" (skoletin)
      (("" (flatten)
        (("" (expand "segment_falling?")
          (("" (use "leftmost_intersection_on_crossed_edge")
            (("" (assert)
              ((""
                (name-replace*
                 ("i" "rightward_crossing_index(G, p)" "q"
                  "leftmost_intersection_point(G, p)"))
                (("" (use "leftmost_has_horiz_dist_from_p")
                  (("" (assert)
                    (("" (replace -2)
                      (("" (skeep)
                        (("" (replace -6 :dir rl)
                          (("" (equate "(e)" "e" (assert))
                            (("" (expand "point_on_segment?")
                              ((""
                                (skeep)
                                ((""
                                  (replace -1 -6)
                                  ((""
                                    (rewrite "comps_eq" -6)
                                    ((""
                                      (flatten)
                                      ((""
                                        (expand "+" (-6 -7))
                                        ((""
                                          (expand "*" (-6 -7))
                                          ((""
                                            (case
                                             "p`y <= e`p1`y & e`p2`y <= p`y")
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (case
                                                 "p`x < max(e`p1`x, e`p2`x)")
                                                (("1"
                                                  (hide -5 -6)
                                                  (("1"
                                                    (expand "max")
                                                    (("1"
                                                      (lift-if)
                                                      (("1"
                                                        (expand
                                                         "cross")
                                                        (("1"
                                                          (expand
                                                           "-"
                                                           1)
                                                          (("1"
                                                            (move-terms
                                                             -7
                                                             l
                                                             2)
                                                            (("1"
                                                              (replace
                                                               -7)
                                                              (("1"
                                                                (replace
                                                                 -8)
                                                                (("1"
                                                                  (ground)
                                                                  (("1"
                                                                    (cancel-by
                                                                     1
                                                                     "d")
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (cancel-by
                                                                     2
                                                                     "d")
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (move-terms -8 l 2)
                                                  (("2"
                                                    (replace -8 1)
                                                    (("2"
                                                      (expand "max")
                                                      (("2"
                                                        (lift-if)
                                                        (("2"
                                                          (ground)
                                                          (("1"
                                                            (move-terms
                                                             1
                                                             l
                                                             4)
                                                            (("1"
                                                              (factor
                                                               1
                                                               l
                                                               (1 2))
                                                              (("1"
                                                                (factor
                                                                 1
                                                                 r)
                                                                (("1"
                                                                  (case
                                                                   "e`p1`x * (1 - t) < e`p2`x * (1 - t)")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (cancel-by
                                                                     1
                                                                     "1 - t")
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (cancel-add
                                                             2)
                                                            (("2"
                                                              (case
                                                               "t * e`p2`x <= e`p1`x * t")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (cancel-by
                                                                 1
                                                                 "t")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (replace -7 1)
                                              (("2"
                                                (ground)
                                                (("1"
                                                  (cancel-add 1)
                                                  (("1"
                                                    (cancel-by 1 "t")
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (move-terms 1 r 3)
                                                  (("2"
                                                    (factor 1 *)
                                                    (("2"
                                                      (cancel-by
                                                       1
                                                       "1 - t")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (between_edges_at_falling_edge_vertex 0
  (between_edges_at_falling_edge_vertex-1 nil 3874129022
   ("" (skeep)
    (("" (skoletin*)
      (("" (flatten)
        (("" (use "leftmost_intersection_on_crossed_edge")
          (("" (assert)
            (("" (use "leftmost_has_horiz_dist_from_p")
              (("" (assert)
                (("" (skeep)
                  (("" (use "leftmost_crossing_on_perim")
                    (("" (replace -6 :dir rl)
                      (("" (replace -8 :dir rl)
                        (("" (expand "point_between_edges?")
                          ((""
                            (name-replace "s"
                             "edges_of_polygon(G)(prev_index(G, i))"
                             :hide? nil)
                            (("" (replace -8 :dir rl)
                              ((""
                                (typepred "p")
                                ((""
                                  (expand "has_rightward_crossings?")
                                  ((""
                                    (flatten)
                                    ((""
                                      (hide -1)
                                      ((""
                                        (case "q = e`p1")
                                        (("1"
                                          (use
                                           "cross_horiz_seq_with_falling_edge_pos")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (replace -11 :dir rl)
                                              (("1"
                                                (replace -10 :dir rl)
                                                (("1"
                                                  (expand
                                                   "between_rays?")
                                                  (("1"
                                                    (rewrite
                                                     "cross_antisymmetric"
                                                     -1)
                                                    (("1"
                                                      (ground)
                                                      (("1"
                                                        (expand
                                                         "rightward_crossing_index")
                                                        (("1"
                                                          (replace
                                                           -9
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (lemma
                                                             "perimeter_find_index_any")
                                                            (("1"
                                                              (inst
                                                               -
                                                               "G"
                                                               "q")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (use
                                                                   "point_on_find_index_segment")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (lift-if)
                                                                        (("1"
                                                                          (ground)
                                                                          (("1"
                                                                            (name-replace
                                                                             "j"
                                                                             "find_index_any(G, q)"
                                                                             :hide?
                                                                             nil)
                                                                            (("1"
                                                                              (expand
                                                                               "vertex_crossing_index")
                                                                              (("1"
                                                                                (lift-if)
                                                                                (("1"
                                                                                  (case-replace
                                                                                   "i = j")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -16
                                                                                     :dir
                                                                                     rl)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -9)
                                                                                      (("1"
                                                                                        (case
                                                                                         "j = prev_index(G, j)")
                                                                                        (("1"
                                                                                          (hide-all-but
                                                                                           -1)
                                                                                          (("1"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (case
                                                                                             "s`p2 = e`p1")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "segment_falling?")
                                                                                              (("1"
                                                                                                (ground)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "s`p1`x < q`x")
                                                                                                  (("1"
                                                                                                    (use
                                                                                                     "left_of_leftmost_not_on_perim_edge")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         +
                                                                                                         "s")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "edge_of_polygon?")
                                                                                                              (("1"
                                                                                                                (inst?)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (replace
                                                                                                     -9)
                                                                                                    (("2"
                                                                                                      (hide-all-but
                                                                                                       (-1
                                                                                                        -2
                                                                                                        -15
                                                                                                        1
                                                                                                        5))
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "cross")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "-"
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -1
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -2
                                                                                                               :dir
                                                                                                               rl)
                                                                                                              (("2"
                                                                                                                (factor
                                                                                                                 2
                                                                                                                 l
                                                                                                                 (3
                                                                                                                  4))
                                                                                                                (("2"
                                                                                                                  (factor
                                                                                                                   2
                                                                                                                   l
                                                                                                                   (2
                                                                                                                    4))
                                                                                                                  (("2"
                                                                                                                    (factor
                                                                                                                     2
                                                                                                                     l
                                                                                                                     (3
                                                                                                                      4))
                                                                                                                    (("2"
                                                                                                                      (move-terms
                                                                                                                       2
                                                                                                                       l
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (equate
                                                                                                                         "s`p1`y * (s`p2`x - s`p1`x)"
                                                                                                                         "-s`p1`y * (s`p1`x - s`p2`x)"
                                                                                                                         (assert))
                                                                                                                        (("2"
                                                                                                                          (name-replace
                                                                                                                           "sx"
                                                                                                                           "s`p1`x - s`p2`x")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (equate
                                                                                                                               "-1 * (-s`p1`y * sx)"
                                                                                                                               "s`p1`y * sx"
                                                                                                                               (assert))
                                                                                                                              (("2"
                                                                                                                                (cancel-by
                                                                                                                                 2
                                                                                                                                 "sx")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "sx")
                                                                                                                                  (("1"
                                                                                                                                    (hide-all-but
                                                                                                                                     (-1
                                                                                                                                      -2))
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "s")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "edges_of_polygon")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (lemma
                                                                                                                                             "vertex_neq_prev")
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "G"
                                                                                                                                               "i")
                                                                                                                                              (("1"
                                                                                                                                                (ground)
                                                                                                                                                (("1"
                                                                                                                                                  (apply-extensionality
                                                                                                                                                   :hide?
                                                                                                                                                   t)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "sx")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (case
                                                                                                   "cross(s`p1 - (e)`p1, (e)`p2 - (e)`p1) = 0")
                                                                                                  (("1"
                                                                                                    (use
                                                                                                     "parallel_equiv_cross_eq_0")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "parallel?")
                                                                                                        (("1"
                                                                                                          (skeep)
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "nzk > 0")
                                                                                                            (("1"
                                                                                                              (use
                                                                                                               "adjacent_edges_do_not_fold_back")
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "dir_parallel?")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "nzk")
                                                                                                                    (("1"
                                                                                                                      (hide-all-but
                                                                                                                       (-1
                                                                                                                        -2
                                                                                                                        -14
                                                                                                                        -21
                                                                                                                        3))
                                                                                                                      (("1"
                                                                                                                        (grind)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (rewrite
                                                                                                               "comps_eq"
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (hide-all-but
                                                                                                                   (-2
                                                                                                                    -4
                                                                                                                    -5
                                                                                                                    -6
                                                                                                                    1))
                                                                                                                  (("2"
                                                                                                                    (grind)
                                                                                                                    (("2"
                                                                                                                      (replace
                                                                                                                       -4
                                                                                                                       :dir
                                                                                                                       rl)
                                                                                                                      (("2"
                                                                                                                        (case
                                                                                                                         "(e)`p2`y * nzk - s`p2`y * nzk > 0")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (cancel-by
                                                                                                                           1
                                                                                                                           "nzk")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               (-9
                                                                                                -16
                                                                                                1))
                                                                                              (("2"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (case-replace
                                                                                     "i = prev_index(G, j)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -16
                                                                                         :dir
                                                                                         rl)
                                                                                        (("1"
                                                                                          (case
                                                                                           "s`p2 = e`p1")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "segment_falling?")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "edges_of_polygon")
                                                                                              (("1"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide-all-but
                                                                                             (-9
                                                                                              -16
                                                                                              1))
                                                                                            (("2"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide-all-but (-5 -8 1))
                                          (("2" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (crossing_falling_off_right_side 0
  (crossing_falling_off_right_side-1 nil 3874129022
   ("" (skeep)
    (("" (skoletin*)
      (("" (flatten)
        (("" (expand "off_right_side?")
          (("" (use "leftmost_intersection_on_crossed_edge")
            (("" (assert)
              (("" (use "falling_segment_horiz_points_pos_cross")
                (("" (assert)
                  (("" (expand "leftmost_intersection_point")
                    (("" (use "leftmost_crossing_xval_bound") nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (three_pt_miniseq_in_polygon 0
  (three_pt_miniseq_in_polygon-1 nil 3874129022
   ("" (skeep)
    (("" (expand "three_point_miniseq?")
      (("" (ground)
        (("1" (lemma "vertex_neq_prev")
          (("1" (inst - "G" "i") (("1" (ground) nil nil)) nil)) nil)
         ("2" (lemma "vertex_neq_next")
          (("2" (inst - "G" "i") (("2" (ground) nil nil)) nil)) nil)
         ("3" (use "prev_edge_not_dir_parallel")
          (("3" (assert)
            (("3" (expand "edges_of_polygon")
              (("3" (assert)
                (("3" (rewrite "dir_parallel_diff")
                  (("3"
                    (rewrite* "dir_parallel_eqv_normalized_diffs_eq")
                    (("3" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (four_pt_miniseq_in_polygon 0
  (four_pt_miniseq_in_polygon-1 nil 3874129022
   ("" (skeep)
    (("" (expand "four_point_miniseq?")
      (("" (ground)
        (("1" (lemma "vertex_neq_prev")
          (("1" (inst - "G" "i") (("1" (ground) nil nil)) nil)) nil)
         ("2" (lemma "vertex_neq_next")
          (("2" (inst - "G" "i") (("2" (ground) nil nil)) nil)) nil)
         ("3" (lemma "vertex_neq_next")
          (("3" (inst - "G" "next_index(G, i)")
            (("3" (ground) nil nil)) nil))
          nil)
         ("4" (use "prev_edge_not_dir_parallel")
          (("4" (assert)
            (("4" (expand "edges_of_polygon")
              (("4" (assert)
                (("4" (rewrite "dir_parallel_diff")
                  (("4"
                    (rewrite* "dir_parallel_eqv_normalized_diffs_eq")
                    (("4" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("5" (use "next_edge_not_dir_parallel")
          (("5" (assert)
            (("5" (expand "edges_of_polygon")
              (("5" (assert)
                (("5" (rewrite "dir_parallel_diff") nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (polygon_vertex_seq_single_loop_TCC1 0
  (polygon_vertex_seq_single_loop_TCC1-2 nil 3874129022
   ("" (skeep*) (("" (ground) nil nil)) nil) nil shostak
   (polygon_vertex_seq_single_loop subtype
    "LAMBDA (i: naturalnumbers.upto(polygon_miter_sequences.G`num_vertices)): polygon_miter_sequences.G`vertices(modulo_arithmetic.rem(polygon_miter_sequences.G`num_vertices)(i))"
    "[below[1 + G`num_vertices] -> point_2d]"))
  (polygon_vertex_seq_single_loop_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (polygon_vertex_seq_single_loop subtype
    "LAMBDA (i: naturalnumbers.upto(polygon_miter_sequences.G`num_vertices)): polygon_miter_sequences.G`vertices(modulo_arithmetic.rem(polygon_miter_sequences.G`num_vertices)(i))"
    "[below[1 + G`num_vertices] -> point_2d]")))
 (polygon_vertex_seq_single_loop_TCC2 0
  (polygon_vertex_seq_single_loop_TCC2-2 nil 3874129022
   ("" (skeep)
    (("" (ground)
      (("" (skeep)
        (("" (case-replace "i_1 = G`num_vertices - 1")
          (("1" (assert)
            (("1" (rewrite "rem_self")
              (("1" (rewrite "rem_mod")
                (("1" (typepred "G`vertices")
                  (("1" (expand "uniq_vertex_list?")
                    (("1" (inst - "G`num_vertices - 1" "0")
                      (("1" (ground) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (rewrite* "rem_mod")
            (("2" (typepred "G`vertices")
              (("2" (expand "uniq_vertex_list?")
                (("2" (inst - "i_1" "i_1 + 1")
                  (("1" (ground) nil nil) ("2" (ground) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (polygon_vertex_seq_single_loop subtype
    "(# length := (number_fields.+)(polygon_miter_sequences.G`num_vertices, 1), seq := LAMBDA (i: naturalnumbers.upto(polygon_miter_sequences.G`num_vertices)): polygon_miter_sequences.G`vertices(modulo_arithmetic.rem(polygon_miter_sequences.G`num_vertices)(i)) #)"
    "segment_endpoint_seq"))
  (polygon_vertex_seq_single_loop_TCC2-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (polygon_vertex_seq_single_loop subtype
    "(# length := (number_fields.+)(polygon_miter_sequences.G`num_vertices, 1), seq := LAMBDA (i: naturalnumbers.upto(polygon_miter_sequences.G`num_vertices)): polygon_miter_sequences.G`vertices(modulo_arithmetic.rem(polygon_miter_sequences.G`num_vertices)(i)) #)"
    "segment_endpoint_seq")))
 (polygon_vertex_seq_single_loop 0
  (polygon_vertex_seq_single_loop-1 nil 3874129022
   ("" (skeep)
    (("" (expand "single_loop_back_seq?")
      (("" (ground)
        (("1" (skeep)
          (("1" (inst?)
            (("1" (assert)
              (("1" (skeep)
                (("1" (rewrite "rem_self")
                  (("1" (rewrite* "rem_mod")
                    (("1" (typepred "G`vertices")
                      (("1" (expand "uniq_vertex_list?")
                        (("1" (inst - "i_1" "j")
                          (("1" (ground) nil nil)
                           ("2" (ground) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (rewrite "rem_self")
          (("2" (rewrite "rem_mod")
            (("2" (typepred "G`vertices")
              (("2" (expand "uniq_vertex_list?")
                (("2" (inst - "G`num_vertices - 2" "0")
                  (("1" (ground) nil nil)
                   ("2" (assert)
                    (("2" (ground)
                      (("2" (typepred "G")
                        (("2" (expand "simple_polygon_2d?")
                          (("2" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (polygon_vertex_seq_intercept_eq_0_TCC1 0
  (polygon_vertex_seq_intercept_eq_0_TCC1-2 nil 3874129022
   ("" (skeep)
    (("" (ground)
      (("1" (skeep)
        (("1" (typepred "G`vertices")
          (("1" (expand "uniq_vertex_list?")
            (("1" (case-replace "i_1 = G`num_vertices - 1")
              (("1" (assert)
                (("1" (rewrite "rem_self")
                  (("1" (rewrite "rem_mod")
                    (("1" (inst - "G`num_vertices - 1" "0")
                      (("1" (ground) nil nil)) nil))
                    nil))
                  nil))
                nil)
               ("2" (rewrite* "rem_mod")
                (("2" (inst - "i_1" "i_1 + 1")
                  (("1" (ground) nil nil) ("2" (ground) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (rewrite "polygon_vertex_seq_single_loop") nil nil))
      nil))
    nil)
   nil shostak
   (polygon_vertex_seq_intercept_eq_0 subtype
    "(# length := (number_fields.+)(polygon_miter_sequences.G`num_vertices, 1), seq := LAMBDA (i: naturalnumbers.upto(polygon_miter_sequences.G`num_vertices)): polygon_miter_sequences.G`vertices(modulo_arithmetic.rem(polygon_miter_sequences.G`num_vertices)(i)) #)"
    "(segment_endpoint_sequences.single_loop_back_seq?)"))
  (polygon_vertex_seq_intercept_eq_0_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (polygon_vertex_seq_intercept_eq_0 subtype
    "(# length := (number_fields.+)(polygon_miter_sequences.G`num_vertices, 1), seq := LAMBDA (i: naturalnumbers.upto(polygon_miter_sequences.G`num_vertices)): polygon_miter_sequences.G`vertices(modulo_arithmetic.rem(polygon_miter_sequences.G`num_vertices)(i)) #)"
    "(segment_endpoint_sequences.single_loop_back_seq?)")))
 (polygon_vertex_seq_intercept_eq_0 0
  (polygon_vertex_seq_intercept_eq_0-1 nil 3874129022
   ("" (skeep)
    ((""
      (name-replace "S" "(# length := G`num_vertices + 1,
                              seq
                                := LAMBDA (i: upto(G`num_vertices)):
                                     G`vertices(rem(G`num_vertices)(i)) #)"
       :hide? nil)
      (("" (typepred "loop_back_intercept(S)")
        (("" (ground)
          (("" (expand "S" -2 (1 3 4))
            (("" (rewrite "rem_self")
              (("" (rewrite "rem_mod" -2)
                (("" (typepred "G`vertices")
                  (("" (expand "uniq_vertex_list?")
                    (("" (inst - "loop_back_intercept(S)" "0")
                      (("" (ground) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (polygon_vertex_seq_TCC1 0
  (polygon_vertex_seq_TCC1-2 nil 3874129022
   ("" (skeep)
    (("" (typepred "G")
      (("" (expand "simple_polygon_2d?")
        (("" (ground)
          (("1" (skeep)
            (("1" (rewrite "rem_mod")
              (("1" (case "rem(G`num_vertices)(1 + i_1) = i_1")
                (("1" (case "i_1 = G`num_vertices - 1")
                  (("1" (replace -1)
                    (("1" (assert)
                      (("1" (rewrite "rem_self")
                        (("1" (assert) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (rewrite "rem_mod") (("2" (assert) nil nil))
                    nil))
                  nil)
                 ("2" (typepred "G`vertices")
                  (("2" (expand "uniq_vertex_list?")
                    (("2" (inst - "rem(G`num_vertices)(1 + i_1)" "i_1")
                      (("1" (ground) nil nil) ("2" (ground) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (rewrite "polygon_vertex_seq_single_loop") nil nil)
           ("3" (expand "mostly_uniq_point_list?")
            (("3" (skeep + t)
              (("3" (typepred "G`vertices")
                (("3" (expand "uniq_vertex_list?")
                  (("3"
                    (case-replace
                     "loop_back_intercept((# length := 1 + G`num_vertices,
                              seq := LAMBDA (i: upto(G`num_vertices)):
                                       G`vertices(rem(G`num_vertices)(i)) #)) = 0")
                    (("1" (case "i_1 = G`num_vertices")
                      (("1" (case "j = G`num_vertices")
                        (("1" (assert) nil nil)
                         ("2" (replace -1)
                          (("2" (rewrite "rem_self")
                            (("2" (rewrite "rem_mod")
                              (("2"
                                (inst - "0" "j")
                                (("1" (ground) nil nil)
                                 ("2" (ground) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (case "j = G`num_vertices")
                        (("1" (replace -1)
                          (("1" (rewrite "rem_self")
                            (("1" (rewrite "rem_mod")
                              (("1"
                                (inst - "0" "i_1")
                                (("1" (assert) nil nil)
                                 ("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (inst - "i_1" "j")
                          (("1" (rewrite* "rem_mod")
                            (("1" (ground) nil nil)) nil)
                           ("2" (ground) nil nil)
                           ("3" (ground) nil nil))
                          nil))
                        nil))
                      nil)
                     ("2" (use "polygon_vertex_seq_intercept_eq_0")
                      (("2" (assert) nil nil)) nil)
                     ("3" (rewrite "polygon_vertex_seq_single_loop")
                      (("3" (hide 2 3)
                        (("3" (skeep)
                          (("3" (inst?)
                            (("3"
                              (inst - "rem(G`num_vertices)(1 + i_1!1)")
                              (("1" (ground) nil nil)
                               ("2"
                                (hide-all-but 1)
                                (("2"
                                  (case-replace
                                   "i_1!1 = G`num_vertices - 1")
                                  (("1"
                                    (rewrite "rem_self")
                                    (("1"
                                      (rewrite "rem_mod")
                                      (("1" (ground) nil nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (rewrite* "rem_mod")
                                    (("2" (ground) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("4" (hide-all-but 1)
                      (("4" (skeep) (("4" (ground) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("4" (expand "segments_do_not_cross?")
            (("4" (expand "polygon_edges_do_not_cross?")
              (("4" (skeep*)
                (("4" (inst - "i_1" "j")
                  (("4" (inst?)
                    (("1" (assert)
                      (("1" (expand "edges_of_polygon")
                        (("1" (rewrite "rem_mod" -1)
                          (("1" (rewrite "rem_mod" -2)
                            (("1" (rewrite* "rem_plus_1_eq_next_index")
                              (("1"
                                (rewrite "is_point_on_seg_equiv")
                                (("1" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (rewrite "rem_mod")
                      (("2" (rewrite* "rem_plus_1_eq_next_index")
                        (("1" (expand "edges_of_polygon")
                          (("1" (rewrite "is_point_on_seg_equiv") nil
                            nil))
                          nil)
                         ("2" (expand "edges_of_polygon")
                          (("2" (rewrite "is_point_on_seg_equiv") nil
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (polygon_vertex_seq subtype
    "(# length := (number_fields.+)(polygon_miter_sequences.G`num_vertices, 1), seq := LAMBDA (i: naturalnumbers.upto(polygon_miter_sequences.G`num_vertices)): polygon_miter_sequences.G`vertices(modulo_arithmetic.rem(polygon_miter_sequences.G`num_vertices)(i)) #)"
    "edge_parallel_endpoint_seq"))
  (polygon_vertex_seq_TCC1-1 nil 3874128244 ("" (subtype-tcc) nil nil)
   nil nil
   (polygon_vertex_seq subtype
    "(# length := (number_fields.+)(polygon_miter_sequences.G`num_vertices, 1), seq := LAMBDA (i: naturalnumbers.upto(polygon_miter_sequences.G`num_vertices)): polygon_miter_sequences.G`vertices(modulo_arithmetic.rem(polygon_miter_sequences.G`num_vertices)(i)) #)"
    "edge_parallel_endpoint_seq")))
 (polygon_vertex_seq_intercept 0
  (polygon_vertex_seq_intercept-1 nil 3874129022
   ("" (skeep)
    (("" (expand "polygon_vertex_seq")
      (("" (use "polygon_vertex_seq_intercept_eq_0")
        (("" (ground) nil nil)) nil))
      nil))
    nil)
   nil shostak))
 (min_seg_separation_eq_min_edge_separation 0
  (min_seg_separation_eq_min_edge_separation-1 nil 3874129022
   ("" (skeep)
    (("" (expand "min_seg_separation")
      (("" (expand "min_edge_separation")
        (("" (invoke (typepred "%1") (! 1 l))
          (("1" (hide -1 -2)
            (("1" (invoke (typepred "%1") (! 1 r))
              (("1" (hide -1 -2)
                (("1" (skeep* - t)
                  (("1" (replace -6 :hide? t)
                    (("1" (replace -7 :hide? t)
                      (("1" (expand "polygon_vertex_seq" (-1 -2))
                        (("1" (expand "restrict")
                          (("1"
                            (inst -7
                             "min_edge_sep_vertex(G, i_1, j_1)")
                            (("1"
                              (inst -
                               "min_seg_sep_vertex(polygon_vertex_seq(G), i_1!1, j_1!1)")
                              (("1"
                                (split -6)
                                (("1"
                                  (ground)
                                  (("1"
                                    (hide -1 4)
                                    (("1"
                                      (inst + "i_1" "j_1")
                                      (("1"
                                        (expand "min_seg_sep_vertex")
                                        (("1"
                                          (expand
                                           "polygon_vertex_seq"
                                           +)
                                          (("1"
                                            (equate
                                             "rem(G`num_vertices)(j_1)"
                                             "j_1")
                                            (("1"
                                              (case
                                               "j_1 = G`num_vertices - 1")
                                              (("1"
                                                (equate
                                                 "rem(G`num_vertices)(j_1 + 1)"
                                                 "0")
                                                (("1"
                                                  (rewrite "rem_mod")
                                                  (("1"
                                                    (expand
                                                     "min_edge_sep_vertex")
                                                    (("1"
                                                      (expand
                                                       "edges_of_polygon")
                                                      (("1"
                                                        (expand
                                                         "next_index")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (apply
                                                             (repeat
                                                              (lift-if)))
                                                            (("1"
                                                              (ground)
                                                              (("1"
                                                                (case-replace
                                                                 "((G`vertices(i_1) - G`vertices(j_1)) *
                                                                                (G`vertices(0) - G`vertices(j_1)))
                                                                               / sqv(G`vertices(0) - G`vertices(j_1)) = 0")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (rewrite
                                                                     "norm_sym")
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (case-replace
                                                                 "((G`vertices(i_1) - G`vertices(j_1)) *
                                                                                (G`vertices(0) - G`vertices(j_1)))
                                                                               / sqv(G`vertices(0) - G`vertices(j_1)) = 1")
                                                                (("1"
                                                                  (equate
                                                                   "G`vertices(j_1) + 1 * (G`vertices(0) - G`vertices(j_1)) -
                                                                                            G`vertices(i_1)"
                                                                   "G`vertices(0) - G`vertices(i_1)")
                                                                  (("1"
                                                                    (rewrite
                                                                     "norm_sym")
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide 2)
                                                  (("2"
                                                    (use "rem_add_one")
                                                    (("2"
                                                      (ground)
                                                      (("2"
                                                        (replace -2)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (rewrite
                                                             "rem_self")
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (rewrite* "rem_mod")
                                                (("2"
                                                  (expand
                                                   "min_edge_sep_vertex")
                                                  (("2"
                                                    (expand
                                                     "edges_of_polygon")
                                                    (("2"
                                                      (apply
                                                       (repeat
                                                        (lift-if)))
                                                      (("2"
                                                        (expand
                                                         "next_index")
                                                        (("2"
                                                          (ground)
                                                          (("1"
                                                            (case-replace
                                                             "((G`vertices(i_1) - G`vertices(j_1)) *
                                                                        (G`vertices(1 + j_1) - G`vertices(j_1)))
                                                                       / sqv(G`vertices(1 + j_1) - G`vertices(j_1)) = 0")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (rewrite
                                                                 "norm_sym")
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (case-replace
                                                             "((G`vertices(i_1) - G`vertices(j_1)) *
                                                                        (G`vertices(1 + j_1) - G`vertices(j_1)))
                                                                       / sqv(G`vertices(1 + j_1) - G`vertices(j_1)) = 1")
                                                            (("1"
                                                              (equate
                                                               "G`vertices(j_1) + 1 * (G`vertices(1 + j_1) - G`vertices(j_1)) -
                                                                                    G`vertices(i_1)"
                                                               "G`vertices(1 + j_1) - G`vertices(i_1)")
                                                              (("1"
                                                                (rewrite
                                                                 "norm_sym")
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 1)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide 2)
                                              (("2"
                                                (rewrite "rem_mod")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "polygon_vertex_seq" +)
                                        (("2"
                                          (hide -3)
                                          (("2"
                                            (expand
                                             "eligible_seg_sep_index?")
                                            (("2"
                                              (ground)
                                              (("1"
                                                (expand "prev_index")
                                                (("1"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (case-replace
                                                 "i_1 = 0")
                                                (("1"
                                                  (expand "prev_index")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "prev_index")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (rewrite
                                                       "rem_mod")
                                                      (("1"
                                                        (rewrite
                                                         "rem_self")
                                                        (("1"
                                                          (replace
                                                           -2
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (typepred
                                                             "G`vertices")
                                                            (("1"
                                                              (expand
                                                               "uniq_vertex_list?")
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "i_1"
                                                                 "0")
                                                                (("1"
                                                                  (ground)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide-all-but
                                                         1)
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3"
                                        (expand "polygon_vertex_seq")
                                        (("3" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (hide -6 4)
                                  (("2"
                                    (expand "eligible_seg_sep_index?")
                                    (("2"
                                      (name-replace
                                       "lbi"
                                       "loop_back_intercept(polygon_vertex_seq(G))"
                                       :hide?
                                       nil)
                                      (("2"
                                        (expand
                                         "polygon_vertex_seq"
                                         -4)
                                        (("2"
                                          (rewrite "rem_self")
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (rewrite "rem_mod" -4)
                                              (("1"
                                                (case-replace
                                                 "i_1!1 = G`num_vertices")
                                                (("1"
                                                  (inst
                                                   +
                                                   "lbi"
                                                   "j_1!1")
                                                  (("1"
                                                    (expand
                                                     "prev_index")
                                                    (("1"
                                                      (hide 5)
                                                      (("1"
                                                        (case-replace
                                                         "lbi = 0")
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (expand
                                                             "polygon_vertex_seq"
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "min_seg_sep_vertex")
                                                              (("1"
                                                                (rewrite
                                                                 "rem_self")
                                                                (("1"
                                                                  (rewrite*
                                                                   "rem_mod")
                                                                  (("1"
                                                                    (expand
                                                                     "min_edge_sep_vertex")
                                                                    (("1"
                                                                      (expand
                                                                       "edges_of_polygon")
                                                                      (("1"
                                                                        (expand
                                                                         "next_index")
                                                                        (("1"
                                                                          (ground)
                                                                          (("1"
                                                                            (case-replace
                                                                             "((G`vertices(0) - G`vertices(j_1!1)) *
                                                          (G`vertices(1 + j_1!1) - G`vertices(j_1!1)))
                                                         / sqv(G`vertices(1 + j_1!1) - G`vertices(j_1!1)) = 0")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (rewrite
                                                                                 "norm_sym")
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (name-replace
                                                                                 "vv"
                                                                                 "((G`vertices(0) - G`vertices(j_1!1)) *
                            (G`vertices(1 + j_1!1) - G`vertices(j_1!1)))
                           / sqv(G`vertices(1 + j_1!1) - G`vertices(j_1!1))")
                                                                                (("2"
                                                                                  (apply
                                                                                   (repeat
                                                                                    (lift-if)))
                                                                                  (("2"
                                                                                    (ground)
                                                                                    (("2"
                                                                                      (case-replace
                                                                                       "G`vertices(j_1!1) +
                          vv * (G`vertices(1 + j_1!1) - G`vertices(j_1!1)) = G`vertices(1 + j_1!1)")
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "norm_sym")
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         3)
                                                                                        (("2"
                                                                                          (move-terms
                                                                                           1
                                                                                           l
                                                                                           1)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (equate
                                                                                               "vv"
                                                                                               "1"
                                                                                               (assert))
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("3"
                                                                                (flatten)
                                                                                (("3"
                                                                                  (case
                                                                                   "G`vertices(1 + j_1!1) = G`vertices(j_1!1)")
                                                                                  (("1"
                                                                                    (typepred
                                                                                     "G`vertices")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "uniq_vertex_list?")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "1 + j_1!1"
                                                                                         "j_1!1")
                                                                                        (("1"
                                                                                          (ground)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (rewrite
                                                                                     "sqv_eq_0")
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (name-replace
                                                                             "vv"
                                                                             "((G`vertices(0) - G`vertices(j_1!1)) *
                          (G`vertices(1 + j_1!1) - G`vertices(j_1!1)))
                         / sqv(G`vertices(1 + j_1!1) - G`vertices(j_1!1))")
                                                                            (("1"
                                                                              (apply
                                                                               (repeat
                                                                                (lift-if)))
                                                                              (("1"
                                                                                (ground)
                                                                                (("1"
                                                                                  (equate
                                                                                   "vv * (G`vertices(1 + j_1!1) - G`vertices(j_1!1))"
                                                                                   "zero")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "norm_sym")
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (equate
                                                                                     "vv"
                                                                                     "0"
                                                                                     (assert))
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (equate
                                                                                   "G`vertices(j_1!1) +
                                   vv * (G`vertices(1 + j_1!1) - G`vertices(j_1!1))"
                                                                                   "G`vertices(1 + j_1!1)")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "norm_sym")
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (move-terms
                                                                                     1
                                                                                     l
                                                                                     1)
                                                                                    (("2"
                                                                                      (equate
                                                                                       "vv"
                                                                                       "1"
                                                                                       (assert))
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (case
                                                                                   "G`vertices(1 + j_1!1) = G`vertices(j_1!1)")
                                                                                  (("1"
                                                                                    (typepred
                                                                                     "G`vertices")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "uniq_vertex_list?")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "1 + j_1!1"
                                                                                         "j_1!1")
                                                                                        (("1"
                                                                                          (ground)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (rewrite
                                                                                     "sqv_eq_0")
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (rewrite
                                                           "polygon_vertex_seq_intercept")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (typepred "lbi")
                                                    (("2"
                                                      (expand
                                                       "polygon_vertex_seq"
                                                       -1)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (rewrite
                                                   "polygon_vertex_seq_intercept")
                                                  (("2"
                                                    (replace
                                                     -1
                                                     :dir
                                                     rl)
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (hide -5)
                                                          (("2"
                                                            (inst
                                                             +
                                                             "i_1!1"
                                                             "j_1!1")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (hide
                                                                 6)
                                                                (("2"
                                                                  (expand
                                                                   "prev_index")
                                                                  (("2"
                                                                    (split
                                                                     2)
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (ground)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "polygon_vertex_seq"
                                                                       1)
                                                                      (("2"
                                                                        (expand
                                                                         "min_seg_sep_vertex")
                                                                        (("2"
                                                                          (equate
                                                                           "rem(G`num_vertices)(j_1!1)"
                                                                           "j_1!1")
                                                                          (("1"
                                                                            (equate
                                                                             "rem(G`num_vertices)(i_1!1)"
                                                                             "i_1!1")
                                                                            (("1"
                                                                              (case-replace
                                                                               "j_1!1 = G`num_vertices - 1")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "rem_self")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "min_edge_sep_vertex")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "edges_of_polygon")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "next_index")
                                                                                        (("1"
                                                                                          (apply
                                                                                           (repeat
                                                                                            (lift-if)))
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (name-replace
                                                                                               "vv"
                                                                                               "((G`vertices(i_1!1) - G`vertices(G`num_vertices - 1)) *
                            (G`vertices(0) - G`vertices(G`num_vertices - 1)))
                           / sqv(G`vertices(0) - G`vertices(G`num_vertices - 1))")
                                                                                              (("1"
                                                                                                (ground)
                                                                                                (("1"
                                                                                                  (equate
                                                                                                   "vv"
                                                                                                   "0"
                                                                                                   (assert))
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "norm_sym")
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (equate
                                                                                                   "G`vertices(G`num_vertices - 1) +
                                     vv * (G`vertices(0) - G`vertices(G`num_vertices - 1))"
                                                                                                   "G`vertices(0)")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "norm_sym")
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (move-terms
                                                                                                     1
                                                                                                     l
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (equate
                                                                                                       "vv"
                                                                                                       "1"
                                                                                                       (assert))
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (rewrite
                                                                                                     "sqv_eq_0")
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "G`vertices")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "uniq_vertex_list?")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "0"
                                                                                                           "G`num_vertices - 1")
                                                                                                          (("2"
                                                                                                            (ground)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (rewrite
                                                                                 "rem_mod")
                                                                                (("2"
                                                                                  (expand
                                                                                   "min_edge_sep_vertex")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "edges_of_polygon")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "next_index")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (name-replace
                                                                                           "vv"
                                                                                           "((G`vertices(i_1!1) - G`vertices(j_1!1)) *
                               (G`vertices(1 + j_1!1) - G`vertices(j_1!1)))
                              / sqv(G`vertices(1 + j_1!1) - G`vertices(j_1!1))")
                                                                                          (("1"
                                                                                            (apply
                                                                                             (repeat
                                                                                              (lift-if)))
                                                                                            (("1"
                                                                                              (ground)
                                                                                              (("1"
                                                                                                (equate
                                                                                                 "vv"
                                                                                                 "0"
                                                                                                 (assert))
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "norm_sym")
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (equate
                                                                                                 "vv"
                                                                                                 "1"
                                                                                                 (assert))
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (equate
                                                                                                     "G`vertices(j_1!1) + (G`vertices(1 + j_1!1) - G`vertices(j_1!1))"
                                                                                                     "G`vertices(1 + j_1!1)")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "norm_sym")
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide-all-but
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (grind-with-ext)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide-all-but
                                                                                             1)
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "sqv_eq_0")
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "G`vertices")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "uniq_vertex_list?")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "1 + j_1!1"
                                                                                                       "j_1!1")
                                                                                                      (("2"
                                                                                                        (ground)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (rewrite
                                                                               "rem_mod")
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (rewrite
                                                                             "rem_mod")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (use
                                                 "polygon_vertex_seq_intercept")
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide-all-but -1)
                (("2" (expand "empty?")
                  (("2" (inst - "min_edge_sep_vertex(G, 1, 2)")
                    (("1" (expand "member")
                      (("1" (inst + "1" "2")
                        (("1" (expand "prev_index")
                          (("1" (propax) nil nil)) nil)
                         ("2" (typepred "G")
                          (("2" (expand "simple_polygon_2d?")
                            (("2" (ground) nil nil)) nil))
                          nil)
                         ("3" (assert) nil nil))
                        nil))
                      nil)
                     ("2" (expand "prev_index")
                      (("2" (typepred "G")
                        (("2" (expand "simple_polygon_2d?")
                          (("2" (ground) nil nil)) nil))
                        nil))
                      nil)
                     ("3" (assert) nil nil))
                    nil))
                  nil))
                nil)
               ("3" (hide-all-but 1) (("3" (grind) nil nil)) nil))
              nil))
            nil)
           ("2" (hide +)
            (("2" (expand "empty?")
              (("2"
                (inst -
                 "min_seg_sep_vertex(polygon_vertex_seq(G), 1, 2)")
                (("1" (expand "member")
                  (("1" (inst + "1" "2")
                    (("1" (expand "polygon_vertex_seq")
                      (("1" (ground)
                        (("1" (expand "eligible_seg_sep_index?")
                          (("1" (ground)
                            (("1" (rewrite "rem_mod")
                              (("1"
                                (rewrite "rem_self")
                                (("1"
                                  (replace -2 :dir rl)
                                  (("1"
                                    (typepred "G`vertices")
                                    (("1"
                                      (expand "uniq_vertex_list?")
                                      (("1"
                                        (inst - "1" "0")
                                        (("1" (ground) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (hide-all-but 1)
                                (("2" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "polygon_vertex_seq")
                      (("2" (assert) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (expand "polygon_vertex_seq")
                  (("2" (ground)
                    (("2" (expand "eligible_seg_sep_index?")
                      (("2" (rewrite "rem_mod")
                        (("1" (assert)
                          (("1" (rewrite "rem_self")
                            (("1" (ground)
                              (("1"
                                (replace -2 :dir rl)
                                (("1"
                                  (typepred "G`vertices")
                                  (("1"
                                    (expand "uniq_vertex_list?")
                                    (("1"
                                      (inst - "1" "0")
                                      (("1" (ground) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide-all-but 1) (("2" (grind) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("3" (expand "polygon_vertex_seq")
                  (("3" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (max_miter_offset_lt_min_edge_sep 0
  (max_miter_offset_lt_min_edge_sep-1 nil 3874129022
   ("" (skeep)
    (("" (expand "max_miter_offset")
      (("" (expand "min_segment_sep")
        (("" (rewrite "min_seg_separation_eq_min_edge_separation")
          (("" (cross-mult 1)
            (("" (cancel-by 1 "min_edge_separation(G)")
              (("" (use "min_miter_sine_le_1") (("" (assert) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (three_pt_offset_dist_in_polygon_TCC1 0
  (three_pt_offset_dist_in_polygon_TCC1-2 nil 3874129022
   ("" (skeep)
    (("" (expand "three_point_miniseq?")
      (("" (use "adjacent_edges_do_not_fold_back") nil nil)) nil))
    nil)
   nil shostak
   (three_pt_offset_dist_in_polygon subtype
    "polygon_miter_sequences.G`vertices(polygons_2d.next_index(polygon_miter_sequences.G, polygon_miter_sequences.i))"
    "(segment_endpoint_sequences.three_point_miniseq?(polygon_miter_sequences.G`vertices(polygons_2d.prev_index(polygon_miter_sequences.G, polygon_miter_sequences.i)), polygon_miter_sequences.G`vertices(polygon_miter_sequences.i)))"))
  (three_pt_offset_dist_in_polygon_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (three_pt_offset_dist_in_polygon subtype
    "polygon_miter_sequences.G`vertices(polygons_2d.next_index(polygon_miter_sequences.G, polygon_miter_sequences.i))"
    "(segment_endpoint_sequences.three_point_miniseq?(polygon_miter_sequences.G`vertices(polygons_2d.prev_index(polygon_miter_sequences.G, polygon_miter_sequences.i)), polygon_miter_sequences.G`vertices(polygon_miter_sequences.i)))")))
 (three_pt_offset_dist_in_polygon 0
  (three_pt_offset_dist_in_polygon-1 nil 3874129022
   ("" (skeep)
    (("" (case "0 < i")
      (("1" (lemma "three_pt_miniseq_in_endpt_seq")
        (("1" (inst - "polygon_vertex_seq(G)" "i" "d")
          (("1" (flatten)
            (("1" (hide -1)
              (("1" (expand "polygon_vertex_seq")
                (("1" (lemma "rem_plus_1_eq_next_index")
                  (("1" (inst - "G" "i")
                    (("1" (replace -1 :hide? t)
                      (("1" (rewrite* "rem_mod")
                        (("1" (expand "prev_index")
                          (("1" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "polygon_vertex_seq") (("2" (assert) nil nil))
            nil))
          nil))
        nil)
       ("2" (equate "i" "0" (assert))
        (("2" (expand "prev_index")
          (("2" (expand "next_index")
            (("2" (assert)
              (("2" (lift-if)
                (("2" (assert)
                  (("2" (lemma "three_pt_miniseq_in_endpt_seq_wrap")
                    (("2" (inst - "polygon_vertex_seq(G)" "d")
                      (("2" (assert)
                        (("2" (lemma "intercept_index_value")
                          (("2" (inst - "polygon_vertex_seq(G)" "0")
                            (("2" (split -1)
                              (("1"
                                (flatten)
                                (("1"
                                  (replace -2)
                                  (("1"
                                    (expand "polygon_vertex_seq")
                                    (("1"
                                      (rewrite "rem_self")
                                      (("1"
                                        (rewrite* "rem_mod")
                                        (("1" (ground) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (hide-all-but 1)
                                (("2"
                                  (grind)
                                  (("2"
                                    (rewrite "rem_self")
                                    (("2" (rewrite "rem_mod") nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (four_pt_offset_dist_in_polygon_TCC1 0
  (four_pt_offset_dist_in_polygon_TCC1-2 nil 3874129022
   ("" (skeep)
    (("" (expand "four_point_miniseq?")
      (("" (use "adjacent_edges_do_not_fold_back")
        (("" (flatten)
          (("" (assert)
            (("" (lemma "adjacent_edges_do_not_fold_back")
              (("" (inst - "G" "next_index(G, i)")
                (("" (ground) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (four_pt_offset_dist_in_polygon subtype
    "polygon_miter_sequences.G`vertices(polygons_2d.next_index(polygon_miter_sequences.G, polygons_2d.next_index(polygon_miter_sequences.G, polygon_miter_sequences.i)))"
    "(segment_endpoint_sequences.four_point_miniseq?(polygon_miter_sequences.G`vertices(polygons_2d.prev_index(polygon_miter_sequences.G, polygon_miter_sequences.i)), polygon_miter_sequences.G`vertices(polygon_miter_sequences.i), polygon_miter_sequences.G`vertices(polygons_2d.next_index(polygon_miter_sequences.G, polygon_miter_sequences.i))))"))
  (four_pt_offset_dist_in_polygon_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (four_pt_offset_dist_in_polygon subtype
    "polygon_miter_sequences.G`vertices(polygons_2d.next_index(polygon_miter_sequences.G, polygons_2d.next_index(polygon_miter_sequences.G, polygon_miter_sequences.i)))"
    "(segment_endpoint_sequences.four_point_miniseq?(polygon_miter_sequences.G`vertices(polygons_2d.prev_index(polygon_miter_sequences.G, polygon_miter_sequences.i)), polygon_miter_sequences.G`vertices(polygon_miter_sequences.i), polygon_miter_sequences.G`vertices(polygons_2d.next_index(polygon_miter_sequences.G, polygon_miter_sequences.i))))")))
 (four_pt_offset_dist_in_polygon 0
  (four_pt_offset_dist_in_polygon-1 nil 3874129022
   ("" (skeep)
    (("" (case "0 < i and i < G`num_vertices - 1")
      (("1" (flatten)
        (("1" (lemma "four_pt_miniseq_in_endpt_seq")
          (("1" (inst - "polygon_vertex_seq(G)" "i" "d")
            (("1" (flatten)
              (("1" (hide -1)
                (("1" (expand "polygon_vertex_seq")
                  (("1" (lemma "rem_plus_1_eq_next_index")
                    (("1" (inst - "G" "i + 1")
                      (("1" (replace -1 :hide? t)
                        (("1" (rewrite* "rem_mod")
                          (("1" (expand "prev_index")
                            (("1" (assert)
                              (("1"
                                (equate "next_index(G, i)" "1 + i")
                                (("1"
                                  (hide -1 2)
                                  (("1"
                                    (expand "next_index")
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (expand "polygon_vertex_seq")
              (("2" (assert) nil nil)) nil))
            nil))
          nil))
        nil)
       ("2" (case-replace "i = 0")
        (("1" (expand "prev_index")
          (("1" (expand "next_index")
            (("1" (assert)
              (("1" (lift-if)
                (("1" (assert)
                  (("1" (ground)
                    (("1" (lemma "four_pt_miniseq_in_endpt_seq_wrap")
                      (("1" (inst - "polygon_vertex_seq(G)" "d")
                        (("1" (lemma "intercept_index_value")
                          (("1" (inst - "polygon_vertex_seq(G)" "0")
                            (("1" (split -1)
                              (("1"
                                (flatten)
                                (("1"
                                  (assert)
                                  (("1"
                                    (replace -2)
                                    (("1"
                                      (expand "polygon_vertex_seq")
                                      (("1"
                                        (rewrite "rem_self")
                                        (("1"
                                          (rewrite* "rem_mod")
                                          (("1" (ground) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (hide-all-but 1)
                                (("2"
                                  (grind)
                                  (("2"
                                    (rewrite "rem_self")
                                    (("2" (rewrite "rem_mod") nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide-all-but 1)
                              (("2" (grind) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (equate "i" "G`num_vertices - 1" (assert))
          (("2" (expand "prev_index")
            (("2" (assert)
              (("2" (expand "next_index")
                (("2" (lemma "four_pt_miniseq_in_endpt_seq_wrap_2")
                  (("2" (inst - "polygon_vertex_seq(G)" "d")
                    (("2" (assert)
                      (("2" (lemma "intercept_index_value")
                        (("2" (inst - "polygon_vertex_seq(G)" "0")
                          (("2" (split -1)
                            (("1" (flatten)
                              (("1"
                                (replace -2)
                                (("1"
                                  (expand "polygon_vertex_seq")
                                  (("1"
                                    (rewrite "rem_self")
                                    (("1"
                                      (rewrite* "rem_mod")
                                      (("1" (ground) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide-all-but 1)
                              (("2"
                                (grind)
                                (("2"
                                  (rewrite "rem_self")
                                  (("2" (rewrite "rem_mod") nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (polygon_miter_point_seq_element_TCC1 0
  (polygon_miter_point_seq_element_TCC1-2 nil 3874129022
   ("" (skeep)
    (("" (replace -1)
      (("" (expand "polygon_vertex_seq")
        (("" (expand "closed_miter_point_seq")
          (("" (expand "o")
            (("" (expand "singleton_seq")
              (("" (expand "miter_point_seq") (("" (assert) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (polygon_miter_point_seq_element subtype "polygon_miter_sequences.i"
    "below[closed_miter_point_seq(S, d)`length]"))
  (polygon_miter_point_seq_element_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (polygon_miter_point_seq_element subtype "polygon_miter_sequences.i"
    "below[closed_miter_point_seq(S, d)`length]")))
 (polygon_miter_point_seq_element_TCC2 0
  (polygon_miter_point_seq_element_TCC2-2 nil 3874129022
   ("" (skeep)
    (("" (replace -1)
      (("" (grind)
        (("" (rewrite "rem_self") (("" (rewrite "rem_mod") nil nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (polygon_miter_point_seq_element subtype "polygon_miter_sequences.S"
    "{S: segment_endpoint_sequences.edge_parallel_endpoint_seq | S`seq(0) = S`seq((number_fields.-)(S`length, 1))}"))
  (polygon_miter_point_seq_element_TCC2-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (polygon_miter_point_seq_element subtype "polygon_miter_sequences.S"
    "{S: segment_endpoint_sequences.edge_parallel_endpoint_seq | S`seq(0) = S`seq((number_fields.-)(S`length, 1))}")))
 (polygon_miter_point_seq_element_TCC3 0
  (polygon_miter_point_seq_element_TCC3-2 nil 3874129022
   ("" (skeep)
    (("" (lemma "vertex_neq_prev")
      (("" (inst - "G" "i") (("" (ground) nil nil)) nil)) nil))
    nil)
   nil shostak
   (polygon_miter_point_seq_element subtype
    "polygon_miter_sequences.G`vertices(polygons_2d.prev_index(polygon_miter_sequences.G, polygon_miter_sequences.i))"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.G`vertices(polygon_miter_sequences.i)}"))
  (polygon_miter_point_seq_element_TCC3-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (polygon_miter_point_seq_element subtype
    "polygon_miter_sequences.G`vertices(polygons_2d.prev_index(polygon_miter_sequences.G, polygon_miter_sequences.i))"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.G`vertices(polygon_miter_sequences.i)}")))
 (polygon_miter_point_seq_element_TCC4 0
  (polygon_miter_point_seq_element_TCC4-2 nil 3874129022
   ("" (skeep)
    (("" (use "adjacent_edges_do_not_fold_back")
      (("" (ground) nil nil)) nil))
    nil)
   nil shostak
   (polygon_miter_point_seq_element subtype
    "polygon_miter_sequences.G`vertices(polygons_2d.next_index(polygon_miter_sequences.G, polygon_miter_sequences.i))"
    "{p: vectors_cross_2d.point_2d | booleans.AND(p /= polygon_miter_sequences.G`vertices(polygon_miter_sequences.i), (booleans.NOT)(vectors_2D.dir_parallel?((vectors_2D.-)(polygon_miter_sequences.G`vertices(polygons_2d.prev_index(polygon_miter_sequences.G, polygon_miter_sequences.i)), polygon_miter_sequences.G`vertices(polygon_miter_sequences.i)), (vectors_2D.-)(p, polygon_miter_sequences.G`vertices(polygon_miter_sequences.i)))))}"))
  (polygon_miter_point_seq_element_TCC4-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (polygon_miter_point_seq_element subtype
    "polygon_miter_sequences.G`vertices(polygons_2d.next_index(polygon_miter_sequences.G, polygon_miter_sequences.i))"
    "{p: vectors_cross_2d.point_2d | booleans.AND(p /= polygon_miter_sequences.G`vertices(polygon_miter_sequences.i), (booleans.NOT)(vectors_2D.dir_parallel?((vectors_2D.-)(polygon_miter_sequences.G`vertices(polygons_2d.prev_index(polygon_miter_sequences.G, polygon_miter_sequences.i)), polygon_miter_sequences.G`vertices(polygon_miter_sequences.i)), (vectors_2D.-)(p, polygon_miter_sequences.G`vertices(polygon_miter_sequences.i)))))}")))
 (polygon_miter_point_seq_element 0
  (polygon_miter_point_seq_element-1 nil 3874129022
   ("" (skeep)
    (("" (rewrite "closed_miter_point_seq_element")
      (("1" (lift-if)
        (("1" (split 1)
          (("1" (flatten)
            (("1" (expand "prev_index")
              (("1" (assert)
                (("1" (expand "next_index")
                  (("1" (assert)
                    (("1" (lift-if)
                      (("1" (replace -3)
                        (("1" (expand "polygon_vertex_seq")
                          (("1" (ground)
                            (("1" (replace -1)
                              (("1"
                                (rewrite "rem_self")
                                (("1"
                                  (rewrite* "rem_mod")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (rewrite* "rem_mod") nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (replace -1)
              (("2" (expand "polygon_vertex_seq")
                (("2" (rewrite* "rem_mod")
                  (("2" (expand "prev_index")
                    (("2" (assert)
                      (("2" (expand "next_index")
                        (("2" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (replace -1)
        (("2" (expand "polygon_vertex_seq") (("2" (assert) nil nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (point_on_perim_iff_on_vertex_seq 0
  (point_on_perim_iff_on_vertex_seq-1 nil 3874129022
   ("" (skeep)
    (("" (ground)
      (("1" (expand "point_on_segment_seq?")
        (("1" (expand "polygon_vertex_seq")
          (("1" (expand "point_on_polygon_perimeter?")
            (("1" (skeep - t)
              (("1" (expand "edge_of_polygon?")
                (("1" (skeep)
                  (("1" (assert)
                    (("1" (inst + "i")
                      (("1" (expand "edges_of_polygon")
                        (("1" (rewrite "rem_mod")
                          (("1" (rewrite "rem_plus_1_eq_next_index")
                            (("1" (assert) nil nil)) nil))
                          nil))
                        nil)
                       ("2" (expand "polygon_vertex_seq")
                        (("2" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (expand "point_on_segment_seq?")
        (("2" (ground)
          (("1" (expand "polygon_vertex_seq") (("1" (assert) nil nil))
            nil)
           ("2" (skeep - t)
            (("2" (expand "polygon_vertex_seq")
              (("2" (rewrite "rem_mod")
                (("2" (rewrite "rem_plus_1_eq_next_index")
                  (("2" (expand "point_on_polygon_perimeter?")
                    (("2" (inst + "edges_of_polygon(G)(i)")
                      (("2" (expand "edges_of_polygon")
                        (("2" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (min_seg_sep_le_edge_length 0
  (min_seg_sep_le_edge_length-1 nil 3874129022
   ("" (skeep)
    (("" (case "0 < i")
      (("1" (lemma "min_seg_sep_bounds_seg_length")
        (("1" (inst - "S" "i")
          (("1" (assert)
            (("1" (replace -3)
              (("1" (expand "polygon_vertex_seq" -1 (2 3))
                (("1" (lemma "rem_plus_1_eq_next_index")
                  (("1" (inst - "G" "i")
                    (("1" (replace -1 :hide? t)
                      (("1" (rewrite "rem_mod")
                        (("1" (expand "edges_of_polygon")
                          (("1" (expand "length")
                            (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (replace -2)
            (("2" (expand "polygon_vertex_seq")
              (("2" (assert) nil nil)) nil))
            nil))
          nil))
        nil)
       ("2" (equate "i" "0" (assert))
        (("2" (use "min_seg_sep_bounds_seg_length_wrap")
          (("2" (assert)
            (("2" (use "polygon_vertex_seq_intercept")
              (("2" (ground)
                (("1" (expand "edges_of_polygon")
                  (("1" (replace -4)
                    (("1" (expand "next_index")
                      (("1" (lift-if)
                        (("1" (ground)
                          (("1" (replace -4)
                            (("1"
                              (expand "polygon_vertex_seq" -3 (2 3))
                              (("1"
                                (rewrite* "rem_mod")
                                (("1" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (replace -2)
                  (("2" (replace -1)
                    (("2" (hide-all-but 1)
                      (("2" (expand "polygon_vertex_seq")
                        (("2" (rewrite "rem_self")
                          (("2" (rewrite "rem_mod") nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (min_miter_sine_le_vertex_sine_TCC1 0
  (min_miter_sine_le_vertex_sine_TCC1-2 nil 3874129022
   ("" (skeep)
    (("" (assert)
      (("" (lemma "vertex_neq_prev")
        (("" (inst - "G" "i") (("" (ground) nil nil)) nil)) nil))
      nil))
    nil)
   nil shostak
   (min_miter_sine_le_vertex_sine subtype
    "(vectors_2D.-)(polygon_miter_sequences.G`vertices(polygons_2d.prev_index(polygon_miter_sequences.G, polygon_miter_sequences.i)), polygon_miter_sequences.G`vertices(polygon_miter_sequences.i))"
    "Nz_vector"))
  (min_miter_sine_le_vertex_sine_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (min_miter_sine_le_vertex_sine subtype
    "(vectors_2D.-)(polygon_miter_sequences.G`vertices(polygons_2d.prev_index(polygon_miter_sequences.G, polygon_miter_sequences.i)), polygon_miter_sequences.G`vertices(polygon_miter_sequences.i))"
    "Nz_vector")))
 (min_miter_sine_le_vertex_sine_TCC2 0
  (min_miter_sine_le_vertex_sine_TCC2-2 nil 3874129022
   ("" (skeep)
    (("" (lemma "vertex_neq_next")
      (("" (inst - "G" "i") (("" (ground) nil nil)) nil)) nil))
    nil)
   nil shostak
   (min_miter_sine_le_vertex_sine subtype
    "(vectors_2D.-)(polygon_miter_sequences.G`vertices(polygons_2d.next_index(polygon_miter_sequences.G, polygon_miter_sequences.i)), polygon_miter_sequences.G`vertices(polygon_miter_sequences.i))"
    "Nz_vector"))
  (min_miter_sine_le_vertex_sine_TCC2-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (min_miter_sine_le_vertex_sine subtype
    "(vectors_2D.-)(polygon_miter_sequences.G`vertices(polygons_2d.next_index(polygon_miter_sequences.G, polygon_miter_sequences.i)), polygon_miter_sequences.G`vertices(polygon_miter_sequences.i))"
    "Nz_vector")))
 (min_miter_sine_le_vertex_sine 0
  (min_miter_sine_le_vertex_sine-1 nil 3874129022
   ("" (skeep)
    (("" (use "polygon_vertex_seq_intercept")
      (("" (case-replace "i = 0")
        (("1" (expand "prev_index")
          (("1" (expand "next_index")
            (("1" (lift-if)
              (("1" (assert)
                (("1" (assert)
                  (("1" (use "min_miter_sine_le_wrapped_sine")
                    (("1" (assert)
                      (("1" (replace -4)
                        (("1" (replace -3)
                          (("1" (expand "polygon_vertex_seq")
                            (("1" (rewrite "rem_self")
                              (("1" (rewrite* "rem_mod") nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (lemma "min_miter_sine_le_each_sine")
          (("2" (inst - "S" "i")
            (("1" (assert)
              (("1" (replace -3)
                (("1" (expand "polygon_vertex_seq")
                  (("1" (lemma "rem_plus_1_eq_next_index")
                    (("1" (inst - "G" "i")
                      (("1" (replace -1 :hide? t)
                        (("1" (rewrite* "rem_mod")
                          (("1" (expand "prev_index")
                            (("1" (propax) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (assert)
              (("2" (replace -2)
                (("2" (expand "polygon_vertex_seq")
                  (("2" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (vertex_miter_point_TCC1 0
  (vertex_miter_point_TCC1-2 nil 3874129022
   ("" (skeep)
    (("" (lemma "vertex_neq_prev")
      (("" (inst - "G" "i") (("" (ground) nil nil)) nil)) nil))
    nil)
   nil shostak
   (vertex_miter_point subtype
    "polygon_miter_sequences.G`vertices(polygons_2d.prev_index(polygon_miter_sequences.G, polygon_miter_sequences.i))"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.G`vertices(polygon_miter_sequences.i)}"))
  (vertex_miter_point_TCC1-1 nil 3874128244 ("" (subtype-tcc) nil nil)
   nil nil
   (vertex_miter_point subtype
    "polygon_miter_sequences.G`vertices(polygons_2d.prev_index(polygon_miter_sequences.G, polygon_miter_sequences.i))"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.G`vertices(polygon_miter_sequences.i)}")))
 (vertex_miter_point_TCC2 0
  (vertex_miter_point_TCC2-2 nil 3874129022
   ("" (skeep)
    (("" (use "adjacent_edges_do_not_fold_back")
      (("" (ground) nil nil)) nil))
    nil)
   nil shostak
   (vertex_miter_point subtype
    "polygon_miter_sequences.G`vertices(polygons_2d.next_index(polygon_miter_sequences.G, polygon_miter_sequences.i))"
    "{p: vectors_cross_2d.point_2d | booleans.AND(p /= polygon_miter_sequences.G`vertices(polygon_miter_sequences.i), (booleans.NOT)(vectors_2D.dir_parallel?((vectors_2D.-)(polygon_miter_sequences.G`vertices(polygons_2d.prev_index(polygon_miter_sequences.G, polygon_miter_sequences.i)), polygon_miter_sequences.G`vertices(polygon_miter_sequences.i)), (vectors_2D.-)(p, polygon_miter_sequences.G`vertices(polygon_miter_sequences.i)))))}"))
  (vertex_miter_point_TCC2-1 nil 3874128244 ("" (subtype-tcc) nil nil)
   nil nil
   (vertex_miter_point subtype
    "polygon_miter_sequences.G`vertices(polygons_2d.next_index(polygon_miter_sequences.G, polygon_miter_sequences.i))"
    "{p: vectors_cross_2d.point_2d | booleans.AND(p /= polygon_miter_sequences.G`vertices(polygon_miter_sequences.i), (booleans.NOT)(vectors_2D.dir_parallel?((vectors_2D.-)(polygon_miter_sequences.G`vertices(polygons_2d.prev_index(polygon_miter_sequences.G, polygon_miter_sequences.i)), polygon_miter_sequences.G`vertices(polygon_miter_sequences.i)), (vectors_2D.-)(p, polygon_miter_sequences.G`vertices(polygon_miter_sequences.i)))))}")))
 (seg_from_miter_point_not_on_perim_TCC1 0
  (seg_from_miter_point_not_on_perim_TCC1-2 nil 3874129022
   ("" (skeep)
    (("" (use "miter_point_not_on_either_seg")
      (("1" (assert)
        (("1" (flatten)
          (("1" (expand "edges_of_polygon")
            (("1" (replace -2 :dir rl)
              (("1" (replace -5) (("1" (propax) nil nil)) nil)) nil))
            nil))
          nil))
        nil)
       ("2" (case "i > 0")
        (("1" (lemma "three_pt_miniseq_in_endpt_seq")
          (("1" (inst - "S" "i" "d")
            (("1" (flatten)
              (("1" (hide -2)
                (("1" (expand "prev_index")
                  (("1" (expand "next_index")
                    (("1" (assert)
                      (("1" (lift-if)
                        (("1" (replace -3 -1)
                          (("1" (expand "polygon_vertex_seq")
                            (("1" (split 1)
                              (("1"
                                (flatten)
                                (("1"
                                  (replace -1)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (rewrite "rem_self")
                                      (("1"
                                        (rewrite* "rem_mod")
                                        nil
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (rewrite* "rem_mod")
                                (("2" (ground) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (assert)
              (("2" (replace -2)
                (("2" (expand "polygon_vertex_seq")
                  (("2" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (lemma "three_pt_miniseq_in_endpt_seq_wrap")
          (("2" (inst - "S" "d")
            (("2" (assert)
              (("2" (split -1)
                (("1" (flatten)
                  (("1" (equate "i" "0" (assert))
                    (("1" (replace -3 -1)
                      (("1" (rewrite "polygon_vertex_seq_intercept")
                        (("1" (expand "next_index")
                          (("1" (expand "prev_index")
                            (("1" (assert)
                              (("1"
                                (assert)
                                (("1"
                                  (expand "polygon_vertex_seq")
                                  (("1" (rewrite* "rem_mod") nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (replace -1 1)
                  (("2" (hide-all-but 1)
                    (("2" (rewrite "polygon_vertex_seq_intercept")
                      (("2" (expand "polygon_vertex_seq")
                        (("2" (rewrite "rem_self")
                          (("2" (rewrite "rem_mod") nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (seg_from_miter_point_not_on_perim subtype
    "polygon_miter_sequences.q"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.mp}"))
  (seg_from_miter_point_not_on_perim_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (seg_from_miter_point_not_on_perim subtype
    "polygon_miter_sequences.q"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.mp}")))
 (seg_from_miter_point_not_on_perim 0
  (seg_from_miter_point_not_on_perim-1 nil 3874129022
   ("" (skeep)
    (("" (skoletin*)
      (("" (flatten)
        (("" (skeep)
          (("" (name-replace "e" "edges_of_polygon(G)(i)" :hide? nil)
            (("" (rewrite "point_on_segment_has_offset")
              (("" (skeep)
                (("" (name-replace "gamma" "d!1")
                  (("" (use "three_pt_miniseq_in_polygon")
                    (("" (rewrite "point_on_segment_has_offset")
                      (("1" (skeep)
                        (("1" (name-replace "alpha" "d!2")
                          (("1" (name-replace "c" "(1 - alpha) * d")
                            (("1" (case-replace "alpha = 1")
                              (("1"
                                (assert)
                                (("1" (cancel-add -8) nil nil))
                                nil)
                               ("2"
                                (case "c > 0 and c <= d")
                                (("1"
                                  (flatten)
                                  (("1"
                                    (name-replace
                                     "mp1_c"
                                     "miter_point(G`vertices(i), G`vertices(prev_index(G, i)),
                                                                                              G`vertices(next_index(G, i)), c)")
                                    (("1"
                                      (name-replace
                                       "mp2_c"
                                       "miter_point(G`vertices(next_index(G,i)),
                                                                                                                         G`vertices(i),
                                                                                                                        G`vertices(next_index(G, next_index(G,i))), c)")
                                      (("1"
                                        (lemma
                                         "no_intersection_with_closed_skimming_segs")
                                        (("1"
                                          (inst - "S" "c" "r")
                                          (("1"
                                            (split 1)
                                            (("1"
                                              (rewrite
                                               "point_on_perim_iff_on_vertex_seq")
                                              (("1" (assert) nil nil))
                                              nil)
                                             ("2"
                                              (expand
                                               "point_on_segment_seq?")
                                              (("2"
                                                (use
                                                 "length_closed_miter_point_seq")
                                                (("1"
                                                  (case
                                                   "S`length = G`num_vertices + 1")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst + "i")
                                                      (("1"
                                                        (rewrite
                                                         "polygon_miter_point_seq_element")
                                                        (("1"
                                                          (equate
                                                           "closed_miter_point_seq(S, c)`seq(1 + i)"
                                                           "mp2_c")
                                                          (("1"
                                                            (replace
                                                             -4)
                                                            (("1"
                                                              (rewrite
                                                               "point_on_segment_has_offset"
                                                               +)
                                                              (("1"
                                                                (lemma
                                                                 "miter_pt_segment_parallel_to_orig")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "G`vertices(prev_index(G, i))"
                                                                   "G`vertices(i)"
                                                                   "G`vertices(next_index(G, i))"
                                                                   "G`vertices(next_index(G, next_index(G, i)))"
                                                                   "c")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (replace
                                                                       -4)
                                                                      (("1"
                                                                        (replace
                                                                         -5)
                                                                        (("1"
                                                                          (case
                                                                           "dir_parallel?(mp2_c - mp1_c, G`vertices(next_index(G, i)) - G`vertices(i))")
                                                                          (("1"
                                                                            (hide
                                                                             -2)
                                                                            (("1"
                                                                              (expand
                                                                               "dir_parallel?")
                                                                              (("1"
                                                                                (skeep)
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (case
                                                                                     "G`vertices(next_index(G, i)) - G`vertices(i) = e`p2 - e`p1")
                                                                                    (("1"
                                                                                      (inst
                                                                                       +
                                                                                       "alpha * gamma / pk")
                                                                                      (("1"
                                                                                        (real-props)
                                                                                        (("1"
                                                                                          (split
                                                                                           1)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -15
                                                                                             1)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -13
                                                                                               1)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (distrib
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (cancel-add
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (rewrite*
                                                                                                       "miter_point_defns_equiv")
                                                                                                      (("1"
                                                                                                        (factor
                                                                                                         1
                                                                                                         l
                                                                                                         (1
                                                                                                          3))
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -6
                                                                                                           1
                                                                                                           :dir
                                                                                                           rl)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -18
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "miter_point_hyp"
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (name-replace
                                                                                                                 "hsin"
                                                                                                                 "half_angle_vsin(^(G`vertices(prev_index(G, i)) - G`vertices(i)),
                                                                                                                                                                                                                                                          ^(G`vertices(next_index(G, i)) - G`vertices(i)))")
                                                                                                                (("1"
                                                                                                                  (name-replace
                                                                                                                   "bv"
                                                                                                                   "^(segment_bisect_vector(G`vertices(i),
                                                                                                                                                                                                                                                                  G`vertices(prev_index(G, i)),
                                                                                                                                                                                                                                                                  G`vertices(next_index(G, i))))")
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -9
                                                                                                                     1
                                                                                                                     :dir
                                                                                                                     rl)
                                                                                                                    (("1"
                                                                                                                      (distrib
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (cancel-add
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (equate
                                                                                                                           "(d - alpha * d) / hsin * bv"
                                                                                                                           "d / hsin * bv - alpha * d / hsin * bv")
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "G`vertices(i) = e`p1")
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -1
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (cancel-add
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (hide-all-but
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (grind)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (hide-all-but
                                                                                                                               (-11
                                                                                                                                1))
                                                                                                                              (("2"
                                                                                                                                (grind)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide-all-but
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (grind)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (case
                                                                                             "alpha <= pk")
                                                                                            (("1"
                                                                                              (equate
                                                                                               "alpha * gamma"
                                                                                               "gamma * alpha"
                                                                                               (assert))
                                                                                              (("1"
                                                                                                (mult-cases
                                                                                                 1)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               "miter_point"
                                                                                               -6)
                                                                                              (("2"
                                                                                                (name-replace
                                                                                                 "hcos1"
                                                                                                 "half_angle_vcos(^(G`vertices(prev_index(G, i)) - G`vertices(i)),
                                                                                                                                                                                                                                   ^(G`vertices(next_index(G, i)) - G`vertices(i)))")
                                                                                                (("2"
                                                                                                  (name-replace
                                                                                                   "hsin1"
                                                                                                   "half_angle_vsin(^(G`vertices(prev_index(G, i)) - G`vertices(i)),
                                                                                                                                                                                                                                    ^(G`vertices(next_index(G, i)) - G`vertices(i)))")
                                                                                                  (("2"
                                                                                                    (rewrite
                                                                                                     "miter_point_defns_equiv"
                                                                                                     -5)
                                                                                                    (("2"
                                                                                                      (rewrite
                                                                                                       "miter_point_defns_equiv_2"
                                                                                                       -5
                                                                                                       :dir
                                                                                                       rl)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "miter_point_prev")
                                                                                                        (("2"
                                                                                                          (name-replace
                                                                                                           "hcos2"
                                                                                                           "half_angle_vcos(^(G`vertices(i) - G`vertices(next_index(G, i))),
                                                                                                                                                                                                                                   ^(G`vertices(next_index(G, next_index(G, i))) -
                                                                                                                                                                                                                                      G`vertices(next_index(G, i))))")
                                                                                                          (("2"
                                                                                                            (name-replace
                                                                                                             "hsin2"
                                                                                                             "half_angle_vsin(^(G`vertices(i) - G`vertices(next_index(G, i))),
                                                                                                                                                                                                                                    ^(G`vertices(next_index(G, next_index(G, i))) -
                                                                                                                                                                                                                                       G`vertices(next_index(G, i))))")
                                                                                                            (("2"
                                                                                                              (case
                                                                                                               "hsin1 > 0 & hsin2 > 0")
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "min_miter_sine(S) <= hsin1 & min_miter_sine(S) <= hsin2")
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "abs(hcos1 / hsin1) <= 1 / min_miter_sine(S) &
                                       abs(hcos2 / hsin2) <= 1 / min_miter_sine(S)")
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (equate
                                                                                                                           "G`vertices(i) - G`vertices(next_index(G, i))"
                                                                                                                           "e`p1 - e`p2")
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -7)
                                                                                                                            (("1"
                                                                                                                              (name-replace
                                                                                                                               "EL"
                                                                                                                               "norm(e`p2 - e`p1)")
                                                                                                                              (("1"
                                                                                                                                (name-replace
                                                                                                                                 "MPL"
                                                                                                                                 "norm(mp2_c - mp1_c)")
                                                                                                                                (("1"
                                                                                                                                  (hide
                                                                                                                                   2)
                                                                                                                                  (("1"
                                                                                                                                    (equate
                                                                                                                                     "pk"
                                                                                                                                     "MPL / EL")
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -13
                                                                                                                                       -1
                                                                                                                                       :dir
                                                                                                                                       rl)
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         -14
                                                                                                                                         -1
                                                                                                                                         :dir
                                                                                                                                         rl)
                                                                                                                                        (("1"
                                                                                                                                          (equate
                                                                                                                                           "^(perp_left(e`p2 - e`p1))"
                                                                                                                                           "^(perp_right(e`p1 - e`p2))")
                                                                                                                                          (("1"
                                                                                                                                            (equate
                                                                                                                                             (!
                                                                                                                                              -1
                                                                                                                                              l
                                                                                                                                              1)
                                                                                                                                             "G`vertices(next_index(G, i)) - G`vertices(i) -
                                                                                                                                                                                                                                                                                                      c * (hcos2 / hsin2 + hcos1 / hsin1) *
                                                                                                                                                                                                                                                                                                       ^(e`p2 - e`p1)")
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -9)
                                                                                                                                              (("1"
                                                                                                                                                (name-replace
                                                                                                                                                 "AMPL"
                                                                                                                                                 "norm(e`p2 - e`p1 -
                                                                                                          c * abs(hcos2 / hsin2 + hcos1 / hsin1) * ^(e`p2 - e`p1))")
                                                                                                                                                (("1"
                                                                                                                                                  (cross-mult
                                                                                                                                                   1)
                                                                                                                                                  (("1"
                                                                                                                                                    (ground)
                                                                                                                                                    (("1"
                                                                                                                                                      (case
                                                                                                                                                       "AMPL <= MPL & alpha * EL <= AMPL")
                                                                                                                                                      (("1"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (split
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "AMPL"
                                                                                                                                                           1)
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             -3
                                                                                                                                                             1
                                                                                                                                                             :dir
                                                                                                                                                             rl)
                                                                                                                                                            (("1"
                                                                                                                                                              (hide-all-but
                                                                                                                                                               (-9
                                                                                                                                                                -10
                                                                                                                                                                1))
                                                                                                                                                              (("1"
                                                                                                                                                                (name-replace
                                                                                                                                                                 "ne"
                                                                                                                                                                 "^(e`p2 - e`p1)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (equate
                                                                                                                                                                   "e`p2 - e`p1"
                                                                                                                                                                   "EL * ne")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (factor!
                                                                                                                                                                     (!
                                                                                                                                                                      1
                                                                                                                                                                      *
                                                                                                                                                                      1))
                                                                                                                                                                    (("1"
                                                                                                                                                                      (rewrite*
                                                                                                                                                                       "norm_scal")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (div-by
                                                                                                                                                                         1
                                                                                                                                                                         "norm(ne)")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (equate
                                                                                                                                                                           "EL - hcos1 / hsin1 * c - hcos2 / hsin2 * c"
                                                                                                                                                                           "EL - c * (hcos1 / hsin1 + hcos2 / hsin2)")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (name-replace
                                                                                                                                                                             "hcs"
                                                                                                                                                                             "hcos1 / hsin1 + hcos2 / hsin2")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "abs")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (apply
                                                                                                                                                                                 (repeat
                                                                                                                                                                                  (lift-if)))
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (ground)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (move-terms
                                                                                                                                                                                     1
                                                                                                                                                                                     r)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (elim-unary
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (equate
                                                                                                                                                                                         "c * -hcs"
                                                                                                                                                                                         "-(c * hcs)"
                                                                                                                                                                                         (assert))
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (elim-unary
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (move-terms
                                                                                                                                                                                               -1
                                                                                                                                                                                               l
                                                                                                                                                                                               2)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (mult-cases
                                                                                                                                                                                                   -1)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (equate
                                                                                                                                                                                     "c * -hcs"
                                                                                                                                                                                     "-(c * hcs)"
                                                                                                                                                                                     (assert))
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (elim-unary
                                                                                                                                                                                       2)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (cancel-add
                                                                                                                                                                                         2)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (move-terms
                                                                                                                                                                                           2
                                                                                                                                                                                           r)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (elim-unary
                                                                                                                                                                                             2)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (real-props)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (div-by
                                                                                                                                                                                                 2
                                                                                                                                                                                                 "2")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (mult-cases
                                                                                                                                                                                                   2)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (hide-all-but
                                                                                                                                                                             1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (grind)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "EL")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "ne")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "^")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (real-props)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (hide
                                                                                                                                                           2)
                                                                                                                                                          (("2"
                                                                                                                                                            (equate
                                                                                                                                                             (!
                                                                                                                                                              -2
                                                                                                                                                              l)
                                                                                                                                                             "EL - c * abs(hcos2 / hsin2 + hcos1 / hsin1)")
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -2
                                                                                                                                                               1
                                                                                                                                                               :dir
                                                                                                                                                               rl)
                                                                                                                                                              (("1"
                                                                                                                                                                (move-terms
                                                                                                                                                                 1
                                                                                                                                                                 l)
                                                                                                                                                                (("1"
                                                                                                                                                                  (move-terms
                                                                                                                                                                   1
                                                                                                                                                                   r
                                                                                                                                                                   2)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (factor
                                                                                                                                                                     1
                                                                                                                                                                     r)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (factor
                                                                                                                                                                       -19
                                                                                                                                                                       l)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replace
                                                                                                                                                                         -19
                                                                                                                                                                         1
                                                                                                                                                                         :dir
                                                                                                                                                                         rl)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (cancel-by
                                                                                                                                                                           1
                                                                                                                                                                           "1 - alpha")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (expand
                                                                                                                                                                             "max_miter_offset")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (cross-mult
                                                                                                                                                                               -23)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "EL")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (use
                                                                                                                                                                                   "min_seg_sep_le_edge_length")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (case
                                                                                                                                                                                       "abs(hcos1 / hsin1 + hcos2 / hsin2) * min_miter_sine(S) <= 6")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (mult-by
                                                                                                                                                                                         -1
                                                                                                                                                                                         "d")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (case
                                                                                                                                                                                           "abs(hcos1 / hsin1 + hcos2 / hsin2) * min_miter_sine(S) * d <=
 min_miter_sine(S) * min_segment_sep(S)")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (cancel-by
                                                                                                                                                                                             -1
                                                                                                                                                                                             "min_miter_sine(S)")
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (hide
                                                                                                                                                                                         3)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (case
                                                                                                                                                                                           "abs(hcos1 / hsin1 + hcos2 / hsin2) <= 2 / min_miter_sine(S)")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (cross-mult
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (hide
                                                                                                                                                                                             2)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (hide-all-but
                                                                                                                                                                                               (-7
                                                                                                                                                                                                -8
                                                                                                                                                                                                1))
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (grind)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (name-replace
                                                                                                                                                               "ne"
                                                                                                                                                               "^(e`p2 - e`p1)")
                                                                                                                                                              (("2"
                                                                                                                                                                (equate
                                                                                                                                                                 "e`p2 - e`p1"
                                                                                                                                                                 "EL * ne")
                                                                                                                                                                (("1"
                                                                                                                                                                  (factor!
                                                                                                                                                                   (!
                                                                                                                                                                    1
                                                                                                                                                                    l
                                                                                                                                                                    1))
                                                                                                                                                                  (("1"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "norm_scal")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "ne"
                                                                                                                                                                       1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "abs"
                                                                                                                                                                           1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (apply
                                                                                                                                                                             (repeat
                                                                                                                                                                              (lift-if)))
                                                                                                                                                                            (("1"
                                                                                                                                                                              (case
                                                                                                                                                                               "EL >= c * abs(hcos1 / hsin1 + hcos2 / hsin2)")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (ground)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "abs"
                                                                                                                                                                                   -3)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "abs"
                                                                                                                                                                                   -2)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (hide
                                                                                                                                                                                 2)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (factor
                                                                                                                                                                                   -19
                                                                                                                                                                                   l)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (replace
                                                                                                                                                                                     -19
                                                                                                                                                                                     1
                                                                                                                                                                                     :dir
                                                                                                                                                                                     rl)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (case
                                                                                                                                                                                       "EL >= d * abs(hcos1 / hsin1 + hcos2 / hsin2)")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (equate
                                                                                                                                                                                         "d * (1 - alpha) * abs(hcos1 / hsin1 + hcos2 / hsin2)"
                                                                                                                                                                                         "(1 - alpha) * (d * abs(hcos1 / hsin1 + hcos2 / hsin2))"
                                                                                                                                                                                         (assert))
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (name-replace
                                                                                                                                                                                           "dah"
                                                                                                                                                                                           "d * abs(hcos1 / hsin1 + hcos2 / hsin2)")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (mult-cases
                                                                                                                                                                                             1
                                                                                                                                                                                             :mult-op
                                                                                                                                                                                             1*)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (hide
                                                                                                                                                                                         2)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "max_miter_offset")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (cross-mult
                                                                                                                                                                                             -22)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "EL"
                                                                                                                                                                                               1)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (use
                                                                                                                                                                                                 "min_seg_sep_le_edge_length")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (name-replace
                                                                                                                                                                                                     "ahh"
                                                                                                                                                                                                     "abs(hcos1 / hsin1 + hcos2 / hsin2)")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (div-by
                                                                                                                                                                                                       -23
                                                                                                                                                                                                       "min_miter_sine(S)")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (case
                                                                                                                                                                                                         "6 * d / min_miter_sine(S) >= d * ahh")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (cancel-by
                                                                                                                                                                                                           1
                                                                                                                                                                                                           "d")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (cross-mult
                                                                                                                                                                                                             2)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "ahh"
                                                                                                                                                                                                               2)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                                                 (-7
                                                                                                                                                                                                                  -8
                                                                                                                                                                                                                  2))
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (add-formulas
                                                                                                                                                                                                                   -1
                                                                                                                                                                                                                   -2)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (case
                                                                                                                                                                                                                     "2 >= abs(hcos1 / hsin1 + hcos2 / hsin2) * min_miter_sine(S)")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                      (hide
                                                                                                                                                                                                                       2)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (div-by
                                                                                                                                                                                                                         1
                                                                                                                                                                                                                         "min_miter_sine(S)")
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (case
                                                                                                                                                                                                                           "abs(hcos1 / hsin1 + hcos2 / hsin2) <=
                                                                 abs(hcos1 / hsin1) + abs(hcos2 / hsin2)")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                            (hide-all-but
                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "abs")
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (apply
                                                                                                                                                                                                                                 (repeat
                                                                                                                                                                                                                                  (lift-if)))
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (ground)
                                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "ne")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "EL")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "^")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (real-props)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (lemma
                                                                                                                                                       "norm_eq_0")
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -
                                                                                                                                                         "e`p2 - e`p1")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (hide-all-but
                                                                                                                                               (-19
                                                                                                                                                1))
                                                                                                                                              (("2"
                                                                                                                                                (grind)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (grind)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (replace
                                                                                                                                       -10
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (rewrite
                                                                                                                                         "norm_scal")
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "abs")
                                                                                                                                          (("2"
                                                                                                                                            (cross-mult
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("3"
                                                                                                                                      (lemma
                                                                                                                                       "norm_eq_0")
                                                                                                                                      (("3"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "e`p2 - e`p1")
                                                                                                                                        (("3"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide-all-but
                                                                                                                             (-17
                                                                                                                              1))
                                                                                                                            (("2"
                                                                                                                              (grind)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (hide-all-but
                                                                                                                         (-1
                                                                                                                          -2
                                                                                                                          -3
                                                                                                                          -4
                                                                                                                          1))
                                                                                                                        (("2"
                                                                                                                          (ground)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "abs")
                                                                                                                            (("1"
                                                                                                                              (lift-if)
                                                                                                                              (("1"
                                                                                                                                (ground)
                                                                                                                                (("1"
                                                                                                                                  (cross-mult
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (equate
                                                                                                                                     "-(hcos1 / hsin1) * min_miter_sine(S)"
                                                                                                                                     "((-hcos1) / hsin1) * min_miter_sine(S)"
                                                                                                                                     (assert))
                                                                                                                                    (("1"
                                                                                                                                      (cross-mult
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (cross-mult
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (mult-cases
                                                                                                                                           1)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (cross-mult
                                                                                                                                   2)
                                                                                                                                  (("2"
                                                                                                                                    (mult-cases
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "abs")
                                                                                                                                      (("2"
                                                                                                                                        (ground)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (expand
                                                                                                                             "abs")
                                                                                                                            (("2"
                                                                                                                              (lift-if)
                                                                                                                              (("2"
                                                                                                                                (ground)
                                                                                                                                (("1"
                                                                                                                                  (cross-mult
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (equate
                                                                                                                                     "-(hcos2 / hsin2)"
                                                                                                                                     "(-hcos2) / hsin2"
                                                                                                                                     (assert))
                                                                                                                                    (("1"
                                                                                                                                      (cross-mult
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (mult-cases
                                                                                                                                         1)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (cross-mult
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (cross-mult
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (mult-cases
                                                                                                                                       2)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "abs")
                                                                                                                                        (("2"
                                                                                                                                          (propax)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide-all-but
                                                                                                                     (-21
                                                                                                                      1))
                                                                                                                    (("2"
                                                                                                                      (ground)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "hsin1")
                                                                                                                        (("1"
                                                                                                                          (rewrite
                                                                                                                           "min_miter_sine_le_vertex_sine")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "hsin2")
                                                                                                                        (("2"
                                                                                                                          (lemma
                                                                                                                           "min_miter_sine_le_vertex_sine")
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "S"
                                                                                                                             "G"
                                                                                                                             "next_index(G, i)")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide-all-but
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (ground)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "hsin1")
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "half_angle_sine_dir_nonparallel")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "G`vertices(i)"
                                                                                                                         "G`vertices(prev_index(G, i))"
                                                                                                                         "G`vertices(next_index(G, i))")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "half_angle_vsin")
                                                                                                                              (("1"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (use
                                                                                                                           "adjacent_edges_do_not_fold_back")
                                                                                                                          (("2"
                                                                                                                            (ground)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "hsin2")
                                                                                                                    (("2"
                                                                                                                      (lemma
                                                                                                                       "half_angle_sine_dir_nonparallel")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "G`vertices(next_index(G, i))"
                                                                                                                         "G`vertices(i)"
                                                                                                                         "G`vertices(next_index(G, next_index(G, i)))")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "half_angle_vsin")
                                                                                                                              (("1"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (lemma
                                                                                                                           "adjacent_edges_do_not_fold_back")
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "G"
                                                                                                                             "next_index(G, i)")
                                                                                                                            (("2"
                                                                                                                              (ground)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       (-10
                                                                                        1))
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             (-1
                                                                              1))
                                                                            (("2"
                                                                              (expand
                                                                               "dir_parallel?")
                                                                              (("2"
                                                                                (skeep)
                                                                                (("2"
                                                                                  (inst
                                                                                   +
                                                                                   "1/pk")
                                                                                  (("2"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("2"
                                                                                      (real-props)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (lemma
                                                                     "four_pt_offset_dist_in_polygon")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "G"
                                                                       "i"
                                                                       "c")
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (lemma
                                                                     "four_pt_miniseq_in_polygon")
                                                                    (("3"
                                                                      (inst
                                                                       -
                                                                       "G"
                                                                       "i")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (lemma
                                                                 "successive_miter_pair_neq")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "G`vertices(prev_index(G, i))"
                                                                   "G`vertices(i)"
                                                                   "G`vertices(next_index(G, i))"
                                                                   "G`vertices(next_index(G, next_index(G, i)))"
                                                                   "c")
                                                                  (("1"
                                                                    (ground)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (rewrite
                                                                     "four_pt_offset_dist_in_polygon")
                                                                    nil
                                                                    nil)
                                                                   ("3"
                                                                    (rewrite
                                                                     "four_pt_miniseq_in_polygon")
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (case
                                                               "i = G`num_vertices - 1")
                                                              (("1"
                                                                (rewrite
                                                                 "closed_miter_point_seq_element")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (replace
                                                                     -1
                                                                     -4)
                                                                    (("1"
                                                                      (expand
                                                                       "next_index"
                                                                       -4)
                                                                      (("1"
                                                                        (replace
                                                                         -18
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "polygon_vertex_seq")
                                                                          (("1"
                                                                            (rewrite*
                                                                             "rem_mod")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (rewrite
                                                                 "closed_miter_point_seq_element")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (replace
                                                                     -17
                                                                     +)
                                                                    (("2"
                                                                      (expand
                                                                       "polygon_vertex_seq"
                                                                       +)
                                                                      (("2"
                                                                        (case
                                                                         "i = G`num_vertices - 2")
                                                                        (("1"
                                                                          (replace
                                                                           -1
                                                                           2)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (rewrite
                                                                               "rem_self")
                                                                              (("1"
                                                                                (rewrite*
                                                                                 "rem_mod")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1
                                                                                   -4)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "next_index"
                                                                                     -4)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (rewrite*
                                                                           "rem_mod")
                                                                          (("2"
                                                                            (expand
                                                                             "next_index"
                                                                             -3)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (replace -16 1)
                                                    (("2"
                                                      (expand
                                                       "polygon_vertex_seq")
                                                      (("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2" (assert) nil nil)
                                                 ("3"
                                                  (hide 2)
                                                  (("3"
                                                    (replace -15 1)
                                                    (("3"
                                                      (expand
                                                       "polygon_vertex_seq")
                                                      (("3"
                                                        (rewrite
                                                         "rem_self")
                                                        (("3"
                                                          (rewrite
                                                           "rem_mod")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (assert) nil nil)
                                           ("3"
                                            (replace -15 1)
                                            (("3"
                                              (expand
                                               "polygon_vertex_seq")
                                              (("3"
                                                (rewrite "rem_self")
                                                (("3"
                                                  (rewrite "rem_mod")
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2" (assert) nil nil)
                                       ("3"
                                        (use
                                         "next_edge_not_dir_parallel")
                                        (("3"
                                          (assert)
                                          (("3"
                                            (expand "edges_of_polygon")
                                            (("3"
                                              (rewrite
                                               "dir_parallel_diff")
                                              nil
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (hide-all-but (-1 -8 +))
                                  (("2"
                                    (replace -1 :dir rl)
                                    (("2"
                                      (split 1)
                                      (("1" (mult-cases 1) nil nil)
                                       ("2"
                                        (mult-cases 1)
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (use "miter_point_not_on_either_seg")
                        (("2" (assert)
                          (("2" (flatten)
                            (("2" (assert)
                              (("2"
                                (hide 1)
                                (("2"
                                  (replace -9 :dir rl)
                                  (("2"
                                    (expand "edges_of_polygon")
                                    (("2"
                                      (rewrite
                                       "point_on_segment_has_offset"
                                       +)
                                      (("2"
                                        (inst?)
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (miter_point_seqs_not_on_perim_TCC1 0
  (miter_point_seqs_not_on_perim_TCC1-2 nil 3874129022
   ("" (skeep)
    (("" (replace -1)
      (("" (hide -)
        (("" (expand "polygon_vertex_seq")
          (("" (rewrite "rem_self") (("" (rewrite "rem_mod") nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (miter_point_seqs_not_on_perim subtype "polygon_miter_sequences.S"
    "{S: segment_endpoint_sequences.edge_parallel_endpoint_seq | S`seq(0) = S`seq((number_fields.-)(S`length, 1))}"))
  (miter_point_seqs_not_on_perim_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (miter_point_seqs_not_on_perim subtype "polygon_miter_sequences.S"
    "{S: segment_endpoint_sequences.edge_parallel_endpoint_seq | S`seq(0) = S`seq((number_fields.-)(S`length, 1))}")))
 (miter_point_seqs_not_on_perim 0
  (miter_point_seqs_not_on_perim-1 nil 3874129022
   ("" (skeep)
    (("" (skoletin*)
      (("" (flatten)
        (("" (use "no_intersection_with_closed_skimming_segs")
          (("" (assert)
            (("" (replace -4 1)
              (("" (expand "point_on_segment_seq?" 1)
                (("" (expand "point_on_polygon_perimeter?")
                  (("" (skeep - t)
                    (("" (expand "edge_of_polygon?")
                      (("" (skeep)
                        (("" (ground)
                          (("1" (expand "polygon_vertex_seq")
                            (("1" (assert) nil nil)) nil)
                           ("2" (inst + "i")
                            (("1" (expand "polygon_vertex_seq")
                              (("1"
                                (rewrite "rem_mod")
                                (("1"
                                  (rewrite "rem_plus_1_eq_next_index")
                                  (("1"
                                    (replace -1 :dir rl)
                                    (("1"
                                      (expand "edges_of_polygon")
                                      (("1" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "polygon_vertex_seq")
                              (("2" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (miter_point_in_polygon_miter_seg_seq 0
  (miter_point_in_polygon_miter_seg_seq-1 nil 3874129022
   ("" (skeep)
    (("" (skoletin*)
      (("" (flatten)
        (("" (expand "closed_miter_point_seq")
          (("" (expand "point_on_segment_seq?")
            (("" (expand "singleton_seq")
              (("" (expand "o")
                (("" (assert)
                  ((""
                    (equate "miter_point_seq(S, d)`length"
                     "G`num_vertices - 1")
                    (("1" (ground)
                      (("1" (inst + "i")
                        (("1" (lift-if)
                          (("1" (assert)
                            (("1" (replace -3)
                              (("1"
                                (expand "polygon_vertex_seq" +)
                                (("1"
                                  (expand "miter_point_seq")
                                  (("1"
                                    (ground)
                                    (("1"
                                      (equate "i" "0" (assert))
                                      (("1"
                                        (rewrite* "rem_mod" 1)
                                        (("1"
                                          (expand "prev_index")
                                          (("1"
                                            (expand "next_index")
                                            (("1"
                                              (expand
                                               "point_on_segment?")
                                              (("1"
                                                (inst + "0")
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide-all-but 1)
                                          (("2"
                                            (typepred "G")
                                            (("2"
                                              (expand
                                               "simple_polygon_2d?")
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (lift-if)
                                      (("2"
                                        (ground)
                                        (("1"
                                          (case-replace
                                           "i = G`num_vertices - 2")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (rewrite "rem_self")
                                              (("1"
                                                (rewrite* "rem_mod")
                                                (("1"
                                                  (expand "prev_index")
                                                  (("1"
                                                    (expand
                                                     "next_index")
                                                    (("1"
                                                      (expand
                                                       "point_on_segment?")
                                                      (("1"
                                                        (inst + "0")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (rewrite* "rem_mod")
                                            (("2"
                                              (expand "prev_index")
                                              (("2"
                                                (expand "next_index")
                                                (("2"
                                                  (expand
                                                   "point_on_segment?")
                                                  (("2"
                                                    (inst + "0")
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (equate
                                           "i"
                                           "G`num_vertices - 1"
                                           (assert))
                                          (("2"
                                            (assert)
                                            (("2"
                                              (rewrite "rem_self")
                                              (("2"
                                                (rewrite* "rem_mod")
                                                (("2"
                                                  (expand "prev_index")
                                                  (("2"
                                                    (expand
                                                     "next_index")
                                                    (("2"
                                                      (expand
                                                       "point_on_segment?")
                                                      (("2"
                                                        (inst + "0")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "o")
                          (("2" (expand "singleton_seq")
                            (("2" (expand "miter_point_seq")
                              (("2"
                                (replace -3)
                                (("2"
                                  (expand "polygon_vertex_seq" 1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (expand "miter_point_seq" 1)
                        (("2" (replace -3)
                          (("2" (expand "polygon_vertex_seq" 1)
                            (("2" (propax) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (miter_point_not_on_perim 0
  (miter_point_not_on_perim-1 nil 3874129022
   ("" (skeep)
    (("" (use "miter_point_seqs_not_on_perim")
      (("" (assert)
        (("" (assert)
          (("" (use "miter_point_in_polygon_miter_seg_seq")
            (("" (assert)
              (("" (expand "vertex_miter_point")
                (("" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (miter_point_dist_to_vertex_bound 0
  (miter_point_dist_to_vertex_bound-1 nil 3874129022
   ("" (skeep)
    (("" (assert)
      (("" (flatten)
        (("" (use "polygon_vertex_seq_intercept")
          (("" (case-replace "i = 0")
            (("1" (expand "vertex_miter_point")
              (("1" (lemma "wrapped_miter_pt_dist_to_edge_endpt_bound")
                (("1" (inst - "polygon_vertex_seq(G)" "d")
                  (("1" (assert)
                    (("1" (replace -3)
                      (("1" (expand "prev_index")
                        (("1" (ground)
                          (("1"
                            (expand "polygon_vertex_seq" -1
                                    (1 2 3 4 5))
                            (("1" (rewrite* "rem_mod")
                              (("1"
                                (expand "next_index")
                                (("1" (propax) nil nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1)
                            (("2" (grind)
                              (("2"
                                (rewrite "rem_self")
                                (("2" (rewrite "rem_mod") nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (lemma "miter_pt_dist_to_edge_endpt_bound")
              (("2" (inst - "polygon_vertex_seq(G)" "i" "d")
                (("1" (assert)
                  (("1" (expand "polygon_vertex_seq" -1 (1 2 3 4))
                    (("1" (case-replace "i = G`num_vertices - 1")
                      (("1" (assert)
                        (("1" (rewrite "rem_self")
                          (("1" (rewrite* "rem_mod")
                            (("1" (expand "vertex_miter_point")
                              (("1"
                                (expand "prev_index")
                                (("1"
                                  (expand "next_index")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (rewrite* "rem_mod")
                        (("2" (expand "vertex_miter_point")
                          (("2" (expand "prev_index")
                            (("2" (expand "next_index")
                              (("2" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (expand "polygon_vertex_seq")
                  (("2" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (singleton_contact_free_path 0
  (singleton_contact_free_path-1 nil 3874129022
   ("" (skeep)
    (("" (expand "contact_free_path?")
      (("" (skeep)
        (("" (expand "singleton_endpoint_seq")
          (("" (expand "point_on_segment_seq?") (("" (assert) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (append_contact_free_paths_TCC1 0
  (append_contact_free_paths_TCC1-2 nil 3874129022
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (append_contact_free_paths subtype
    "(number_fields.-)(polygon_miter_sequences.X`length, 1)"
    "below[X`length]"))
  (append_contact_free_paths_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (append_contact_free_paths subtype
    "(number_fields.-)(polygon_miter_sequences.X`length, 1)"
    "below[X`length]")))
 (append_contact_free_paths_TCC2 0
  (append_contact_free_paths_TCC2-2 nil 3874129022
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (append_contact_free_paths subtype "0" "below[Y`length]"))
  (append_contact_free_paths_TCC2-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (append_contact_free_paths subtype "0" "below[Y`length]")))
 (append_contact_free_paths 0
  (append_contact_free_paths-1 nil 3874129022
   ("" (skeep)
    (("" (expand "contact_free_path?")
      (("" (skeep)
        (("" (rewrite "point_on_append_seg_seqs_on_either")
          (("" (ground)
            (("1" (inst?) (("1" (assert) nil nil)) nil)
             ("2" (hide -3)
              (("2" (inst?) (("2" (assert) nil nil)) nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (append_contact_free_paths_excl 0
  (append_contact_free_paths_excl-1 nil 3874129022
   ("" (skeep)
    (("" (expand "contact_free_path?")
      (("" (expand "contact_free_path_excl?")
        (("" (skeep)
          (("" (rewrite "point_on_append_seg_seqs_on_either")
            (("" (ground)
              (("1" (inst?) (("1" (assert) nil nil)) nil)
               ("2" (hide -3)
                (("2" (inst?) (("2" (assert) nil nil)) nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (polygon_miter_pt_seq_contact_free 0
  (polygon_miter_pt_seq_contact_free-1 nil 3874129022
   ("" (skeep)
    (("" (skoletin*)
      (("" (flatten)
        (("" (expand "contact_free_path?")
          (("" (skeep)
            (("" (rewrite "point_on_perim_iff_on_vertex_seq")
              (("" (use "no_intersection_with_closed_skimming_segs")
                (("" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (polygon_miter_pt_subseq_contact_free_TCC1 0
  (polygon_miter_pt_subseq_contact_free_TCC1-2 nil 3874129022
   ("" (skeep)
    (("" (ground)
      (("1" (expand "^")
        (("1" (expand "min")
          (("1" (lift-if)
            (("1" (ground)
              (("1" (replace -2)
                (("1" (expand "closed_miter_point_seq")
                  (("1" (expand "singleton_seq")
                    (("1" (expand "o ")
                      (("1" (expand "polygon_vertex_seq")
                        (("1" (expand "miter_point_seq")
                          (("1" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (skeep + t)
        (("2" (expand "^")
          (("2"
            (equate "closed_miter_point_seq(S, d)`length"
             "G`num_vertices + 1")
            (("1" (assert)
              (("1" (expand "min")
                (("1" (typepred "closed_miter_point_seq(S, d)")
                  (("1" (inst?)
                    (("1" (assert) nil nil)
                     ("2" (replace -4 :hide? t)
                      (("2" (hide -3)
                        (("2" (expand "closed_miter_point_seq")
                          (("2" (expand "o ")
                            (("2" (expand "singleton_seq")
                              (("2"
                                (expand "miter_point_seq")
                                (("2"
                                  (expand "polygon_vertex_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide -1 -2)
              (("2" (replace -1 :hide? t)
                (("2" (expand "closed_miter_point_seq")
                  (("2" (expand "o")
                    (("2" (expand "singleton_seq")
                      (("2" (expand "miter_point_seq")
                        (("2" (expand "polygon_vertex_seq")
                          (("2" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("3" (hide-all-but (-3 1))
              (("3" (replace -1 :hide? t)
                (("3" (expand "polygon_vertex_seq")
                  (("3" (rewrite "rem_self")
                    (("3" (rewrite "rem_mod") nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (polygon_miter_pt_subseq_contact_free subtype
    "finite_sequences[point_2d].^(miter_point_sequences.closed_miter_point_seq(polygon_miter_sequences.S, polygon_miter_sequences.d), (polygon_miter_sequences.i, polygon_miter_sequences.j))"
    "segment_endpoint_seq"))
  (polygon_miter_pt_subseq_contact_free_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (polygon_miter_pt_subseq_contact_free subtype
    "finite_sequences[point_2d].^(miter_point_sequences.closed_miter_point_seq(polygon_miter_sequences.S, polygon_miter_sequences.d), (polygon_miter_sequences.i, polygon_miter_sequences.j))"
    "segment_endpoint_seq")))
 (polygon_miter_pt_subseq_contact_free 0
  (polygon_miter_pt_subseq_contact_free-1 nil 3874129022
   ("" (skeep)
    (("" (skoletin*)
      (("" (flatten)
        (("" (expand "contact_free_path?")
          (("" (skeep)
            (("" (use "polygon_miter_pt_seq_contact_free")
              (("" (assert)
                (("" (replace -6 :dir rl)
                  (("" (replace -5 :dir rl)
                    (("" (expand "contact_free_path?")
                      (("" (inst?)
                        (("" (assert)
                          (("" (typepred "j")
                            ((""
                              (use "point_on_segment_seq_subrange_on_seq")
                              (("1" (assert) nil nil)
                               ("2"
                                (replace -5 1)
                                (("2"
                                  (rewrite
                                   "length_closed_miter_point_seq")
                                  (("2"
                                    (replace -6 1)
                                    (("2"
                                      (expand "polygon_vertex_seq")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (polygon_miter_pt_subseq_pair_contact_free_TCC1 0
  (polygon_miter_pt_subseq_pair_contact_free_TCC1-2 nil 3874129022
   ("" (skeep)
    (("" (skeep)
      (("" (case "M`length = G`num_vertices + 1")
        (("1" (replace -5)
          (("1" (expand "^" 1)
            (("1" (ground)
              (("1" (expand "min") (("1" (assert) nil nil)) nil)
               ("2" (skeep)
                (("2" (typepred "M")
                  (("2" (inst - "i + i_1")
                    (("1" (assert) nil nil)
                     ("2" (typepred "i_1")
                      (("2" (replace -8)
                        (("2" (expand "^" -1)
                          (("2" (expand "min") (("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide 2)
          (("2" (replace -3 :hide? t)
            (("2" (hide-all-but (-1 1))
              (("2" (expand "closed_miter_point_seq")
                (("2" (expand "o ")
                  (("2" (expand "singleton_seq")
                    (("2" (expand "miter_point_seq")
                      (("2" (replace -1 :hide? t)
                        (("2" (expand "polygon_vertex_seq")
                          (("2" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (polygon_miter_pt_subseq_pair_contact_free subtype
    "polygon_miter_sequences.M1" "segment_endpoint_seq"))
  (polygon_miter_pt_subseq_pair_contact_free_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (polygon_miter_pt_subseq_pair_contact_free subtype
    "polygon_miter_sequences.M1" "segment_endpoint_seq")))
 (polygon_miter_pt_subseq_pair_contact_free_TCC2 0
  (polygon_miter_pt_subseq_pair_contact_free_TCC2-2 nil 3874129022
   ("" (skeep)
    (("" (skeep)
      (("" (replace -5)
        (("" (replace -4)
          (("" (case "M`length = G`num_vertices + 1")
            (("1" (expand "^" 1)
              (("1" (expand "min")
                (("1" (ground)
                  (("1" (skeep + t)
                    (("1" (typepred "M")
                      (("1" (inst - "i!1")
                        (("1" (replace -9)
                          (("1" (expand "^" -2)
                            (("1" (expand "min")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (replace -4)
                    (("2" (hide-all-but (-2 1))
                      (("2" (expand "closed_miter_point_seq")
                        (("2" (expand "o ")
                          (("2" (expand "singleton_seq")
                            (("2" (expand "miter_point_seq")
                              (("2"
                                (replace -1 :hide? t)
                                (("2"
                                  (expand "polygon_vertex_seq")
                                  (("2" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide 2)
              (("2" (replace -3 :hide? t)
                (("2" (hide-all-but (-1 1))
                  (("2" (expand "closed_miter_point_seq")
                    (("2" (expand "o ")
                      (("2" (expand "singleton_seq")
                        (("2" (expand "miter_point_seq")
                          (("2" (replace -1 :hide? t)
                            (("2" (expand "polygon_vertex_seq")
                              (("2" (propax) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (polygon_miter_pt_subseq_pair_contact_free subtype
    "polygon_miter_sequences.M2"
    "{S: segment_endpoint_sequences.segment_endpoint_seq | polygon_miter_sequences.M1`seq((number_fields.-)(polygon_miter_sequences.M1`length, 1)) = S`seq(0)}"))
  (polygon_miter_pt_subseq_pair_contact_free_TCC2-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (polygon_miter_pt_subseq_pair_contact_free subtype
    "polygon_miter_sequences.M2"
    "{S: segment_endpoint_sequences.segment_endpoint_seq | polygon_miter_sequences.M1`seq((number_fields.-)(polygon_miter_sequences.M1`length, 1)) = S`seq(0)}")))
 (polygon_miter_pt_subseq_pair_contact_free 0
  (polygon_miter_pt_subseq_pair_contact_free-1 nil 3874129022
   ("" (skeep)
    (("" (skoletin*)
      (("" (flatten)
        (("" (lemma "polygon_miter_pt_subseq_contact_free")
          (("" (inst-cp - "G" "j" "0" "d")
            (("" (inst - "G" "G`num_vertices" "i" "d")
              (("" (assert)
                (("" (assert)
                  (("" (replace -7 :dir rl)
                    (("" (replace -6 :dir rl)
                      (("" (replace -5 :dir rl)
                        (("" (use "append_contact_free_paths")
                          (("" (assert)
                            (("" (replace -5 1)
                              ((""
                                (replace -4 1)
                                ((""
                                  (replace -6 1)
                                  ((""
                                    (replace -7 1)
                                    ((""
                                      (hide-all-but 1)
                                      ((""
                                        (expand "^")
                                        ((""
                                          (expand "min")
                                          ((""
                                            (lift-if)
                                            ((""
                                              (ground)
                                              (("1"
                                                (hide +)
                                                (("1"
                                                  (expand
                                                   "closed_miter_point_seq")
                                                  (("1"
                                                    (expand "o ")
                                                    (("1"
                                                      (expand
                                                       "singleton_seq")
                                                      (("1"
                                                        (expand
                                                         "miter_point_seq")
                                                        (("1"
                                                          (expand
                                                           "polygon_vertex_seq")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide +)
                                                (("2"
                                                  (expand
                                                   "closed_miter_point_seq")
                                                  (("2"
                                                    (expand "o")
                                                    (("2"
                                                      (expand
                                                       "singleton_seq")
                                                      (("2"
                                                        (expand
                                                         "miter_point_seq")
                                                        (("2"
                                                          (expand
                                                           "polygon_vertex_seq")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (hide-all-but 2)
                                                (("3"
                                                  (expand
                                                   "closed_miter_point_seq")
                                                  (("3"
                                                    (expand "o ")
                                                    (("3"
                                                      (expand
                                                       "singleton_seq")
                                                      (("3"
                                                        (expand
                                                         "miter_point_seq")
                                                        (("3"
                                                          (expand
                                                           "polygon_vertex_seq")
                                                          (("3"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (below_left_falling_seg_point_right_TCC1 0
  (below_left_falling_seg_point_right_TCC1-2 nil 3874129022
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (below_left_falling_seg_point_right subtype
    "polygon_miter_sequences.s`p1"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.u}"))
  (below_left_falling_seg_point_right_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (below_left_falling_seg_point_right subtype
    "polygon_miter_sequences.s`p1"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.u}")))
 (below_left_falling_seg_point_right 0
  (below_left_falling_seg_point_right-1 nil 3874129022
   ("" (skeep)
    (("" (expand "point_between_rays?")
      (("" (ground)
        (("1" (lemma "pos_cross_falling_segment_horiz_points")
          (("1" (inst - "p" "v" "e")
            (("1" (expand "segment_falling?")
              (("1" (replace -3)
                (("1" (assert)
                  (("1" (rewrite "cross_antisymmetric" -2)
                    (("1" (lemma "triangle_cross_pos_split_y")
                      (("1" (inst - "s`p1" "s`p2" "p" "u")
                        (("1" (assert)
                          (("1"
                            (name-replace*
                             ("dy" "s`p1`y - s`p2`y" "k"
                              "(u`y + 1 - dy - s`p2`y) / dy"))
                            (("1" (case "k > 0")
                              (("1"
                                (name-replace
                                 "ss"
                                 "extended_segment(reverse_segment(s), k)")
                                (("1"
                                  (use "endpoint_on_extended_segment")
                                  (("1"
                                    (replace -2)
                                    (("1"
                                      (expand "reverse_segment" -1)
                                      (("1"
                                        (lemma
                                         "triangle_cross_pos_split_y")
                                        (("1"
                                          (inst
                                           -
                                           "ss`p2"
                                           "s`p2"
                                           "p"
                                           "u")
                                          (("1"
                                            (ground)
                                            (("1"
                                              (replace -2 1 :dir rl)
                                              (("1"
                                                (expand
                                                 "extended_segment")
                                                (("1"
                                                  (expand
                                                   "reverse_segment"
                                                   1)
                                                  (("1"
                                                    (hide-all-but
                                                     (-4
                                                      -5
                                                      -11
                                                      -12
                                                      -13
                                                      1
                                                      2))
                                                    (("1"
                                                      (grind)
                                                      (("1"
                                                        (replace
                                                         -1
                                                         1
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (real-props)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (lemma
                                               "cross_antisymmetric")
                                              (("2"
                                                (inst
                                                 -
                                                 "s`p1 - u"
                                                 "p - u")
                                                (("2"
                                                  (lemma
                                                   "triangle_vertices_cross_neg")
                                                  (("2"
                                                    (inst
                                                     -
                                                     "u"
                                                     "p"
                                                     "s`p1")
                                                    (("2"
                                                      (ground)
                                                      (("2"
                                                        (lemma
                                                         "cross_above_and_below")
                                                        (("2"
                                                          (inst
                                                           -
                                                           "u - s`p1"
                                                           "p - s`p1"
                                                           "s`p2 - s`p1")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (expand
                                                               "-"
                                                               1)
                                                              (("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (lemma
                                               "all_segment_points_have_pos_cross_4")
                                              (("3"
                                                (inst
                                                 -
                                                 "s`p1"
                                                 "reverse_segment(ss)"
                                                 "u")
                                                (("3"
                                                  (expand
                                                   "reverse_segment"
                                                   -1)
                                                  (("3"
                                                    (case-replace
                                                     "ss`p1 = s`p2")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (rewrite
                                                         "point_on_reverse_segment"
                                                         1
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (expand
                                                           "reverse_segment")
                                                          (("1"
                                                            (replace
                                                             -1
                                                             :dir
                                                             rl)
                                                            (("1"
                                                              (hide-all-but
                                                               (-2 1))
                                                              (("1"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but
                                                       (-3 1))
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (assert) nil nil))
                                  nil)
                                 ("2" (assert) nil nil))
                                nil)
                               ("2"
                                (replace -1 :dir rl)
                                (("2"
                                  (cross-mult 1)
                                  (("2"
                                    (expand "dy")
                                    (("2" (real-props) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (lemma "pos_cross_falling_segment_horiz_points")
          (("2" (inst - "p" "v" "e")
            (("2" (expand "segment_falling?")
              (("2" (replace -3 :hide? t)
                (("2" (assert)
                  (("2" (hide -8 -9 4) (("2" (grind) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("3" (grind) nil nil))
        nil))
      nil))
    nil)
   nil shostak))
 (above_left_falling_seg_point_right_TCC1 0
  (above_left_falling_seg_point_right_TCC1-2 nil 3874129022
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (above_left_falling_seg_point_right subtype
    "polygon_miter_sequences.s`p1"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.u}"))
  (above_left_falling_seg_point_right_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (above_left_falling_seg_point_right subtype
    "polygon_miter_sequences.s`p1"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.u}")))
 (above_left_falling_seg_point_right_TCC2 0
  (above_left_falling_seg_point_right_TCC2-2 nil 3874129022
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (above_left_falling_seg_point_right subtype
    "polygon_miter_sequences.s`p2"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.u}"))
  (above_left_falling_seg_point_right_TCC2-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (above_left_falling_seg_point_right subtype
    "polygon_miter_sequences.s`p2"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.u}")))
 (above_left_falling_seg_point_right 0
  (above_left_falling_seg_point_right-1 nil 3874129022
   ("" (skeep)
    (("" (case "cross(s`p1 - u, p - u) > 0")
      (("1" (lemma "above_cross_diff_pos_imp_x_lt")
        (("1" (inst - "p" "u" "v")
          (("1" (ground)
            (("1" (lemma "all_segment_points_have_pos_cross_1")
              (("1" (inst - "v" "(# p1 := u, p2 := s`p1 #)" "p - u")
                (("1" (ground) nil nil)) nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (expand "point_between_rays?")
        (("2" (ground)
          (("2" (rewrite* "cross_lt_0_swap_gt_0")
            (("2" (case "s`p2`y < u`y")
              (("1" (lemma "triangle_cross_pos_above")
                (("1" (inst - "s`p1 - u" "s`p2 - u" "p - u")
                  (("1" (ground)
                    (("1" (expand "-" 1) (("1" (assert) nil nil)) nil)
                     ("2" (expand "-" 1) (("2" (assert) nil nil)) nil)
                     ("3" (expand "-" 1) (("3" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil)
               ("2" (hide -8 -9 5)
                (("2" (lemma "triangle_vertices_cross_pos")
                  (("2" (inst-cp - "u" "p" "s`p2")
                    (("2" (ground)
                      (("2" (inst-cp - "s`p1" "u" "s`p2")
                        (("2" (inst - "s`p1" "p" "s`p2")
                          (("2" (ground)
                            (("2"
                              (lemma
                               "above_cross_pos_interpolate_below")
                              (("2"
                                (inst
                                 -
                                 "s`p1 - s`p2"
                                 "p - s`p2"
                                 "u - s`p2")
                                (("2"
                                  (ground)
                                  (("1"
                                    (rewrite "cross_antisymmetric" -1)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (expand "-" 1)
                                    (("2" (assert) nil nil))
                                    nil)
                                   ("3"
                                    (expand "-" 1)
                                    (("3" (assert) nil nil))
                                    nil)
                                   ("4"
                                    (expand "-" 1)
                                    (("4" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (on_seg_from_miter_pt_to_endpoint_TCC1 0
  (on_seg_from_miter_pt_to_endpoint_TCC1-2 nil 3874129022
   ("" (skeep*)
    (("" (use "three_pt_miniseq_in_polygon")
      (("" (lemma "miter_point_neq_vtx")
        (("" (expand "vertex_miter_point")
          (("" (inst?)
            (("" (expand "edges_of_polygon") (("" (ground) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (on_seg_from_miter_pt_to_endpoint subtype
    "polygon_miter_sequences.e`p1"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.mp}"))
  (on_seg_from_miter_pt_to_endpoint_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (on_seg_from_miter_pt_to_endpoint subtype
    "polygon_miter_sequences.e`p1"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.mp}")))
 (on_seg_from_miter_pt_to_endpoint_TCC2 0
  (on_seg_from_miter_pt_to_endpoint_TCC2-2 nil 3874129022
   ("" (skeep*)
    (("" (lemma "miter_point_seqs_not_on_perim")
      (("" (inst - "G" "mp" "d")
        (("" (assert)
          (("" (ground)
            (("1" (expand "point_on_polygon_perimeter?")
              (("1" (inst + "e")
                (("1" (expand "point_on_segment?")
                  (("1" (inst + "1") (("1" (assert) nil nil)) nil))
                  nil)
                 ("2" (expand "edge_of_polygon?")
                  (("2" (inst?) (("2" (assert) nil nil)) nil)) nil))
                nil))
              nil)
             ("2" (use "miter_point_in_polygon_miter_seg_seq")
              (("2" (expand "vertex_miter_point")
                (("2" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (on_seg_from_miter_pt_to_endpoint subtype
    "polygon_miter_sequences.e`p2"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.mp}"))
  (on_seg_from_miter_pt_to_endpoint_TCC2-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (on_seg_from_miter_pt_to_endpoint subtype
    "polygon_miter_sequences.e`p2"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.mp}")))
 (on_seg_from_miter_pt_to_endpoint_TCC3 0
  (on_seg_from_miter_pt_to_endpoint_TCC3-2 nil 3874129022
   ("" (skeep*)
    (("" (use "leftmost_crossing_on_perim")
      (("" (typepred "p")
        (("" (expand "has_rightward_crossings?")
          (("" (ground) nil nil)) nil))
        nil))
      nil))
    nil)
   nil shostak
   (on_seg_from_miter_pt_to_endpoint subtype
    "polygon_miter_sequences.q"
    "{p_1: vectors_cross_2d.point_2d | p_1 /= polygon_miter_sequences.p}"))
  (on_seg_from_miter_pt_to_endpoint_TCC3-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (on_seg_from_miter_pt_to_endpoint subtype
    "polygon_miter_sequences.q"
    "{p_1: vectors_cross_2d.point_2d | p_1 /= polygon_miter_sequences.p}")))
 (on_seg_from_miter_pt_to_endpoint_TCC4 0
  (on_seg_from_miter_pt_to_endpoint_TCC4-2 nil 3874129022
   ("" (skeep*)
    (("" (use "on_seg_from_miter_pt_to_endpoint_TCC1")
      (("" (assert)
        (("" (use "on_seg_from_miter_pt_to_endpoint_TCC2")
          (("" (assert)
            (("" (inst - "mp")
              (("" (inst - "mp")
                (("" (ground)
                  (("" (expand "segment_endpoint?")
                    (("" (propax) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (on_seg_from_miter_pt_to_endpoint subtype
    "polygon_miter_sequences.u"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.mp}"))
  (on_seg_from_miter_pt_to_endpoint_TCC4-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (on_seg_from_miter_pt_to_endpoint subtype
    "polygon_miter_sequences.u"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.mp}")))
 (on_seg_from_miter_pt_to_endpoint 0
  (on_seg_from_miter_pt_to_endpoint-1 nil 3874129022
   ("" (skeep)
    (("" (skoletin*)
      (("" (flatten)
        (("" (case "p = q")
          (("1" (use "leftmost_crossing_on_perim")
            (("1" (typepred "p")
              (("1" (expand "has_rightward_crossings?")
                (("1" (ground) nil nil)) nil))
              nil))
            nil)
           ("2" (use "leftmost_intersection_on_crossed_edge")
            (("2" (assert)
              (("2" (case "p`y = q`y & p`x < q`x")
                (("1" (flatten)
                  (("1" (expand "segment_falling?")
                    (("1" (use "crossing_within_falling_edge_y_range")
                      (("1" (assert)
                        (("1" (replace -11 :dir rl)
                          (("1" (replace -10 :dir rl)
                            (("1" (replace -9 :dir rl)
                              (("1"
                                (flatten)
                                (("1"
                                  (case
                                   "point_on_segment?(q, reverse_segment(e))")
                                  (("1"
                                    (rewrite
                                     "point_on_segment_has_offset"
                                     -)
                                    (("1"
                                      (rewrite
                                       "point_on_segment_has_offset"
                                       -)
                                      (("1"
                                        (skeep*)
                                        (("1"
                                          (expand "reverse_segment")
                                          (("1"
                                            (case
                                             "e`p2`y < p`y AND p`y < e`p1`y")
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (hide -5 -6)
                                                (("1"
                                                  (use
                                                   "leftmost_intersection_on_crossed_edge")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (beta)
                                                      (("1"
                                                        (replace
                                                         -16
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (replace
                                                           -15
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (use
                                                             "three_pt_miniseq_in_polygon")
                                                            (("1"
                                                              (expand
                                                               "vertex_miter_point")
                                                              (("1"
                                                                (use
                                                                 "miter_point_cross_gt_0")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (hide
                                                                       -1)
                                                                      (("1"
                                                                        (replace
                                                                         -16
                                                                         :dir
                                                                         rl)
                                                                        (("1"
                                                                          (case-replace
                                                                           "G`vertices(i) = e`p1")
                                                                          (("1"
                                                                            (case-replace
                                                                             "G`vertices(next_index(G,i)) = e`p2")
                                                                            (("1"
                                                                              (case
                                                                               "p`y = mp`y")
                                                                              (("1"
                                                                                (inst
                                                                                 +
                                                                                 "e`p2"
                                                                                 "mp")
                                                                                (("1"
                                                                                  (expand
                                                                                   "segment_endpoint?")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (case
                                                                                       "p`x < mp`x AND mp`x < q`x")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (ground)
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "point_on_segment_has_offset"
                                                                                             +)
                                                                                            (("1"
                                                                                              (inst
                                                                                               +
                                                                                               "(mp`x - p`x) / (q`x - p`x)")
                                                                                              (("1"
                                                                                                (ground)
                                                                                                (("1"
                                                                                                  (apply-extensionality
                                                                                                   :hide?
                                                                                                   t)
                                                                                                  (("1"
                                                                                                    (hide-all-but
                                                                                                     (-1
                                                                                                      -2
                                                                                                      +))
                                                                                                    (("1"
                                                                                                      (grind)
                                                                                                      (("1"
                                                                                                        (move-terms
                                                                                                         1
                                                                                                         r
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (factor
                                                                                                           1
                                                                                                           r)
                                                                                                          (("1"
                                                                                                            (cross-mult
                                                                                                             1)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     (-3
                                                                                                      -14
                                                                                                      1))
                                                                                                    (("2"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (cross-mult
                                                                                                   1)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (cross-mult
                                                                                                 1)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "point_on_segment?")
                                                                                            (("2"
                                                                                              (inst
                                                                                               +
                                                                                               "0")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         5)
                                                                                        (("2"
                                                                                          (split
                                                                                           1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "point_between_rays?")
                                                                                            (("1"
                                                                                              (equate
                                                                                               "p - mp"
                                                                                               "(p`x - mp`x, 0)")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "cross")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "-")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "e`p1`y * mp`x + mp`y * p`x - e`p1`y * p`x - mp`x * mp`y <= 0")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -19
                                                                                                         :dir
                                                                                                         rl)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (move-terms
                                                                                                             -1
                                                                                                             l
                                                                                                             (2
                                                                                                              3))
                                                                                                            (("1"
                                                                                                              (move-terms
                                                                                                               -18
                                                                                                               l
                                                                                                               (2
                                                                                                                3))
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (factor
                                                                                                                   -1
                                                                                                                   *)
                                                                                                                  (("1"
                                                                                                                    (cancel-by
                                                                                                                     -1
                                                                                                                     "e`p1`y - mp`y")
                                                                                                                    (("1"
                                                                                                                      (move-terms
                                                                                                                       -19
                                                                                                                       l)
                                                                                                                      (("1"
                                                                                                                        (factor
                                                                                                                         -19
                                                                                                                         r
                                                                                                                         (1
                                                                                                                          2))
                                                                                                                        (("1"
                                                                                                                          (factor
                                                                                                                           -19
                                                                                                                           r
                                                                                                                           (2
                                                                                                                            3))
                                                                                                                          (("1"
                                                                                                                            (equate
                                                                                                                             "mp`x * (-e`p2`y + mp`y)"
                                                                                                                             "-mp`x * (e`p2`y - mp`y)"
                                                                                                                             (assert))
                                                                                                                            (("1"
                                                                                                                              (factor
                                                                                                                               -19
                                                                                                                               r)
                                                                                                                              (("1"
                                                                                                                                (mult-cases
                                                                                                                                 -19)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (factor
                                                                                                         1
                                                                                                         l
                                                                                                         (1
                                                                                                          3))
                                                                                                        (("2"
                                                                                                          (factor
                                                                                                           1
                                                                                                           l
                                                                                                           (2
                                                                                                            3))
                                                                                                          (("2"
                                                                                                            (equate
                                                                                                             "mp`y * (p`x - mp`x)"
                                                                                                             "-mp`y * (mp`x - p`x)"
                                                                                                             (assert))
                                                                                                            (("2"
                                                                                                              (factor
                                                                                                               1
                                                                                                               l)
                                                                                                              (("2"
                                                                                                                (mult-cases
                                                                                                                 1)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (apply-extensionality
                                                                                                 :hide?
                                                                                                 t)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "-"
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "-"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (case
                                                                                             "mp`y = q`y")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -14)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -19
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("1"
                                                                                                    (hide-all-but
                                                                                                     (-1
                                                                                                      -5
                                                                                                      -9
                                                                                                      -10
                                                                                                      -17
                                                                                                      1))
                                                                                                    (("1"
                                                                                                      (grind)
                                                                                                      (("1"
                                                                                                        (equate
                                                                                                         "(e)"
                                                                                                         "e"
                                                                                                         (assert))
                                                                                                        (("1"
                                                                                                          (name-replace*
                                                                                                           ("a"
                                                                                                            "e`p1"
                                                                                                            "b"
                                                                                                            "e`p2"))
                                                                                                          (("1"
                                                                                                            (factor
                                                                                                             -4
                                                                                                             l
                                                                                                             (1
                                                                                                              5))
                                                                                                            (("1"
                                                                                                              (factor
                                                                                                               -4
                                                                                                               l
                                                                                                               (3
                                                                                                                6))
                                                                                                              (("1"
                                                                                                                (factor
                                                                                                                 -4
                                                                                                                 l
                                                                                                                 (5
                                                                                                                  6))
                                                                                                                (("1"
                                                                                                                  (factor
                                                                                                                   -4
                                                                                                                   l
                                                                                                                   (4
                                                                                                                    5))
                                                                                                                  (("1"
                                                                                                                    (equate
                                                                                                                     "a`x * b`y * (-1 + d!2)"
                                                                                                                     "-(a`x * b`y * (1 - d!2))"
                                                                                                                     (assert))
                                                                                                                    (("1"
                                                                                                                      (elim-unary
                                                                                                                       -4)
                                                                                                                      (("1"
                                                                                                                        (factor
                                                                                                                         -4
                                                                                                                         l
                                                                                                                         (3
                                                                                                                          4))
                                                                                                                        (("1"
                                                                                                                          (equate
                                                                                                                           "-b`y + a`y"
                                                                                                                           "a`y - b`y"
                                                                                                                           (assert))
                                                                                                                          (("1"
                                                                                                                            (equate
                                                                                                                             "(mp)`x * (b`y - a`y)"
                                                                                                                             "-(mp`x * (a`y - b`y))"
                                                                                                                             (assert))
                                                                                                                            (("1"
                                                                                                                              (elim-unary
                                                                                                                               -4)
                                                                                                                              (("1"
                                                                                                                                (factor
                                                                                                                                 -4
                                                                                                                                 l)
                                                                                                                                (("1"
                                                                                                                                  (cancel-by
                                                                                                                                   -4
                                                                                                                                   "a`y - b`y")
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               "leftmost_intersection_point")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (case
                                                                                 "p`y < mp`y")
                                                                                (("1"
                                                                                  (name-replace*
                                                                                   ("dx"
                                                                                    "mp`x - e`p2`x"
                                                                                    "dy"
                                                                                    "mp`y - e`p2`y"))
                                                                                  (("1"
                                                                                    (name-replace
                                                                                     "v_dx"
                                                                                     "(p`y - e`p2`y) * dx / dy"
                                                                                     :hide?
                                                                                     nil)
                                                                                    (("1"
                                                                                      (case
                                                                                       "point_on_segment?((e`p2`x + v_dx, p`y), (# p1 := mp, p2 := e`p2 #))")
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "pos_cross_falling_segment_horiz_points")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "p"
                                                                                           "(# x := e`p2`x + v_dx, y := p`y #)"
                                                                                           "(# p1 := mp, p2 := e`p2 #)")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "segment_falling?")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "pos_cross_falling_segment_horiz_points")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "(# x := e`p2`x + v_dx, y := p`y #)"
                                                                                                     "q"
                                                                                                     "e")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "segment_falling?")
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           +
                                                                                                           "e`p2"
                                                                                                           "(e`p2`x + v_dx, p`y)")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "segment_endpoint?")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -3)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "point_on_segment_has_norm_offset"
                                                                                                                   +)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "length")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "^")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "norm_diff_horiz")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "abs")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             +
                                                                                                                             "e`p2`x + v_dx - p`x")
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               5)
                                                                                                                              (("1"
                                                                                                                                (apply-extensionality
                                                                                                                                 :hide?
                                                                                                                                 t)
                                                                                                                                (("1"
                                                                                                                                  (real-props)
                                                                                                                                  (("1"
                                                                                                                                    (hide-all-but
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (expand*
                                                                                                                                       "+"
                                                                                                                                       "*"
                                                                                                                                       "-")
                                                                                                                                      (("1"
                                                                                                                                        (factor
                                                                                                                                         1
                                                                                                                                         r
                                                                                                                                         (2
                                                                                                                                          3))
                                                                                                                                        (("1"
                                                                                                                                          (name-replace
                                                                                                                                           "qpx"
                                                                                                                                           "q`x - p`x")
                                                                                                                                          (("1"
                                                                                                                                            (real-props)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-4
                                                                                                                                    -5
                                                                                                                                    -6
                                                                                                                                    -18
                                                                                                                                    1))
                                                                                                                                  (("2"
                                                                                                                                    (grind)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           6)
                                                                                                          (("2"
                                                                                                            (name-replace
                                                                                                             "v"
                                                                                                             "(# x := e`p2`x + v_dx, y := p`y #)"
                                                                                                             :hide?
                                                                                                             nil)
                                                                                                            (("2"
                                                                                                              (rewrite
                                                                                                               "point_on_reverse_segment"
                                                                                                               :dir
                                                                                                               rl)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "reverse_segment")
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   "point_on_segment_has_offset")
                                                                                                                  (("2"
                                                                                                                    (skeep)
                                                                                                                    (("2"
                                                                                                                      (case-replace
                                                                                                                       "d!3 = 0")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replace
                                                                                                                         -3)
                                                                                                                        (("2"
                                                                                                                          (equate
                                                                                                                           "e`p2 + d!3 * (mp - e`p2) - e`p1"
                                                                                                                           "(1 - d!3) * (e`p2 - e`p1) + d!3 * (mp - e`p1)")
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "cross_distrib_add_1")
                                                                                                                            (("1"
                                                                                                                              (rewrite
                                                                                                                               "cross_scales_1")
                                                                                                                              (("1"
                                                                                                                                (rewrite
                                                                                                                                 "cross_scales_1")
                                                                                                                                (("1"
                                                                                                                                  (rewrite
                                                                                                                                   "cross_self_zero")
                                                                                                                                  (("1"
                                                                                                                                    (real-props)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide-all-but
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (grind)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   6)
                                                                                                  (("2"
                                                                                                    (name-replace
                                                                                                     "v"
                                                                                                     "(# x := e`p2`x + v_dx, y := p`y #)")
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "below_left_falling_seg_point_right")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "p"
                                                                                                         "mp"
                                                                                                         "v"
                                                                                                         "e"
                                                                                                         "(# p1 := mp, p2 := e`p2 #)")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (split
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "all_segment_points_have_pos_cross_2")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "v"
                                                                                                                 "(# p1 := mp, p2 := e`p2 #)"
                                                                                                                 "p - mp")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (ground)
                                                                                                                    (("1"
                                                                                                                      (use
                                                                                                                       "cross_diff_triangle_gt")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (use
                                                                                                                           "above_horiz_cross_diff_neg")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "v"
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "v"
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -23
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (hide-all-but
                                                                                                                     -9)
                                                                                                                    (("2"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("3"
                                                                                                              (expand
                                                                                                               "point_between_rays?")
                                                                                                              (("3"
                                                                                                                (replace
                                                                                                                 -22
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("3"
                                                                                                                  (split
                                                                                                                   -21)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (ground)
                                                                                                                      (("1"
                                                                                                                        (use
                                                                                                                         "falling_segment_horiz_points_pos_cross")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (rewrite
                                                                                                                         "cross_antisymmetric"
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       "cross_antisymmetric"
                                                                                                                       -2)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("4"
                                                                                                              (expand
                                                                                                               "v"
                                                                                                               1)
                                                                                                              (("4"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (ground)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (rewrite
                                                                                         "point_on_reverse_segment"
                                                                                         :dir
                                                                                         rl)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "reverse_segment")
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "point_on_segment_has_offset")
                                                                                            (("2"
                                                                                              (inst
                                                                                               +
                                                                                               "(p`y - e`p2`y) / dy")
                                                                                              (("1"
                                                                                                (ground)
                                                                                                (("1"
                                                                                                  (apply-extensionality
                                                                                                   :hide?
                                                                                                   t)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "+"
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "*"
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "-"
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (factor
                                                                                                           1
                                                                                                           r)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -3
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "v_dx"
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (real-props)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "+"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "*"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "-"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (factor
                                                                                                           1
                                                                                                           r
                                                                                                           (2
                                                                                                            3))
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -2)
                                                                                                            (("2"
                                                                                                              (real-props)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (cross-mult
                                                                                                   1)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (cross-mult
                                                                                                 1)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (ground)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (ground)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (name-replace*
                                                                                   ("dx"
                                                                                    "mp`x - e`p1`x"
                                                                                    "dy"
                                                                                    "mp`y - e`p1`y"))
                                                                                  (("2"
                                                                                    (name-replace
                                                                                     "v_dx"
                                                                                     "(p`y - e`p1`y) * dx / dy"
                                                                                     :hide?
                                                                                     nil)
                                                                                    (("1"
                                                                                      (case
                                                                                       "point_on_segment?((e`p1`x + v_dx, p`y), (# p1 := e`p1, p2 := mp #))")
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "pos_cross_falling_segment_horiz_points")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "p"
                                                                                           "(# x := e`p1`x + v_dx, y := p`y #)"
                                                                                           "(# p1 := e`p1, p2 := mp #)")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "segment_falling?")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "pos_cross_falling_segment_horiz_points")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "(# x := e`p1`x + v_dx, y := p`y #)"
                                                                                                     "q"
                                                                                                     "e")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "segment_falling?")
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           +
                                                                                                           "e`p1"
                                                                                                           "(e`p1`x + v_dx, p`y)")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "segment_endpoint?")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (ground)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "point_on_segment_has_norm_offset"
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "length")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "^")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "norm_diff_horiz")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "abs")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             +
                                                                                                                             "e`p1`x + v_dx - p`x")
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (apply-extensionality
                                                                                                                                 :hide?
                                                                                                                                 t)
                                                                                                                                (("1"
                                                                                                                                  (real-props)
                                                                                                                                  (("1"
                                                                                                                                    (hide-all-but
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (expand*
                                                                                                                                       "+"
                                                                                                                                       "*"
                                                                                                                                       "-")
                                                                                                                                      (("1"
                                                                                                                                        (factor
                                                                                                                                         1
                                                                                                                                         r
                                                                                                                                         (2
                                                                                                                                          3))
                                                                                                                                        (("1"
                                                                                                                                          (name-replace
                                                                                                                                           "qpx"
                                                                                                                                           "q`x - p`x")
                                                                                                                                          (("1"
                                                                                                                                            (real-props)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-4
                                                                                                                                    -5
                                                                                                                                    -6
                                                                                                                                    -18
                                                                                                                                    1))
                                                                                                                                  (("2"
                                                                                                                                    (grind)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (rewrite
                                                                                                                   "point_on_reverse_segment"
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "reverse_segment")
                                                                                                                    (("2"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           7)
                                                                                                          (("2"
                                                                                                            (name-replace
                                                                                                             "v"
                                                                                                             "(# x := e`p1`x + v_dx, y := p`y #)"
                                                                                                             :hide?
                                                                                                             nil)
                                                                                                            (("2"
                                                                                                              (rewrite
                                                                                                               "point_on_segment_has_offset")
                                                                                                              (("2"
                                                                                                                (skeep)
                                                                                                                (("2"
                                                                                                                  (case-replace
                                                                                                                   "d!3 = 0")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (replace
                                                                                                                     -3)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "cross_scales_1")
                                                                                                                        (("2"
                                                                                                                          (real-props)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   7)
                                                                                                  (("2"
                                                                                                    (name-replace
                                                                                                     "v"
                                                                                                     "(# x := e`p1`x + v_dx, y := p`y #)")
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "above_left_falling_seg_point_right")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "p"
                                                                                                         "mp"
                                                                                                         "v"
                                                                                                         "e")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "point_on_reverse_segment"
                                                                                                             -1
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "reverse_segment")
                                                                                                              (("2"
                                                                                                                (ground)
                                                                                                                (("1"
                                                                                                                  (lemma
                                                                                                                   "all_segment_points_have_pos_cross_2")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "v"
                                                                                                                     "(# p1 := e`p1, p2 := mp #)"
                                                                                                                     "p - e`p1")
                                                                                                                    (("1"
                                                                                                                      (ground)
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "cross_diff_triangle_gt"
                                                                                                                         2)
                                                                                                                        (("1"
                                                                                                                          (rewrite
                                                                                                                           "above_horiz_cross_diff_neg")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "v"
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "v"
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (replace
                                                                                                                   -22
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       "cross_self_zero")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("3"
                                                                                                                  (replace
                                                                                                                   -21
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("3"
                                                                                                                    (expand
                                                                                                                     "v")
                                                                                                                    (("3"
                                                                                                                      (use
                                                                                                                       "falling_segment_horiz_points_pos_cross")
                                                                                                                      (("3"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("4"
                                                                                                                  (expand
                                                                                                                   "v"
                                                                                                                   1)
                                                                                                                  (("4"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (ground)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         7)
                                                                                        (("2"
                                                                                          (rewrite
                                                                                           "point_on_segment_has_offset")
                                                                                          (("2"
                                                                                            (inst
                                                                                             +
                                                                                             "(p`y - e`p1`y) / dy")
                                                                                            (("1"
                                                                                              (ground)
                                                                                              (("1"
                                                                                                (apply-extensionality
                                                                                                 :hide?
                                                                                                 t)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "+"
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "*"
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "-"
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (factor
                                                                                                         1
                                                                                                         r)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -3
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "v_dx"
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (real-props)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "+"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "*"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "-"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (factor
                                                                                                         1
                                                                                                         r
                                                                                                         (2
                                                                                                          3))
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -2)
                                                                                                          (("2"
                                                                                                            (real-props)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (cross-mult
                                                                                                 1)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (cross-mult
                                                                                               1)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (ground)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (ground)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               (-17
                                                                                1))
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             (-16
                                                                              1))
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide -11 5)
                                              (("2"
                                                (ground)
                                                (("1"
                                                  (case-replace
                                                   "d!1 = 0")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (replace -1 -5)
                                                    (("2"
                                                      (hide-all-but
                                                       (-2
                                                        -3
                                                        -5
                                                        -10
                                                        1
                                                        2))
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (case-replace
                                                   "d!2 = 0")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (replace -7 -5)
                                                    (("2"
                                                      (hide-all-but
                                                       (-4
                                                        -7
                                                        -8
                                                        -10
                                                        1
                                                        2))
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (rewrite
                                     "point_on_reverse_segment")
                                    nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (use "leftmost_crossing_xval_bound")
                  (("2" (expand "leftmost_intersection_point")
                    (("2" (ground) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (on_seg_from_miter_pt_contact_free_TCC1 0
  (on_seg_from_miter_pt_contact_free_TCC1-2 nil 3874129022
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (on_seg_from_miter_pt_contact_free subtype "0" "below[S`length]"))
  (on_seg_from_miter_pt_contact_free_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (on_seg_from_miter_pt_contact_free subtype "0" "below[S`length]")))
 (on_seg_from_miter_pt_contact_free_TCC2 0
  (on_seg_from_miter_pt_contact_free_TCC2-2 nil 3874129022
   ("" (skeep*) (("" (typepred "S") (("" (ground) nil nil)) nil)) nil)
   nil shostak
   (on_seg_from_miter_pt_contact_free subtype
    "(number_fields.-)(polygon_miter_sequences.S`length, 1)"
    "below[S`length]"))
  (on_seg_from_miter_pt_contact_free_TCC2-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (on_seg_from_miter_pt_contact_free subtype
    "(number_fields.-)(polygon_miter_sequences.S`length, 1)"
    "below[S`length]")))
 (on_seg_from_miter_pt_contact_free 0
  (on_seg_from_miter_pt_contact_free-1 nil 3874129022
   ("" (skeep)
    (("" (skoletin*)
      (("" (flatten)
        (("" (case "p = q")
          (("1" (use "leftmost_crossing_on_perim")
            (("1" (typepred "p")
              (("1" (expand "has_rightward_crossings?")
                (("1" (ground) nil nil)) nil))
              nil))
            nil)
           ("2" (case "p`y = q`y")
            (("1" (case-replace "mp = p")
              (("1"
                (inst +
                 "(# length := 1, seq := lambda (i: below(1)): p #)")
                (("1" (expand "contact_free_path?")
                  (("1" (skeep)
                    (("1" (expand "point_on_segment_seq?")
                      (("1" (typepred "p")
                        (("1" (expand "has_rightward_crossings?")
                          (("1" (ground) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (skeep) nil nil))
                nil)
               ("2" (case "mp = q")
                (("1" (use "miter_point_seqs_not_on_perim")
                  (("1" (assert)
                    (("1" (ground)
                      (("1" (use "leftmost_crossing_on_perim")
                        (("1" (assert) nil nil)) nil)
                       ("2" (expand "vertex_miter_point")
                        (("2"
                          (use "miter_point_in_polygon_miter_seg_seq")
                          (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (case "p`y = mp`y")
                  (("1" (case "e`p2`y < q`y & q`y < e`p1`y")
                    (("1" (flatten)
                      (("1" (case "p`x < mp`x & mp`x < q`x")
                        (("1" (flatten)
                          (("1"
                            (inst +
                             "(# length := 2, seq := lambda (i: below(2)):
                                                                               if i = 0 then p else mp endif #)")
                            (("1" (ground)
                              (("1"
                                (expand "contact_free_path?")
                                (("1"
                                  (skeep)
                                  (("1"
                                    (expand "point_on_segment_seq?")
                                    (("1"
                                      (skeep)
                                      (("1"
                                        (use
                                         "left_of_leftmost_crossing_not_on_perim_2")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (replace -16 :dir rl)
                                            (("1"
                                              (inst?)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (rewrite
                                                   "point_on_segment_has_offset")
                                                  (("1"
                                                    (skeep)
                                                    (("1"
                                                      (replace -1 1)
                                                      (("1"
                                                        (case-replace
                                                         "d!1 = 0")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (split 2)
                                                          (("1"
                                                            (hide-all-but
                                                             (-8 1))
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (-4 1 2))
                                                            (("2"
                                                              (grind)
                                                              (("2"
                                                                (cancel-add
                                                                 1)
                                                                (("2"
                                                                  (cancel-by
                                                                   1
                                                                   "d!1")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (hide-all-but
                                                             (-1
                                                              -2
                                                              -3
                                                              -4
                                                              -5
                                                              1
                                                              2))
                                                            (("3"
                                                              (hide -3)
                                                              (("3"
                                                                (grind)
                                                                (("3"
                                                                  (case
                                                                   "mp`x * d!1 - p`x * d!1 <= mp`x - p`x")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (factor
                                                                     1
                                                                     l)
                                                                    (("2"
                                                                      (name-replace
                                                                       "mpx"
                                                                       "mp`x - p`x")
                                                                      (("2"
                                                                        (mult-cases
                                                                         1
                                                                         :mult-op
                                                                         1*)
                                                                        (("1"
                                                                          (ground)
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "mpx")
                                                                          (("2"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (skeep) (("2" (assert) nil nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide 7)
                          (("2"
                            (use "point_between_rays_antisymmetric")
                            (("1" (assert)
                              (("1"
                                (hide -7)
                                (("1"
                                  (expand "segment_falling?")
                                  (("1"
                                    (lemma "miter_point_cross_gt_0")
                                    (("1"
                                      (inst
                                       -
                                       "G`vertices(prev_index(G, i))"
                                       "e`p1"
                                       "e`p2"
                                       "d")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (hide -1)
                                            (("1"
                                              (equate
                                               "miter_point(e`p1, G`vertices(prev_index(G, i)), e`p2, d)"
                                               "mp")
                                              (("1"
                                                (split 2)
                                                (("1"
                                                  (expand
                                                   "point_between_rays?")
                                                  (("1"
                                                    (equate
                                                     "p - mp"
                                                     "(p`x - mp`x, 0)")
                                                    (("1"
                                                      (expand "cross")
                                                      (("1"
                                                        (expand "-")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (hide -1)
                                                            (("1"
                                                              (equate
                                                               "e`p1`y * mp`x + mp`y * p`x - e`p1`y * p`x - mp`x * mp`y"
                                                               "(e`p1`y - mp`y) * (mp`x - p`x)"
                                                               (assert))
                                                              (("1"
                                                                (equate
                                                                 "e`p2`y * mp`x + mp`y * p`x - e`p2`y * p`x - mp`x * mp`y"
                                                                 "(e`p2`y - mp`y) * (mp`x - p`x)"
                                                                 (assert))
                                                                (("1"
                                                                  (split
                                                                   2)
                                                                  (("1"
                                                                    (mult-cases
                                                                     1)
                                                                    (("1"
                                                                      (apply-extensionality
                                                                       4
                                                                       :hide?
                                                                       t)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (mult-cases
                                                                     1)
                                                                    (("2"
                                                                      (apply-extensionality
                                                                       4
                                                                       :hide?
                                                                       t)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but
                                                       (-4 1))
                                                      (("2"
                                                        (grind-with-ext)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (assert)
                                                  (("2"
                                                    (lemma
                                                     "same_side_points_off_line_2")
                                                    (("2"
                                                      (inst
                                                       -
                                                       "e`p1"
                                                       "e`p2"
                                                       "p"
                                                       "mp"
                                                       "q")
                                                      (("2"
                                                        (ground)
                                                        (("1"
                                                          (use
                                                           "leftmost_intersection_on_crossed_edge")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (replace
                                                               -12
                                                               :dir
                                                               rl)
                                                              (("1"
                                                                (replace
                                                                 -11
                                                                 :dir
                                                                 rl)
                                                                (("1"
                                                                  (rewrite
                                                                   "point_on_segment_has_offset")
                                                                  (("1"
                                                                    (skeep)
                                                                    (("1"
                                                                      (inst
                                                                       +
                                                                       "d!1")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (case
                                                           "p`x < q`x")
                                                          (("1"
                                                            (ground)
                                                            (("1"
                                                              (use
                                                               "falling_segment_horiz_points_pos_cross")
                                                              (("1"
                                                                (expand
                                                                 "segment_falling?")
                                                                (("1"
                                                                  (use
                                                                   "leftmost_intersection_on_crossed_edge")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (use
                                                             "leftmost_crossing_xval_bound")
                                                            (("2"
                                                              (expand
                                                               "leftmost_intersection_point")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (case
                                                           "p`x < q`x")
                                                          (("1"
                                                            (inst
                                                             +
                                                             "(q`x - p`x) / (mp`x - p`x)")
                                                            (("1"
                                                              (ground)
                                                              (("1"
                                                                (cross-mult
                                                                 1)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (equate
                                                                 "1 - (q`x - p`x) / (mp`x - p`x)"
                                                                 "(mp`x - q`x) / (mp`x - p`x)")
                                                                (("1"
                                                                  (mult-by
                                                                   1
                                                                   "mp`x - p`x")
                                                                  (("1"
                                                                    (equate
                                                                     "(mp`x - p`x) *
        ((mp`x - q`x) / (mp`x - p`x) * p + (q`x - p`x) / (mp`x - p`x) * mp)"
                                                                     "(mp`x - q`x) * p + (q`x - p`x) * mp")
                                                                    (("1"
                                                                      (apply-extensionality
                                                                       :hide?
                                                                       t)
                                                                      (("1"
                                                                        (expand
                                                                         "+"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "*"
                                                                           1)
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide-all-but
                                                                         (-5
                                                                          -6
                                                                          1))
                                                                        (("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (use
                                                                         "scal_add_right")
                                                                        (("2"
                                                                          (replace
                                                                           -1
                                                                           :hide?
                                                                           t)
                                                                          (("2"
                                                                            (use
                                                                             "scal_assoc")
                                                                            (("2"
                                                                              (replace
                                                                               -1
                                                                               :hide?
                                                                               t)
                                                                              (("2"
                                                                                (use
                                                                                 "scal_assoc")
                                                                                (("2"
                                                                                  (replace
                                                                                   -1
                                                                                   :hide?
                                                                                   t)
                                                                                  (("2"
                                                                                    (equate
                                                                                     "(mp`x - p`x) * ((mp`x - q`x) / (mp`x - p`x))"
                                                                                     "mp`x - q`x")
                                                                                    (("1"
                                                                                      (equate
                                                                                       "(mp`x - p`x) * ((q`x - p`x) / (mp`x - p`x))"
                                                                                       "q`x - p`x")
                                                                                      (("1"
                                                                                        (cross-mult
                                                                                         1)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (cross-mult
                                                                                       1)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (equate
                                                                   "1 - (q`x - p`x) / (mp`x - p`x)"
                                                                   "((mp`x - p`x) - (q`x - p`x)) / (mp`x - p`x)")
                                                                  (("2"
                                                                    (name-replace
                                                                     "mpx"
                                                                     "mp`x - p`x")
                                                                    (("2"
                                                                      (cross-mult
                                                                       1)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (cross-mult
                                                               1)
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("3"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (use
                                                             "leftmost_crossing_xval_bound")
                                                            (("2"
                                                              (expand
                                                               "leftmost_intersection_point")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 "vertex_miter_point")
                                                (("2"
                                                  (expand
                                                   "edges_of_polygon")
                                                  (("2"
                                                    (replace -9)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "vertex_miter_point")
                                        (("2"
                                          (expand "edges_of_polygon")
                                          (("2"
                                            (replace -8 1)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (rewrite
                                                 "three_pt_miniseq_in_polygon")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "vertex_miter_point")
                              (("2"
                                (expand "edges_of_polygon")
                                (("2"
                                  (use "miter_point_neq_vtx")
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (replace -9)
                                      (("1" (assert) nil nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (rewrite
                                     "three_pt_miniseq_in_polygon")
                                    nil
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (use "miter_point_seqs_not_on_perim")
                              (("3" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 7)
                      (("2" (expand "segment_falling?")
                        (("2"
                          (use "leftmost_intersection_on_crossed_edge")
                          (("2" (assert)
                            (("2" (replace -10 :dir rl)
                              (("2"
                                (replace -9 :dir rl)
                                (("2"
                                  (replace -8 :dir rl)
                                  (("2"
                                    (rewrite
                                     "point_on_segment_has_offset")
                                    (("2"
                                      (skeep)
                                      (("2"
                                        (replace -1 +)
                                        (("2"
                                          (case-replace "d!1 = 0")
                                          (("1" (assert) nil nil)
                                           ("2"
                                            (case-replace "d!1 = 1")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (hide-all-but 7)
                                                (("1"
                                                  (grind-with-ext)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (ground)
                                              (("1"
                                                (hide-all-but (-6 1 2))
                                                (("1"
                                                  (grind)
                                                  (("1"
                                                    (move-terms 1 r 2)
                                                    (("1"
                                                      (equate
                                                       "(e)"
                                                       "e"
                                                       (assert))
                                                      (("1"
                                                        (factor 1 *)
                                                        (("1"
                                                          (cancel-by
                                                           1
                                                           "1 - d!1")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but (-6 1 3))
                                                (("2"
                                                  (grind)
                                                  (("2"
                                                    (cancel-add 1)
                                                    (("2"
                                                      (cancel-by
                                                       1
                                                       "d!1")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (use "on_seg_from_miter_pt_to_endpoint")
                    (("2" (assert)
                      (("2" (assert)
                        (("2" (replace -9 :dir rl)
                          (("2" (replace -8 :dir rl)
                            (("2" (replace -7 :dir rl)
                              (("2"
                                (replace -6 :dir rl)
                                (("2"
                                  (replace -5)
                                  (("2"
                                    (skeep)
                                    (("2"
                                      (inst
                                       +
                                       "(# length := 3, seq := lambda (i: below(3)):
                                                     if i = 0 then p elsif i = 1 then v else mp endif #)")
                                      (("1"
                                        (ground)
                                        (("1"
                                          (expand "contact_free_path?")
                                          (("1"
                                            (skeep)
                                            (("1"
                                              (expand
                                               "point_on_segment_seq?")
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (ground)
                                                    (("1"
                                                      (lemma
                                                       "left_of_leftmost_crossing_not_on_perim_2")
                                                      (("1"
                                                        (inst
                                                         -
                                                         "G"
                                                         "p")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (inst
                                                             -
                                                             "r")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (replace
                                                                 -18
                                                                 :dir
                                                                 rl)
                                                                (("1"
                                                                  (rewrite
                                                                   "point_on_segment_has_offset")
                                                                  (("1"
                                                                    (skeep)
                                                                    (("1"
                                                                      (replace
                                                                       -2)
                                                                      (("1"
                                                                        (split
                                                                         1)
                                                                        (("1"
                                                                          (rewrite
                                                                           "point_on_segment_has_offset")
                                                                          (("1"
                                                                            (skeep)
                                                                            (("1"
                                                                              (replace
                                                                               -6
                                                                               1)
                                                                              (("1"
                                                                                (hide-all-but
                                                                                 (-13
                                                                                  1))
                                                                                (("1"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           (-8
                                                                            1))
                                                                          (("2"
                                                                            (grind)
                                                                            (("2"
                                                                              (cancel-add
                                                                               1)
                                                                              (("2"
                                                                                (cancel-by
                                                                                 1
                                                                                 "d!1")
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (case-replace
                                                                           "d!1 = 0")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (case
                                                                             "(v - p)`x < q`x - p`x")
                                                                            (("1"
                                                                              (expand
                                                                               "+"
                                                                               2)
                                                                              (("1"
                                                                                (move-terms
                                                                                 2
                                                                                 l
                                                                                 2)
                                                                                (("1"
                                                                                  (equate
                                                                                   "q`x - p`x"
                                                                                   "(q - p)`x")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "*"
                                                                                     2)
                                                                                    (("1"
                                                                                      (case
                                                                                       "(v - p)`x > 0")
                                                                                      (("1"
                                                                                        (mult-cases
                                                                                         2
                                                                                         :mult-op
                                                                                         1*)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "abs")
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "-"
                                                                                         1)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "-"
                                                                                     1)
                                                                                    (("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "-"
                                                                               1)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (lemma
                                                       "seg_from_miter_point_not_on_perim")
                                                      (("2"
                                                        (inst
                                                         -
                                                         "G"
                                                         "u"
                                                         "i"
                                                         "d")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (ground)
                                                            (("1"
                                                              (inst
                                                               -
                                                               "r")
                                                              (("1"
                                                                (expand
                                                                 "vertex_miter_point")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (replace
                                                                     -14
                                                                     :dir
                                                                     rl)
                                                                    (("1"
                                                                      (lemma
                                                                       "point_on_subsegment")
                                                                      (("1"
                                                                        (rewrite
                                                                         "point_on_reverse_segment"
                                                                         -2
                                                                         :dir
                                                                         rl)
                                                                        (("1"
                                                                          (expand
                                                                           "reverse_segment")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "r"
                                                                             "(# p1 := mp, p2 := v #)"
                                                                             "(# p1 := (mp), p2 := u #)")
                                                                            (("1"
                                                                              (split
                                                                               1)
                                                                              (("1"
                                                                                (ground)
                                                                                (("1"
                                                                                  (expand
                                                                                   "subsegment?")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "point_on_segment?"
                                                                                     1)
                                                                                    (("1"
                                                                                      (inst
                                                                                       +
                                                                                       "0")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 -1)
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "tails_on_aligned_segments_are_eq")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "(# p1 := mp, p2 := v #)"
                                                                                         "(# p1 := (mp), p2 := u #)")
                                                                                        (("1"
                                                                                          (ground)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "segment_endpoint?")
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (rewrite
                                                                                             "point_on_segment_has_offset"
                                                                                             -2)
                                                                                            (("1"
                                                                                              (skeep)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -2
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "normalize_scal")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "sign")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (ground)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "segment_endpoint?")
                                                                                                          (("2"
                                                                                                            (case-replace
                                                                                                             "mp = v")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide-all-but
                                                                                                               (-3
                                                                                                                -8
                                                                                                                1))
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "point_on_segment?")
                                                                                                                    (("2"
                                                                                                                      (skeep)
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -4
                                                                                                                         :hide?
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (grind-with-ext)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "point_on_segment?"
                                                                                                   -3)
                                                                                                  (("2"
                                                                                                    (skeep)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -5
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (equate
                                                                                                         "(1 - t) * mp + t * mp - (mp)"
                                                                                                         "zero")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (grind-with-ext)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1
                                                                                             :dir
                                                                                             rl)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "point_on_segment?"
                                                                                               -7)
                                                                                              (("2"
                                                                                                (skeep)
                                                                                                (("2"
                                                                                                  (case-replace
                                                                                                   "v = u")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "segment_endpoint?")
                                                                                                    (("1"
                                                                                                      (ground)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide-all-but
                                                                                                     (-9
                                                                                                      1))
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -1
                                                                                                       :hide?
                                                                                                       t)
                                                                                                      (("2"
                                                                                                        (grind-with-ext)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (flatten)
                                                                                          (("3"
                                                                                            (replace
                                                                                             -1
                                                                                             :dir
                                                                                             rl)
                                                                                            (("3"
                                                                                              (case-replace
                                                                                               "v = u")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "segment_endpoint?")
                                                                                                (("1"
                                                                                                  (ground)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 (-3
                                                                                                  1))
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "point_on_segment?")
                                                                                                  (("2"
                                                                                                    (skeep)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -3
                                                                                                       :hide?
                                                                                                       t)
                                                                                                      (("2"
                                                                                                        (grind-with-ext)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (replace
                                                                                 -1
                                                                                 :dir
                                                                                 rl)
                                                                                (("2"
                                                                                  (case-replace
                                                                                   "v = u")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "segment_endpoint?")
                                                                                    (("1"
                                                                                      (ground)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     (-6
                                                                                      1))
                                                                                    (("2"
                                                                                      (expand
                                                                                       "point_on_segment?")
                                                                                      (("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -3
                                                                                           :hide?
                                                                                           t)
                                                                                          (("2"
                                                                                            (grind-with-ext)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (flatten)
                                                                              (("3"
                                                                                (expand
                                                                                 "segment_endpoint?")
                                                                                (("3"
                                                                                  (case-replace
                                                                                   "r = v")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     (-1
                                                                                      -2
                                                                                      1))
                                                                                    (("2"
                                                                                      (expand
                                                                                       "point_on_segment?")
                                                                                      (("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -4
                                                                                           :hide?
                                                                                           t)
                                                                                          (("2"
                                                                                            (grind-with-ext)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (case-replace
                                                                           "r = v")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "segment_endpoint?")
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             (-2
                                                                              1
                                                                              2))
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (replace
                                                                                 -1)
                                                                                (("2"
                                                                                  (expand
                                                                                   "point_on_segment?")
                                                                                  (("2"
                                                                                    (skeep)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -4
                                                                                       :hide?
                                                                                       t)
                                                                                      (("2"
                                                                                        (grind-with-ext)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "segment_endpoint?")
                                                              (("2"
                                                                (replace
                                                                 -15
                                                                 :dir
                                                                 rl)
                                                                (("2"
                                                                  (split
                                                                   -3)
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (skeep)
                                        (("2"
                                          (lift-if)
                                          (("2"
                                            (ground)
                                            (("2"
                                              (rewrite
                                               "point_on_segment_has_offset")
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (replace -3 -1)
                                                  (("2"
                                                    (replace
                                                     -1
                                                     +
                                                     :dir
                                                     rl)
                                                    (("2"
                                                      (hide-all-but
                                                       (-10 2))
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (expand "leftmost_intersection_point")
              (("2" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (vertex_to_miter_pt_seq_contact_free_TCC1 0
  (vertex_to_miter_pt_seq_contact_free_TCC1-2 nil 3874129022
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (vertex_to_miter_pt_seq_contact_free subtype "0" "below[S`length]"))
  (vertex_to_miter_pt_seq_contact_free_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (vertex_to_miter_pt_seq_contact_free subtype "0"
    "below[S`length]")))
 (vertex_to_miter_pt_seq_contact_free_TCC2 0
  (vertex_to_miter_pt_seq_contact_free_TCC2-2 nil 3874129022
   ("" (skeep*) (("" (typepred "S") (("" (ground) nil nil)) nil)) nil)
   nil shostak
   (vertex_to_miter_pt_seq_contact_free subtype
    "(number_fields.-)(polygon_miter_sequences.S`length, 1)"
    "below[S`length]"))
  (vertex_to_miter_pt_seq_contact_free_TCC2-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (vertex_to_miter_pt_seq_contact_free subtype
    "(number_fields.-)(polygon_miter_sequences.S`length, 1)"
    "below[S`length]")))
 (vertex_to_miter_pt_seq_contact_free 0
  (vertex_to_miter_pt_seq_contact_free-1 nil 3874129022
   ("" (skeep)
    (("" (skoletin*)
      (("" (flatten)
        (("" (typepred "p")
          (("" (expand "has_rightward_crossings?")
            (("" (flatten)
              (("" (hide -1)
                (("" (use "leftmost_crossing_on_perim")
                  (("" (replace -7 :dir rl)
                    (("" (use "three_pt_miniseq_in_polygon")
                      (("" (case "mp = q")
                        (("1" (use "miter_point_neq_vtx")
                          (("1" (ground) nil nil)) nil)
                         ("2"
                          (use "miter_pt_dist_to_pivot_lower_bound")
                          (("2" (replace -8 :dir rl)
                            (("2"
                              (case "point_on_polygon_perimeter?(G)(mp)")
                              (("1"
                                (use "miter_point_seqs_not_on_perim")
                                (("1"
                                  (assert)
                                  (("1"
                                    (ground)
                                    (("1"
                                      (use
                                       "miter_point_in_polygon_miter_seg_seq")
                                      (("1" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (case "p`y = q`y")
                                (("1"
                                  (name-replace
                                   "A"
                                   "singleton_endpoint_seq(p)")
                                  (("1"
                                    (name-replace
                                     "B"
                                     "(# length := 2, seq := lambda (i: below(2)):
                     if i = 0 then p else q - (d,0) endif #)")
                                    (("1"
                                      (name-replace
                                       "C"
                                       "singleton_endpoint_seq(mp)")
                                      (("1"
                                        (name-replace
                                         "D"
                                         "(# length := 2, seq := lambda (i: below(2)):
                     if i = 0 then q + d * ^(mp - q) else mp endif #)")
                                        (("1"
                                          (name-replace
                                           "E"
                                           "alternative_endpt_seqs(norm(p - q) <= d, A, B)")
                                          (("1"
                                            (name-replace
                                             "F"
                                             "(# length := 2, seq := lambda (i: below(2)):
                                 if i = 0 then E`seq(E`length - 1) else q + d * ^(mp - q) endif #)")
                                            (("1"
                                              (name-replace
                                               "Z"
                                               "alternative_endpt_seqs(norm(mp - q) = d, C, D)")
                                              (("1"
                                                (case
                                                 "F`seq(F`length - 1) = Z`seq(0)")
                                                (("1"
                                                  (case
                                                   "E`seq(E`length - 1) = append_segment_seqs(F, Z)`seq(0)")
                                                  (("1"
                                                    (case
                                                     "contact_free_path?(G)(E)")
                                                    (("1"
                                                      (case
                                                       "contact_free_path?(G)(F)")
                                                      (("1"
                                                        (case
                                                         "contact_free_path?(G)(Z)")
                                                        (("1"
                                                          (inst
                                                           +
                                                           "append_segment_seqs(E, append_segment_seqs(F, Z))")
                                                          (("1"
                                                            (rewrite
                                                             "append_contact_free_paths")
                                                            (("1"
                                                              (lemma
                                                               "initial_point_append_segment_seqs")
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "E"
                                                                 "append_segment_seqs(F, Z)")
                                                                (("1"
                                                                  (replace
                                                                   -1
                                                                   :hide?
                                                                   t)
                                                                  (("1"
                                                                    (lemma
                                                                     "final_point_append_segment_seqs")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "E"
                                                                       "append_segment_seqs(F, Z)")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (replace
                                                                           -1
                                                                           :hide?
                                                                           t)
                                                                          (("1"
                                                                            (lemma
                                                                             "final_point_append_segment_seqs")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "F"
                                                                               "Z")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (replace
                                                                                   -1
                                                                                   :hide?
                                                                                   t)
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     6)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "E")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "Z")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "alternative_endpt_seqs")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "A")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "C")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "singleton_endpoint_seq")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "B")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "D")
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (rewrite
                                                               "append_contact_free_paths")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "Z"
                                                           1)
                                                          (("2"
                                                            (expand
                                                             "alternative_endpt_seqs")
                                                            (("2"
                                                              (expand
                                                               "C"
                                                               1)
                                                              (("2"
                                                                (lemma
                                                                 "singleton_contact_free_path")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "G"
                                                                   "mp")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (split
                                                                       1)
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (expand
                                                                           "D"
                                                                           +)
                                                                          (("2"
                                                                            (expand
                                                                             "contact_free_path?"
                                                                             2)
                                                                            (("2"
                                                                              (skeep)
                                                                              (("2"
                                                                                (expand
                                                                                 "point_on_segment_seq?")
                                                                                (("2"
                                                                                  (skeep)
                                                                                  (("2"
                                                                                    (hide
                                                                                     -9
                                                                                     -11
                                                                                     -13
                                                                                     7)
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "seg_from_miter_point_not_on_perim")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "G"
                                                                                         "q"
                                                                                         "i"
                                                                                         "d")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (ground)
                                                                                            (("1"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (ground)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -20
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "point_on_reverse_segment"
                                                                                                     1
                                                                                                     :dir
                                                                                                     rl)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "reverse_segment")
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "point_on_subsegment")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "r"
                                                                                                           "(# p1 := q + d * ^(mp - q), p2 := mp #)"
                                                                                                           "(# p1 := q, p2 := (mp) #)")
                                                                                                          (("1"
                                                                                                            (ground)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "subsegment?")
                                                                                                              (("1"
                                                                                                                (ground)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "point_on_segment_has_norm_offset"
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (inst?)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "length")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "point_on_segment?")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "1")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -1
                                                                                                               2)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   "norm_scal")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "abs")
                                                                                                                    (("2"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (rewrite
                                                                                                     "point_on_segment_has_offset")
                                                                                                    (("1"
                                                                                                      (skeep)
                                                                                                      (("1"
                                                                                                        (distrib
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "add_assoc"
                                                                                                           -2
                                                                                                           :dir
                                                                                                           rl)
                                                                                                          (("1"
                                                                                                            (name-replace
                                                                                                             "w"
                                                                                                             "(d * ^(mp - q) + (d_1 * mp - (d_1 * q + (d_1 * d) * ^(mp - q))))")
                                                                                                            (("1"
                                                                                                              (cancel-add
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "w")
                                                                                                                (("1"
                                                                                                                  (equate
                                                                                                                   "d_1 * mp - (d_1 * q + (d_1 * d) * ^(mp - q))"
                                                                                                                   "d_1 * mp - d_1 * q - (d_1 * d) * ^(mp - q)")
                                                                                                                  (("1"
                                                                                                                    (factor
                                                                                                                     -2
                                                                                                                     r
                                                                                                                     (1
                                                                                                                      4))
                                                                                                                    (("1"
                                                                                                                      (factor
                                                                                                                       -2
                                                                                                                       r
                                                                                                                       (2
                                                                                                                        3))
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -19
                                                                                                                         :dir
                                                                                                                         rl)
                                                                                                                        (("1"
                                                                                                                          (name-replace
                                                                                                                           "u"
                                                                                                                           "mp - q")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "^")
                                                                                                                            (("1"
                                                                                                                              (real-props)
                                                                                                                              (("1"
                                                                                                                                (factor
                                                                                                                                 -2
                                                                                                                                 r)
                                                                                                                                (("1"
                                                                                                                                  (use
                                                                                                                                   "scal_eq_zero")
                                                                                                                                  (("1"
                                                                                                                                    (ground)
                                                                                                                                    (("1"
                                                                                                                                      (hide-all-but
                                                                                                                                       (-1
                                                                                                                                        -16))
                                                                                                                                      (("1"
                                                                                                                                        (grind-reals)
                                                                                                                                        (("1"
                                                                                                                                          (mult-by
                                                                                                                                           -1
                                                                                                                                           "norm(u)")
                                                                                                                                          (("1"
                                                                                                                                            (real-props)
                                                                                                                                            (("1"
                                                                                                                                              (real-props)
                                                                                                                                              (("1"
                                                                                                                                                (factor
                                                                                                                                                 -1
                                                                                                                                                 l
                                                                                                                                                 (1
                                                                                                                                                  2))
                                                                                                                                                (("1"
                                                                                                                                                  (case
                                                                                                                                                   "d_1 * (norm(u) - d) >= 0")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (mult-cases
                                                                                                                                                     1)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (replace
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "norm_scal")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "abs")
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (replace
                                                                                               -17)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand "F" 1)
                                                        (("2"
                                                          (expand
                                                           "contact_free_path?"
                                                           1)
                                                          (("2"
                                                            (skeep)
                                                            (("2"
                                                              (expand
                                                               "point_on_segment_seq?")
                                                              (("2"
                                                                (skeep)
                                                                (("2"
                                                                  (expand
                                                                   "E"
                                                                   -1)
                                                                  (("2"
                                                                    (expand
                                                                     "alternative_endpt_seqs")
                                                                    (("2"
                                                                      (expand
                                                                       "A"
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "B"
                                                                         -1)
                                                                        (("2"
                                                                          (expand
                                                                           "singleton_endpoint_seq")
                                                                          (("2"
                                                                            (lift-if
                                                                             -1)
                                                                            (("2"
                                                                              (name-replace
                                                                               "u"
                                                                               "IF norm(p - q) <= d
                                THEN p ELSE q - (# x := d, y := 0 #) endif")
                                                                              (("2"
                                                                                (case-replace
                                                                                 "u = q")
                                                                                (("1"
                                                                                  (lift-if
                                                                                   -2)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       -2)
                                                                                      (("1"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "point_on_polygon_perimeter?(G)(u)")
                                                                                  (("1"
                                                                                    (use
                                                                                     "left_of_leftmost_crossing_not_on_perim")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -25
                                                                                         :dir
                                                                                         rl)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "u")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -2
                                                                                               1
                                                                                               :dir
                                                                                               rl)
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 (-15
                                                                                                  1))
                                                                                                (("1"
                                                                                                  (lift-if)
                                                                                                  (("1"
                                                                                                    (ground)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "point_on_segment?")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         +
                                                                                                         "0")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (rewrite
                                                                                                       "point_on_reverse_segment"
                                                                                                       :dir
                                                                                                       rl)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "reverse_segment")
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "point_on_segment_has_norm_offset")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "^")
                                                                                                            (("2"
                                                                                                              (use
                                                                                                               "leftmost_crossing_xval_bound")
                                                                                                              (("2"
                                                                                                                (equate
                                                                                                                 "leftmost_crossing_xval(G, p)"
                                                                                                                 "q`x")
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "norm_diff_horiz")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "abs")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         +
                                                                                                                         "d")
                                                                                                                        (("1"
                                                                                                                          (ground)
                                                                                                                          (("1"
                                                                                                                            (grind-with-ext)
                                                                                                                            (("1"
                                                                                                                              (factor
                                                                                                                               1
                                                                                                                               r)
                                                                                                                              (("1"
                                                                                                                                (cross-mult
                                                                                                                                 1)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (expand
                                                                                                                             "length")
                                                                                                                            (("2"
                                                                                                                              (rewrite
                                                                                                                               "norm_diff_horiz")
                                                                                                                              (("2"
                                                                                                                                (grind)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "q")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "leftmost_intersection_point")
                                                                                                                      (("2"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     -8
                                                                                     -10
                                                                                     -12
                                                                                     8)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -4
                                                                                       -5
                                                                                       -6
                                                                                       -7
                                                                                       -8
                                                                                       -9
                                                                                       -10)
                                                                                      (("2"
                                                                                        (case
                                                                                         "point_on_segment?(r, (# p1 := u, p2 := q + d * ^(mp - q) #))")
                                                                                        (("1"
                                                                                          (hide
                                                                                           -3)
                                                                                          (("1"
                                                                                            (use
                                                                                             "nearby_pt_between_edges_not_on_perim")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (ground)
                                                                                                (("1"
                                                                                                  (use
                                                                                                   "cross_horiz_seq_with_falling_edge_pos")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "between_edges_at_falling_edge_vertex")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -13
                                                                                                           :dir
                                                                                                           rl)
                                                                                                          (("1"
                                                                                                            (use
                                                                                                             "miter_point_between_edges")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -15
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "point_between_edges?")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "edges_of_polygon"
                                                                                                                     -3)
                                                                                                                    (("1"
                                                                                                                      (use
                                                                                                                       "miter_point_cross_gt_0")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -16
                                                                                                                           :dir
                                                                                                                           rl)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -13
                                                                                                                             :dir
                                                                                                                             rl)
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "q = q + d * ^(mp - q)")
                                                                                                                                (("1"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-1
                                                                                                                                    5))
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "^")
                                                                                                                                    (("1"
                                                                                                                                      (name-replace
                                                                                                                                       "n"
                                                                                                                                       "d * ((1 / norm(mp - q)) * (mp - q))")
                                                                                                                                      (("1"
                                                                                                                                        (cancel-add
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "n")
                                                                                                                                          (("1"
                                                                                                                                            (real-props)
                                                                                                                                            (("1"
                                                                                                                                              (use
                                                                                                                                               "scal_eq_zero")
                                                                                                                                              (("1"
                                                                                                                                                (ground)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (case
                                                                                                                                   "cross(G`vertices(prev_index(G, i)) - q,
 G`vertices(next_index(G, i)) - q) > 0")
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "segment_interior_points_all_between")
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "edges_of_polygon(G)(prev_index(G, i))"
                                                                                                                                       "edges_of_polygon(G)(i)"
                                                                                                                                       "u"
                                                                                                                                       "q + d * ^(mp - q)"
                                                                                                                                       "q")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "edges_of_polygon"
                                                                                                                                         -1
                                                                                                                                         (1
                                                                                                                                          2
                                                                                                                                          3
                                                                                                                                          4))
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (ground)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "r")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (lemma
                                                                                                                                               "scaled_vector_between_rays")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "edges_of_polygon(G)(prev_index(G, i))"
                                                                                                                                                 "edges_of_polygon(G)(i)"
                                                                                                                                                 "p - q"
                                                                                                                                                 "(q`x - u`x)/(q`x - p`x)")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "edges_of_polygon"
                                                                                                                                                   -1
                                                                                                                                                   (3
                                                                                                                                                    6))
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -16
                                                                                                                                                     :dir
                                                                                                                                                     rl)
                                                                                                                                                    (("1"
                                                                                                                                                      (equate
                                                                                                                                                       "q + (q`x - u`x) / (q`x - p`x) * (p - q)"
                                                                                                                                                       "u")
                                                                                                                                                      (("1"
                                                                                                                                                        (ground)
                                                                                                                                                        (("1"
                                                                                                                                                          (equate
                                                                                                                                                           "q + (p - q)"
                                                                                                                                                           "p")
                                                                                                                                                          (("1"
                                                                                                                                                            (hide-all-but
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (grind-with-ext)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (hide-all-but
                                                                                                                                                         (-11
                                                                                                                                                          1
                                                                                                                                                          6))
                                                                                                                                                        (("2"
                                                                                                                                                          (apply-extensionality
                                                                                                                                                           :hide?
                                                                                                                                                           t)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand*
                                                                                                                                                             "+"
                                                                                                                                                             "*"
                                                                                                                                                             "-")
                                                                                                                                                            (("1"
                                                                                                                                                              (factor
                                                                                                                                                               1
                                                                                                                                                               l
                                                                                                                                                               (2
                                                                                                                                                                3))
                                                                                                                                                              (("1"
                                                                                                                                                                (move-terms
                                                                                                                                                                 1
                                                                                                                                                                 l
                                                                                                                                                                 2)
                                                                                                                                                                (("1"
                                                                                                                                                                  (cross-mult
                                                                                                                                                                   1)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (expand*
                                                                                                                                                             "+"
                                                                                                                                                             "*"
                                                                                                                                                             "-")
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (factor
                                                                                                                                                                 1
                                                                                                                                                                 l
                                                                                                                                                                 (2
                                                                                                                                                                  3))
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "u"
                                                                                                                                                                     1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (lift-if)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (ground)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (hide
                                                                                                                                                                           1)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (grind)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("3"
                                                                                                                                                        (case
                                                                                                                                                         "p = q")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (hide-all-but
                                                                                                                                                           (-11
                                                                                                                                                            1
                                                                                                                                                            2))
                                                                                                                                                          (("2"
                                                                                                                                                            (grind-with-ext)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (splash
                                                                                                                                                   1
                                                                                                                                                   t)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (cross-mult
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (ground)
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -9
                                                                                                                                                         1
                                                                                                                                                         :dir
                                                                                                                                                         rl)
                                                                                                                                                        (("1"
                                                                                                                                                          (lift-if)
                                                                                                                                                          (("1"
                                                                                                                                                            (ground)
                                                                                                                                                            (("1"
                                                                                                                                                              (hide-all-but
                                                                                                                                                               3)
                                                                                                                                                              (("1"
                                                                                                                                                                (grind)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (use
                                                                                                                                                         "leftmost_crossing_xval_bound")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "leftmost_intersection_point")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("3"
                                                                                                                                                  (case
                                                                                                                                                   "p = q")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (-10
                                                                                                                                                      1
                                                                                                                                                      2))
                                                                                                                                                    (("2"
                                                                                                                                                      (grind-with-ext)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("3"
                                                                                                                                              (lemma
                                                                                                                                               "scaled_vector_between_rays")
                                                                                                                                              (("3"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "edges_of_polygon(G)(prev_index(G, i))"
                                                                                                                                                 "edges_of_polygon(G)(i)"
                                                                                                                                                 "^(mp - q)"
                                                                                                                                                 "d")
                                                                                                                                                (("3"
                                                                                                                                                  (expand
                                                                                                                                                   "edges_of_polygon"
                                                                                                                                                   -1
                                                                                                                                                   (3
                                                                                                                                                    6))
                                                                                                                                                  (("3"
                                                                                                                                                    (replace
                                                                                                                                                     -15
                                                                                                                                                     :dir
                                                                                                                                                     rl)
                                                                                                                                                    (("3"
                                                                                                                                                      (expand
                                                                                                                                                       "^"
                                                                                                                                                       1)
                                                                                                                                                      (("3"
                                                                                                                                                        (hide-all-but
                                                                                                                                                         (-4
                                                                                                                                                          -15
                                                                                                                                                          1
                                                                                                                                                          8))
                                                                                                                                                        (("3"
                                                                                                                                                          (expand
                                                                                                                                                           "between_rays?")
                                                                                                                                                          (("3"
                                                                                                                                                            (expand
                                                                                                                                                             "edges_of_polygon")
                                                                                                                                                            (("3"
                                                                                                                                                              (replace
                                                                                                                                                               -2
                                                                                                                                                               :dir
                                                                                                                                                               rl)
                                                                                                                                                              (("3"
                                                                                                                                                                (assert)
                                                                                                                                                                (("3"
                                                                                                                                                                  (rewrite*
                                                                                                                                                                   "cross_scales_2")
                                                                                                                                                                  (("3"
                                                                                                                                                                    (real-props)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("4"
                                                                                                                                              (hide-all-but
                                                                                                                                               (-1
                                                                                                                                                -9
                                                                                                                                                -11
                                                                                                                                                6
                                                                                                                                                8
                                                                                                                                                9))
                                                                                                                                              (("4"
                                                                                                                                                (replace
                                                                                                                                                 -1
                                                                                                                                                 :hide?
                                                                                                                                                 t)
                                                                                                                                                (("4"
                                                                                                                                                  (rewrite
                                                                                                                                                   "comps_eq")
                                                                                                                                                  (("4"
                                                                                                                                                    (ground)
                                                                                                                                                    (("4"
                                                                                                                                                      (hide
                                                                                                                                                       -1)
                                                                                                                                                      (("4"
                                                                                                                                                        (lift-if)
                                                                                                                                                        (("4"
                                                                                                                                                          (ground)
                                                                                                                                                          (("1"
                                                                                                                                                            (hide
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "^")
                                                                                                                                                              (("1"
                                                                                                                                                                (expand*
                                                                                                                                                                 "+"
                                                                                                                                                                 "*"
                                                                                                                                                                 "-")
                                                                                                                                                                (("1"
                                                                                                                                                                  (name-replace
                                                                                                                                                                   "n"
                                                                                                                                                                   "(1 / norm((# x := mp`x - q`x, y := mp`y - q`y #)))")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -2)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (move-terms
                                                                                                                                                                       -1
                                                                                                                                                                       r
                                                                                                                                                                       2)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (cancel-add
                                                                                                                                                                         -1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (cancel-by
                                                                                                                                                                           -1
                                                                                                                                                                           "n * d")
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (hide
                                                                                                                                                             1)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "^")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand*
                                                                                                                                                                 "+"
                                                                                                                                                                 "*"
                                                                                                                                                                 "-")
                                                                                                                                                                (("2"
                                                                                                                                                                  (name-replace
                                                                                                                                                                   "n"
                                                                                                                                                                   "(1 / norm((# x := mp`x - q`x, y := mp`y - q`y #)))")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (cancel-by
                                                                                                                                                                     -1
                                                                                                                                                                     "n * d")
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (name-replace
                                                                                                                                     "w"
                                                                                                                                     "(# p1 := 2 * q - G`vertices(next_index(G, i)), p2 := q #)")
                                                                                                                                    (("2"
                                                                                                                                      (case
                                                                                                                                       "2 * q - G`vertices(next_index(G, i)) - q =
 q - G`vertices(next_index(G, i))")
                                                                                                                                      (("1"
                                                                                                                                        (case
                                                                                                                                         "between_rays?(edges_of_polygon(G)(prev_index(G, i)),
                    edges_of_polygon(G)(i))
                   (2 * q - G`vertices(next_index(G, i))) or
   cross(G`vertices(prev_index(G, i)) - q,
            G`vertices(next_index(G, i)) - q) = 0")
                                                                                                                                        (("1"
                                                                                                                                          (case
                                                                                                                                           "between_rays?(w, edges_of_polygon(G)(i))(r)")
                                                                                                                                          (("1"
                                                                                                                                            (hide-all-but
                                                                                                                                             (-1
                                                                                                                                              -2
                                                                                                                                              -3
                                                                                                                                              -4
                                                                                                                                              -18
                                                                                                                                              1
                                                                                                                                              3))
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -4
                                                                                                                                               :dir
                                                                                                                                               rl)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "between_rays?"
                                                                                                                                                 (-1
                                                                                                                                                  +))
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "edges_of_polygon")
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -5
                                                                                                                                                     :dir
                                                                                                                                                     rl)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -3)
                                                                                                                                                        (("1"
                                                                                                                                                          (rewrite
                                                                                                                                                           "cross_diff_2"
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (rewrite
                                                                                                                                                             "cross_self_zero")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (split
                                                                                                                                                                     2)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (ground)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "between_rays?")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -4)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (rewrite
                                                                                                                                                                                 "cross_diff_2"
                                                                                                                                                                                 -2)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "cross_self_zero")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (rewrite
                                                                                                                                                                           "parallel_equiv_cross_eq_0"
                                                                                                                                                                           :dir
                                                                                                                                                                           rl)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (expand
                                                                                                                                                                             "parallel?")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (skeep)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (lemma
                                                                                                                                                                                 "adjacent_edges_do_not_fold_back")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   -
                                                                                                                                                                                   "G"
                                                                                                                                                                                   "i")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "dir_parallel?")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (case
                                                                                                                                                                                         "nzk > 0")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst?)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (rewrite
                                                                                                                                                                                             "cross_scales_1"
                                                                                                                                                                                             6)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (mult-cases
                                                                                                                                                                                               6)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (lemma
                                                                                                                                                                             "vertex_neq_prev")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -
                                                                                                                                                                               "G"
                                                                                                                                                                               "i")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (ground)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (case
                                                                                                                                             "between_rays?(w, edges_of_polygon(G)(i))(p)")
                                                                                                                                            (("1"
                                                                                                                                              (case
                                                                                                                                               "between_rays?(w, edges_of_polygon(G)(i))(mp)")
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "segment_interior_points_all_between")
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -
                                                                                                                                                   "w"
                                                                                                                                                   "edges_of_polygon(G)(i)"
                                                                                                                                                   "u"
                                                                                                                                                   "q + d * ^(mp - q)"
                                                                                                                                                   "q")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "edges_of_polygon"
                                                                                                                                                     -1
                                                                                                                                                     (1
                                                                                                                                                      2))
                                                                                                                                                    (("1"
                                                                                                                                                      (split
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -
                                                                                                                                                         "r")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (expand
                                                                                                                                                         "w"
                                                                                                                                                         1)
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -4)
                                                                                                                                                          (("2"
                                                                                                                                                            (hide-all-but
                                                                                                                                                             1)
                                                                                                                                                            (("2"
                                                                                                                                                              (grind)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("3"
                                                                                                                                                        (expand
                                                                                                                                                         "w"
                                                                                                                                                         1)
                                                                                                                                                        (("3"
                                                                                                                                                          (propax)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("4"
                                                                                                                                                        (lemma
                                                                                                                                                         "scaled_vector_between_rays")
                                                                                                                                                        (("4"
                                                                                                                                                          (inst
                                                                                                                                                           -
                                                                                                                                                           "w"
                                                                                                                                                           "edges_of_polygon(G)(i)"
                                                                                                                                                           "p - q"
                                                                                                                                                           "(q`x - u`x)/(q`x - p`x)")
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "edges_of_polygon"
                                                                                                                                                             -1
                                                                                                                                                             (2
                                                                                                                                                              4))
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -20
                                                                                                                                                               :dir
                                                                                                                                                               rl)
                                                                                                                                                              (("1"
                                                                                                                                                                (equate
                                                                                                                                                                 "q + (q`x - u`x) / (q`x - p`x) * (p - q)"
                                                                                                                                                                 "u")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (equate
                                                                                                                                                                     "q + (p - q)"
                                                                                                                                                                     "p")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (hide-all-but
                                                                                                                                                                       1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (grind-with-ext)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (hide-all-but
                                                                                                                                                                   (-13
                                                                                                                                                                    1
                                                                                                                                                                    8))
                                                                                                                                                                  (("2"
                                                                                                                                                                    (apply-extensionality
                                                                                                                                                                     :hide?
                                                                                                                                                                     t)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand*
                                                                                                                                                                       "+"
                                                                                                                                                                       "*"
                                                                                                                                                                       "-")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (factor
                                                                                                                                                                         1
                                                                                                                                                                         l
                                                                                                                                                                         (2
                                                                                                                                                                          3))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (move-terms
                                                                                                                                                                           1
                                                                                                                                                                           l
                                                                                                                                                                           2)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (cross-mult
                                                                                                                                                                             1)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (expand*
                                                                                                                                                                       "+"
                                                                                                                                                                       "*"
                                                                                                                                                                       "-")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (move-terms
                                                                                                                                                                         1
                                                                                                                                                                         l
                                                                                                                                                                         1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (factor
                                                                                                                                                                           1
                                                                                                                                                                           l)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (cross-mult
                                                                                                                                                                             1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (replace
                                                                                                                                                                               -1
                                                                                                                                                                               :dir
                                                                                                                                                                               rl
                                                                                                                                                                               :hide?
                                                                                                                                                                               t)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (lift-if)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("3"
                                                                                                                                                                  (case
                                                                                                                                                                   "p = q")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (hide-all-but
                                                                                                                                                                     (-15
                                                                                                                                                                      1
                                                                                                                                                                      2))
                                                                                                                                                                    (("2"
                                                                                                                                                                      (grind-with-ext)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (splash
                                                                                                                                                             1
                                                                                                                                                             t)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (cross-mult
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (split
                                                                                                                                                                 1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -13
                                                                                                                                                                     1
                                                                                                                                                                     :dir
                                                                                                                                                                     rl)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (lift-if)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (split
                                                                                                                                                                         1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          nil
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (hide-all-but
                                                                                                                                                                             2)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (grind)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (use
                                                                                                                                                                     "leftmost_crossing_xval_bound")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "leftmost_intersection_point")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("3"
                                                                                                                                                            (case
                                                                                                                                                             "p = q")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (hide-all-but
                                                                                                                                                               (-14
                                                                                                                                                                1
                                                                                                                                                                2))
                                                                                                                                                              (("2"
                                                                                                                                                                (grind-with-ext)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("5"
                                                                                                                                                        (lemma
                                                                                                                                                         "scaled_vector_between_rays")
                                                                                                                                                        (("5"
                                                                                                                                                          (inst
                                                                                                                                                           -
                                                                                                                                                           "w"
                                                                                                                                                           "edges_of_polygon(G)(i)"
                                                                                                                                                           "^(mp - q)"
                                                                                                                                                           "d")
                                                                                                                                                          (("5"
                                                                                                                                                            (expand
                                                                                                                                                             "edges_of_polygon"
                                                                                                                                                             -1
                                                                                                                                                             (2
                                                                                                                                                              4))
                                                                                                                                                            (("5"
                                                                                                                                                              (assert)
                                                                                                                                                              (("5"
                                                                                                                                                                (replace
                                                                                                                                                                 -19
                                                                                                                                                                 :dir
                                                                                                                                                                 rl)
                                                                                                                                                                (("5"
                                                                                                                                                                  (expand
                                                                                                                                                                   "^"
                                                                                                                                                                   1)
                                                                                                                                                                  (("5"
                                                                                                                                                                    (expand
                                                                                                                                                                     "between_rays?"
                                                                                                                                                                     1)
                                                                                                                                                                    (("5"
                                                                                                                                                                      (expand
                                                                                                                                                                       "edges_of_polygon"
                                                                                                                                                                       1)
                                                                                                                                                                      (("5"
                                                                                                                                                                        (replace
                                                                                                                                                                         -5
                                                                                                                                                                         1
                                                                                                                                                                         :dir
                                                                                                                                                                         rl)
                                                                                                                                                                        (("5"
                                                                                                                                                                          (replace
                                                                                                                                                                           -19
                                                                                                                                                                           :dir
                                                                                                                                                                           rl)
                                                                                                                                                                          (("5"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("5"
                                                                                                                                                                              (replace
                                                                                                                                                                               -4)
                                                                                                                                                                              (("5"
                                                                                                                                                                                (rewrite
                                                                                                                                                                                 "cross_diff_1"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("5"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "cross_self_zero"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("5"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("5"
                                                                                                                                                                                      (rewrite
                                                                                                                                                                                       "cross_scales_2"
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("5"
                                                                                                                                                                                        (rewrite
                                                                                                                                                                                         "cross_scales_2"
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("5"
                                                                                                                                                                                          (real-props)
                                                                                                                                                                                          (("5"
                                                                                                                                                                                            (rewrite
                                                                                                                                                                                             "cross_diff_1"
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("5"
                                                                                                                                                                                              (rewrite
                                                                                                                                                                                               "cross_antisymmetric"
                                                                                                                                                                                               -7)
                                                                                                                                                                                              (("5"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("6"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("6"
                                                                                                                                                          (replace
                                                                                                                                                           -13
                                                                                                                                                           -1
                                                                                                                                                           :dir
                                                                                                                                                           rl)
                                                                                                                                                          (("6"
                                                                                                                                                            (hide-all-but
                                                                                                                                                             (-1
                                                                                                                                                              -15
                                                                                                                                                              -18
                                                                                                                                                              3
                                                                                                                                                              6
                                                                                                                                                              8
                                                                                                                                                              9
                                                                                                                                                              10))
                                                                                                                                                            (("6"
                                                                                                                                                              (rewrite
                                                                                                                                                               "comps_eq")
                                                                                                                                                              (("6"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("6"
                                                                                                                                                                  (hide
                                                                                                                                                                   -1)
                                                                                                                                                                  (("6"
                                                                                                                                                                    (lift-if)
                                                                                                                                                                    (("6"
                                                                                                                                                                      (ground)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (hide
                                                                                                                                                                         -1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "^")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (hide
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand*
                                                                                                                                                                               "+"
                                                                                                                                                                               "*"
                                                                                                                                                                               "-")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (name-replace
                                                                                                                                                                                 "n"
                                                                                                                                                                                 "(1 / norm((# x := mp`x - q`x, y := mp`y - q`y #)))")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -2)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (move-terms
                                                                                                                                                                                     -1
                                                                                                                                                                                     r
                                                                                                                                                                                     2)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (cancel-add
                                                                                                                                                                                       -1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (cancel-by
                                                                                                                                                                                         -1
                                                                                                                                                                                         "n * d")
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (hide
                                                                                                                                                                         1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "^")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (hide
                                                                                                                                                                             1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand*
                                                                                                                                                                               "+"
                                                                                                                                                                               "*"
                                                                                                                                                                               "-")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (name-replace
                                                                                                                                                                                 "n"
                                                                                                                                                                                 "(1 / norm((# x := mp`x - q`x, y := mp`y - q`y #)))")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (cancel-by
                                                                                                                                                                                   -1
                                                                                                                                                                                   "n * d")
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (rewrite
                                                                                                                                                 "between_rays?"
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "edges_of_polygon"
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     -18
                                                                                                                                                     :dir
                                                                                                                                                     rl)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -4
                                                                                                                                                       1
                                                                                                                                                       :dir
                                                                                                                                                       rl)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -3
                                                                                                                                                           1)
                                                                                                                                                          (("2"
                                                                                                                                                            (rewrite
                                                                                                                                                             "cross_diff_1"
                                                                                                                                                             1)
                                                                                                                                                            (("2"
                                                                                                                                                              (rewrite
                                                                                                                                                               "cross_self_zero")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (rewrite
                                                                                                                                                                   "cross_diff_1"
                                                                                                                                                                   1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "cross_antisymmetric"
                                                                                                                                                                     -9)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (rewrite
                                                                                                                                                                       "cross_antisymmetric"
                                                                                                                                                                       -6)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "between_rays?"
                                                                                                                                               1)
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -3
                                                                                                                                                 1
                                                                                                                                                 :dir
                                                                                                                                                 rl)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "edges_of_polygon"
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     -17
                                                                                                                                                     :dir
                                                                                                                                                     rl)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -2)
                                                                                                                                                      (("2"
                                                                                                                                                        (rewrite
                                                                                                                                                         "cross_diff_1"
                                                                                                                                                         1)
                                                                                                                                                        (("2"
                                                                                                                                                          (rewrite
                                                                                                                                                           "cross_self_zero")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (rewrite
                                                                                                                                                               "cross_diff_1"
                                                                                                                                                               1)
                                                                                                                                                              (("2"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "cross_antisymmetric"
                                                                                                                                                                 -8)
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("3"
                                                                                                                                            (hide-all-but
                                                                                                                                             (-3
                                                                                                                                              -17
                                                                                                                                              1))
                                                                                                                                            (("3"
                                                                                                                                              (replace
                                                                                                                                               -1
                                                                                                                                               :dir
                                                                                                                                               rl
                                                                                                                                               :hide?
                                                                                                                                               t)
                                                                                                                                              (("3"
                                                                                                                                                (ground)
                                                                                                                                                (("3"
                                                                                                                                                  (replace
                                                                                                                                                   -2)
                                                                                                                                                  (("3"
                                                                                                                                                    (name-replace
                                                                                                                                                     "n"
                                                                                                                                                     "G`vertices(next_index(G, i))")
                                                                                                                                                    (("3"
                                                                                                                                                      (move-terms
                                                                                                                                                       -1
                                                                                                                                                       l)
                                                                                                                                                      (("3"
                                                                                                                                                        (factor
                                                                                                                                                         -1
                                                                                                                                                         r
                                                                                                                                                         (1
                                                                                                                                                          3))
                                                                                                                                                        (("3"
                                                                                                                                                          (assert)
                                                                                                                                                          (("3"
                                                                                                                                                            (move-terms
                                                                                                                                                             -1
                                                                                                                                                             r
                                                                                                                                                             2)
                                                                                                                                                            (("3"
                                                                                                                                                              (use
                                                                                                                                                               "vertex_neq_next")
                                                                                                                                                              (("3"
                                                                                                                                                                (expand
                                                                                                                                                                 "n")
                                                                                                                                                                (("3"
                                                                                                                                                                  (ground)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             (-1
                                                                                                                                              -16
                                                                                                                                              1
                                                                                                                                              2
                                                                                                                                              3))
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "between_rays?")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "edges_of_polygon")
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -2
                                                                                                                                                   :dir
                                                                                                                                                   rl)
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     -1)
                                                                                                                                                    (("2"
                                                                                                                                                      (ground)
                                                                                                                                                      (("2"
                                                                                                                                                        (rewrite
                                                                                                                                                         "cross_diff_2"
                                                                                                                                                         1)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (hide-all-but
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (grind)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (case
                                                                                                   "norm(r - edges_of_polygon(G)(i)`p1) <= d")
                                                                                                  (("1"
                                                                                                    (use
                                                                                                     "max_miter_offset_lt_min_edge_sep")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (lemma
                                                                                                     "segment_interior_points_all_bounded")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "u"
                                                                                                       "q + d * ^(mp - q)"
                                                                                                       "q"
                                                                                                       "d")
                                                                                                      (("2"
                                                                                                        (ground)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "r")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "edges_of_polygon")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (replace
                                                                                                           -2
                                                                                                           1
                                                                                                           :dir
                                                                                                           rl)
                                                                                                          (("2"
                                                                                                            (lift-if)
                                                                                                            (("2"
                                                                                                              (ground)
                                                                                                              (("2"
                                                                                                                (hide-all-but
                                                                                                                 3)
                                                                                                                (("2"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("3"
                                                                                                          (rewrite
                                                                                                           "norm_scal"
                                                                                                           1)
                                                                                                          (("3"
                                                                                                            (expand
                                                                                                             "abs")
                                                                                                            (("3"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("4"
                                                                                                          (replace
                                                                                                           -3
                                                                                                           -1
                                                                                                           :dir
                                                                                                           rl)
                                                                                                          (("4"
                                                                                                            (rewrite
                                                                                                             "comps_eq"
                                                                                                             -1)
                                                                                                            (("4"
                                                                                                              (flatten)
                                                                                                              (("4"
                                                                                                                (hide-all-but
                                                                                                                 (-2
                                                                                                                  -6
                                                                                                                  9))
                                                                                                                (("4"
                                                                                                                  (lift-if)
                                                                                                                  (("4"
                                                                                                                    (ground)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "+"
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "^")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "*"
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -2
                                                                                                                               :hide?
                                                                                                                               t)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "-"
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (name-replace
                                                                                                                                   "n"
                                                                                                                                   "(1 / norm((# x := mp`x - q`x, y := mp`y - q`y #)))")
                                                                                                                                  (("1"
                                                                                                                                    (factor
                                                                                                                                     -1
                                                                                                                                     r)
                                                                                                                                    (("1"
                                                                                                                                      (cancel-by
                                                                                                                                       -1
                                                                                                                                       "n * d")
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "^")
                                                                                                                      (("2"
                                                                                                                        (expand*
                                                                                                                         "+"
                                                                                                                         "*"
                                                                                                                         "-")
                                                                                                                        (("2"
                                                                                                                          (name-replace
                                                                                                                           "n"
                                                                                                                           "(1 / norm((# x := mp`x - q`x, y := mp`y - q`y #)))")
                                                                                                                          (("2"
                                                                                                                            (cancel-by
                                                                                                                             -1
                                                                                                                             "n * d")
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (replace
                                                                                           -1
                                                                                           1
                                                                                           :dir
                                                                                           rl)
                                                                                          (("2"
                                                                                            (lift-if)
                                                                                            (("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (flatten)
                                                                                          (("3"
                                                                                            (rewrite
                                                                                             "comps_eq"
                                                                                             -1)
                                                                                            (("3"
                                                                                              (flatten)
                                                                                              (("3"
                                                                                                (equate
                                                                                                 "u`y"
                                                                                                 "p`y")
                                                                                                (("1"
                                                                                                  (hide-all-but
                                                                                                   (-2
                                                                                                    -6
                                                                                                    7))
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "^")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "+"
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "*"
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "-"
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (name-replace
                                                                                                             "n"
                                                                                                             "(1 / norm((# x := mp`x - q`x, y := mp`y - q`y #)))")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (move-terms
                                                                                                                 -1
                                                                                                                 l
                                                                                                                 2)
                                                                                                                (("1"
                                                                                                                  (cancel-add
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (cancel-by
                                                                                                                     -1
                                                                                                                     "n * d")
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   (-3
                                                                                                    -6
                                                                                                    1))
                                                                                                  (("2"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("4"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "contact_free_path?"
                                                       1)
                                                      (("2"
                                                        (expand "E" 1)
                                                        (("2"
                                                          (expand
                                                           "alternative_endpt_seqs")
                                                          (("2"
                                                            (skeep)
                                                            (("2"
                                                              (expand
                                                               "A"
                                                               -1)
                                                              (("2"
                                                                (expand
                                                                 "B"
                                                                 -1)
                                                                (("2"
                                                                  (expand
                                                                   "singleton_endpoint_seq")
                                                                  (("2"
                                                                    (lift-if
                                                                     -1)
                                                                    (("2"
                                                                      (expand
                                                                       "point_on_segment_seq?")
                                                                      (("2"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (ground)
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (hide-all-but
                                                                               (-1
                                                                                -2
                                                                                -12
                                                                                -13
                                                                                -15
                                                                                -17
                                                                                -20
                                                                                -21
                                                                                +))
                                                                              (("2"
                                                                                (hide
                                                                                 7)
                                                                                (("2"
                                                                                  (use
                                                                                   "left_of_leftmost_crossing_not_on_perim")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -9
                                                                                       :dir
                                                                                       rl)
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        (("2"
                                                                                          (ground)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "point_on_subsegment")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "r"
                                                                                               "(# p1 := p, p2 := q - (# x := d, y := 0 #) #)"
                                                                                               "(# p1 := p, p2 := (q) #)")
                                                                                              (("1"
                                                                                                (ground)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "subsegment?")
                                                                                                  (("1"
                                                                                                    (ground)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "point_on_segment?")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         +
                                                                                                         "0")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (rewrite
                                                                                                       "point_on_segment_has_norm_offset"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "^")
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "norm_sym"
                                                                                                           3)
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "norm_diff_horiz"
                                                                                                             3)
                                                                                                            (("2"
                                                                                                              (use
                                                                                                               "leftmost_crossing_xval_bound")
                                                                                                              (("2"
                                                                                                                (equate
                                                                                                                 "leftmost_crossing_xval(G, p)"
                                                                                                                 "q`x")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "abs")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       +
                                                                                                                       "q`x - p`x - d")
                                                                                                                      (("1"
                                                                                                                        (ground)
                                                                                                                        (("1"
                                                                                                                          (real-props)
                                                                                                                          (("1"
                                                                                                                            (apply-extensionality
                                                                                                                             :hide?
                                                                                                                             t)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "-"
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "*"
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "+"
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (factor
                                                                                                                                     1
                                                                                                                                     r)
                                                                                                                                    (("1"
                                                                                                                                      (cross-mult
                                                                                                                                       1)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (hide-all-but
                                                                                                                               (-4
                                                                                                                                1))
                                                                                                                              (("2"
                                                                                                                                (grind)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (expand
                                                                                                                           "length")
                                                                                                                          (("2"
                                                                                                                            (rewrite
                                                                                                                             "norm_diff_horiz")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "abs")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "leftmost_intersection_point")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -1
                                                                                                   2
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (hide-all-but
                                                                                                       2)
                                                                                                      (("2"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (rewrite
                                                                                             "point_on_segment_has_offset")
                                                                                            (("1"
                                                                                              (skeep)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (use
                                                                                                       "comps_eq")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1
                                                                                                         :hide?
                                                                                                         t)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "+"
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "*"
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "-"
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "norm_sym")
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "norm_diff_horiz")
                                                                                                                    (("1"
                                                                                                                      (use
                                                                                                                       "leftmost_crossing_xval_bound")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "leftmost_intersection_point")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "abs")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (move-terms
                                                                                                                               -2
                                                                                                                               r
                                                                                                                               (1
                                                                                                                                2
                                                                                                                                3))
                                                                                                                              (("1"
                                                                                                                                (equate
                                                                                                                                 (!
                                                                                                                                  -2
                                                                                                                                  l)
                                                                                                                                 "(q`x - p`x) * (1 - d_1)")
                                                                                                                                (("1"
                                                                                                                                  (case-replace
                                                                                                                                   "d_1 = 0")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (case
                                                                                                                                     "(q`x - p`x) * (1 - d_1) > 0")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (mult-cases
                                                                                                                                       1)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide-all-but
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (grind)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -1
                                                                                                 1
                                                                                                 :dir
                                                                                                 rl)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (rewrite
                                                     "initial_point_append_segment_seqs")
                                                    (("2"
                                                      (expand "F" 1)
                                                      (("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("3"
                                                    (propax)
                                                    nil
                                                    nil)
                                                   ("4"
                                                    (expand "F" 1)
                                                    (("4"
                                                      (expand "E" 1)
                                                      (("4"
                                                        (expand
                                                         "alternative_endpt_seqs")
                                                        (("4"
                                                          (assert)
                                                          (("4"
                                                            (expand
                                                             "A"
                                                             1)
                                                            (("4"
                                                              (expand
                                                               "B"
                                                               1)
                                                              (("4"
                                                                (expand
                                                                 "singleton_endpoint_seq")
                                                                (("4"
                                                                  (skeep
                                                                   +
                                                                   t)
                                                                  (("4"
                                                                    (replace
                                                                     -5
                                                                     -1
                                                                     :dir
                                                                     rl)
                                                                    (("4"
                                                                      (assert)
                                                                      (("4"
                                                                        (rewrite
                                                                         "comps_eq"
                                                                         -2)
                                                                        (("4"
                                                                          (flatten)
                                                                          (("4"
                                                                            (hide-all-but
                                                                             (-3
                                                                              -12
                                                                              2
                                                                              4
                                                                              5))
                                                                            (("4"
                                                                              (lift-if)
                                                                              (("4"
                                                                                (ground)
                                                                                (("1"
                                                                                  (expand
                                                                                   "^")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "+"
                                                                                     -2)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "*"
                                                                                       -2)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -3)
                                                                                        (("1"
                                                                                          (cancel-add
                                                                                           -2)
                                                                                          (("1"
                                                                                            (mult-cases
                                                                                             -2)
                                                                                            (("1"
                                                                                              (cross-mult
                                                                                               -2)
                                                                                              (("1"
                                                                                                (real-props)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "-"
                                                                                                   -2)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "+"
                                                                                     -1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "^")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "*"
                                                                                         -1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "-"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (factor
                                                                                             -1
                                                                                             r)
                                                                                            (("2"
                                                                                              (mult-cases
                                                                                               -1)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("5"
                                                    (expand
                                                     "append_segment_seqs")
                                                    (("5"
                                                      (expand "F" 1)
                                                      (("5"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("6"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "F" 1)
                                                  (("2"
                                                    (expand "Z" 1)
                                                    (("2"
                                                      (expand
                                                       "alternative_endpt_seqs")
                                                      (("2"
                                                        (expand "C" 1)
                                                        (("2"
                                                          (expand
                                                           "singleton_endpoint_seq")
                                                          (("2"
                                                            (expand
                                                             "D"
                                                             1)
                                                            (("2"
                                                              (lift-if)
                                                              (("2"
                                                                (ground)
                                                                (("1"
                                                                  (expand
                                                                   "^")
                                                                  (("1"
                                                                    (replace
                                                                     -3
                                                                     1)
                                                                    (("1"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("1"
                                                                        (grind-with-ext)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "^")
                                                                  (("2"
                                                                    (replace
                                                                     -2
                                                                     2)
                                                                    (("2"
                                                                      (hide-all-but
                                                                       2)
                                                                      (("2"
                                                                        (grind-with-ext)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (expand
                                                   "alternative_endpt_seqs")
                                                  (("3"
                                                    (replace
                                                     -1
                                                     1
                                                     :dir
                                                     rl)
                                                    (("3"
                                                      (expand "C" 1)
                                                      (("3"
                                                        (expand "D" 1)
                                                        (("3"
                                                          (expand
                                                           "singleton_endpoint_seq")
                                                          (("3"
                                                            (lift-if)
                                                            (("3"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("4"
                                                  (expand "F" 1)
                                                  (("4"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (replace -3 1 :dir rl)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (expand
                                                     "segment_endpoint_cond")
                                                    (("2"
                                                      (expand
                                                       "singleton_endpoint_seq")
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (skeep + t)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (hide-all-but
                                                               (-2 1))
                                                              (("2"
                                                                (expand
                                                                 "^")
                                                                (("2"
                                                                  (name-replace
                                                                   "nn"
                                                                   "norm(mp - q)")
                                                                  (("2"
                                                                    (move-terms
                                                                     -1
                                                                     l
                                                                     1)
                                                                    (("2"
                                                                      (real-props)
                                                                      (("2"
                                                                        (cross-mult
                                                                         -1)
                                                                        (("2"
                                                                          (use
                                                                           "scal_cancel")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (expand
                                                 "segment_endpoint_cond")
                                                (("3"
                                                  (replace
                                                   -4
                                                   1
                                                   :dir
                                                   rl)
                                                  (("3"
                                                    (expand
                                                     "singleton_endpoint_seq")
                                                    (("3"
                                                      (flatten)
                                                      (("3"
                                                        (skeep + t)
                                                        (("3"
                                                          (replace
                                                           -6
                                                           -1
                                                           :dir
                                                           rl)
                                                          (("3"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2" (skeep) nil nil)
                                             ("3"
                                              (replace -1 1 :dir rl)
                                              (("3"
                                                (expand
                                                 "alternative_endpt_seqs")
                                                (("3"
                                                  (replace
                                                   -5
                                                   1
                                                   :dir
                                                   rl)
                                                  (("3"
                                                    (replace
                                                     -4
                                                     1
                                                     :dir
                                                     rl)
                                                    (("3"
                                                      (assert)
                                                      (("3"
                                                        (expand
                                                         "singleton_endpoint_seq")
                                                        (("3"
                                                          (skeep)
                                                          (("3"
                                                            (lift-if)
                                                            (("3"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (replace -3 1 :dir rl)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (expand
                                                 "segment_endpoint_cond")
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (skeep + t)
                                                    (("2"
                                                      (expand
                                                       "singleton_endpoint_seq")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (hide-all-but
                                                           (-2 1))
                                                          (("2"
                                                            (replace
                                                             -1
                                                             :hide?
                                                             t)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (flatten)
                                            (("3"
                                              (expand
                                               "segment_endpoint_cond")
                                              (("3"
                                                (replace -5 1 :dir rl)
                                                (("3"
                                                  (expand
                                                   "singleton_endpoint_seq")
                                                  (("3"
                                                    (skeep + t)
                                                    (("3"
                                                      (replace
                                                       -6
                                                       -1
                                                       :dir
                                                       rl)
                                                      (("3"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (skeep) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand
                                   "leftmost_intersection_point")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (next_vtx_to_miter_pt_subcase_zero_TCC1 0
  (next_vtx_to_miter_pt_subcase_zero_TCC1-2 nil 3874129022
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (next_vtx_to_miter_pt_subcase_zero subtype
    "polygon_miter_sequences.m" "Nz_vector"))
  (next_vtx_to_miter_pt_subcase_zero_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (next_vtx_to_miter_pt_subcase_zero subtype
    "polygon_miter_sequences.m" "Nz_vector")))
 (next_vtx_to_miter_pt_subcase_zero_TCC2 0
  (next_vtx_to_miter_pt_subcase_zero_TCC2-2 nil 3874129022
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (next_vtx_to_miter_pt_subcase_zero subtype
    "polygon_miter_sequences.r"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.u}"))
  (next_vtx_to_miter_pt_subcase_zero_TCC2-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (next_vtx_to_miter_pt_subcase_zero subtype
    "polygon_miter_sequences.r"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.u}")))
 (next_vtx_to_miter_pt_subcase_zero_TCC3 0
  (next_vtx_to_miter_pt_subcase_zero_TCC3-2 nil 3874129022
   ("" (skeep*)
    (("" (replace -14)
      (("" (rewrite "point_on_segment_has_offset" -13)
        (("" (skeep)
          (("" (lemma "comp_eq_y")
            (("" (inst - "m" "v + d * (q - v)")
              (("" (split -1)
                (("1" (hide-all-but (-1 -2 -5 -6 -15))
                  (("1" (grind)
                    (("1" (factor -4 l) (("1" (mult-cases -4) nil nil))
                      nil))
                    nil))
                  nil)
                 ("2" (propax) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (next_vtx_to_miter_pt_subcase_zero subtype
    "polygon_miter_sequences.z"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.m}"))
  (next_vtx_to_miter_pt_subcase_zero_TCC3-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (next_vtx_to_miter_pt_subcase_zero subtype
    "polygon_miter_sequences.z"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.m}")))
 (next_vtx_to_miter_pt_subcase_zero 0
  (next_vtx_to_miter_pt_subcase_zero-1 nil 3874129022
   ("" (skeep*)
    (("" (rewrite "point_on_segment_has_offset")
      (("" (skeep)
        (("" (case "q = zero")
          (("1" (case "36 * sqv(m - v) <= sqv(v)")
            (("1" (case "m`x < 0")
              (("1" (case "v`x < 0")
                (("1" (case "r`x < 0 & r`y < 0")
                  (("1" (case "m`y < y`y & y`y <= 0")
                    (("1" (flatten)
                      (("1" (case "cross(q - m, v - m) > 0")
                        (("1"
                          (lemma
                           "point_btw_rays_imp_opp_side_crossing")
                          (("1" (inst - "u" "m" "v" "q")
                            (("1" (ground)
                              (("1"
                                (skeep)
                                (("1"
                                  (case "q_1`y >= 0")
                                  (("1"
                                    (case-replace "y = r")
                                    (("1"
                                      (inst + "q")
                                      (("1"
                                        (ground)
                                        (("1"
                                          (expand
                                           "point_on_segment?"
                                           +)
                                          (("1"
                                            (inst + "1")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (replace -22 +)
                                          (("2"
                                            (rewrite
                                             "point_on_reverse_segment"
                                             :dir
                                             rl)
                                            (("2"
                                              (expand
                                               "reverse_segment")
                                              (("2"
                                                (rewrite
                                                 "point_on_segment_has_norm_offset")
                                                (("2"
                                                  (inst + "k")
                                                  (("2"
                                                    (ground)
                                                    (("1"
                                                      (replace -13 1)
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand "length")
                                                      (("2"
                                                        (replace -13 1)
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (case-replace "y = u")
                                      (("1"
                                        (case "m = q_1")
                                        (("1"
                                          (replace -1)
                                          (("1" (assert) nil nil))
                                          nil)
                                         ("2"
                                          (inst + "q_1")
                                          (("2"
                                            (ground)
                                            (("1"
                                              (expand
                                               "point_on_arb_ray?")
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (rewrite
                                                   "point_on_segment_has_offset")
                                                  (("1"
                                                    (replace -4 +)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (case-replace
                                                         "d!1 = 0")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (inst
                                                           +
                                                           "norm(u - m) / d!1")
                                                          (("1"
                                                            (expand
                                                             "^")
                                                            (("1"
                                                              (real-props)
                                                              (("1"
                                                                (ground)
                                                                (("1"
                                                                  (move-terms
                                                                   1
                                                                   r
                                                                   1)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (lemma
                                                                   "comp_eq_y")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "q_1"
                                                                     "m + d!1 / norm(u - m) * (u - m)")
                                                                    (("2"
                                                                      (split
                                                                       -1)
                                                                      (("1"
                                                                        (expand
                                                                         "+"
                                                                         -1)
                                                                        (("1"
                                                                          (expand
                                                                           "*"
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "-"
                                                                             -1
                                                                             2)
                                                                            (("1"
                                                                              (case-replace
                                                                               "u`y = 0")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (factor
                                                                                   -2
                                                                                   r)
                                                                                  (("1"
                                                                                    (case
                                                                                     "m`y * (1 - (d!1 / norm(u - m))) < 0")
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "point_on_segment_has_offset")
                                                                                      (("1"
                                                                                        (skeep)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "comp_eq_y")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "q_1"
                                                                                             "v + d!2 * (q - v)")
                                                                                            (("1"
                                                                                              (split
                                                                                               -1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "+"
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "*"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "-"
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -18
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (factor
                                                                                                           -1
                                                                                                           r)
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "v`y * (1 - d!2) >= 0")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -5
                                                                                                               :dir
                                                                                                               rl)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (mult-cases
                                                                                                               1)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (mult-cases
                                                                                       1)
                                                                                      (("2"
                                                                                        (case
                                                                                         "d!1 / norm(u - m) < 1")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (cross-mult
                                                                                           1)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (cross-mult
                                                             1)
                                                            nil
                                                            nil)
                                                           ("3"
                                                            (ground)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (rewrite
                                               "point_on_segment_has_offset"
                                               -)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (lemma "comp_eq_y")
                                                  (("2"
                                                    (inst
                                                     -
                                                     "q_1"
                                                     "v + d!1 * (q - v)")
                                                    (("2"
                                                      (split -1)
                                                      (("1"
                                                        (expand "+" -1)
                                                        (("1"
                                                          (expand
                                                           "*"
                                                           -1)
                                                          (("1"
                                                            (expand
                                                             "-"
                                                             -1)
                                                            (("1"
                                                              (replace
                                                               -16
                                                               -1)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (factor
                                                                   -1
                                                                   r)
                                                                  (("1"
                                                                    (case
                                                                     "v`y * (1 - d!1) >= 0")
                                                                    (("1"
                                                                      (case
                                                                       "q_1`y = 0")
                                                                      (("1"
                                                                        (expand
                                                                         "point_on_arb_ray?")
                                                                        (("1"
                                                                          (skeep)
                                                                          (("1"
                                                                            (case-replace
                                                                             "d!1 = 1")
                                                                            (("1"
                                                                              (lemma
                                                                               "comp_eq_y")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "q_1"
                                                                                 "m + d!2 * ^(u - m)")
                                                                                (("1"
                                                                                  (split
                                                                                   -1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "+"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "^"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "*"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (real-props)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "-"
                                                                                             -1
                                                                                             1)
                                                                                            (("1"
                                                                                              (equate
                                                                                               "u`y"
                                                                                               "0"
                                                                                               (assert))
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -3)
                                                                                                (("1"
                                                                                                  (move-terms
                                                                                                   -1
                                                                                                   r
                                                                                                   2)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (real-props)
                                                                                                      (("1"
                                                                                                        (cancel-by
                                                                                                         -1
                                                                                                         "m`y")
                                                                                                        (("1"
                                                                                                          (cross-mult
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1
                                                                                                             -10)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "^"
                                                                                                               -10)
                                                                                                              (("1"
                                                                                                                (real-props)
                                                                                                                (("1"
                                                                                                                  (cancel-add
                                                                                                                   -10)
                                                                                                                  (("1"
                                                                                                                    (cancel-add
                                                                                                                     -8)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (replace
                                                                               -1)
                                                                              (("2"
                                                                                (mult-cases
                                                                                 -3)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (mult-cases
                                                                       1)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (lemma
                                         "point_btw_rays_imp_opp_side_crossing")
                                        (("2"
                                          (inst - "y" "m" "q_1" "q")
                                          (("2"
                                            (case
                                             "cross(q - m, q_1 - m) > 0")
                                            (("1"
                                              (ground)
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (case "q_1!1`y >= 0")
                                                  (("1"
                                                    (inst + "q_1!1")
                                                    (("1"
                                                      (ground)
                                                      (("1"
                                                        (lemma
                                                         "point_on_subsegment")
                                                        (("1"
                                                          (inst
                                                           -
                                                           "q_1!1"
                                                           "(# p1 := q_1, p2 := q #)"
                                                           "(# p1 := v, p2 := q #)")
                                                          (("1"
                                                            (ground)
                                                            (("1"
                                                              (expand
                                                               "subsegment?")
                                                              (("1"
                                                                (expand
                                                                 "point_on_segment?")
                                                                (("1"
                                                                  (inst
                                                                   +
                                                                   "1")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (expand
                                                               "point_on_arb_ray?"
                                                               -8)
                                                              (("2"
                                                                (skeep)
                                                                (("2"
                                                                  (replace
                                                                   -1
                                                                   :dir
                                                                   rl)
                                                                  (("2"
                                                                    (lemma
                                                                     "comp_eq_y")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "q"
                                                                       "m + d!1 * ^(u - m)")
                                                                      (("2"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (expand
                                                                           "^")
                                                                          (("1"
                                                                            (expand
                                                                             "+"
                                                                             -1)
                                                                            (("1"
                                                                              (expand
                                                                               "*"
                                                                               -1)
                                                                              (("1"
                                                                                (real-props)
                                                                                (("1"
                                                                                  (expand
                                                                                   "-"
                                                                                   -1
                                                                                   1)
                                                                                  (("1"
                                                                                    (case-replace
                                                                                     "u`y = 0")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -19
                                                                                       -2)
                                                                                      (("1"
                                                                                        (move-terms
                                                                                         -2
                                                                                         r
                                                                                         2)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (real-props)
                                                                                            (("1"
                                                                                              (cancel-by
                                                                                               -2
                                                                                               "m`y")
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "point_on_arb_ray?"
                                                         -3)
                                                        (("2"
                                                          (skeep)
                                                          (("2"
                                                            (replace
                                                             -3
                                                             1)
                                                            (("2"
                                                              (rewrite
                                                               "point_on_segment_has_offset")
                                                              (("2"
                                                                (expand
                                                                 "^")
                                                                (("2"
                                                                  (case-replace
                                                                   "d!1 = 0")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (inst
                                                                     +
                                                                     "norm(y - m) / d!1")
                                                                    (("1"
                                                                      (real-props)
                                                                      (("1"
                                                                        (ground)
                                                                        (("1"
                                                                          (move-terms
                                                                           1
                                                                           r
                                                                           1)
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (lemma
                                                                           "comp_eq_y")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "q_1!1"
                                                                             "m + d!1 / norm(y - m) * (y - m)")
                                                                            (("2"
                                                                              (split
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "+"
                                                                                 -1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "*"
                                                                                   -1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "-"
                                                                                     -1
                                                                                     2)
                                                                                    (("1"
                                                                                      (factor
                                                                                       -1
                                                                                       r
                                                                                       (2
                                                                                        3))
                                                                                      (("1"
                                                                                        (name-replace
                                                                                         "ym"
                                                                                         "(d!1 / norm(y - m)) * (y`y - m`y)")
                                                                                        (("1"
                                                                                          (case
                                                                                           "ym < -m`y")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "ym")
                                                                                            (("2"
                                                                                              (move-terms
                                                                                               1
                                                                                               l
                                                                                               2)
                                                                                              (("2"
                                                                                                (name-replace
                                                                                                 "nym"
                                                                                                 "d!1 / norm(y - m)")
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "nym < 1")
                                                                                                  (("1"
                                                                                                    (name-replace
                                                                                                     "mym"
                                                                                                     "-m`y + m`y * nym")
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "mym > 0")
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "y`y * nym <= 0")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (mult-cases
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "nym")
                                                                                                            (("2"
                                                                                                              (cross-mult
                                                                                                               2)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "mym")
                                                                                                        (("2"
                                                                                                          (move-terms
                                                                                                           1
                                                                                                           l)
                                                                                                          (("2"
                                                                                                            (elim-unary
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (factor
                                                                                                                 1
                                                                                                                 r)
                                                                                                                (("2"
                                                                                                                  (mult-cases
                                                                                                                   1)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "nym")
                                                                                                    (("2"
                                                                                                      (cross-mult
                                                                                                       1)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (cross-mult
                                                                       1)
                                                                      nil
                                                                      nil)
                                                                     ("3"
                                                                      (ground)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (case-replace
                                                         "d = 0")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (replace -1)
                                                          (("2"
                                                            (lemma
                                                             "comp_eq_y")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "q_1!1"
                                                               "u + d * (r - u)")
                                                              (("2"
                                                                (split
                                                                 -1)
                                                                (("1"
                                                                  (expand
                                                                   "+"
                                                                   -1)
                                                                  (("1"
                                                                    (expand
                                                                     "*"
                                                                     -1)
                                                                    (("1"
                                                                      (expand
                                                                       "-"
                                                                       -1)
                                                                      (("1"
                                                                        (replace
                                                                         -26
                                                                         -1)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (case
                                                                             "r`y * d < 0")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (mult-cases
                                                                               1)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (rewrite
                                                     "point_on_segment_has_offset")
                                                    (("1"
                                                      (skeep)
                                                      (("1"
                                                        (replace -1 1)
                                                        (("1"
                                                          (expand
                                                           "+"
                                                           1)
                                                          (("1"
                                                            (expand
                                                             "*"
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "-"
                                                               1)
                                                              (("1"
                                                                (replace
                                                                 -16
                                                                 1)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (factor
                                                                     1
                                                                     l)
                                                                    (("1"
                                                                      (mult-cases
                                                                       1)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (replace
                                                         -1
                                                         :dir
                                                         rl)
                                                        (("2"
                                                          (rewrite
                                                           "cross_self_zero")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 "point_between_rays?")
                                                (("2"
                                                  (hide 9)
                                                  (("2"
                                                    (ground)
                                                    (("1"
                                                      (rewrite
                                                       "cross_distrib_sub_1")
                                                      (("1"
                                                        (equate
                                                         "cross(q, y - m)"
                                                         "0")
                                                        (("1"
                                                          (rewrite
                                                           "cross_distrib_sub_2")
                                                          (("1"
                                                            (rewrite
                                                             "cross_self_zero")
                                                            (("1"
                                                              (move-terms
                                                               1
                                                               l
                                                               2)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (case
                                                                   "cross(r, y) < 0")
                                                                  (("1"
                                                                    (replace
                                                                     -23
                                                                     -1)
                                                                    (("1"
                                                                      (expand
                                                                       "^"
                                                                       -1)
                                                                      (("1"
                                                                        (real-props)
                                                                        (("1"
                                                                          (rewrite
                                                                           "cross_scales_1")
                                                                          (("1"
                                                                            (real-props)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (replace
                                                                     -25
                                                                     1)
                                                                    (("2"
                                                                      (rewrite
                                                                       "cross_distrib_add_2")
                                                                      (("2"
                                                                        (rewrite
                                                                         "cross_scales_2")
                                                                        (("2"
                                                                          (rewrite
                                                                           "cross_distrib_sub_2")
                                                                          (("2"
                                                                            (rewrite
                                                                             "cross_self_zero")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (case-replace
                                                                                 "d = 1")
                                                                                (("1"
                                                                                  (hide-all-but
                                                                                   (-26
                                                                                    4))
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (move-terms
                                                                                       -1
                                                                                       r
                                                                                       1)
                                                                                      (("1"
                                                                                        (cancel-add
                                                                                         -1)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (factor
                                                                                   2
                                                                                   l)
                                                                                  (("2"
                                                                                    (mult-cases
                                                                                     2)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -22
                                                                                       2)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "^"
                                                                                         2)
                                                                                        (("2"
                                                                                          (real-props)
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "cross_scales_1")
                                                                                            (("2"
                                                                                              (real-props)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -21
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "cross"
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (real-props)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           (-13 1))
                                                          (("2"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "point_on_arb_ray?")
                                                      (("2"
                                                        (skeep)
                                                        (("2"
                                                          (replace
                                                           -4
                                                           1)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (expand
                                                               "^"
                                                               1)
                                                              (("2"
                                                                (real-props)
                                                                (("2"
                                                                  (rewrite
                                                                   "cross_scales_1")
                                                                  (("2"
                                                                    (real-props)
                                                                    (("2"
                                                                      (ground)
                                                                      (("1"
                                                                        (equate
                                                                         "d!1"
                                                                         "0"
                                                                         (assert))
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (replace
                                                                         -25
                                                                         1)
                                                                        (("2"
                                                                          (rewrite
                                                                           "cross_distrib_sub_1")
                                                                          (("2"
                                                                            (rewrite
                                                                             "cross_distrib_sub_2")
                                                                            (("2"
                                                                              (rewrite
                                                                               "cross_distrib_sub_2")
                                                                              (("2"
                                                                                (rewrite
                                                                                 "cross_distrib_add_2")
                                                                                (("2"
                                                                                  (rewrite
                                                                                   "cross_distrib_add_2")
                                                                                  (("2"
                                                                                    (rewrite*
                                                                                     "cross_self_zero")
                                                                                    (("2"
                                                                                      (rewrite
                                                                                       "cross_scales_2")
                                                                                      (("2"
                                                                                        (rewrite
                                                                                         "cross_scales_2")
                                                                                        (("2"
                                                                                          (rewrite
                                                                                           "cross_distrib_sub_2")
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "cross_distrib_sub_2")
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "cross_self_zero")
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -22
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "^"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (real-props)
                                                                                                    (("2"
                                                                                                      (rewrite
                                                                                                       "cross_scales_2")
                                                                                                      (("2"
                                                                                                        (rewrite
                                                                                                         "cross_scales_2")
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "cross_self_zero")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (equate
                                                                                                               "cross(u, m)"
                                                                                                               "-cross(m, u)")
                                                                                                              (("1"
                                                                                                                (elim-unary
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (cancel-by
                                                                                                                     1
                                                                                                                     "d")
                                                                                                                    (("1"
                                                                                                                      (equate
                                                                                                                       "(cross(m, u) * k / norm(m))"
                                                                                                                       "cross(m, u) * (k / norm(m))"
                                                                                                                       (assert))
                                                                                                                      (("1"
                                                                                                                        (factor
                                                                                                                         1
                                                                                                                         l)
                                                                                                                        (("1"
                                                                                                                          (div-by
                                                                                                                           1
                                                                                                                           "1 - (k / norm(m))")
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -22
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "cross"
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (real-props)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (case
                                                                                                                             "1 - (k / norm(m)) > 0")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (move-terms
                                                                                                                               1
                                                                                                                               l
                                                                                                                               2)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (cross-mult
                                                                                                                                   1)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (rewrite
                                                                                                                 "cross_antisymmetric")
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide -1 9)
                                              (("2"
                                                (rewrite
                                                 "cross_distrib_sub_1")
                                                (("2"
                                                  (equate
                                                   "cross(q, q_1 - m)"
                                                   "0")
                                                  (("1"
                                                    (rewrite
                                                     "cross_distrib_sub_2")
                                                    (("1"
                                                      (rewrite
                                                       "cross_self_zero")
                                                      (("1"
                                                        (expand
                                                         "point_on_arb_ray?")
                                                        (("1"
                                                          (skeep)
                                                          (("1"
                                                            (replace
                                                             -3
                                                             1)
                                                            (("1"
                                                              (expand
                                                               "^"
                                                               1)
                                                              (("1"
                                                                (real-props)
                                                                (("1"
                                                                  (rewrite
                                                                   "cross_distrib_add_2")
                                                                  (("1"
                                                                    (rewrite
                                                                     "cross_scales_2")
                                                                    (("1"
                                                                      (rewrite
                                                                       "cross_distrib_sub_2")
                                                                      (("1"
                                                                        (rewrite
                                                                         "cross_self_zero")
                                                                        (("1"
                                                                          (real-props)
                                                                          (("1"
                                                                            (ground)
                                                                            (("1"
                                                                              (equate
                                                                               "d!1"
                                                                               "0"
                                                                               (assert))
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (replace
                                                                               -20
                                                                               1)
                                                                              (("2"
                                                                                (expand
                                                                                 "cross"
                                                                                 1)
                                                                                (("2"
                                                                                  (real-props)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide-all-but
                                                     (-12 1))
                                                    (("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (rewrite
                                     "point_on_segment_has_offset")
                                    (("2"
                                      (skeep)
                                      (("2"
                                        (lemma "comp_eq_y")
                                        (("2"
                                          (inst
                                           -
                                           "q_1"
                                           "v + d!1 * (q - v)")
                                          (("2"
                                            (split -1)
                                            (("1"
                                              (expand "+" -1)
                                              (("1"
                                                (expand "*" -1)
                                                (("1"
                                                  (expand "-" -1)
                                                  (("1"
                                                    (replace -13 -1)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (factor -1 r)
                                                        (("1"
                                                          (case
                                                           "v`y * (1 - d!1) >= 0")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (mult-cases
                                                             1)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (expand "point_between_rays?")
                                (("2"
                                  (ground)
                                  (("1"
                                    (rewrite "cross_distrib_sub_1")
                                    (("1"
                                      (equate
                                       "cross(q, u - m)"
                                       "0"
                                       (then (hide-all-but 1) (grind)))
                                      (("1"
                                        (rewrite "cross_distrib_sub_2")
                                        (("1"
                                          (rewrite "cross_self_zero")
                                          (("1"
                                            (replace -17 1)
                                            (("1"
                                              (expand "cross" 1)
                                              (("1"
                                                (mult-cases 1)
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (rewrite "cross_distrib_sub_2")
                                    (("2"
                                      (rewrite "cross_distrib_sub_1")
                                      (("2"
                                        (rewrite "cross_distrib_sub_1")
                                        (("2"
                                          (rewrite "cross_self_zero")
                                          (("2"
                                            (move-terms 1 l 3)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (replace -17 1)
                                                (("2"
                                                  (expand "cross" 1)
                                                  (("2"
                                                    (hide 7)
                                                    (("2"
                                                      (case
                                                       "m`x < -k & v`x < -k")
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (move-terms
                                                           1
                                                           l
                                                           2)
                                                          (("1"
                                                            (move-terms
                                                             1
                                                             r
                                                             1)
                                                            (("1"
                                                              (elim-unary
                                                               1)
                                                              (("1"
                                                                (factor
                                                                 1
                                                                 *)
                                                                (("1"
                                                                  (mult-cases
                                                                   1)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (case
                                                         "6 * k < norm(v)")
                                                        (("1"
                                                          (case
                                                           "5 * norm(v) <= 6 * norm(m)")
                                                          (("1"
                                                            (case
                                                             "5 * k < norm(m)")
                                                            (("1"
                                                              (ground)
                                                              (("1"
                                                                (lemma
                                                                 "sq_norm_dist")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "q"
                                                                   "(m`x, 0)"
                                                                   "m")
                                                                  (("1"
                                                                    (replace
                                                                     -13
                                                                     -1)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (expand
                                                                         "*"
                                                                         -1)
                                                                        (("1"
                                                                          (expand
                                                                           "-"
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "norm"
                                                                             -1
                                                                             (2
                                                                              3))
                                                                            (("1"
                                                                              (expand
                                                                               "sqv"
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "*"
                                                                                 -1)
                                                                                (("1"
                                                                                  (rewrite*
                                                                                   "sq_sqrt")
                                                                                  (("1"
                                                                                    (case
                                                                                     "m`y * m`y < sqv(m - v)")
                                                                                    (("1"
                                                                                      (case
                                                                                       "sq(norm(m)) < m`x * m`x + sqv(m - v)")
                                                                                      (("1"
                                                                                        (div-by
                                                                                         -14
                                                                                         "36")
                                                                                        (("1"
                                                                                          (add-formulas
                                                                                           -1
                                                                                           -14)
                                                                                          (("1"
                                                                                            (cancel-add
                                                                                             -1)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "sq_le"
                                                                                               -5
                                                                                               :dir
                                                                                               rl)
                                                                                              (("1"
                                                                                                (rewrite*
                                                                                                 "sq_times")
                                                                                                (("1"
                                                                                                  (rewrite*
                                                                                                   "sq_norm"
                                                                                                   -5)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "sq"
                                                                                                     -5)
                                                                                                    (("1"
                                                                                                      (div-by
                                                                                                       -5
                                                                                                       "36")
                                                                                                      (("1"
                                                                                                        (div-by
                                                                                                         -5
                                                                                                         "25")
                                                                                                        (("1"
                                                                                                          (equate
                                                                                                           "25 * sqv(v) / 36 / 25"
                                                                                                           "sqv(v) / 36"
                                                                                                           (real-props))
                                                                                                          (("1"
                                                                                                            (add-formulas
                                                                                                             -1
                                                                                                             -5)
                                                                                                            (("1"
                                                                                                              (cancel-add
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "sq_lt"
                                                                                                                 -4
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "sq_norm"
                                                                                                                   -4)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "sq"
                                                                                                                     -4)
                                                                                                                    (("1"
                                                                                                                      (move-terms
                                                                                                                       -1
                                                                                                                       r
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (equate
                                                                                                                         "sqv(m) - sqv(m) / 25"
                                                                                                                         "24/25 * sqv(m)"
                                                                                                                         (assert))
                                                                                                                        (("1"
                                                                                                                          (mult-by
                                                                                                                           -4
                                                                                                                           "24/25")
                                                                                                                          (("1"
                                                                                                                            (add-formulas
                                                                                                                             -1
                                                                                                                             -4)
                                                                                                                            (("1"
                                                                                                                              (cancel-add
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "k * k < m`x * m`x")
                                                                                                                                (("1"
                                                                                                                                  (equate
                                                                                                                                   "m`x * m`x"
                                                                                                                                   "abs(m`x) * abs(m`x)")
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "sq_rew")
                                                                                                                                    (("1"
                                                                                                                                      (inst-cp
                                                                                                                                       -
                                                                                                                                       "k")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "abs(m`x)")
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -2)
                                                                                                                                            (("1"
                                                                                                                                              (rewrite
                                                                                                                                               "sq_lt"
                                                                                                                                               -3)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "abs")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (expand
                                                                                                                                     "abs")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (add-formulas
                                                                                         -1
                                                                                         -2)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (lemma
                                                                                       "norm_ge_comps")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "m - v")
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "-"
                                                                                             -2
                                                                                             2)
                                                                                            (("2"
                                                                                              (case
                                                                                               "abs(m`y) < abs(m`y - v`y)")
                                                                                              (("1"
                                                                                                (add-formulas
                                                                                                 -1
                                                                                                 -3)
                                                                                                (("1"
                                                                                                  (cancel-add
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "sq_lt"
                                                                                                     -1
                                                                                                     :dir
                                                                                                     rl)
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "sq_norm")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "sq"
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (expand
                                                                                                 "abs")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (lemma
                                                                 "sq_norm_dist")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "q"
                                                                   "(v`x, 0)"
                                                                   "v")
                                                                  (("2"
                                                                    (replace
                                                                     -13
                                                                     -1)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (expand
                                                                         "*"
                                                                         -1)
                                                                        (("2"
                                                                          (expand
                                                                           "-"
                                                                           -1)
                                                                          (("2"
                                                                            (expand
                                                                             "norm"
                                                                             -1
                                                                             (2
                                                                              3))
                                                                            (("2"
                                                                              (expand
                                                                               "sqv"
                                                                               -1)
                                                                              (("2"
                                                                                (expand
                                                                                 "*"
                                                                                 -1)
                                                                                (("2"
                                                                                  (rewrite*
                                                                                   "sq_sqrt")
                                                                                  (("2"
                                                                                    (case
                                                                                     "v`y * v`y < sqv(v - m)")
                                                                                    (("1"
                                                                                      (case
                                                                                       "sq(norm(v)) < v`x * v`x + sqv(v - m)")
                                                                                      (("1"
                                                                                        (div-by
                                                                                         -14
                                                                                         "36")
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "sqv_sym"
                                                                                           -14)
                                                                                          (("1"
                                                                                            (add-formulas
                                                                                             -1
                                                                                             -14)
                                                                                            (("1"
                                                                                              (cancel-add
                                                                                               -1)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "sq_norm"
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (move-terms
                                                                                                   -1
                                                                                                   r
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (equate
                                                                                                     "sqv(v) - sqv(v) / 36"
                                                                                                     "35/36 * sqv(v)"
                                                                                                     (assert))
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "sq_lt"
                                                                                                       -6
                                                                                                       :dir
                                                                                                       rl)
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "sq_norm"
                                                                                                         -6)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "sq"
                                                                                                           -6)
                                                                                                          (("1"
                                                                                                            (mult-by
                                                                                                             -6
                                                                                                             "35/36")
                                                                                                            (("1"
                                                                                                              (add-formulas
                                                                                                               -1
                                                                                                               -6)
                                                                                                              (("1"
                                                                                                                (cancel-add
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "k * k < v`x * v`x")
                                                                                                                  (("1"
                                                                                                                    (equate
                                                                                                                     "v`x * v`x"
                                                                                                                     "abs(v`x) * abs(v`x)")
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "sq_rew")
                                                                                                                      (("1"
                                                                                                                        (inst-cp
                                                                                                                         -
                                                                                                                         "k")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "abs(v`x)")
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -2)
                                                                                                                              (("1"
                                                                                                                                (rewrite
                                                                                                                                 "sq_lt"
                                                                                                                                 -3)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "abs")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "abs")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (add-formulas
                                                                                         -1
                                                                                         -2)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (lemma
                                                                                       "norm_ge_comps")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "v - m")
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "-"
                                                                                             -2
                                                                                             2)
                                                                                            (("2"
                                                                                              (case
                                                                                               "v`y < abs(v`y - m`y)")
                                                                                              (("1"
                                                                                                (add-formulas
                                                                                                 -1
                                                                                                 -3)
                                                                                                (("1"
                                                                                                  (cancel-add
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "sq_lt"
                                                                                                     -1
                                                                                                     :dir
                                                                                                     rl)
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "sq_norm")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "sq"
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (expand
                                                                                                 "abs")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (real-props)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (lemma
                                                             "norm_sub_ge")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "v"
                                                               "m")
                                                              (("2"
                                                                (rewrite
                                                                 "norm_sym"
                                                                 -1)
                                                                (("2"
                                                                  (add-formulas
                                                                   -1
                                                                   -17)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           (-16 1))
                                                          (("2"
                                                            (real-props)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (rewrite "cross_distrib_sub_1")
                          (("2" (replace -8 1)
                            (("2" (equate "cross(zero, v - m)" "0")
                              (("1"
                                (rewrite "cross_distrib_sub_2")
                                (("1"
                                  (rewrite "cross_self_zero")
                                  (("1"
                                    (rewrite "cross_antisymmetric" -19)
                                    (("1" (assert) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (hide-all-but 1)
                                (("2" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (replace -17 1)
                      (("2" (expand "+" 1)
                        (("2" (expand "*" 1)
                          (("2" (expand "-" 1)
                            (("2" (ground)
                              (("1"
                                (replace -14 1)
                                (("1"
                                  (assert)
                                  (("1"
                                    (replace -15 1)
                                    (("1"
                                      (expand "^")
                                      (("1"
                                        (expand "*" 1)
                                        (("1"
                                          (real-props)
                                          (("1"
                                            (cancel-by 1 "m`y")
                                            (("1"
                                              (mult-cases
                                               1
                                               :mult-op
                                               1*)
                                              nil
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (replace -14 1)
                                (("2"
                                  (assert)
                                  (("2" (mult-cases 1) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (replace -13 1)
                    (("2" (expand "^" 1)
                      (("2" (expand "*" 1) (("2" (real-props) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide 7)
                  (("2" (expand "sqv")
                    (("2" (expand "*" -2)
                      (("2" (expand "-" -2)
                        (("2" (move-terms -2 r)
                          (("2" (assert)
                            (("2"
                              (case "72 * (m`x * v`x) <= 0 & 72 * (m`y * v`y) < 0")
                              (("1"
                                (flatten)
                                (("1" (assert) nil nil))
                                nil)
                               ("2"
                                (ground)
                                (("1"
                                  (div-by 1 "72")
                                  (("1" (mult-cases 1) nil nil))
                                  nil)
                                 ("2"
                                  (div-by 1 "72")
                                  (("2"
                                    (assert)
                                    (("2" (mult-cases 1) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 7)
                (("2" (expand "cross")
                  (("2" (case "v`x > 0")
                    (("1" (case "v`x * m`y < 0 & v`y * m`x >= 0")
                      (("1" (ground) nil nil)
                       ("2" (ground)
                        (("1" (mult-cases 1) nil nil)
                         ("2" (mult-cases 1) nil nil))
                        nil))
                      nil)
                     ("2" (expand "sqv" -1)
                      (("2" (expand "*" -1)
                        (("2" (expand "-" -1)
                          (("2" (assert)
                            (("2" (move-terms -1 r)
                              (("2"
                                (assert)
                                (("2"
                                  (case
                                   "72 * (m`x * v`x) <= 0 & 72 * (m`y * v`y) < 0")
                                  (("1"
                                    (flatten)
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (ground)
                                    (("1"
                                      (div-by 1 "72")
                                      (("1" (mult-cases 1) nil nil))
                                      nil)
                                     ("2"
                                      (div-by 1 "72")
                                      (("2"
                                        (assert)
                                        (("2" (mult-cases 1) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (cross-mult -7)
              (("2" (equate "6" "abs(6)" (expand "abs"))
                (("2" (rewrite "norm_scal" -7 :dir rl)
                  (("2" (rewrite "norm_le_sqv")
                    (("2" (rewrite "sqv_scal")
                      (("2" (expand "sq") (("2" (propax) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "zero") (("2" (propax) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (next_vtx_to_miter_pt_subcase_TCC1 0
  (next_vtx_to_miter_pt_subcase_TCC1-2 nil 3874129022
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (next_vtx_to_miter_pt_subcase subtype
    "(vectors_2D.-)(polygon_miter_sequences.m, polygon_miter_sequences.q)"
    "Nz_vector"))
  (next_vtx_to_miter_pt_subcase_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (next_vtx_to_miter_pt_subcase subtype
    "(vectors_2D.-)(polygon_miter_sequences.m, polygon_miter_sequences.q)"
    "Nz_vector")))
 (next_vtx_to_miter_pt_subcase_TCC2 0
  (next_vtx_to_miter_pt_subcase_TCC2-2 nil 3874129022
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (next_vtx_to_miter_pt_subcase subtype "polygon_miter_sequences.r"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.u}"))
  (next_vtx_to_miter_pt_subcase_TCC2-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (next_vtx_to_miter_pt_subcase subtype "polygon_miter_sequences.r"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.u}")))
 (next_vtx_to_miter_pt_subcase_TCC3 0
  (next_vtx_to_miter_pt_subcase_TCC3-2 nil 3874129022
   ("" (skeep*)
    (("" (replace -13)
      (("" (rewrite "point_on_segment_has_offset" -12)
        (("" (skeep)
          (("" (lemma "comp_eq_y")
            (("" (inst - "m" "v + d * (q - v)")
              (("" (split -1)
                (("1" (hide -6 -7 -9 -10 -11 -12)
                  (("1" (grind)
                    (("1" (move-terms -4 l 2)
                      (("1" (factor -4 *)
                        (("1" (cancel-by -4 "1 - d") nil nil)) nil))
                      nil))
                    nil))
                  nil)
                 ("2" (propax) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (next_vtx_to_miter_pt_subcase subtype "polygon_miter_sequences.z"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.m}"))
  (next_vtx_to_miter_pt_subcase_TCC3-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (next_vtx_to_miter_pt_subcase subtype "polygon_miter_sequences.z"
    "{p: vectors_cross_2d.point_2d | p /= polygon_miter_sequences.m}")))
 (next_vtx_to_miter_pt_subcase 0
  (next_vtx_to_miter_pt_subcase-1 nil 3874129022
   ("" (skeep)
    (("" (lemma "next_vtx_to_miter_pt_subcase_zero")
      (("" (inst - "m - q" "p - q" "q - q" "r - q" "u - q" "v - q" "k")
        (("" (assert)
          (("" (ground)
            (("1" (skeep)
              (("1" (inst - "y - q")
                (("1" (ground)
                  (("1" (skeep)
                    (("1" (inst + "z + q")
                      (("1" (ground)
                        (("1" (hide -2 -13)
                          (("1"
                            (rewrite* "point_on_segment_has_offset")
                            (("1" (skeep)
                              (("1"
                                (inst?)
                                (("1"
                                  (replace -1 1)
                                  (("1"
                                    (ground)
                                    (("1"
                                      (hide-all-but 1)
                                      (("1" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten)
                              (("2"
                                (move-terms -1 r 2)
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide -1 -13)
                          (("2"
                            (rewrite* "point_on_segment_has_offset")
                            (("1" (skeep)
                              (("1"
                                (inst?)
                                (("1"
                                  (cancel-add -1)
                                  (("1"
                                    (replace -1 1)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (hide-all-but 1)
                                        (("1" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten)
                              (("2"
                                (replace -1 :dir rl)
                                (("2"
                                  (expand "point_on_segment?")
                                  (("2"
                                    (skeep)
                                    (("2"
                                      (distrib -4)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (flatten)
                              (("3"
                                (replace -1 :dir rl)
                                (("3"
                                  (assert)
                                  (("3"
                                    (expand "point_on_segment?")
                                    (("3"
                                      (skeep)
                                      (("3"
                                        (distrib -4)
                                        (("3" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("3" (replace -1) (("3" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide 7)
                    (("2" (rewrite* "point_on_segment_has_offset")
                      (("1" (skeep)
                        (("1" (inst?)
                          (("1" (replace -11 1)
                            (("1" (assert)
                              (("1"
                                (hide-all-but 1)
                                (("1" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (flatten)
                        (("2" (cancel-add -1) (("2" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (expand "zero") (("2" (propax) nil nil)) nil)
             ("3" (move-terms -1 l 2) (("3" (assert) nil nil)) nil)
             ("4" (move-terms -1 r 2) (("4" (assert) nil nil)) nil)
             ("5" (cancel-add -1) nil nil)
             ("6" (expand "-" 1) (("6" (assert) nil nil)) nil)
             ("7" (expand "-" 1) (("7" (assert) nil nil)) nil)
             ("8" (expand "-" 1) (("8" (assert) nil nil)) nil)
             ("9" (expand "-" 1) (("9" (assert) nil nil)) nil)
             ("10" (equate "m - q - (v - q)" "m - v")
              (("1" (equate "norm(v - q)" "norm(q - v)")
                (("1" (rewrite "norm_sym" 1) nil nil)) nil)
               ("2" (hide-all-but 1) (("2" (grind) nil nil)) nil))
              nil)
             ("11" (rewrite "norm_sym" 1)
              (("11" (equate "norm(v - q)" "norm(q - v)")
                (("11" (assert) (("11" (rewrite "norm_sym" 1) nil nil))
                  nil))
                nil))
              nil)
             ("12" (replace -7 1)
              (("12" (hide-all-but 1) (("12" (grind) nil nil)) nil))
              nil)
             ("13" (replace -8 1) (("13" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (next_vtx_to_miter_pt_seq_contact_free_TCC1 0
  (next_vtx_to_miter_pt_seq_contact_free_TCC1-2 nil 3874129022
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (next_vtx_to_miter_pt_seq_contact_free subtype "0"
    "below[S`length]"))
  (next_vtx_to_miter_pt_seq_contact_free_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (next_vtx_to_miter_pt_seq_contact_free subtype "0"
    "below[S`length]")))
 (next_vtx_to_miter_pt_seq_contact_free_TCC2 0
  (next_vtx_to_miter_pt_seq_contact_free_TCC2-2 nil 3874129022
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (next_vtx_to_miter_pt_seq_contact_free subtype
    "(number_fields.-)(polygon_miter_sequences.S`length, 1)"
    "below[S`length]"))
  (next_vtx_to_miter_pt_seq_contact_free_TCC2-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (next_vtx_to_miter_pt_seq_contact_free subtype
    "(number_fields.-)(polygon_miter_sequences.S`length, 1)"
    "below[S`length]")))
 (next_vtx_to_miter_pt_seq_contact_free 0
  (next_vtx_to_miter_pt_seq_contact_free-1 nil 3874129022
   ("" (skeep)
    (("" (skoletin*)
      (("" (flatten)
        (("" (typepred "p")
          (("" (expand "has_rightward_crossings?")
            (("" (flatten)
              (("" (hide -1)
                (("" (case "p = q")
                  (("1" (use "leftmost_crossing_on_perim")
                    (("1" (assert) nil nil)) nil)
                   ("2" (case "p`y = q`y")
                    (("1" (name-replace "k" "min(d, norm(q - p)) / 2")
                      (("1" (case "0 < k and k < norm(q - p)")
                        (("1" (flatten)
                          (("1"
                            (name-replace "u"
                             "q - (# x := k, y := 0 #)")
                            (("1" (case "p`x < q`x")
                              (("1"
                                (case "norm(q - p) = q`x - p`x")
                                (("1"
                                  (case "p`x < u`x and u`x < q`x")
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (case
                                       "point_on_segment?(u, (# p1 := p, p2 := q #))")
                                      (("1"
                                        (case
                                         "cross(G`vertices(i) - q, p - q) > 0")
                                        (("1"
                                          (lemma
                                           "miter_point_dist_to_vertex_bound")
                                          (("1"
                                            (inst - "G" "i" "d")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (case
                                                   "k < norm(mp - q)")
                                                  (("1"
                                                    (name-replace
                                                     "r"
                                                     "q + k * ^(mp - q)")
                                                    (("1"
                                                      (case "mp = q")
                                                      (("1"
                                                        (use
                                                         "miter_point_not_on_perim")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (case-replace
                                                         "r = q")
                                                        (("1"
                                                          (hide-all-but
                                                           (-2
                                                            -3
                                                            -12
                                                            1))
                                                          (("1"
                                                            (expand
                                                             "^")
                                                            (("1"
                                                              (real-props)
                                                              (("1"
                                                                (name-replace
                                                                 "kn"
                                                                 "k / norm(mp - q)")
                                                                (("1"
                                                                  (cancel-add
                                                                   -1)
                                                                  (("1"
                                                                    (div-by
                                                                     -1
                                                                     "kn")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (expand
                                                                         "kn")
                                                                        (("1"
                                                                          (cross-mult
                                                                           -1)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (case
                                                           "point_on_segment?(r, (# p1 := mp, p2 := q #))")
                                                          (("1"
                                                            (name-replace
                                                             "A"
                                                             "(# length := 2, seq := lambda (i: below(2)):
                                                                                                                                                                                             if i = 0 then p else q - (k,0) endif #)")
                                                            (("1"
                                                              (case-replace
                                                               "r = mp")
                                                              (("1"
                                                                (hide-all-but
                                                                 (-4
                                                                  -5
                                                                  1))
                                                                (("1"
                                                                  (expand
                                                                   "^")
                                                                  (("1"
                                                                    (name-replace
                                                                     "n"
                                                                     "norm(mp - q)")
                                                                    (("1"
                                                                      (real-props)
                                                                      (("1"
                                                                        (name-replace
                                                                         "w"
                                                                         "k / n * (mp - q)")
                                                                        (("1"
                                                                          (move-terms
                                                                           -1
                                                                           l
                                                                           1)
                                                                          (("1"
                                                                            (expand
                                                                             "w")
                                                                            (("1"
                                                                              (lemma
                                                                               "scal_cancel")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "k/n"
                                                                                 "1"
                                                                                 "mp - q")
                                                                                (("1"
                                                                                  (ground)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (name-replace
                                                                 "B"
                                                                 "(# length := 2, seq := lambda (i: below(2)):
                                                                                                                                                                                                 if i = 0 then q - (k,0) else r endif #)")
                                                                (("2"
                                                                  (name-replace
                                                                   "C"
                                                                   "(# length := 2, seq := lambda (i: below(2)):
                                                                                                                                                                                                 if i = 0 then r else mp endif #)")
                                                                  (("2"
                                                                    (case
                                                                     "contact_free_path?(G)(A)")
                                                                    (("1"
                                                                      (case
                                                                       "contact_free_path?(G)(B)")
                                                                      (("1"
                                                                        (case
                                                                         "contact_free_path?(G)(C)")
                                                                        (("1"
                                                                          (inst
                                                                           +
                                                                           "append_segment_seqs(A, append_segment_seqs(B, C))")
                                                                          (("1"
                                                                            (rewrite
                                                                             "initial_point_append_segment_seqs")
                                                                            (("1"
                                                                              (ground)
                                                                              (("1"
                                                                                (expand
                                                                                 "A")
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 1)
                                                                                (("2"
                                                                                  (grind)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "C")
                                                                                    (("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (rewrite
                                                                                 "append_contact_free_paths")
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "initial_point_append_segment_seqs")
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "A")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "B")
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (rewrite
                                                                                   "append_contact_free_paths")
                                                                                  (("2"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "B")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "C")
                                                                                        (("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (rewrite
                                                                                 "initial_point_append_segment_seqs")
                                                                                (("2"
                                                                                  (expand
                                                                                   "A")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "B")
                                                                                    (("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("3"
                                                                                (expand
                                                                                 "B")
                                                                                (("3"
                                                                                  (expand
                                                                                   "C")
                                                                                  (("3"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (rewrite
                                                                             "initial_point_append_segment_seqs")
                                                                            (("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (expand
                                                                                 "A")
                                                                                (("2"
                                                                                  (expand
                                                                                   "B")
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("3"
                                                                              (expand
                                                                               "B")
                                                                              (("3"
                                                                                (expand
                                                                                 "C")
                                                                                (("3"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (lemma
                                                                           "seg_from_miter_point_not_on_perim")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "G"
                                                                             "q"
                                                                             "i"
                                                                             "d")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (expand
                                                                                 "vertex_miter_point")
                                                                                (("2"
                                                                                  (replace
                                                                                   -26
                                                                                   :dir
                                                                                   rl)
                                                                                  (("2"
                                                                                    (ground)
                                                                                    (("1"
                                                                                      (hide
                                                                                       9)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "contact_free_path?")
                                                                                        (("1"
                                                                                          (skeep)
                                                                                          (("1"
                                                                                            (inst?)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "point_on_segment_seq?")
                                                                                                (("1"
                                                                                                  (skeep)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "C"
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (ground)
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "point_on_subsegment")
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "point_on_reverse_segment"
                                                                                                           1
                                                                                                           :dir
                                                                                                           rl)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "reverse_segment")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "r!1"
                                                                                                               "(# p1 := r, p2 := mp #)"
                                                                                                               "(# p1 := q, p2 := mp #)")
                                                                                                              (("1"
                                                                                                                (ground)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "subsegment?")
                                                                                                                  (("1"
                                                                                                                    (split
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "point_on_segment_has_norm_offset")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         +
                                                                                                                         "k")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "length")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (lemma
                                                                                                                       "miter_point_not_on_perim")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "G"
                                                                                                                         "i"
                                                                                                                         "mp"
                                                                                                                         "d")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "point_on_segment?")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               +
                                                                                                                               "1")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide
                                                                                                         -4
                                                                                                         -5
                                                                                                         -6
                                                                                                         -7
                                                                                                         -8)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -1
                                                                                                           :hide?
                                                                                                           t)
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "point_on_segment_has_offset")
                                                                                                            (("2"
                                                                                                              (skeep)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -5
                                                                                                                 -1
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("2"
                                                                                                                  (name-replace
                                                                                                                   "w"
                                                                                                                   "k * ^(mp - q)")
                                                                                                                  (("2"
                                                                                                                    (cancel-add
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (distrib
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (move-terms
                                                                                                                         -1
                                                                                                                         r
                                                                                                                         4)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (move-terms
                                                                                                                             -1
                                                                                                                             r
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (factor
                                                                                                                               -1
                                                                                                                               *)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "w")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "^")
                                                                                                                                  (("2"
                                                                                                                                    (rewrite
                                                                                                                                     "scal_assoc")
                                                                                                                                    (("2"
                                                                                                                                      (rewrite
                                                                                                                                       "scal_assoc")
                                                                                                                                      (("2"
                                                                                                                                        (use
                                                                                                                                         "scal_cancel")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (real-props)
                                                                                                                                            (("2"
                                                                                                                                              (case-replace
                                                                                                                                               "d!1 = 0")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (move-terms
                                                                                                                                                 -1
                                                                                                                                                 r)
                                                                                                                                                (("2"
                                                                                                                                                  (move-terms
                                                                                                                                                   -1
                                                                                                                                                   l
                                                                                                                                                   2)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (factor
                                                                                                                                                       -1
                                                                                                                                                       l)
                                                                                                                                                      (("2"
                                                                                                                                                        (move-terms
                                                                                                                                                         -7
                                                                                                                                                         r)
                                                                                                                                                        (("2"
                                                                                                                                                          (name-replace
                                                                                                                                                           "kn"
                                                                                                                                                           "k - norm(mp - q)")
                                                                                                                                                          (("2"
                                                                                                                                                            (hide-all-but
                                                                                                                                                             (-1
                                                                                                                                                              -7
                                                                                                                                                              -15
                                                                                                                                                              -16
                                                                                                                                                              1))
                                                                                                                                                            (("2"
                                                                                                                                                              (div-by
                                                                                                                                                               -1
                                                                                                                                                               "d!1")
                                                                                                                                                              (("2"
                                                                                                                                                                (case
                                                                                                                                                                 "k/d!1 > 0")
                                                                                                                                                                (("1"
                                                                                                                                                                  (replace
                                                                                                                                                                   -2)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (cross-mult
                                                                                                                                                                   1)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (replace
                                                                                       -22)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (ground)
                                                                          (("1"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("1"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "C")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (skeep)
                                                                            (("3"
                                                                              (expand
                                                                               "C"
                                                                               -1)
                                                                              (("3"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         -1
                                                                         -2
                                                                         -3
                                                                         -4
                                                                         9)
                                                                        (("2"
                                                                          (expand
                                                                           "contact_free_path?")
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (expand
                                                                               "B")
                                                                              (("2"
                                                                                (expand
                                                                                 "point_on_segment_seq?")
                                                                                (("2"
                                                                                  (skeep)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -13)
                                                                                    (("2"
                                                                                      (case
                                                                                       "cross(G`vertices(i) - q, mp - q) > 0")
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "all_segment_points_have_pos_cross_2")
                                                                                        (("1"
                                                                                          (inst-cp
                                                                                           -
                                                                                           "u"
                                                                                           "(# p1 := q, p2 := p #)"
                                                                                           "G`vertices(i) - q")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "r"
                                                                                             "(# p1 := q, p2 := mp #)"
                                                                                             "G`vertices(i) - q")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (ground)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "forall (w: point_2d): point_on_segment?(w, (# p1 := u, p2 := r #))
                                                                       implies norm(w - q) < min_segment_sep(H)")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "r!1")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "point_on_polygon_perimeter?")
                                                                                                          (("1"
                                                                                                            (skeep
                                                                                                             -
                                                                                                             t)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "edge_of_polygon?")
                                                                                                              (("1"
                                                                                                                (skeep)
                                                                                                                (("1"
                                                                                                                  (lemma
                                                                                                                   "min_edge_separation_is_min")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "G"
                                                                                                                     "next_index(G, i)"
                                                                                                                     "i!1")
                                                                                                                    (("1"
                                                                                                                      (ground)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "r!1")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "norm_sym")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "min_segment_sep")
                                                                                                                              (("1"
                                                                                                                                (use
                                                                                                                                 "min_seg_separation_eq_min_edge_separation")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "edges_of_polygon"
                                                                                                                         -26)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "segment_falling?")
                                                                                                                          (("2"
                                                                                                                            (copy
                                                                                                                             -27)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "rightward_crossing_index"
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (lift-if)
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -30
                                                                                                                                   :dir
                                                                                                                                   rl)
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -26
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (rewrite
                                                                                                                                       "find_index_any_self")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "vertex_crossing_index")
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "edges_of_polygon")
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (apply
                                                                                                                                               (repeat
                                                                                                                                                (lift-if)))
                                                                                                                                              (("2"
                                                                                                                                                (equate
                                                                                                                                                 "G`vertices(next_index(G, next_index(G, i)))"
                                                                                                                                                 "e`p2"
                                                                                                                                                 (assert))
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -26
                                                                                                                                                   :dir
                                                                                                                                                   rl)
                                                                                                                                                  (("2"
                                                                                                                                                    (case
                                                                                                                                                     "cross(G`vertices(i) - q, r!1 - q) > 0")
                                                                                                                                                    (("1"
                                                                                                                                                      (lemma
                                                                                                                                                       "no_intersections_with_segment_across_line_far")
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -
                                                                                                                                                         "r!1"
                                                                                                                                                         "(# p1 := G`vertices(i), p2 := q #)"
                                                                                                                                                         "e")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (ground)
                                                                                                                                                            (("1"
                                                                                                                                                              (case
                                                                                                                                                               "e`p1`x < e`p2`x")
                                                                                                                                                              (("1"
                                                                                                                                                                (hide-all-but
                                                                                                                                                                 (-1
                                                                                                                                                                  -2
                                                                                                                                                                  -4
                                                                                                                                                                  -5
                                                                                                                                                                  -28
                                                                                                                                                                  -29
                                                                                                                                                                  1))
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "cross")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "-")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replace
                                                                                                                                                                       -2
                                                                                                                                                                       :dir
                                                                                                                                                                       rl)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (equate
                                                                                                                                                                         "e`p1"
                                                                                                                                                                         "q"
                                                                                                                                                                         (assert))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (move-terms
                                                                                                                                                                             1
                                                                                                                                                                             l
                                                                                                                                                                             (2
                                                                                                                                                                              3))
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (factor
                                                                                                                                                                                 1
                                                                                                                                                                                 *)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (cancel-by
                                                                                                                                                                                   1
                                                                                                                                                                                   "G`vertices(i)`y - q`y")
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (case
                                                                                                                                                                 "e`p2`x < p`x")
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   +
                                                                                                                                                                   "e")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "point_on_segment_has_offset"
                                                                                                                                                                     +)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       +
                                                                                                                                                                       "(p`x - q`x) / (e`p2`x - q`x)")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (ground)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (case
                                                                                                                                                                           "p - e`p1 = (p`x - q`x) / (e`p2`x - q`x) * (e`p2 - e`p1)")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -1
                                                                                                                                                                             :dir
                                                                                                                                                                             rl)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (hide-all-but
                                                                                                                                                                               1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (grind-with-ext)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (cross-mult
                                                                                                                                                                             1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (apply-extensionality
                                                                                                                                                                               :hide?
                                                                                                                                                                               t)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                 1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (grind)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                 (-2
                                                                                                                                                                                  -26
                                                                                                                                                                                  1))
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (grind)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (cross-mult
                                                                                                                                                                           1)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (cross-mult
                                                                                                                                                                         1)
                                                                                                                                                                        nil
                                                                                                                                                                        nil)
                                                                                                                                                                       ("3"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("3"
                                                                                                                                                                          (typepred
                                                                                                                                                                           "e`p2")
                                                                                                                                                                          (("3"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("3"
                                                                                                                                                                              (apply-extensionality
                                                                                                                                                                               :hide?
                                                                                                                                                                               t)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (use
                                                                                                                                                                   "left_of_leftmost_crossing_not_on_perim_2")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "e`p2")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (ground)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "point_on_polygon_perimeter?")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst
                                                                                                                                                                             +
                                                                                                                                                                             "e")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (typepred
                                                                                                                                                                           "e`p2")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (apply-extensionality
                                                                                                                                                                               :hide?
                                                                                                                                                                               t)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (equate
                                                                                                                                                               "q"
                                                                                                                                                               "e`p1"
                                                                                                                                                               (assert))
                                                                                                                                                              (("2"
                                                                                                                                                                (case
                                                                                                                                                                 "mp`y < p`y")
                                                                                                                                                                (("1"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "next_vtx_to_miter_pt_subcase")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "mp"
                                                                                                                                                                     "p"
                                                                                                                                                                     "q"
                                                                                                                                                                     "r"
                                                                                                                                                                     "u"
                                                                                                                                                                     "G`vertices(i)"
                                                                                                                                                                     "k")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (equate
                                                                                                                                                                         "q"
                                                                                                                                                                         "e`p1"
                                                                                                                                                                         (assert))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (split
                                                                                                                                                                           -1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst
                                                                                                                                                                             -
                                                                                                                                                                             "r!1")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (skeep)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (lemma
                                                                                                                                                                                   "seg_from_miter_point_not_on_perim")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -
                                                                                                                                                                                     "G"
                                                                                                                                                                                     "z"
                                                                                                                                                                                     "i"
                                                                                                                                                                                     "d")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (split
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -
                                                                                                                                                                                           "r!1")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (rewrite
                                                                                                                                                                                               "point_on_reverse_segment"
                                                                                                                                                                                               -2
                                                                                                                                                                                               :dir
                                                                                                                                                                                               rl)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "reverse_segment")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "vertex_miter_point")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (use
                                                                                                                                                                                                   "miter_point_not_on_perim")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "point_on_polygon_perimeter?")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (inst
                                                                                                                                                                                                         +
                                                                                                                                                                                                         "edges_of_polygon(G)(i)")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "edges_of_polygon")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "edges_of_polygon")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (replace
                                                                                                                                                                               -1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -13
                                                                                                                                                                                 -22
                                                                                                                                                                                 :dir
                                                                                                                                                                                 rl)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                   (-2
                                                                                                                                                                                    -14
                                                                                                                                                                                    -22
                                                                                                                                                                                    -23
                                                                                                                                                                                    -26))
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (name-replace
                                                                                                                                                                                     "kn"
                                                                                                                                                                                     "k * ^(mp - e`p1)")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (cancel-add
                                                                                                                                                                                       -3)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (lemma
                                                                                                                                                                                         "comp_eq_y")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -
                                                                                                                                                                                           "-((# x := k, y := 0 #))"
                                                                                                                                                                                           "kn")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (split
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (hide
                                                                                                                                                                                               -4)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "kn")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "^")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (real-props)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "*"
                                                                                                                                                                                                       -1)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (cross-mult
                                                                                                                                                                                                         -1)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "-"
                                                                                                                                                                                                           -1)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (factor
                                                                                                                                                                                                             -1
                                                                                                                                                                                                             r)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (equate
                                                                                                                                                                                                               "-0 * norm((# x := mp`x - e`p1`x, y := mp`y - e`p1`y #))"
                                                                                                                                                                                                               "0"
                                                                                                                                                                                                               (assert))
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (mult-cases
                                                                                                                                                                                                                 -1)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (propax)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("3"
                                                                                                                                                                            (lemma
                                                                                                                                                                             "min_seg_sep_le_edge_length")
                                                                                                                                                                            (("3"
                                                                                                                                                                              (inst
                                                                                                                                                                               -
                                                                                                                                                                               "H"
                                                                                                                                                                               "G"
                                                                                                                                                                               "edges_of_polygon(G)(i)"
                                                                                                                                                                               "i")
                                                                                                                                                                              (("3"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("3"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "edges_of_polygon")
                                                                                                                                                                                  (("3"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "max_miter_offset")
                                                                                                                                                                                    (("3"
                                                                                                                                                                                      (cross-mult
                                                                                                                                                                                       -15)
                                                                                                                                                                                      (("3"
                                                                                                                                                                                        (mult-by
                                                                                                                                                                                         1
                                                                                                                                                                                         "min_miter_sine(H)")
                                                                                                                                                                                        (("3"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -31
                                                                                                                                                                                           :dir
                                                                                                                                                                                           rl)
                                                                                                                                                                                          (("3"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -33
                                                                                                                                                                                             :dir
                                                                                                                                                                                             rl)
                                                                                                                                                                                            (("3"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -5
                                                                                                                                                                                               :dir
                                                                                                                                                                                               rl)
                                                                                                                                                                                              (("3"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("3"
                                                                                                                                                                                                  (replace
                                                                                                                                                                                                   -4
                                                                                                                                                                                                   :dir
                                                                                                                                                                                                   rl)
                                                                                                                                                                                                  (("3"
                                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                                     (-1
                                                                                                                                                                                                      -15
                                                                                                                                                                                                      -27
                                                                                                                                                                                                      1))
                                                                                                                                                                                                    (("3"
                                                                                                                                                                                                      (real-props)
                                                                                                                                                                                                      (("3"
                                                                                                                                                                                                        (mult-by
                                                                                                                                                                                                         -1
                                                                                                                                                                                                         "min_miter_sine(H) / 6")
                                                                                                                                                                                                        (("3"
                                                                                                                                                                                                          (real-props)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("4"
                                                                                                                                                                            (replace
                                                                                                                                                                             -24
                                                                                                                                                                             1
                                                                                                                                                                             :dir
                                                                                                                                                                             rl)
                                                                                                                                                                            (("4"
                                                                                                                                                                              (cross-mult
                                                                                                                                                                               1)
                                                                                                                                                                              (("4"
                                                                                                                                                                                (cancel-by
                                                                                                                                                                                 1
                                                                                                                                                                                 "2")
                                                                                                                                                                                (("4"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "min"
                                                                                                                                                                                   2)
                                                                                                                                                                                  (("4"
                                                                                                                                                                                    (apply
                                                                                                                                                                                     (repeat
                                                                                                                                                                                      (lift-if)))
                                                                                                                                                                                    (("4"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("4"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "max_miter_offset")
                                                                                                                                                                                        (("4"
                                                                                                                                                                                          (case
                                                                                                                                                                                           "d <= min_segment_sep(H) / 6")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (lemma
                                                                                                                                                                                             "min_seg_sep_le_edge_length")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -
                                                                                                                                                                                               "H"
                                                                                                                                                                                               "G"
                                                                                                                                                                                               "edges_of_polygon(G)(i)"
                                                                                                                                                                                               "i")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "edges_of_polygon")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (div-by
                                                                                                                                                                                                       -1
                                                                                                                                                                                                       "6")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (ground)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (use
                                                                                                                                                                                             "min_miter_sine_le_1")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (real-props)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (name-replace
                                                                                                                                                                                                 "d6"
                                                                                                                                                                                                 "6 * d")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (mult-cases
                                                                                                                                                                                                   -28
                                                                                                                                                                                                   :mult-op
                                                                                                                                                                                                   1*)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("5"
                                                                                                                                                                            (replace
                                                                                                                                                                             -21
                                                                                                                                                                             1
                                                                                                                                                                             :dir
                                                                                                                                                                             rl)
                                                                                                                                                                            (("5"
                                                                                                                                                                              (propax)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (case
                                                                                                                                                                   "r!1`y >= p`y")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "point_on_segment_has_offset"
                                                                                                                                                                     -10)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (skeep)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (case-replace
                                                                                                                                                                         "d!1 = 0")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -11)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (hide-all-but
                                                                                                                                                                               -3)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (grind)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (lemma
                                                                                                                                                                           "comp_eq_y")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             -
                                                                                                                                                                             "r!1"
                                                                                                                                                                             "e`p1 + d!1 * (e`p2 - e`p1)")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (split
                                                                                                                                                                               -1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (hide
                                                                                                                                                                                 -11)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "+"
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "*"
                                                                                                                                                                                     -1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (move-terms
                                                                                                                                                                                       -1
                                                                                                                                                                                       r
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "-"
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (case
                                                                                                                                                                                           "p`y = e`p1`y")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (case-replace
                                                                                                                                                                                             "r!1`y = e`p1`y")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (factor
                                                                                                                                                                                                 -3
                                                                                                                                                                                                 r)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (mult-cases
                                                                                                                                                                                                   -3)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (case
                                                                                                                                                                                               "r!1`y - e`p1`y > 0")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (case
                                                                                                                                                                                                 "e`p2`y * d!1 - e`p1`y * d!1 < 0")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (factor
                                                                                                                                                                                                   1
                                                                                                                                                                                                   l)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (mult-cases
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (propax)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (case
                                                                                                                                                                     "u`y = p`y & r`y >= p`y")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "point_on_segment_has_offset"
                                                                                                                                                                         -10)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (skeep)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -10
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (hide-all-but
                                                                                                                                                                               (-1
                                                                                                                                                                                -2
                                                                                                                                                                                1))
                                                                                                                                                                              (("1"
                                                                                                                                                                                (grind)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (cancel-add
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (factor
                                                                                                                                                                                     1
                                                                                                                                                                                     l)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (mult-cases
                                                                                                                                                                                       1)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (ground)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replace
                                                                                                                                                                         -20
                                                                                                                                                                         1
                                                                                                                                                                         :dir
                                                                                                                                                                         rl)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (hide-all-but
                                                                                                                                                                           (-24
                                                                                                                                                                            1))
                                                                                                                                                                          (("1"
                                                                                                                                                                            (grind)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (replace
                                                                                                                                                                         -11
                                                                                                                                                                         1
                                                                                                                                                                         :dir
                                                                                                                                                                         rl)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (hide-all-but
                                                                                                                                                                           (-12
                                                                                                                                                                            -21
                                                                                                                                                                            -24
                                                                                                                                                                            +))
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "+"
                                                                                                                                                                             1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (name-replace
                                                                                                                                                                               "kn"
                                                                                                                                                                               "k * ^(mp - e`p1)")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -3)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (cancel-add
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "kn")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "^")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (real-props)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "*"
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (cross-mult
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (equate
                                                                                                                                                                                               "0 * norm(mp - e`p1)"
                                                                                                                                                                                               "0"
                                                                                                                                                                                               (assert))
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "-"
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (factor
                                                                                                                                                                                                   1
                                                                                                                                                                                                   l)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (mult-cases
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (lemma
                                                                                                                                                       "endpts_cross_pos_imp_pt_on_seg_cross_pos")
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -
                                                                                                                                                         "G`vertices(i)"
                                                                                                                                                         "q"
                                                                                                                                                         "u"
                                                                                                                                                         "r"
                                                                                                                                                         "r!1")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("2"
                                                                                                                                                              (hide
                                                                                                                                                               -2)
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (hide-all-but
                                                                                                                                                                   (-11
                                                                                                                                                                    -12
                                                                                                                                                                    -20
                                                                                                                                                                    -21
                                                                                                                                                                    -24
                                                                                                                                                                    +))
                                                                                                                                                                  (("2"
                                                                                                                                                                    (hide
                                                                                                                                                                     1
                                                                                                                                                                     6)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (name-replace
                                                                                                                                                                       "v"
                                                                                                                                                                       "^(mp - q)")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (replace
                                                                                                                                                                         -1
                                                                                                                                                                         :dir
                                                                                                                                                                         rl
                                                                                                                                                                         :hide?
                                                                                                                                                                         t)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (cancel-add
                                                                                                                                                                           -2)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (lemma
                                                                                                                                                                             "comp_eq_y")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -
                                                                                                                                                                               "-((# x := k, y := 0 #))"
                                                                                                                                                                               "k * v")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (split
                                                                                                                                                                                 -1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (hide
                                                                                                                                                                                   -3)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "v")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "^"
                                                                                                                                                                                       -1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (real-props)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "*"
                                                                                                                                                                                           -1)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (cross-mult
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "-"
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (factor
                                                                                                                                                                                                 -1
                                                                                                                                                                                                 r)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (cancel-by
                                                                                                                                                                                                   -1
                                                                                                                                                                                                   "k")
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (propax)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (lemma
                                                                                                                         "same_side_points_off_line")
                                                                                                                        (("3"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "q"
                                                                                                                           "G`vertices(i)"
                                                                                                                           "u"
                                                                                                                           "r"
                                                                                                                           "r!1")
                                                                                                                          (("3"
                                                                                                                            (ground)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -2
                                                                                                                               :dir
                                                                                                                               rl)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-8
                                                                                                                                    -25
                                                                                                                                    1))
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "edges_of_polygon")
                                                                                                                                    (("1"
                                                                                                                                      (rewrite
                                                                                                                                       "point_on_reverse_segment"
                                                                                                                                       :dir
                                                                                                                                       rl)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "reverse_segment")
                                                                                                                                        (("1"
                                                                                                                                          (rewrite
                                                                                                                                           "point_on_segment_has_offset")
                                                                                                                                          (("1"
                                                                                                                                            (skeep)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               +
                                                                                                                                               "d!1")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (expand
                                                                                                                               "point_on_segment?")
                                                                                                                              (("2"
                                                                                                                                (skeep)
                                                                                                                                (("2"
                                                                                                                                  (inst?)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (skeep)
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "isosceles_dist_to_opp_side_bound")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "u"
                                                                                                           "q"
                                                                                                           "r"
                                                                                                           "w")
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -18
                                                                                                             -1
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -9
                                                                                                               -1
                                                                                                               :dir
                                                                                                               rl)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (equate
                                                                                                                   "norm((# x := k, y := 0 #))"
                                                                                                                   "k"
                                                                                                                   (then
                                                                                                                    (hide-all-but
                                                                                                                     1)
                                                                                                                    (grind)))
                                                                                                                  (("2"
                                                                                                                    (ground)
                                                                                                                    (("1"
                                                                                                                      (hide-all-but
                                                                                                                       (-1
                                                                                                                        -23
                                                                                                                        1))
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "k")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "max_miter_offset")
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "min(d, norm(q - p)) / 2 < d")
                                                                                                                            (("1"
                                                                                                                              (case
                                                                                                                               "min_miter_sine(H) * min_segment_sep(H) / 6 < min_segment_sep(H)")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (use
                                                                                                                                 "min_miter_sine_le_1")
                                                                                                                                (("2"
                                                                                                                                  (real-props)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (real-props)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (hide-all-but
                                                                                                                       (-1
                                                                                                                        8))
                                                                                                                      (("2"
                                                                                                                        (cancel-add
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (lemma
                                                                                                                           "comp_eq_y")
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "-((# x := k, y := 0 #))"
                                                                                                                             "k * ^(mp - q)")
                                                                                                                            (("2"
                                                                                                                              (split
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "^")
                                                                                                                                  (("1"
                                                                                                                                    (expand*
                                                                                                                                     "*"
                                                                                                                                     "-")
                                                                                                                                    (("1"
                                                                                                                                      (factor
                                                                                                                                       -1
                                                                                                                                       r)
                                                                                                                                      (("1"
                                                                                                                                        (cross-mult
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (factor
                                                                                                                                           -1
                                                                                                                                           r)
                                                                                                                                          (("1"
                                                                                                                                            (div-by
                                                                                                                                             -1
                                                                                                                                             "k")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("3"
                                                                                                                      (rewrite
                                                                                                                       "norm_scal")
                                                                                                                      (("3"
                                                                                                                        (expand
                                                                                                                         "abs")
                                                                                                                        (("3"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (ground)
                                                                                                      (("3"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("3"
                                                                                                          (hide-all-but
                                                                                                           (-8
                                                                                                            -9
                                                                                                            -17
                                                                                                            -18
                                                                                                            +))
                                                                                                          (("3"
                                                                                                            (replace
                                                                                                             -1
                                                                                                             -3
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("3"
                                                                                                              (name-replace
                                                                                                               "kn"
                                                                                                               "k * ^(mp - q)")
                                                                                                              (("3"
                                                                                                                (cancel-add
                                                                                                                 -3)
                                                                                                                (("3"
                                                                                                                  (lemma
                                                                                                                   "comp_eq_y")
                                                                                                                  (("3"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "-((# x := k, y := 0 #))"
                                                                                                                     "kn")
                                                                                                                    (("3"
                                                                                                                      (split
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -4)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "kn")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "^")
                                                                                                                            (("1"
                                                                                                                              (real-props)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "*"
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (cross-mult
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "-"
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (factor
                                                                                                                                       -1
                                                                                                                                       r)
                                                                                                                                      (("1"
                                                                                                                                        (div-by
                                                                                                                                         -1
                                                                                                                                         "k")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (rewrite
                                                                                                     "point_on_reverse_segment"
                                                                                                     :dir
                                                                                                     rl)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "reverse_segment")
                                                                                                      (("2"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (rewrite
                                                                                                   "point_on_reverse_segment"
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "reverse_segment")
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (lemma
                                                                                         "miter_point_cross_gt_0")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "G`vertices(prev_index(G, i))"
                                                                                           "G`vertices(i)"
                                                                                           "q"
                                                                                           "d")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "vertex_miter_point")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -20
                                                                                                 :dir
                                                                                                 rl)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -23
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "triangle_vertices_cross_pos")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "G`vertices(i)"
                                                                                                           "mp"
                                                                                                           "q")
                                                                                                          (("1"
                                                                                                            (ground)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (use
                                                                                             "three_pt_miniseq_in_polygon")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (ground)
                                                                        (("1"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("1"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "B")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (skeep)
                                                                          (("3"
                                                                            (expand
                                                                             "B"
                                                                             -1)
                                                                            (("3"
                                                                              (replace
                                                                               -1
                                                                               :dir
                                                                               rl)
                                                                              (("3"
                                                                                (hide
                                                                                 -2
                                                                                 -3
                                                                                 -4
                                                                                 -5
                                                                                 8)
                                                                                (("3"
                                                                                  (hide-all-but
                                                                                   (-3
                                                                                    -4
                                                                                    -13
                                                                                    -14
                                                                                    -15
                                                                                    -16
                                                                                    +))
                                                                                  (("3"
                                                                                    (name-replace
                                                                                     "v"
                                                                                     "^(mp - q)")
                                                                                    (("3"
                                                                                      (cancel-add
                                                                                       -1)
                                                                                      (("3"
                                                                                        (lemma
                                                                                         "comp_eq_y")
                                                                                        (("3"
                                                                                          (inst
                                                                                           -
                                                                                           "k * v"
                                                                                           "-((# x := k, y := 0 #))")
                                                                                          (("3"
                                                                                            (split
                                                                                             -1)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -2)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "v")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "^")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "*"
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (real-props)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "-"
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (real-props)
                                                                                                          (("1"
                                                                                                            (cancel-by
                                                                                                             -1
                                                                                                             "k")
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "contact_free_path?")
                                                                      (("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (hide
                                                                           -3
                                                                           -4
                                                                           8)
                                                                          (("2"
                                                                            (expand
                                                                             "point_on_segment_seq?")
                                                                            (("2"
                                                                              (expand
                                                                               "A"
                                                                               -1)
                                                                              (("2"
                                                                                (skeep)
                                                                                (("2"
                                                                                  (hide
                                                                                   -3)
                                                                                  (("2"
                                                                                    (lift-if)
                                                                                    (("2"
                                                                                      (use
                                                                                       "left_of_leftmost_crossing_not_on_perim")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "r!1")
                                                                                          (("2"
                                                                                            (replace
                                                                                             -24
                                                                                             :dir
                                                                                             rl)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -13)
                                                                                                (("2"
                                                                                                  (case-replace
                                                                                                   "r!1 = q")
                                                                                                  (("1"
                                                                                                    (hide
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (ground)
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "point_on_segment_has_offset")
                                                                                                        (("1"
                                                                                                          (skeep)
                                                                                                          (("1"
                                                                                                            (move-terms
                                                                                                             -2
                                                                                                             r
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "u"
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (use
                                                                                                                 "comp_eq_x")
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "*"
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "-"
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (factor
                                                                                                                         -1
                                                                                                                         r
                                                                                                                         (1
                                                                                                                          2))
                                                                                                                        (("1"
                                                                                                                          (name-replace
                                                                                                                           "dx"
                                                                                                                           "q`x - p`x")
                                                                                                                          (("1"
                                                                                                                            (move-terms
                                                                                                                             -1
                                                                                                                             r
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (factor
                                                                                                                               -1
                                                                                                                               l)
                                                                                                                              (("1"
                                                                                                                                (case-replace
                                                                                                                                 "d!1 = 1")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (div-by
                                                                                                                                   -1
                                                                                                                                   "1 - d!1")
                                                                                                                                  (("2"
                                                                                                                                    (case
                                                                                                                                     "-(d!1 * k) / (1 - d!1) < 0")
                                                                                                                                    (("1"
                                                                                                                                      (replace
                                                                                                                                       -2)
                                                                                                                                      (("1"
                                                                                                                                        (typepred
                                                                                                                                         "norm(q - p)")
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -17
                                                                                                                                           :dir
                                                                                                                                           rl)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (real-props)
                                                                                                                                      (("2"
                                                                                                                                        (real-props)
                                                                                                                                        (("2"
                                                                                                                                          (move-terms
                                                                                                                                           1
                                                                                                                                           l)
                                                                                                                                          (("2"
                                                                                                                                            (elim-unary
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (mult-cases
                                                                                                                                                 1)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "point_on_segment?"
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (skeep)
                                                                                                          (("2"
                                                                                                            (distrib
                                                                                                             -3)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (ground)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "point_on_subsegment")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "r!1"
                                                                                                         "(# p1 := p, p2 := u #)"
                                                                                                         "(# p1 := p, p2 := (q) #)")
                                                                                                        (("1"
                                                                                                          (ground)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "subsegment?")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "point_on_segment?")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "0")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (case
                                                                                                       "r!1 = u")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "point_on_segment?"
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (skeep)
                                                                                                          (("2"
                                                                                                            (distrib
                                                                                                             -3)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (ground)
                                                                      (("1"
                                                                        (hide-all-but
                                                                         1)
                                                                        (("1"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "A")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (skeep)
                                                                        (("3"
                                                                          (expand
                                                                           "A"
                                                                           -1)
                                                                          (("3"
                                                                            (replace
                                                                             -15)
                                                                            (("3"
                                                                              (use
                                                                               "comp_eq_x")
                                                                              (("3"
                                                                                (ground)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (replace
                                                             -1
                                                             1
                                                             :dir
                                                             rl)
                                                            (("2"
                                                              (rewrite
                                                               "point_on_reverse_segment"
                                                               :dir
                                                               rl)
                                                              (("2"
                                                                (expand
                                                                 "reverse_segment")
                                                                (("2"
                                                                  (rewrite
                                                                   "point_on_segment_has_norm_offset")
                                                                  (("2"
                                                                    (inst
                                                                     +
                                                                     "k")
                                                                    (("2"
                                                                      (expand
                                                                       "length")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (lemma
                                                     "min_seg_sep_bounds_seg_length")
                                                    (("2"
                                                      (inst - "H" "i")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "max_miter_offset")
                                                          (("1"
                                                            (case
                                                             "k < d")
                                                            (("1"
                                                              (case
                                                               "d < norm(mp - q)")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (equate
                                                                 "(# p1 := H`seq(i), p2 := H`seq(1 + i) #)"
                                                                 "edges_of_polygon(G)(i)")
                                                                (("1"
                                                                  (case
                                                                   "d <= min_segment_sep(H) / 6")
                                                                  (("1"
                                                                    (real-props)
                                                                    (("1"
                                                                      (replace
                                                                       -20
                                                                       :dir
                                                                       rl)
                                                                      (("1"
                                                                        (replace
                                                                         -22
                                                                         :dir
                                                                         rl)
                                                                        (("1"
                                                                          (hide
                                                                           7)
                                                                          (("1"
                                                                            (lemma
                                                                             "norm_add_le")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "mp - q"
                                                                               "G`vertices(i) - mp")
                                                                              (("1"
                                                                                (equate
                                                                                 "mp - q + (G`vertices(i) - mp)"
                                                                                 "G`vertices(i) - q"
                                                                                 (then
                                                                                  (hide-all-but
                                                                                   1)
                                                                                  (grind)))
                                                                                (("1"
                                                                                  (expand
                                                                                   "edges_of_polygon")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "length")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -18
                                                                                       :dir
                                                                                       rl)
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "norm_sym"
                                                                                         -4)
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "norm_sym"
                                                                                           -5)
                                                                                          (("1"
                                                                                            (div-by
                                                                                             -5
                                                                                             "min_miter_sine((H))")
                                                                                            (("1"
                                                                                              (div-by
                                                                                               -17
                                                                                               "min_miter_sine((H))")
                                                                                              (("1"
                                                                                                (div-by
                                                                                                 -17
                                                                                                 "6")
                                                                                                (("1"
                                                                                                  (equate
                                                                                                   "6 * d / min_miter_sine((H)) / 6"
                                                                                                   "d / min_miter_sine((H))"
                                                                                                   (real-props))
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "norm(G`vertices(i) - (mp)) <= min_segment_sep(H) / 6")
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "norm(G`vertices(i) - (mp)) <= norm(G`vertices(i) - q) / 6")
                                                                                                      (("1"
                                                                                                        (add-formulas
                                                                                                         -1
                                                                                                         -3)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (use
                                                                     "min_miter_sine_le_1")
                                                                    (("2"
                                                                      (hide-all-but
                                                                       (-1
                                                                        -16
                                                                        1))
                                                                      (("2"
                                                                        (cross-mult
                                                                         -2)
                                                                        (("2"
                                                                          (cross-mult
                                                                           1)
                                                                          (("2"
                                                                            (name-replace
                                                                             "d6"
                                                                             "6 * d")
                                                                            (("2"
                                                                              (mult-cases
                                                                               -2
                                                                               :mult-op
                                                                               1*)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (replace
                                                                   -21
                                                                   1)
                                                                  (("2"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("2"
                                                                      (grind)
                                                                      (("1"
                                                                        (rewrite
                                                                         "rem_self")
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (rewrite
                                                                         "rem_mod")
                                                                        nil
                                                                        nil)
                                                                       ("3"
                                                                        (rewrite
                                                                         "rem_mod")
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               1)
                                                              (("2"
                                                                (expand
                                                                 "k")
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (replace -19 1)
                                                        (("2"
                                                          (expand
                                                           "polygon_vertex_seq")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide-all-but
                                           (-2 -3 -10 -12 -13 1 2))
                                          (("2"
                                            (expand "edges_of_polygon")
                                            (("2"
                                              (expand
                                               "segment_falling?")
                                              (("2"
                                                (replace
                                                 -4
                                                 :dir
                                                 rl
                                                 :hide?
                                                 t)
                                                (("2"
                                                  (grind)
                                                  (("2"
                                                    (move-terms
                                                     1
                                                     l
                                                     (2 4))
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (factor 1 *)
                                                        (("2"
                                                          (cancel-by
                                                           1
                                                           "q`x - p`x")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide 6)
                                        (("2"
                                          (rewrite
                                           "point_on_reverse_segment"
                                           :dir
                                           rl)
                                          (("2"
                                            (expand "reverse_segment")
                                            (("2"
                                              (rewrite
                                               "point_on_segment_has_norm_offset")
                                              (("2"
                                                (inst + "k")
                                                (("2"
                                                  (expand "length")
                                                  (("2"
                                                    (rewrite
                                                     "norm_sym")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (replace
                                                         -5
                                                         1
                                                         :dir
                                                         rl)
                                                        (("2"
                                                          (expand "^")
                                                          (("2"
                                                            (rewrite
                                                             "scal_assoc")
                                                            (("2"
                                                              (real-props)
                                                              (("2"
                                                                (rewrite
                                                                 "norm_sym")
                                                                (("2"
                                                                  (replace
                                                                   -3)
                                                                  (("2"
                                                                    (cancel-add
                                                                     1)
                                                                    (("2"
                                                                      (apply-extensionality
                                                                       :hide?
                                                                       t)
                                                                      (("1"
                                                                        (expand
                                                                         "*"
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "-"
                                                                           1)
                                                                          (("1"
                                                                            (real-props)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand*
                                                                         "*"
                                                                         "-")
                                                                        (("2"
                                                                          (replace
                                                                           -9)
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3" (ground) nil nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (replace -3 1 :dir rl)
                                    (("2"
                                      (expand "-" 1)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (rewrite "norm_diff_horiz")
                                  (("2"
                                    (expand "abs")
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (expand "leftmost_intersection_point")
                                (("2"
                                  (use "leftmost_crossing_xval_bound")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide 6)
                          (("2" (ground)
                            (("1" (replace -1 :dir rl :hide? t)
                              (("1"
                                (cross-mult 1)
                                (("1"
                                  (expand "min")
                                  (("1"
                                    (lift-if)
                                    (("1"
                                      (ground)
                                      (("1"
                                        (use "norm_eq_0")
                                        (("1" (ground) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (replace -1 :dir rl :hide? t)
                              (("2"
                                (cross-mult 1)
                                (("2"
                                  (expand "min")
                                  (("2"
                                    (use "norm_eq_0")
                                    (("2" (ground) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "leftmost_intersection_point")
                      (("2" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (nonvertex_to_miter_pt_seq_contact_free_TCC1 0
  (nonvertex_to_miter_pt_seq_contact_free_TCC1-2 nil 3874129022
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (nonvertex_to_miter_pt_seq_contact_free subtype "0"
    "below[S`length]"))
  (nonvertex_to_miter_pt_seq_contact_free_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (nonvertex_to_miter_pt_seq_contact_free subtype "0"
    "below[S`length]")))
 (nonvertex_to_miter_pt_seq_contact_free_TCC2 0
  (nonvertex_to_miter_pt_seq_contact_free_TCC2-2 nil 3874129022
   ("" (skeep*) (("" (typepred "S") (("" (ground) nil nil)) nil)) nil)
   nil shostak
   (nonvertex_to_miter_pt_seq_contact_free subtype
    "(number_fields.-)(polygon_miter_sequences.S`length, 1)"
    "below[S`length]"))
  (nonvertex_to_miter_pt_seq_contact_free_TCC2-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (nonvertex_to_miter_pt_seq_contact_free subtype
    "(number_fields.-)(polygon_miter_sequences.S`length, 1)"
    "below[S`length]")))
 (nonvertex_to_miter_pt_seq_contact_free 0
  (nonvertex_to_miter_pt_seq_contact_free-1 nil 3874129022
   ("" (skeep)
    (("" (assert)
      (("" (ground)
        (("" (use "on_seg_from_miter_pt_contact_free")
          (("" (ground)
            (("" (expand "edges_of_polygon" -1)
              (("" (ground)
                ((""
                  (name-replace*
                   ("rci" "rightward_crossing_index(G, p)" "mp"
                    "vertex_miter_point(G, rci, d)"))
                  ((""
                    (case "exists (r: point_2d): point_on_segment?(r, edges_of_polygon(G)(rci))
                                                  and point_on_segment?(p, (# p1 := mp, p2 := r #))")
                    (("1" (skeep)
                      (("1" (hide 1)
                        (("1" (inst + "two_point_endpt_seq(p, mp)")
                          (("1" (expand "two_point_endpt_seq")
                            (("1" (assert)
                              (("1"
                                (expand "contact_free_path?")
                                (("1"
                                  (skeep)
                                  (("1"
                                    (expand "point_on_segment_seq?")
                                    (("1"
                                      (skeep)
                                      (("1"
                                        (use
                                         "seg_from_miter_point_not_on_perim")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand
                                                 "vertex_miter_point")
                                                (("1"
                                                  (replace -3)
                                                  (("1"
                                                    (lemma
                                                     "point_on_reverse_segment")
                                                    (("1"
                                                      (inst
                                                       -
                                                       "r!1"
                                                       "(# p1 := p, p2 := mp #)")
                                                      (("1"
                                                        (expand
                                                         "reverse_segment")
                                                        (("1"
                                                          (replace
                                                           -1
                                                           :dir
                                                           rl
                                                           :hide?
                                                           t)
                                                          (("1"
                                                            (ground)
                                                            (("1"
                                                              (lemma
                                                               "point_on_subsegment")
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "r!1"
                                                                 "(# p1 := mp, p2 := p #)"
                                                                 "(# p1 := mp, p2 := r #)")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (replace
                                                                     -8)
                                                                    (("1"
                                                                      (expand
                                                                       "subsegment?")
                                                                      (("1"
                                                                        (hide-all-but
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "point_on_segment?")
                                                                          (("1"
                                                                            (inst
                                                                             +
                                                                             "0")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (hide-all-but
                                                                       (-3
                                                                        2))
                                                                      (("2"
                                                                        (expand
                                                                         "point_on_segment?")
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (distrib
                                                                             -3)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (replace
                                                               -1)
                                                              (("2"
                                                                (case-replace
                                                                 "r = p")
                                                                (("1"
                                                                  (typepred
                                                                   "p")
                                                                  (("1"
                                                                    (expand
                                                                     "has_rightward_crossings?")
                                                                    (("1"
                                                                      (flatten)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   (-3
                                                                    -9
                                                                    1
                                                                    2))
                                                                  (("2"
                                                                    (expand
                                                                     "point_on_segment?")
                                                                    (("2"
                                                                      (skeep*)
                                                                      (("2"
                                                                        (replace
                                                                         -6)
                                                                        (("2"
                                                                          (distrib
                                                                           -3)
                                                                          (("2"
                                                                            (equate
                                                                             "mp - t * mp + (t * mp - (t * t!1) * mp + (t * t!1) * p)"
                                                                             "mp - (t * t!1) * mp + (t * t!1) * p")
                                                                            (("1"
                                                                              (case
                                                                               "p = mp - (t * t!1) * mp + (t * t!1) * p iff
                                                                                         	p - (t * t!1) * p = mp - (t * t!1) * mp")
                                                                              (("1"
                                                                                (replace
                                                                                 -1
                                                                                 :hide?
                                                                                 t)
                                                                                (("1"
                                                                                  (factor
                                                                                   -3
                                                                                   *)
                                                                                  (("1"
                                                                                    (cancel-by
                                                                                     -3
                                                                                     "1 - t * t!1")
                                                                                    (("1"
                                                                                      (case-replace
                                                                                       "t!1 = 1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (move-terms
                                                                                         -1
                                                                                         l
                                                                                         2)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (cancel-by
                                                                                             -1
                                                                                             "t")
                                                                                            (("2"
                                                                                              (case-replace
                                                                                               "t = 1")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (replace
                                                                                                 -1
                                                                                                 :dir
                                                                                                 rl)
                                                                                                (("2"
                                                                                                  (cross-mult
                                                                                                   -6)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 6)
                      (("2"
                        (name-replace*
                         ("e1" "G`vertices(rci)" "e2"
                          "G`vertices(next_index(G, rci))"))
                        (("2"
                          (case-replace
                           "edges_of_polygon(G)(rci) = (# p1 := e1, p2 := e2 #)")
                          (("1" (lemma "on_segment_or_between_rays")
                            (("1"
                              (inst - "mp" "p"
                               "(# p1 := e1, p2 := e2 #)")
                              (("1"
                                (ground)
                                (("1"
                                  (use "miter_point_not_on_perim")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (expand
                                       "point_on_polygon_perimeter?")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (expand "edge_of_polygon?")
                                          (("1" (inst?) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (lemma "miter_point_cross_gt_0")
                                  (("2"
                                    (inst
                                     -
                                     "G`vertices(prev_index(G, rci))"
                                     "e1"
                                     "e2"
                                     "d")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (expand "vertex_miter_point")
                                          (("1"
                                            (hide -1)
                                            (("1"
                                              (lemma
                                               "triangle_vertices_cross_pos")
                                              (("1"
                                                (inst - "e1" "mp" "e2")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (rewrite
                                                       "cross_antisymmetric"
                                                       -1)
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (use
                                       "three_pt_miniseq_in_polygon")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (skeep)
                                  (("3"
                                    (inst?)
                                    (("3"
                                      (assert)
                                      (("3"
                                        (lemma
                                         "on_ray_right_side_imp_on_segment")
                                        (("3"
                                          (inst
                                           -
                                           "mp"
                                           "p"
                                           "w"
                                           "(# p1 := e1, p2 := e2 #)")
                                          (("3"
                                            (ground)
                                            (("1"
                                              (expand
                                               "off_right_side?")
                                              (("1"
                                                (lemma
                                                 "miter_point_cross_gt_0")
                                                (("1"
                                                  (inst
                                                   -
                                                   "G`vertices(prev_index(G, rci))"
                                                   "e1"
                                                   "e2"
                                                   "d")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (expand
                                                         "vertex_miter_point")
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (lemma
                                                             "triangle_vertices_cross_pos")
                                                            (("1"
                                                              (inst
                                                               -
                                                               "e1"
                                                               "mp"
                                                               "e2")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (use
                                                     "three_pt_miniseq_in_polygon")
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (use
                                               "crossing_falling_off_right_side")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (lemma "vertex_neq_next")
                                (("2"
                                  (inst - "G" "rci")
                                  (("2" (ground) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "edges_of_polygon")
                            (("2" (ground) nil nil)) nil))
                          nil))
                        nil))
                      nil)
                     ("3" (skeep)
                      (("3" (lemma "miter_point_not_on_perim")
                        (("3" (inst - "G" "rci" "mp" "d")
                          (("3" (assert)
                            (("3"
                              (expand "point_on_polygon_perimeter?")
                              (("3"
                                (inst?)
                                (("3" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (rightward_crossing_falling_edge_cases 0
  (rightward_crossing_falling_edge_cases-1 nil 3874129022
   ("" (skeep)
    (("" (skoletin*)
      (("" (flatten)
        (("" (expand "rightward_crossing_index")
          (("" (lemma "find_index_any_self")
            (("" (case "v = G`vertices(i)")
              (("1" (replace -3 :dir rl)
                (("1" (inst?)
                  (("1" (assert)
                    (("1" (replace -1 :dir rl)
                      (("1" (replace -2 :hide? t)
                        (("1" (expand "vertex_crossing_index")
                          (("1" (lift-if)
                            (("1" (expand "edges_of_polygon")
                              (("1"
                                (expand "segment_falling?")
                                (("1"
                                  (ground)
                                  (("1"
                                    (case "cross(u - v, w - v) = 0")
                                    (("1"
                                      (hide -5 1 2)
                                      (("1"
                                        (use
                                         "adjacent_edges_do_not_fold_back")
                                        (("1"
                                          (ground)
                                          (("1"
                                            (rewrite
                                             "parallel_equiv_cross_eq_0"
                                             :dir
                                             rl)
                                            (("1"
                                              (expand "parallel?")
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (expand
                                                   "dir_parallel?")
                                                  (("1"
                                                    (inst + "nzk")
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil)
                                                     ("2"
                                                      (case "nzk >= 0")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (lemma
                                                           "comp_eq_y")
                                                          (("2"
                                                            (inst
                                                             -
                                                             "u - v"
                                                             "nzk * (w - v)")
                                                            (("2"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (hide
                                                                 -2)
                                                                (("1"
                                                                  (expand
                                                                   "*"
                                                                   -1)
                                                                  (("1"
                                                                    (expand
                                                                     "-"
                                                                     -1)
                                                                    (("1"
                                                                      (replace*
                                                                       -6
                                                                       -7
                                                                       -8
                                                                       -9
                                                                       -10)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (move-terms
                                                                           -2
                                                                           r)
                                                                          (("1"
                                                                            (move-terms
                                                                             -3
                                                                             r)
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (factor
                                                                                 -2
                                                                                 l)
                                                                                (("1"
                                                                                  (mult-cases
                                                                                   -2)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide-all-but (-6 -8 1)) (("2" (grind) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (path_to_miter_pt_seq_contact_free_TCC1 0
  (path_to_miter_pt_seq_contact_free_TCC1-2 nil 3874129022
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (path_to_miter_pt_seq_contact_free subtype "0" "below[S`length]"))
  (path_to_miter_pt_seq_contact_free_TCC1-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (path_to_miter_pt_seq_contact_free subtype "0" "below[S`length]")))
 (path_to_miter_pt_seq_contact_free_TCC2 0
  (path_to_miter_pt_seq_contact_free_TCC2-2 nil 3874129022
   ("" (skeep*) (("" (typepred "S") (("" (ground) nil nil)) nil)) nil)
   nil shostak
   (path_to_miter_pt_seq_contact_free subtype
    "(number_fields.-)(polygon_miter_sequences.S`length, 1)"
    "below[S`length]"))
  (path_to_miter_pt_seq_contact_free_TCC2-1 nil 3874128244
   ("" (subtype-tcc) nil nil) nil nil
   (path_to_miter_pt_seq_contact_free subtype
    "(number_fields.-)(polygon_miter_sequences.S`length, 1)"
    "below[S`length]")))
 (path_to_miter_pt_seq_contact_free 0
  (path_to_miter_pt_seq_contact_free-1 nil 3874129022
   ("" (skeep)
    (("" (skoletin*)
      (("" (flatten)
        (("" (typepred "p")
          (("" (expand "has_rightward_crossings?")
            (("" (flatten)
              (("" (hide -1)
                (("" (use "leftmost_crossing_on_perim")
                  (("" (case "p = mp")
                    (("1"
                      (inst +
                       "(# length := 1, seq := lambda (i: below(1)): p #)")
                      (("1" (assert)
                        (("1" (expand "contact_free_path?")
                          (("1" (skeep)
                            (("1" (expand "point_on_segment_seq?")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skeep) nil nil))
                      nil)
                     ("2" (copy -6)
                      (("2" (expand "rightward_crossing_index" -1)
                        (("2" (lift-if)
                          (("2"
                            (name-replace "q"
                             "leftmost_intersection_point(G, p)" :hide?
                             nil)
                            (("2" (use "perimeter_find_index_any")
                              (("2"
                                (assert)
                                (("2"
                                  (use "point_on_find_index_segment")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (name-replace
                                         "j"
                                         "find_index_any(G, q)")
                                        (("2"
                                          (ground)
                                          (("1"
                                            (case
                                             "i = j or i = prev_index(G, j)")
                                            (("1"
                                              (case "p`y = mp`y")
                                              (("1"
                                                (inst
                                                 +
                                                 "(# length := 2, seq := lambda (i: below(2)):
                                                       if i = 0 then p else mp endif #)")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand
                                                     "contact_free_path?")
                                                    (("1"
                                                      (skeep)
                                                      (("1"
                                                        (expand
                                                         "point_on_segment_seq?")
                                                        (("1"
                                                          (skeep)
                                                          (("1"
                                                            (case
                                                             "p`x < q`x")
                                                            (("1"
                                                              (case
                                                               "mp`x < p`x")
                                                              (("1"
                                                                (lemma
                                                                 "seg_from_miter_point_not_on_perim")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "G"
                                                                   "q"
                                                                   "i"
                                                                   "d")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (replace
                                                                       -16
                                                                       :dir
                                                                       rl)
                                                                      (("1"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "r")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (split
                                                                               1)
                                                                              (("1"
                                                                                (rewrite
                                                                                 "point_on_reverse_segment"
                                                                                 -13
                                                                                 :dir
                                                                                 rl)
                                                                                (("1"
                                                                                  (expand
                                                                                   "reverse_segment")
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "point_on_subsegment")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "r"
                                                                                       "(# p1 := mp, p2 := p #)"
                                                                                       "(# p1 := mp, p2 := q #)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -13)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "subsegment?")
                                                                                            (("1"
                                                                                              (split
                                                                                               1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "point_on_segment?")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "0")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (case
                                                                                                 "p`y = q`y")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "point_on_segment_has_offset")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     +
                                                                                                     "(p`x - mp`x) / (q`x - mp`x)")
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (apply-extensionality
                                                                                                         :hide?
                                                                                                         t)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "+"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "*"
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (move-terms
                                                                                                               1
                                                                                                               r
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (cross-mult
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "-"
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           (-1
                                                                                                            -4
                                                                                                            1))
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (cross-mult
                                                                                                         1)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (cross-mult
                                                                                                       1)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "leftmost_intersection_point")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("2"
                                                                                    (rewrite
                                                                                     "point_on_segment_has_offset"
                                                                                     -14)
                                                                                    (("2"
                                                                                      (skeep)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "comp_eq_x")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "q"
                                                                                           "p + d!1 * (mp - p)")
                                                                                          (("2"
                                                                                            (split
                                                                                             -1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "+"
                                                                                               -1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "*"
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "-"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (cancel-add
                                                                                                       -4)
                                                                                                      (("1"
                                                                                                        (factor
                                                                                                         -4
                                                                                                         r)
                                                                                                        (("1"
                                                                                                          (mult-cases
                                                                                                           -4)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (replace
                                                                           -5)
                                                                          (("2"
                                                                            (ground)
                                                                            (("2"
                                                                              (case-replace
                                                                               "j = next_index(G, i)")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (replace
                                                                                 -1)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (case
                                                                 "mp`x = p`x")
                                                                (("1"
                                                                  (apply-extensionality
                                                                   3
                                                                   :hide?
                                                                   t)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (case
                                                                   "mp`x < q`x")
                                                                  (("1"
                                                                    (use
                                                                     "left_of_leftmost_crossing_not_on_perim")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "r")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (replace
                                                                             -9)
                                                                            (("1"
                                                                              (split
                                                                               1)
                                                                              (("1"
                                                                                (lemma
                                                                                 "point_on_subsegment")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "r"
                                                                                   "(# p1 := p, p2 := mp #)"
                                                                                   "(# p1 := p, p2 := q #)")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -13)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "subsegment?")
                                                                                        (("1"
                                                                                          (split
                                                                                           1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "point_on_segment?")
                                                                                            (("1"
                                                                                              (inst
                                                                                               +
                                                                                               "0")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (rewrite
                                                                                             "point_on_segment_has_offset")
                                                                                            (("2"
                                                                                              (inst
                                                                                               +
                                                                                               "(mp`x - p`x) / (q`x - p`x)")
                                                                                              (("1"
                                                                                                (split
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (move-terms
                                                                                                   1
                                                                                                   r
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (cross-mult
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (apply-extensionality
                                                                                                       :hide?
                                                                                                       t)
                                                                                                      (("1"
                                                                                                        (hide-all-but
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (case
                                                                                                         "p`y = q`y")
                                                                                                        (("1"
                                                                                                          (hide-all-but
                                                                                                           (-1
                                                                                                            -4
                                                                                                            1))
                                                                                                          (("1"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "leftmost_intersection_point")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (cross-mult
                                                                                                   1)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (cross-mult
                                                                                                 1)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("2"
                                                                                    (rewrite
                                                                                     "point_on_segment_has_offset"
                                                                                     -14)
                                                                                    (("2"
                                                                                      (skeep)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "comp_eq_x")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "q"
                                                                                           "p + d!1 * (mp - p)")
                                                                                          (("2"
                                                                                            (split
                                                                                             -1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "+"
                                                                                               -1)
                                                                                              (("1"
                                                                                                (move-terms
                                                                                                 -1
                                                                                                 r
                                                                                                 2)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "*"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "-"
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (factor
                                                                                                       -1
                                                                                                       r)
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "q`x - p`x > d!1 * (mp`x - p`x)")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (case
                                                                                                           "q`x - p`x > mp`x - p`x")
                                                                                                          (("1"
                                                                                                            (name-replace*
                                                                                                             ("qpx"
                                                                                                              "q`x - p`x"
                                                                                                              "mpx"
                                                                                                              "mp`x - p`x"))
                                                                                                            (("1"
                                                                                                              (mult-cases
                                                                                                               1
                                                                                                               :mult-op
                                                                                                               1*)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (case
                                                                     "p`y = q`y")
                                                                    (("1"
                                                                      (use
                                                                       "miter_point_cross_gt_0")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (replace
                                                                           -16
                                                                           :dir
                                                                           rl)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (ground)
                                                                              (("1"
                                                                                (replace
                                                                                 -1
                                                                                 :dir
                                                                                 rl)
                                                                                (("1"
                                                                                  (expand
                                                                                   "edges_of_polygon")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "segment_falling?")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -7
                                                                                       :dir
                                                                                       rl)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "cross")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "-"
                                                                                           (-2
                                                                                            -3))
                                                                                          (("1"
                                                                                            (replace
                                                                                             -4)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -6
                                                                                               :dir
                                                                                               rl)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (move-terms
                                                                                                   -3
                                                                                                   l
                                                                                                   (1
                                                                                                    4))
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (factor
                                                                                                       -3
                                                                                                       *)
                                                                                                      (("1"
                                                                                                        (cancel-by
                                                                                                         -3
                                                                                                         "q`y - G`vertices(next_index(G, i))`y")
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (case
                                                                                 "j = next_index(G, i)")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "edges_of_polygon")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "segment_falling?")
                                                                                      (("1"
                                                                                        (replace
                                                                                         -8
                                                                                         :dir
                                                                                         rl)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "cross")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "-"
                                                                                             -4)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -5)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -7
                                                                                                 :dir
                                                                                                 rl)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (move-terms
                                                                                                     -4
                                                                                                     l
                                                                                                     (2
                                                                                                      3))
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (factor
                                                                                                         -4
                                                                                                         *)
                                                                                                        (("1"
                                                                                                          (cancel-by
                                                                                                           -4
                                                                                                           "G`vertices(i)`y - q`y")
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (rewrite
                                                                         "three_pt_miniseq_in_polygon")
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "leftmost_intersection_point")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "leftmost_intersection_point")
                                                              (("2"
                                                                (use
                                                                 "leftmost_crossing_xval_bound")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (ground)
                                                (("1"
                                                  (use
                                                   "vertex_to_miter_pt_seq_contact_free")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (replace
                                                       -11
                                                       :dir
                                                       rl)
                                                      (("1"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (use
                                                   "next_vtx_to_miter_pt_seq_contact_free")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (split -1)
                                                      (("1"
                                                        (expand
                                                         "vertex_miter_point")
                                                        (("1"
                                                          (replace
                                                           -11
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (replace -1 1)
                                                        (("2"
                                                          (expand
                                                           "vertex_miter_point")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (expand
                                                         "vertex_miter_point")
                                                        (("3"
                                                          (replace
                                                           -11
                                                           :dir
                                                           rl)
                                                          (("3"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("4"
                                                        (case-replace
                                                         "j = next_index(G, i)")
                                                        (("1"
                                                          (expand
                                                           "leftmost_intersection_point")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (replace -1)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide-all-but (-2 1))
                                              (("2"
                                                (expand
                                                 "vertex_crossing_index")
                                                (("2"
                                                  (apply
                                                   (repeat (lift-if)))
                                                  (("2"
                                                    (ground)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (replace -1)
                                            (("2"
                                              (use
                                               "nonvertex_to_miter_pt_seq_contact_free")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (expand
                                                   "vertex_miter_point")
                                                  (("2"
                                                    (replace
                                                     -11
                                                     :dir
                                                     rl)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (replace
                                                         -9
                                                         :dir
                                                         rl)
                                                        (("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)))

