gen_vert: THEORY
BEGIN

   IMPORTING vectors@vectors_4D

   minimumTimeStep: posreal

   notEqual_vert(v: Vect4)(x: Vect4): MACRO bool = x`t /= v`t

   notEqual_vert(v1, v2: Vect4)(x: Vect4): MACRO bool =  x`t /= v1`t AND x`t /= v2`t

   vsAccelTime(vs:real, goalVs:real, a:nzreal): real = 
      abs(vs - goalVs)/a
       

   vertGen(pt1: Vect4, pt2: (notEqual_vert(pt1)), pt3: (notEqual_vert(pt1,pt2)), a: nzreal): [real,real] = 
       LET
          z1 = pt1`z,
          z2 = pt2`z,
          z3 = pt3`z,
          t1 = pt1`t,
          t2 = pt2`t,
          t3 = pt3`t,
          vs1 = (z2 - z1)/(t2-t1),
          vs2 = (z3-z2)/(t3-t2),
          dt = vsAccelTime(vs1,vs2,a),
          tend = IF (vs2-vs1)/a > minimumTimeStep THEN
                    (z1 - z2 - vs1*t1 + vs2*t2 + 0.5*a*dt*dt)/(vs2-vs1)
                 ELSE
                    0
                 ENDIF,
	  tbegin = tend-dt
       IN 
          (tbegin,tend)

END gen_vert


