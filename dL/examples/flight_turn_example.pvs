flight_turn_example : THEORY
 % Welcome

%-------------------------------------------------------------------------% 
%-------------------------------------------------------------------------%
%| flight_turn_example: This is the illistrative example of roatational  |%
%| dyanamics of a aircraft turning and flying straight                   |%
%-------------------------------------------------------------------------%
% Created							   Nov 2022
% 							                JTS
%-------------------------------------------------------------------------%


%-----     %
  BEGIN
%     -----%

%%--------------------------------------------
%%Importing top
%%--------------------------------------------


 IMPORTING dL@top
 
%%--------------------------------------------
%%Defining variables
%%--------------------------------------------

 x     : nat = 1
 y     : nat = 2

%%--------------------------------------------
%%Define turning, straight dynamics
% as well as the circle, line, and path
% that we will prove the dyanamics are always on
%%--------------------------------------------
turn(Q:BoolExpr) : HP = DIFF( (: (x,-val(y)), (y, val(x)) :), Q)
straight(vx, vy:real) : HP = DIFF( (:(x, cnst(vx)), (y, cnst(vy)) :))
circ?(c:real): BoolExpr  = (val(x)^2 + val(y)^2 = cnst(c)^2)
line?(a,b,c:real): BoolExpr =  (cnst(a)*val(x) + cnst(b)*val(y) = cnst(c))
path?(c:real): BoolExpr = (val(x) >= 0 AND circ?(c)) OR
                         (val(x) < 0 AND line?(0,1,c))

%%--------------------------------------------
%%Two formalations of the same path
%%--------------------------------------------
path_equiv: LEMMA
LET path_alt?(c:real): BoolExpr =
 (val(x) >= 0 IMPLIES circ?(c)) AND 
 (val(x) < 0 IMPLIES line?(0,1,c))
IN
FORALL(c:real):
path?(c) = path_alt?(c)

%%--------------------------------------------
%% Rotational dynamics with line ending
%%--------------------------------------------
rotational_dynamics_line: LEMMA
 FORALL(C:real):
 LET 
     b1 = SEQ(TEST(val(x)>=0), turn(val(x)>=0)),
     b2 = SEQ(TEST(val(x)<0), straight(-C,0)),
     dyn = UNION(b1,b2)
IN
 (cnst(C) >= cnst(0) AND val(x) = cnst(C) AND val(y) = 0)
 IMPLIES
 ALLRUNS(STAR(dyn),path?(C))

%~~~      THE END  ~~~%
END flight_turn_example
