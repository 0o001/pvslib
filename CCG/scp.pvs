%********************************************************************************%
% Size-Change Principle [Lee et al]:                                             %
% "If every infinite computation would give rise to an infinitely                %
%  decreasing value sequence, then no infinite computation is possible."         %
%                                                                                %
%   Authors:                                                                     %
%                                                                                %
%                 César Muñoz -- NASA Langley Research Center - US               %
%             Mariano Moscato -- NIA - US                                        %
%                                                                                %
%********************************************************************************%

scp[Val,Expr,Condition: TYPE, 
    (IMPORTING cc_def[Val,Expr,Condition]) CCs : TYPE FROM Seq_cc] : THEORY
BEGIN 

  infinite_seq_ccs(semantic_rel:PRED[[Expr,Environment,Val]],
                   eval_conds:PRED[[Condition,Environment]])
		  (ccs:CCs, vals:Seq_val): bool =
    FORALL(i:nat): eval_conds(ccs(i)`conds,vals(i)) AND
      semantic_rel(ccs(i)`actuals,vals(i),vals(i+1))

  scp_termination?(semantic_rel:PRED[[Expr,Environment,Val]],
                   eval_conds:PRED[[Condition,Environment]]) : bool = 
  FORALL (ccs:CCs,vals:Seq_val) : NOT infinite_seq_ccs(semantic_rel,eval_conds)(ccs,vals) 

  IMPORTING orders@well_foundedness[Val]

  % Size-change principle
  SCP(semantic_rel:PRED[[Expr,Environment,Val]],eval_conds:PRED[[Condition,Environment]]) : bool =
    FORALL (ccs:CCs,vals:Seq_val) : infinite_seq_ccs(semantic_rel,eval_conds)(ccs,vals) IMPLIES
      EXISTS (r: (well_founded?[Val])) : FORALL(i:nat):r(vals(i+1),vals(i))

  % This lemma shows that scp_termination? is equivalent to the size-change principle
  scp_termination : THEOREM
    FORALL (semantic_rel:PRED[[Expr,Environment,Val]],eval_conds:PRED[[Condition,Environment]]):
    scp_termination?(semantic_rel,eval_conds) IFF
    SCP(semantic_rel,eval_conds)

END scp
