(cd2d_shape
 (cd2d_rectangle_TCC1 0
  (cd2d_rectangle_TCC1-1 nil 3823716967
   ("" (skeep)
    (("" (replaces (-3 -4))
      (("" (case-replace "-vD = vD")
        (("1" (hide-all-but (-1 -3))
          (("1" (lemma "neg_eq_zero")
            (("1" (inst?) (("1" (assert) nil nil)) nil)) nil))
          nil)
         ("2" (hide-all-but (-4 1))
          (("2" (decompose-equality)
            (("1" (grind) nil nil) ("2" (grind) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((+ const-decl "Vector" vectors_2D vectors)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    (neg_eq_zero formula-decl nil vectors_2D vectors)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (neg_nzv application-judgement "Nz_vector" vectors_2D vectors))
   nil
   (cd2d_rectangle subtype "cd2d_shape.B"
    "{B: vectors_2D_def.Vect2 | B /= cd2d_shape.A}")))
 (cd2d_rectangle 0
  (cd2d_rectangle-1 nil 3823723331
   ("" (skeep)
    (("" (beta)
      (("" (name-replace "HMD" "hmd_tangent_point[D](v)" :hide? nil)
        (("" (name-replace "h" "-norm(T*v)" :hide? nil)
          (("" (expand "mk_rectangle")
            (("" (expand "point_strictly_in_rectangle?")
              (("" (case-replace "so-HMD-(so+HMD) = -2*HMD")
                (("1" (hide -1)
                  (("1" (rewrite "perpR_scal")
                    (("1" (rewrite "normalize_scal")
                      (("1" (expand "sign")
                        (("1" (case-replace "^(perpR(HMD)) = ^(v)")
                          (("1" (hide -1)
                            (("1"
                              (case-replace "h * (-1 * ^(v)) = T*v")
                              (("1"
                                (hide -1)
                                (("1"
                                  (hide -1)
                                  (("1"
                                    (case-replace
                                     "so + HMD + T * v - (so + HMD) = T*v")
                                    (("1"
                                      (hide -1)
                                      (("1"
                                        (rewrite "sqv_scal")
                                        (("1"
                                          (case-replace
                                           "sqv(HMD)=sq(D)")
                                          (("1"
                                            (hide -1)
                                            (("1"
                                              (case-replace
                                               "si - (so + HMD) = (si-so)-HMD")
                                              (("1"
                                                (hide -1)
                                                (("1"
                                                  (case-replace
                                                   "si-so = -(so-si)")
                                                  (("1"
                                                    (hide -1)
                                                    (("1"
                                                      (name-replace
                                                       "s"
                                                       "so-si")
                                                      (("1"
                                                        (case-replace
                                                         "(-s - HMD) * (-2 * HMD) = 2*(HMD*s + HMD*HMD)")
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (rewrite
                                                             "sqv"
                                                             :dir
                                                             rl)
                                                            (("1"
                                                              (replaces
                                                               -1
                                                               :dir
                                                               rl)
                                                              (("1"
                                                                (rewrite
                                                                 "sqv_hmd_tangent_point")
                                                                (("1"
                                                                  (expand
                                                                   "hmd_tangent_point"
                                                                   :assert?
                                                                   none)
                                                                  (("1"
                                                                    (eval-expr
                                                                     "sq(-2)")
                                                                    (("1"
                                                                      (replaces
                                                                       -1)
                                                                      (("1"
                                                                        (rewrite
                                                                         "sqv_scal")
                                                                        (("1"
                                                                          (case-replace
                                                                           "(-s - D * perpL(^(v))) * (T * v) = T*(-s*v - D * (perpL(^(v))*v))")
                                                                          (("1"
                                                                            (hide
                                                                             -1)
                                                                            (("1"
                                                                              (rewrite
                                                                               "perpL_normalized_dot")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (split
                                                                                   1)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (split
                                                                                       1)
                                                                                      (("1"
                                                                                        (hide
                                                                                         (-3
                                                                                          -4))
                                                                                        (("1"
                                                                                          (factor
                                                                                           -1)
                                                                                          (("1"
                                                                                            (div-by
                                                                                             -1
                                                                                             "2")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (move-terms
                                                                                                 -1
                                                                                                 r
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (move-terms
                                                                                                     -2
                                                                                                     l
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (div-by
                                                                                                         -2
                                                                                                         "2")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "sq"
                                                                                                           -)
                                                                                                          (("1"
                                                                                                            (real-props)
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "dot_comm")
                                                                                                              (("1"
                                                                                                                (div-by
                                                                                                                 -1
                                                                                                                 "D")
                                                                                                                (("1"
                                                                                                                  (case-replace
                                                                                                                   "-1 * (D * D) / D = -D")
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "abs_lt")
                                                                                                                      (("1"
                                                                                                                        (inst?)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         (-1
                                                                                          -2))
                                                                                        (("2"
                                                                                          (div-by
                                                                                           -1
                                                                                           "T")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (hide
                                                                                         (-1
                                                                                          -2))
                                                                                        (("3"
                                                                                          (expand
                                                                                           "sq"
                                                                                           -2)
                                                                                          (("3"
                                                                                            (div-by
                                                                                             -2
                                                                                             "T")
                                                                                            (("3"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (rewrite
                                                                                       "dot_comm"
                                                                                       -1)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "abs_lt")
                                                                                        (("2"
                                                                                          (inst?
                                                                                           -1)
                                                                                          (("2"
                                                                                            (replaces
                                                                                             -1)
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (split)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "sq")
                                                                                                  (("1"
                                                                                                    (hide-all-but
                                                                                                     (-1
                                                                                                      1))
                                                                                                    (("1"
                                                                                                      (name-replace
                                                                                                       "PS"
                                                                                                       "perpL(^(v)) * s")
                                                                                                      (("1"
                                                                                                        (factor
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (div-by
                                                                                                           1
                                                                                                           "D")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   (-2
                                                                                                    1))
                                                                                                  (("2"
                                                                                                    (name-replace
                                                                                                     "PS"
                                                                                                     "perpL(^(v)) * s")
                                                                                                    (("2"
                                                                                                      (move-terms
                                                                                                       1
                                                                                                       l
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "sq")
                                                                                                          (("2"
                                                                                                            (mult-by
                                                                                                             -1
                                                                                                             "2*D")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (mult-by
                                                                                                   -3
                                                                                                   "T")
                                                                                                  (("3"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("4"
                                                                                                  (mult-by
                                                                                                   -4
                                                                                                   "T")
                                                                                                  (("4"
                                                                                                    (expand
                                                                                                     "sq")
                                                                                                    (("4"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (name-replace
                                                                               "PP"
                                                                               "perpL(^(v))")
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           1)
                                                          (("2"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide-all-but 1)
                                                    (("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but 1)
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide-all-but (-1 1))
                                            (("2"
                                              (replaces -1 :dir rl)
                                              (("2"
                                                (rewrite
                                                 "sqv_hmd_tangent_point")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide-all-but 1)
                                      (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (hide-all-but (-1 1 4))
                                (("2"
                                  (replaces -1 :dir rl)
                                  (("2"
                                    (rewrite "scal_assoc")
                                    (("2"
                                      (grind-reals)
                                      (("2"
                                        (rewrite "norm_scal")
                                        (("2"
                                          (expand "abs")
                                          (("2"
                                            (lemma "scal_assoc")
                                            (("2"
                                              (inst
                                               -1
                                               "T"
                                               "norm(v)"
                                               "^(v)")
                                              (("2"
                                                (replaces -1 :dir rl)
                                                (("2"
                                                  (rewrite
                                                   "normalized_id")
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but (-2 1))
                            (("2" (replaces -1 :dir rl)
                              (("2"
                                (rewrite "perpR_hmd_tangent_point")
                                (("2"
                                  (rewrite "normalize_scal")
                                  (("2"
                                    (expand "sign")
                                    (("2"
                                      (rewrite "normalize_normalize")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide-all-but 1) (("2" (grind) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((norm const-decl "nnreal" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (nz_sqv_gt_0 application-judgement "posreal" vectors_2D vectors)
    (nz_norm_gt_0 application-judgement "posreal" vectors_2D vectors)
    (point_strictly_in_rectangle? const-decl "bool" rectangle_2D
     shapes)
    (perpR const-decl "Vect2" perpendicular_2D vectors)
    (Nz_vector type-eq-decl nil vectors_2D vectors)
    (normalize_scal formula-decl nil vectors_2D vectors)
    (^ const-decl "Normalized" vectors_2D vectors)
    (Normalized type-eq-decl nil vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (perpL const-decl "Vect2" perpendicular_2D vectors)
    (perpL_normalized_dot formula-decl nil perpendicular_2D vectors)
    (dot_comm formula-decl nil vectors_2D vectors)
    (abs_lt formula-decl nil abs_lems reals)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (perpL_nz application-judgement "Nz_vect2" perpendicular_2D
     vectors)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    (sqv_hmd_tangent_point formula-decl nil horizontal nil)
    (* const-decl "real" vectors_2D vectors)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sqv_scal formula-decl nil vectors_2D vectors)
    (normalized_id formula-decl nil vectors_2D vectors)
    (norm_scal formula-decl nil vectors_2D vectors)
    (scal_assoc formula-decl nil vectors_2D vectors)
    (normalize_normalize formula-decl nil vectors_2D vectors)
    (scal_1 formula-decl nil vectors_2D vectors)
    (perpR_hmd_tangent_point formula-decl nil horizontal nil)
    (sign const-decl "Sign" sign reals)
    (perpR_nz application-judgement "Nz_vect2" perpendicular_2D
     vectors)
    (perpR_scal formula-decl nil perpendicular_2D vectors)
    (nz_nzv application-judgement "Nz_vector" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (mk_rectangle const-decl "Rectangle_2D" rectangle_2D shapes)
    (hmd_tangent_point const-decl "Nz_vect2" horizontal nil)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors))
   nil))
 (cd2d_rectangle_tcpa 0
  (cd2d_rectangle_tcpa-1 nil 3826659474
   ("" (skeep)
    (("" (beta)
      (("" (lemma "cd2d_rectangle")
        (("" (inst?)
          (("" (inst -1 "so" "si")
            (("" (beta)
              (("" (replaces -1)
                (("" (name-replace "s" "so-si")
                  (("" (lemma "sq_det_sqv_dta")
                    (("" (inst?)
                      (("" (rewrite "dot_neg_left")
                        ((""
                          (case "abs(s * perpL(^(v))) < D  IFF sqv(s + horizontal_tca(s, v) * v) < sq(D)")
                          (("1"
                            (case "0 < -(s * v) < T * sqv(v) IFF 0 < horizontal_tca(s, v) < T")
                            (("1" (ground) nil nil)
                             ("2" (hide-all-but 1)
                              (("2"
                                (expand "horizontal_tca")
                                (("2"
                                  (ground)
                                  (("1" (cross-mult 1) nil nil)
                                   ("2" (cross-mult 1) nil nil)
                                   ("3" (cross-mult -1) nil nil)
                                   ("4" (cross-mult -2) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (ground)
                              (("1"
                                (both-sides-f -1 "sq")
                                (("1" (rewrite "sq_lt") nil nil))
                                nil)
                               ("2"
                                (both-sides-f 1 "sq")
                                (("2" (rewrite "sq_lt") nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Vect2 type-eq-decl nil vectors_2D_def vectors)
    (sq_det_sqv_dta formula-decl nil definitions nil)
    (dot_neg_left formula-decl nil vectors_2D vectors)
    (sq_abs formula-decl nil sq reals)
    (sq_lt formula-decl nil sq reals)
    (perpL_nz application-judgement "Nz_vect2" perpendicular_2D
     vectors)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (* const-decl "real" vectors_2D vectors)
    (perpL const-decl "Vect2" perpendicular_2D vectors)
    (Nz_vector type-eq-decl nil vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (Normalized type-eq-decl nil vectors_2D vectors)
    (^ const-decl "Normalized" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (horizontal_tca const-decl "real" definitions nil)
    (sq const-decl "nonneg_real" sq reals)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (nz_sqv_gt_0 application-judgement "posreal" vectors_2D vectors)
    (nz_norm_gt_0 application-judgement "posreal" vectors_2D vectors))
   nil))
 (cd2d_circular_segment_divergent_TCC1 0
  (cd2d_circular_segment_divergent_TCC1-1 nil 3826638317
   ("" (skeep)
    (("" (split)
      (("1" (flatten)
        (("1" (replaces -1)
          (("1" (move-terms -3 r 1) (("1" (assert) nil nil)) nil))
          nil))
        nil)
       ("2" (flatten)
        (("2" (replaces -1)
          (("2" (move-terms -4 r 1) (("2" (assert) nil nil)) nil))
          nil))
        nil)
       ("3" (replaces (-3 -4))
        (("3" (case-replace "so + vD - so=vD")
          (("1" (case-replace "so - vD - so=-vD")
            (("1" (rewrite "sqv_neg") nil nil)
             ("2" (move-terms 1 l 2) (("2" (assert) nil nil)) nil))
            nil)
           ("2" (hide-all-but 1)
            (("2" (move-terms 1 l 2) (("2" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((sub_eq_args formula-decl nil vectors_2D vectors)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    (neg_nzv application-judgement "Nz_vector" vectors_2D vectors)
    (neg_add_left formula-decl nil vectors_2D vectors)
    (nz_sqv_gt_0 application-judgement "posreal" vectors_2D vectors)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sqv_neg formula-decl nil vectors_2D vectors))
   nil
   (cd2d_circular_segment_divergent subtype
    "(cd2d_shape.A, cd2d_shape.so, cd2d_shape.B)" "Arc")))
 (cd2d_circular_segment_divergent 0
  (cd2d_circular_segment_divergent-1 nil 3826638342
   ("" (skeep)
    (("" (skoletin*)
      (("" (case "NOT sqv(vD) =  sqv(A_1 - so)")
        (("1" (assert)
          (("1" (replace -2 1) (("1" (assert) nil nil)) nil)) nil)
         ("2" (case "NOT B-A_1 = -2*vD")
          (("1" (replace -3 1 lr)
            (("1" (replace -2 1 lr)
              (("1" (assert)
                (("1" (hide-all-but 1) (("1" (grind) nil nil)) nil))
                nil))
              nil))
            nil)
           ("2" (case "NOT si - A_1 = -s - vD")
            (("1" (replace -4 1 lr)
              (("1" (replace -6 1 lr)
                (("1" (hide-all-but 1) (("1" (grind) nil nil)) nil))
                nil))
              nil)
             ("2"
              (case "NOT det(-s - vD, -2 * vD) = 2*D/norm(v) * s * v")
              (("1" (assert)
                (("1" (lemma "det_sub_left")
                  (("1" (lemma "det_scal_right")
                    (("1" (inst -1 "-2" "-s-vD" "vD")
                      (("1" (replace -1)
                        (("1" (inst -2 "-s" "vD" "vD")
                          (("1" (replace -2 1)
                            (("1" (lemma "det_eq_0")
                              (("1"
                                (inst -1 "vD")
                                (("1"
                                  (replace -1)
                                  (("1"
                                    (expand "vD" 1)
                                    (("1"
                                      (expand "hmd_tangent_point" 1 1)
                                      (("1"
                                        (lemma "det_scal_right")
                                        (("1"
                                          (inst
                                           -1
                                           "D"
                                           "-s"
                                           " perpL(^(v))")
                                          (("1"
                                            (replace -1 1)
                                            (("1"
                                              (lemma "det_scal_left")
                                              (("1"
                                                (inst
                                                 -1
                                                 "-1"
                                                 "s"
                                                 " perpL(^(v))")
                                                (("1"
                                                  (case
                                                   "NOT -s = -1*s")
                                                  (("1"
                                                    (hide-all-but 1)
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (replace -1 -2 rl)
                                                    (("2"
                                                      (replace -2 1)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (lemma
                                                           "det_asym")
                                                          (("2"
                                                            (inst
                                                             -1
                                                             "s"
                                                             "perpL(^(v))")
                                                            (("2"
                                                              (replace
                                                               -1
                                                               1)
                                                              (("2"
                                                                (lemma
                                                                 "dot_perpL")
                                                                (("2"
                                                                  (inst
                                                                   -1
                                                                   "^(v)"
                                                                   "s")
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (replace
                                                                       -1
                                                                       1
                                                                       rl)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (expand
                                                                           "^"
                                                                           1)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (case "NOT sqv(perpL(^(v))) =1")
                (("1" (lemma "sqv_normalize")
                  (("1" (lemma "sqv_perpL")
                    (("1" (inst -2 "v")
                      (("1" (inst -1 "^(v)") (("1" (assert) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (split 1)
                  (("1" (flatten)
                    (("1" (expand "point_strictly_in?" -1)
                      (("1" (flatten)
                        (("1" (assert)
                          (("1" (replace -9 -1 lr)
                            (("1" (assert)
                              (("1"
                                (lemma "sqv_scal")
                                (("1"
                                  (inst -1 "D" " perpL(^(v))")
                                  (("1"
                                    (expand "vD" -2)
                                    (("1"
                                      (expand "hmd_tangent_point" -2 1)
                                      (("1"
                                        (replace -1 -2)
                                        (("1"
                                          (replace -4 -2)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (lemma "sqv_sym")
                                              (("1"
                                                (inst -1 "si" "so")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (replace -8 -4)
                                                    (("1"
                                                      (replace -7 -4)
                                                      (("1"
                                                        (replace -6 -4)
                                                        (("1"
                                                          (split -4)
                                                          (("1"
                                                            (mult-by
                                                             1
                                                             "norm(v)")
                                                            (("1"
                                                              (div-by
                                                               1
                                                               "2*D")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (case
                                                             "NOT  2 * D / norm(v) * (s * v) = 0")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (mult-by
                                                               -1
                                                               "norm(v)")
                                                              (("2"
                                                                (div-by
                                                                 -1
                                                                 "2*D")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (flatten)
                    (("2" (expand "point_strictly_in?" 1)
                      (("2" (assert)
                        (("2" (split 1)
                          (("1" (lemma "sqv_sym")
                            (("1" (inst -1 "si" "so")
                              (("1"
                                (assert)
                                (("1"
                                  (replace -10 1 lr)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (expand "vD")
                                      (("1"
                                        (expand "hmd_tangent_point" 1)
                                        (("1"
                                          (lemma "sqv_scal")
                                          (("1"
                                            (inst
                                             -1
                                             "D"
                                             " perpL(^(v))")
                                            (("1"
                                              (replace -1)
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (replace -5 1 lr)
                            (("2" (replace -6 1 lr)
                              (("2"
                                (replace -4 1)
                                (("2"
                                  (flatten)
                                  (("2"
                                    (mult-by -1 "norm(v)")
                                    (("2"
                                      (div-by -1 "2*D")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Vector type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (hmd_tangent_point const-decl "Nz_vect2" horizontal nil)
    (+ const-decl "Vector" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (mk_circular_segment adt-constructor-decl
     "[Arc -> (circular_segement_2D?)]" circular_segment_2D shapes)
    (circular_segement_2D? adt-recognizer-decl
     "[CircularSegment_2D -> boolean]" circular_segment_2D shapes)
    (Arc type-eq-decl nil circular_segment_2D shapes)
    (Angle_2D type-eq-decl nil angle_2D shapes)
    (point_strictly_in? const-decl "bool" circular_segment_2D shapes)
    (CircularSegment_2D type-decl nil circular_segment_2D shapes)
    (nz_nzv application-judgement "Nz_vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (nz_norm_gt_0 application-judgement "posreal" vectors_2D vectors)
    (det const-decl "real" det_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (det_sub_left formula-decl nil det_2D vectors)
    (det_eq_0 formula-decl nil det_2D vectors)
    (^ const-decl "Normalized" vectors_2D vectors)
    (Normalized type-eq-decl nil vectors_2D vectors)
    (Nz_vector type-eq-decl nil vectors_2D vectors)
    (perpL const-decl "Vect2" perpendicular_2D vectors)
    (det_scal_left formula-decl nil det_2D vectors)
    (det_asym formula-decl nil det_2D vectors)
    (sqrt_pos application-judgement "posreal" sqrt reals)
    (dot_perpL formula-decl nil det_2D vectors)
    (scal_neg_1 formula-decl nil vectors_2D vectors)
    (perpL_nz application-judgement "Nz_vect2" perpendicular_2D
     vectors)
    (det_scal_right formula-decl nil det_2D vectors)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (sqv_sym formula-decl nil vectors_2D vectors)
    (sqv_scal formula-decl nil vectors_2D vectors)
    (sqv_normalize formula-decl nil vectors_2D vectors)
    (sqv_perpL formula-decl nil perpendicular_2D vectors)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (add_cancel formula-decl nil vectors_2D vectors)
    (nz_sqv_gt_0 application-judgement "posreal" vectors_2D vectors))
   nil))
 (cd2d_circular_segment_convergent_TCC1 0
  (cd2d_circular_segment_convergent_TCC1-2 nil 3826643988
   ("" (skeep)
    (("" (split)
      (("1" (flatten)
        (("1" (replaces -1)
          (("1" (move-terms -3 r 1) (("1" (assert) nil nil)) nil))
          nil))
        nil)
       ("2" (flatten)
        (("2" (replaces -1)
          (("2" (move-terms -4 r 1) (("2" (assert) nil nil)) nil))
          nil))
        nil)
       ("3" (replaces (-3 -4))
        (("3" (case-replace "so + vD - so=vD")
          (("1" (case-replace "so - vD - so=-vD")
            (("1" (rewrite "sqv_neg") nil nil)
             ("2" (move-terms 1 l 2) (("2" (assert) nil nil)) nil))
            nil)
           ("2" (hide-all-but 1)
            (("2" (move-terms 1 l 2) (("2" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((sub_eq_args formula-decl nil vectors_2D vectors)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (neg_nzv application-judgement "Nz_vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (neg_add_left formula-decl nil vectors_2D vectors)
    (sqv_neg formula-decl nil vectors_2D vectors))
   nil
   (cd2d_circular_segment_convergent subtype
    "(cd2d_shape.A, cd2d_shape.so, cd2d_shape.B)" "Arc"))
  (cd2d_circular_segment_convergent_TCC1-1 nil 3826639055
   ("" (subtype-tcc) nil nil) nil nil
   (cd2d_circular_segment_convergent subtype
    "(cd2d_shape.A, cd2d_shape.so, cd2d_shape.B)" "Arc")))
 (cd2d_circular_segment_convergent 0
  (cd2d_circular_segment_convergent-1 nil 3826638673
   ("" (skeep)
    (("" (beta)
      (("" (lemma "cd2d_circular_segment_divergent")
        (("" (inst -1 "so" "si" "-v")
          (("" (beta)
            (("" (rewrite "hmd_tangent_point_neg")
              (("" (name-replace "HMD" "hmd_tangent_point[D](v)")
                (("" (case "so + -HMD = so - HMD")
                  (("1" (replaces -1)
                    (("1" (case "so - -HMD = so + HMD")
                      (("1" (replaces -1)
                        (("1" (replaces -1)
                          (("1" (name-replace "s" "so-si")
                            (("1" (case " s * -v >= 0 IFF s * v <= 0")
                              (("1" (ground) nil nil)
                               ("2"
                                (hide 2)
                                (("2" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide-all-but 1) (("2" (grind) nil nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide-all-but 1) (("2" (grind) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((neg_nzv application-judgement "Nz_vector" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (hmd_tangent_point_neg formula-decl nil horizontal nil)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (hmd_tangent_point const-decl "Nz_vect2" horizontal nil))
   shostak))
 (cd2d_hazard_zone_TCC1 0
  (cd2d_hazard_zone_TCC1-1 nil 3823282632 ("" (subtype-tcc) nil nil)
   nil nil (cd2d_hazard_zone subtype "cd2d_shape.v" "Nz_vect2")))
 (cd2d_haz_soundness 0
  (cd2d_haz_soundness-2 nil 3826659365
   ("" (skeep)
    (("" (skoletin*)
      (("" (hide -2)
        (("" (flatten)
          (("" (expand "cd2d_hazard_zone")
            (("" (case "T=0 OR v=zero")
              (("1" (replace -1)
                (("1" (inst 1 "0")
                  (("1" (assert)
                    (("1" (replaces -3)
                      (("1" (expand "point_strictly_in?")
                        (("1" (expand "point_strictly_in?")
                          (("1" (rewrite "point_strictly_in_circle")
                            (("1" (rewrite "sqv_sym")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (replace 1)
                (("2" (replaces -2)
                  (("2" (expand "point_strictly_in?")
                    (("2" (split -1)
                      (("1" (lemma "cd2d_circular_segment_divergent")
                        (("1" (inst -1 "so" "si" "v")
                          (("1" (beta)
                            (("1" (replaces -1)
                              (("1"
                                (flatten)
                                (("1"
                                  (inst 3 "0")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "point_strictly_in?")
                        (("2" (split -1)
                          (("1" (lemma "cd2d_rectangle_tcpa")
                            (("1" (inst -1 "so" "si" "v" "T")
                              (("1"
                                (beta)
                                (("1"
                                  (replaces -1)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (replaces -4 :dir rl)
                                      (("1"
                                        (inst 3 "horizontal_tca(s,v)")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil))
                              nil))
                            nil)
                           ("2" (expand "point_strictly_in?")
                            (("2" (split)
                              (("1"
                                (lemma
                                 "cd2d_circular_segment_convergent")
                                (("1"
                                  (inst -1 "so+T*v" "si" "v")
                                  (("1"
                                    (beta)
                                    (("1"
                                      (replaces -1)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (case-replace
                                           "so+T*v-si= s+T*v")
                                          (("1" (inst 3 "T") nil nil)
                                           ("2"
                                            (hide-all-but (-3 1))
                                            (("2" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (expand "point_strictly_in?")
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((horizontal_tca const-decl "real" definitions nil)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (scal_0 formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (point_strictly_in_circle formula-decl nil circle_2D shapes)
    (sqv_sym formula-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (Shape2D type-decl nil Shape2D_adt shapes)
    (shapes_2D type-eq-decl nil shapes_2D shapes)
    (point_strictly_in? def-decl "bool" shapes_2D shapes)
    (Lookahead type-eq-decl nil Lookahead nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (Vector type-eq-decl nil vectors_2D vectors))
   nil)
  (cd2d_haz_soundness-1 nil 3825442015
   ("" (skeep)
    (("" (skoletin*)
      (("" (hide -2)
        (("" (flatten)
          (("" (expand "cd2d_hazard_zone")
            (("" (case "T=0 OR v=zero")
              (("1" (replace -1)
                (("1" (inst 1 "0")
                  (("1" (assert)
                    (("1" (replaces -3)
                      (("1" (expand "point_strictly_in?")
                        (("1" (expand "point_strictly_in?")
                          (("1" (rewrite "point_strictly_in_circle")
                            (("1" (rewrite "sqv_sym")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (replace 1)
                (("2" (replaces -2)
                  (("2" (expand "point_strictly_in?")
                    (("2" (split -1)
                      (("1" (expand "point_strictly_in?")
                        (("1" (inst 2 "0")
                          (("1" (assert)
                            (("1" (flatten)
                              (("1"
                                (rewrite "sqv_sym")
                                (("1"
                                  (rewrite "sqv_hmd_tangent_point")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "point_strictly_in?")
                        (("2" (split -1)
                          (("1" (lemma "cd2d_rectangle")
                            (("1" (inst?)
                              (("1"
                                (inst -1 "so" "si")
                                (("1"
                                  (beta)
                                  (("1"
                                    (replaces -1)
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (replaces -4 :dir rl)
                                        (("1"
                                          (inst 3 "(-s*v)/sqv(v)")
                                          (("1"
                                            (lemma "norm_abs_perpL")
                                            (("1"
                                              (inst
                                               -1
                                               "s + (-s * v) / sqv(v) * v"
                                               "v")
                                              (("1"
                                                (split -1)
                                                (("1"
                                                  (rewrite
                                                   "dot_add_left")
                                                  (("1"
                                                    (case-replace
                                                     "(v * perpL(^(v))) = 0")
                                                    (("1"
                                                      (hide -1)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (both-sides-f
                                                           3
                                                           "sqrt")
                                                          (("1"
                                                            (rewrite
                                                             "norm"
                                                             :dir
                                                             rl)
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (rewrite
                                                             "sqrt_lt")
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (rewrite
                                                         "dot_comm")
                                                        (("2"
                                                          (rewrite
                                                           "perpL_normalized_dot")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (rewrite
                                                     "dot_add_left")
                                                    (("2"
                                                      (rewrite
                                                       "sqv"
                                                       :dir
                                                       rl)
                                                      (("2"
                                                        (real-props)
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (split 1)
                                            (("1"
                                              (cross-mult 1)
                                              (("1" (assert) nil nil))
                                              nil)
                                             ("2"
                                              (cross-mult 1)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (flatten)
                                            (("3"
                                              (rewrite "sqv_eq_0")
                                              nil
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil))
                              nil))
                            nil)
                           ("2" (expand "point_strictly_in?")
                            (("2" (expand "point_strictly_in?")
                              (("2"
                                (flatten)
                                (("2"
                                  (inst 3 "T")
                                  (("2"
                                    (hide -2)
                                    (("2"
                                      (rewrite "sqv_sym")
                                      (("2"
                                        (name-replace
                                         "SOT"
                                         "so + T * v")
                                        (("2"
                                          (case-replace
                                           "SOT - hmd_tangent_point[D](v) - SOT = - hmd_tangent_point[D](v)")
                                          (("1"
                                            (hide -1)
                                            (("1"
                                              (rewrite "sqv_neg")
                                              (("1"
                                                (rewrite
                                                 "sqv_hmd_tangent_point")
                                                (("1"
                                                  (expand "SOT")
                                                  (("1"
                                                    (case-replace
                                                     "so + T * v - si = s + T * v")
                                                    (("1"
                                                      (hide-all-but
                                                       (-2 1))
                                                      (("1"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide-all-but 1)
                                            (("2"
                                              (grind
                                               :exclude
                                               "hmd_tangent_point")
                                              nil
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Vector type-eq-decl nil vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (sq const-decl "nonneg_real" sq reals)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Lookahead type-eq-decl nil Lookahead nil)
    (point_strictly_in? def-decl "bool" shapes_2D shapes)
    (shapes_2D type-eq-decl nil shapes_2D shapes)
    (Shape2D type-decl nil Shape2D_adt shapes)
    (zero const-decl "Vector" vectors_2D vectors)
    (sqv_sym formula-decl nil vectors_2D vectors)
    (point_strictly_in_circle formula-decl nil circle_2D shapes)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_0 formula-decl nil vectors_2D vectors)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (sqv_hmd_tangent_point formula-decl nil horizontal nil)
    (add_cancel formula-decl nil vectors_2D vectors)
    (point_strictly_in? const-decl "bool" circular_segment_2D shapes)
    (nz_norm_gt_0 application-judgement "posreal" vectors_2D vectors)
    (nz_sqv_gt_0 application-judgement "posreal" vectors_2D vectors)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    (* const-decl "real" vectors_2D vectors)
    (^ const-decl "Normalized" vectors_2D vectors)
    (Normalized type-eq-decl nil vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (Nz_vector type-eq-decl nil vectors_2D vectors)
    (perpL const-decl "Vect2" perpendicular_2D vectors)
    (dot_add_left formula-decl nil vectors_2D vectors)
    (perpL_nz application-judgement "Nz_vect2" perpendicular_2D
     vectors)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (perpL_normalized_dot formula-decl nil perpendicular_2D vectors)
    (dot_comm formula-decl nil vectors_2D vectors)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (sqrt_sq formula-decl nil sqrt reals)
    (sqrt_pos application-judgement "posreal" sqrt reals)
    (sqrt_lt formula-decl nil sqrt reals)
    (norm_abs_perpL formula-decl nil vect2_more vectors)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (hmd_tangent_point const-decl "Nz_vect2" horizontal nil)
    (neg_nzv application-judgement "Nz_vector" vectors_2D vectors)
    (sqv_neg formula-decl nil vectors_2D vectors))
   nil))
 (cd2d_haz_completeness 0
  (cd2d_haz_completeness-4 nil 3826964995
   ("" (skeep)
    (("" (skoletin*)
      (("" (hide -2)
        (("" (flatten)
          (("" (expand "cd2d_hazard_zone" :assert? none)
            (("" (case "T = 0 OR v=zero")
              (("1" (replace -1)
                (("1" (replaces -3)
                  (("1" (expand "point_strictly_in?")
                    (("1" (expand "point_strictly_in?")
                      (("1" (rewrite "point_strictly_in_circle")
                        (("1" (rewrite "sqv_sym")
                          (("1" (replaces -3 :dir rl)
                            (("1" (skeep -2 :preds? t)
                              (("1"
                                (case-replace "v=zero")
                                (("1" (assert) nil nil)
                                 ("2"
                                  (assert)
                                  (("2"
                                    (case-replace "t=0")
                                    (("1" (assert) nil nil)
                                     ("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (replace 1)
                (("2" (flatten)
                  (("2" (beta)
                    (("2" (replaces -2)
                      (("2" (expand "point_strictly_in?")
                        (("2" (flatten)
                          (("2"
                            (lemma "cd2d_circular_segment_divergent")
                            (("2" (inst -1 "so" "si" "v")
                              (("2"
                                (beta)
                                (("2"
                                  (replaces -1)
                                  (("2"
                                    (expand "point_strictly_in?")
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (lemma "cd2d_rectangle_tcpa")
                                        (("2"
                                          (inst -1 "so" "si" "v" "T")
                                          (("1"
                                            (beta)
                                            (("1"
                                              (replaces -1)
                                              (("1"
                                                (expand
                                                 "point_strictly_in?")
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (hide 6)
                                                    (("1"
                                                      (lemma
                                                       "cd2d_circular_segment_convergent")
                                                      (("1"
                                                        (inst
                                                         -1
                                                         "so+T*v"
                                                         "si"
                                                         "v")
                                                        (("1"
                                                          (beta)
                                                          (("1"
                                                            (replaces
                                                             -1)
                                                            (("1"
                                                              (case-replace
                                                               "so + T * v - si = s+T*v")
                                                              (("1"
                                                                (replaces
                                                                 -3
                                                                 :dir
                                                                 rl)
                                                                (("1"
                                                                  (hide
                                                                   -1)
                                                                  (("1"
                                                                    (lemma
                                                                     "horizontal_omega_conflict[D,0,T]")
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "v"
                                                                       "s")
                                                                      (("1"
                                                                        (expand
                                                                         "conflict_2D?")
                                                                        (("1"
                                                                          (replaces
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "horizontal_omega")
                                                                            (("1"
                                                                              (case
                                                                               "sqv(s + tau_v2[D,0,T](s, v) * v) < sq(D)")
                                                                              (("1"
                                                                                (hide
                                                                                 -2)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "horizontal_tca_min")
                                                                                  (("1"
                                                                                    (inst?)
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "horizontal_sq_dtca_eq")
                                                                                      (("1"
                                                                                        (case-replace
                                                                                         "sqv((s) + horizontal_tca((s), v) * v) < sq(D)")
                                                                                        (("1"
                                                                                          (hide
                                                                                           -2)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "tau_v2")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "max")
                                                                                              (("1"
                                                                                                (case-replace
                                                                                                 "0 < horizontal_tca(s, v)")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "min")
                                                                                                  (("1"
                                                                                                    (case-replace
                                                                                                     "horizontal_tca(s, v) > T")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "horizontal_tca_nzv_gt_0")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "v"
                                                                                                           "s+T*v")
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             "horizontal_tca_linear")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (replace
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "horizontal_tca(s,v)=T")
                                                                                                          (("1"
                                                                                                            (hide
                                                                                                             (1
                                                                                                              5))
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -3)
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "horizontal_tca_dot_zero")
                                                                                                                (("1"
                                                                                                                  (inst?)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (replace
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "min")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "horizontal_tca_nzv_gt_0")
                                                                                                        (("2"
                                                                                                          (inst?
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (-2
                                                                  1))
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((cd2d_circular_segment_divergent formula-decl nil cd2d_shape nil)
    (cd2d_rectangle_tcpa formula-decl nil cd2d_shape nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (horizontal_omega_conflict formula-decl nil cd2d nil)
    (conflict_2D? const-decl "bool" cd2d nil)
    (horizontal_omega const-decl "nnreal" cd2d nil)
    (horizontal_tca const-decl "real" definitions nil)
    (horizontal_tca_nzv_gt_0 formula-decl nil definitions nil)
    (horizontal_tca_linear formula-decl nil definitions nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (horizontal_tca_dot_zero formula-decl nil definitions nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (horizontal_sq_dtca_eq formula-decl nil definitions nil)
    (horizontal_tca_min formula-decl nil definitions nil)
    (tau_v2 const-decl "Lookahead" cd2d nil)
    (v skolem-const-decl "Vector" cd2d_shape nil)
    (cd2d_circular_segment_convergent formula-decl nil cd2d_shape nil)
    (T skolem-const-decl "nnreal" cd2d_shape nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (/= const-decl "boolean" notequal nil)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (point_strictly_in_circle formula-decl nil circle_2D shapes)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (scal_0 formula-decl nil vectors_2D vectors)
    (sqv_sym formula-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Shape2D type-decl nil Shape2D_adt shapes)
    (list type-decl nil list_adt nil)
    (shapes_2D type-eq-decl nil shapes_2D shapes)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (Lookahead type-eq-decl nil Lookahead nil)
    (< const-decl "bool" reals nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (sq const-decl "nonneg_real" sq reals)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (D formal-const-decl "posreal" cd2d_shape nil)
    (point_strictly_in? def-decl "bool" shapes_2D shapes)
    (cd2d_hazard_zone const-decl "shapes_2D" cd2d_shape nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (- const-decl "Vector" vectors_2D vectors)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil))
   nil)
  (cd2d_haz_completeness-3 nil 3826639459
   ("" (skeep)
    (("" (skoletin*)
      (("" (hide -2)
        (("" (flatten)
          (("" (expand "cd2d_hazard_zone")
            (("" (case "T=0 OR v=zero")
              (("1" (replace -1)
                (("1" (replaces -3)
                  (("1" (expand "point_strictly_in?")
                    (("1" (expand "point_strictly_in?")
                      (("1" (rewrite "point_strictly_in_circle")
                        (("1" (rewrite "sqv_sym")
                          (("1" (replaces -3 :dir rl)
                            (("1" (skeep :preds? t)
                              (("1"
                                (split -3)
                                (("1"
                                  (case-replace "t=0")
                                  (("1" (assert) nil nil)
                                   ("2" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (replaces -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (replace 1)
                (("2" (flatten)
                  (("2" (replaces -2)
                    (("2" (expand "point_strictly_in?")
                      (("2" (lemma "cd2d_circular_segment_divergent")
                        (("2" (inst -1 "so" "si" "v")
                          (("2" (assert)
                            (("2" (flatten)
                              (("2"
                                (assert)
                                (("2"
                                  (hide -1)
                                  (("2"
                                    (hide 4)
                                    (("2"
                                      (expand "point_strictly_in?")
                                      (("2"
                                        (expand "point_strictly_in?")
                                        (("2"
                                          (expand "point_strictly_in?")
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (lemma "cd2d_rectangle")
                                              (("2"
                                                (insteep)
                                                (("2"
                                                  (beta)
                                                  (("2"
                                                    (replaces -1)
                                                    (("2"
                                                      (name-replace
                                                       "HMD"
                                                       "hmd_tangent_point[D](v)"
                                                       :hide?
                                                       nil)
                                                      (("2"
                                                        (case-replace
                                                         "so + HMD - so = HMD")
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (case-replace
                                                             "so - HMD - (so + HMD) = -2*HMD")
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (case-replace
                                                                 "so + T * v - HMD - (so + T * v) = -HMD")
                                                                (("1"
                                                                  (hide
                                                                   -1)
                                                                  (("1"
                                                                    (case-replace
                                                                     "so + T * v + HMD - (so + T * v - HMD) = 2*HMD")
                                                                    (("1"
                                                                      (hide
                                                                       -1)
                                                                      (("1"
                                                                        (rewrite
                                                                         "sqv_sym")
                                                                        (("1"
                                                                          (case-replace
                                                                           "si - (so + HMD) = -(s+HMD)")
                                                                          (("1"
                                                                            (hide
                                                                             -1)
                                                                            (("1"
                                                                              (case-replace
                                                                               "si - (so + T * v) = -(s+T*v)")
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (case-replace
                                                                                   "si - (so + T * v - HMD) = -(s + T*v - HMD)")
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (replaces
                                                                                       -3
                                                                                       :dir
                                                                                       rl)
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "sqv_neg")
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "sqv_neg")
                                                                                          (("1"
                                                                                            (case-replace
                                                                                             "sqv(HMD)=sq(D)")
                                                                                            (("1"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "cd2d[D,0,T]")
                                                                                                  (("1"
                                                                                                    (insteep)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "conflict_2D?")
                                                                                                      (("1"
                                                                                                        (replaces
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "cd2d?")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "sqv_sym")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "si"
                                                                                                                 "so")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "NOT so-si=s")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "HMD")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "hmd_tangent_point")
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "det(-(s + T * v - D * perpL(^(v))), 2 * (D * perpL(^(v)))) = -2*D * (s*v)/norm(v) + -2*D*T *norm(v)")
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (case
                                                                                                                                       "(s) * v >= 0")
                                                                                                                                      (("1"
                                                                                                                                        (lemma
                                                                                                                                         "dot_nneg_divergent_sqv")
                                                                                                                                        (("1"
                                                                                                                                          (inst?)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (lemma
                                                                                                                                               " omega_vv[D,0,T]")
                                                                                                                                              (("1"
                                                                                                                                                (inst?)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (case
                                                                                                                                                     "sqv(s)=sq(D)")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "omega_vv"
                                                                                                                                                       -6)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (case
                                                                                                                                                           "NOT horizontal_omega[D,0,T](s, v) - sq(D) < 0 ")
                                                                                                                                                          (("1"
                                                                                                                                                            (mult-by
                                                                                                                                                             1
                                                                                                                                                             "sqv(v)")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (lemma
                                                                                                                                                             "horizontal_omega_conflict[D,0,T]")
                                                                                                                                                            (("2"
                                                                                                                                                              (inst?)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (hide
                                                                                                                                                                   -2)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "conflict_2D?"
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (skeep)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -3
                                                                                                                                                                         "t")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (case
                                                                                                                                                                             "t=0")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               -1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (flip-ineq
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (hide
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (case
                                                                                                                                               "EXISTS (t: Lookahead[0, T]): sqv(s + t * v) < sq(D)")
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "sq_det_sqv_dta")
                                                                                                                                                (("1"
                                                                                                                                                  (inst?)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (skeep
                                                                                                                                                       -2)
                                                                                                                                                      (("1"
                                                                                                                                                        (lemma
                                                                                                                                                         " horizontal_tca_min")
                                                                                                                                                        (("1"
                                                                                                                                                          (lemma
                                                                                                                                                           " horizontal_sq_dtca_eq")
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             -2
                                                                                                                                                             "v"
                                                                                                                                                             "s"
                                                                                                                                                             "t")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -1
                                                                                                                                                               "v"
                                                                                                                                                               "s")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (case
                                                                                                                                                                   "NOT sq((s) * perpL(^(v))) < sq(D)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "sq_lt")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       -1
                                                                                                                                                                       "abs(s*perpL(^(v)))"
                                                                                                                                                                       "D")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (split
                                                                                                                                                                           3)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (hide
                                                                                                                                                                               -1
                                                                                                                                                                               -2
                                                                                                                                                                               -3
                                                                                                                                                                               -4
                                                                                                                                                                               -5)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (hide
                                                                                                                                                                                 2
                                                                                                                                                                                 3
                                                                                                                                                                                 4)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (grind)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (flip-ineq
                                                                                                                                                                             1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (case
                                                                                                                                                                               "sqv(s) <= sq(D)")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (lemma
                                                                                                                                                                                 "sqv_decreasing_before_horizontal_tca")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -1
                                                                                                                                                                                     "v"
                                                                                                                                                                                     "s")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -1
                                                                                                                                                                                       "0"
                                                                                                                                                                                       "T")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "horizontal_tca"
                                                                                                                                                                                           -1)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (split
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (case
                                                                                                                                                                                                     "NOT (-2 * ((s * v) * D)) - 2 * sqv(v) * D * T <0 ")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (mult-by
                                                                                                                                                                                                       1
                                                                                                                                                                                                       "1/norm(v)")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (case
                                                                                                                                                                                                           "sqv(v) * (1 / norm(v)) = norm(v)")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (replace
                                                                                                                                                                                                               -1
                                                                                                                                                                                                               1)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "norm"
                                                                                                                                                                                                               1)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (mult-by
                                                                                                                                                                                                         1
                                                                                                                                                                                                         "norm(v)")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                           "norm_eq_0")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (inst?)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (case
                                                                                                                                                                                                       "-s*v < sqv(v)*T")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (move-terms
                                                                                                                                                                                                         -1
                                                                                                                                                                                                         l
                                                                                                                                                                                                         2)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (div-by
                                                                                                                                                                                                             -1
                                                                                                                                                                                                             "2*D")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (case
                                                                                                                                                                                                                 " (-2 * ((s * v) * D)) / (2 * D) = -s*v")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                                                   1)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (grind)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (mult-by
                                                                                                                                                                                                 1
                                                                                                                                                                                                 "sqv(v)")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (lemma
                                                                                                                                                                                                   "sqv_eq_0")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -1
                                                                                                                                                                                                     "v")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("3"
                                                                                                                                                                                              (case
                                                                                                                                                                                               "-(s) * v = -(s * v)")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (mult-by
                                                                                                                                                                                                   1
                                                                                                                                                                                                   "sqv(v)")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                     "sqv_eq_0")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (inst?)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (grind)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (lemma
                                                                                                                                                                                   " sqv_decreasing_before_horizontal_tca")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -1
                                                                                                                                                                                     "v"
                                                                                                                                                                                     "s")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (case
                                                                                                                                                                                         "NOT sqv((s + T * v)) < sq(D)")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -1
                                                                                                                                                                                           "t"
                                                                                                                                                                                           "T")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (case
                                                                                                                                                                                               "T <= horizontal_tca(s, v)")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "horizontal_tca"
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (mult-by
                                                                                                                                                                                                     1
                                                                                                                                                                                                     "sqv(v)")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (case
                                                                                                                                                                                                         " -(s) * v =  -(s * v)")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (hide-all-but
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (grind)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (lemma
                                                                                                                                                                                                       "sqv_eq_0")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (inst?)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (flatten)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (case
                                                                                                                                                                                               "NOT -2 * ((s * v) * D)  - 2 * (sqv(v) * D * T) < 0")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (mult-by
                                                                                                                                                                                                 -13
                                                                                                                                                                                                 "norm(v)")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (case
                                                                                                                                                                                                     " NOT norm(v) * (-2 * ((s * v) * D) / norm(v)) = -2*(s*v)*D")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (replace
                                                                                                                                                                                                       -1)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "norm"
                                                                                                                                                                                                         -14)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (lemma
                                                                                                                                                                                                   "norm_eq_0")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (inst?)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (case
                                                                                                                                                                                                 "NOT -((s * v) * D) < (sqv(v) * D * T)")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (hide
                                                                                                                                                                                                   -2)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (div-by
                                                                                                                                                                                                     -1
                                                                                                                                                                                                     "D")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (case
                                                                                                                                                                                                         "NOT -((s * v) * D) / D = -(s)*v")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (hide-all-but
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (grind)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (replace
                                                                                                                                                                                                           -1
                                                                                                                                                                                                           -2)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (case
                                                                                                                                                 "sqv(s) <= sq(D)")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2
                                                                                                                                     3
                                                                                                                                     4
                                                                                                                                     5
                                                                                                                                     6)
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         "det_scal_right")
                                                                                                                                        (("2"
                                                                                                                                          (inst?)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (case
                                                                                                                                               "det(-(s + T * v - D * perpL(^(v))), (D * perpL(^(v)))) = -( D * (s * v) / norm(v) +  D * T * norm(v))")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (hide
                                                                                                                                                 2)
                                                                                                                                                (("2"
                                                                                                                                                  (lemma
                                                                                                                                                   "det_scal_left")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -1
                                                                                                                                                     "-1"
                                                                                                                                                     "(s + T * v - D * perpL(^(v)))"
                                                                                                                                                     "(D * perpL(^(v)))")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (case
                                                                                                                                                         "NOT -1 * (s + T * v - D * perpL(^(v)))=-(s + T * v - D * perpL(^(v)))")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (replace
                                                                                                                                                           -2
                                                                                                                                                           1)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (lemma
                                                                                                                                                               "det_sub_left")
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 -1
                                                                                                                                                                 "s + T * v"
                                                                                                                                                                 "D * perpL(^(v))"
                                                                                                                                                                 "(D * perpL(^(v)))")
                                                                                                                                                                (("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   -1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "det_add_left")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "det_scal_right")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           -1
                                                                                                                                                                           "D"
                                                                                                                                                                           "s+T*v"
                                                                                                                                                                           "perpL(^(v))")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (lemma
                                                                                                                                                                               "det_add_left")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -1
                                                                                                                                                                                 "s"
                                                                                                                                                                                 "T*v"
                                                                                                                                                                                 "perpL(^(v))")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -1
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "det_scal_left")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -1
                                                                                                                                                                                       "T"
                                                                                                                                                                                       "v"
                                                                                                                                                                                       "perpL(^(v))")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (lemma
                                                                                                                                                                                           "det_asym")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (inst-cp
                                                                                                                                                                                             -1
                                                                                                                                                                                             "s"
                                                                                                                                                                                             "perpL(^(v))")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -2
                                                                                                                                                                                               1)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -1
                                                                                                                                                                                                 "v"
                                                                                                                                                                                                 "perpL(^(v))")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (replace
                                                                                                                                                                                                   -1)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                     "dot_perpL")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (inst-cp
                                                                                                                                                                                                       -1
                                                                                                                                                                                                       "^(v)"
                                                                                                                                                                                                       "s")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (replace
                                                                                                                                                                                                         -2
                                                                                                                                                                                                         1
                                                                                                                                                                                                         rl)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           -1
                                                                                                                                                                                                           "^(v)"
                                                                                                                                                                                                           "v")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (replace
                                                                                                                                                                                                             -1
                                                                                                                                                                                                             1
                                                                                                                                                                                                             rl)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "^"
                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (case
                                                                                                                                                                                                                     " (v * v) * (1 / norm(v)) = norm(v)")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                       -1)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (case
                                                                                                                                                                                                                           "v*s=s*v")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                            (hide-all-but
                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (grind)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (case
                                                                                                                                                                                                                         "sqv(v)=v*v")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (replace
                                                                                                                                                                                                                           -1
                                                                                                                                                                                                                           1
                                                                                                                                                                                                                           rl)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "norm"
                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "sqv"
                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("3"
                                                                                                                                    (assert)
                                                                                                                                    (("3"
                                                                                                                                      (lemma
                                                                                                                                       "norm_eq_0")
                                                                                                                                      (("3"
                                                                                                                                        (inst?)
                                                                                                                                        (("3"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (replace
                                                                                               -1
                                                                                               1
                                                                                               rl)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "hmd_tangent_point"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (lemma
                                                                                                   "sqv_scal")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "D"
                                                                                                     "perpL(^(v))")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "sqv(perpL(^(v)))  = 1")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (lemma
                                                                                                             "sqv_normalize")
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "sqv_perpL")
                                                                                                                  (("2"
                                                                                                                    (inst?)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        1
                                                                                        4))
                                                                                      (("2"
                                                                                        (replaces
                                                                                         -1
                                                                                         :dir
                                                                                         rl)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "s"
                                                                                           1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 (-3
                                                                                  1))
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             (-3
                                                                              1))
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide-all-but
                                                                       (-3
                                                                        1))
                                                                      (("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               1)
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           1)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nz_nzv application-judgement "Nz_vector" vectors_2D vectors)
    (neg_nzv application-judgement "Nz_vector" vectors_2D vectors)
    (sqv_neg formula-decl nil vectors_2D vectors)
    (perpL_nz application-judgement "Nz_vect2" perpendicular_2D
     vectors)
    (det_scal_right formula-decl nil det_2D vectors)
    (det_eq_0 formula-decl nil det_2D vectors)
    (dot_perpL formula-decl nil det_2D vectors)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (det_asym formula-decl nil det_2D vectors)
    (det_add_left formula-decl nil det_2D vectors)
    (det_sub_left formula-decl nil det_2D vectors)
    (scal_neg_1 formula-decl nil vectors_2D vectors)
    (det_scal_left formula-decl nil det_2D vectors)
    (sq_det_sqv_dta formula-decl nil definitions nil)
    (horizontal_tca_min formula-decl nil definitions nil)
    (sq_lt formula-decl nil sq reals)
    (sq_abs formula-decl nil sq reals)
    (sqrt_sqv_sq formula-decl nil vectors_2D vectors)
    (sqv_decreasing_before_horizontal_tca formula-decl nil definitions
     nil)
    (norm_eq_0 formula-decl nil vectors_2D vectors)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (horizontal_tca const-decl "real" definitions nil)
    (horizontal_sq_dtca_eq formula-decl nil definitions nil)
    (dot_nneg_divergent_sqv formula-decl nil definitions nil)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    (scal_assoc formula-decl nil vectors_2D vectors)
    (omega_vv const-decl "real" cd2d nil)
    (horizontal_omega_conflict formula-decl nil cd2d nil)
    (horizontal_omega const-decl "nnreal" cd2d nil)
    (omega_vv_continuous application-judgement "continuous_vr_fun" cd2d
     nil)
    (omega_vv formula-decl nil cd2d nil)
    (* const-decl "real" vectors_2D vectors)
    (^ const-decl "Normalized" vectors_2D vectors)
    (Normalized type-eq-decl nil vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (Nz_vector type-eq-decl nil vectors_2D vectors)
    (perpL const-decl "Vect2" perpendicular_2D vectors)
    (det const-decl "real" det_2D vectors)
    (cd2d? const-decl "bool" cd2d nil)
    (conflict_2D? const-decl "bool" cd2d nil)
    (cd2d formula-decl nil cd2d nil)
    (sqv_normalize formula-decl nil vectors_2D vectors)
    (sqv_perpL formula-decl nil perpendicular_2D vectors)
    (sqv_scal formula-decl nil vectors_2D vectors)
    (nz_sqv_gt_0 application-judgement "posreal" vectors_2D vectors)
    (add_cancel formula-decl nil vectors_2D vectors)
    (hmd_tangent_point const-decl "Nz_vect2" horizontal nil)
    (point_strictly_in? const-decl "bool" circular_segment_2D shapes)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (point_strictly_in_circle formula-decl nil circle_2D shapes)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (scal_0 formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (sqv_sym formula-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (Shape2D type-decl nil Shape2D_adt shapes)
    (shapes_2D type-eq-decl nil shapes_2D shapes)
    (Lookahead type-eq-decl nil Lookahead nil)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (sq const-decl "nonneg_real" sq reals)
    (point_strictly_in? def-decl "bool" shapes_2D shapes)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (Vector type-eq-decl nil vectors_2D vectors))
   nil)
  (cd2d_haz_completeness-2 nil 3826639406
   ("" (skeep)
    (("" (skoletin*)
      (("" (hide -2)
        (("" (flatten)
          (("" (expand "cd2d_hazard_zone")
            (("" (case "T=0 OR v=zero")
              (("1" (replace -1)
                (("1" (replaces -3)
                  (("1" (expand "point_strictly_in?")
                    (("1" (expand "point_strictly_in?")
                      (("1" (rewrite "point_strictly_in_circle")
                        (("1" (rewrite "sqv_sym")
                          (("1" (replaces -3 :dir rl)
                            (("1" (skeep :preds? t)
                              (("1"
                                (split -3)
                                (("1"
                                  (case-replace "t=0")
                                  (("1" (assert) nil)
                                   ("2" (assert) nil)))
                                 ("2"
                                  (replaces -1)
                                  (("2"
                                    (assert)
                                    nil)))))))))))))))))))))
               ("2" (replace 1)
                (("2" (flatten)
                  (("2" (replaces -2)
                    (("2" (expand "point_strictly_in?")
                      (("2" (lemma "cd2d_circular_segment")
                        (("2" (inst -1 "so" "si" "v")
                          (("2" (assert)
                            (("2" (flatten)
                              (("2"
                                (assert)
                                (("2"
                                  (hide -1)
                                  (("2"
                                    (hide 4)
                                    (("2"
                                      (expand "point_strictly_in?")
                                      (("2"
                                        (expand "point_strictly_in?")
                                        (("2"
                                          (expand "point_strictly_in?")
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (lemma "cd2d_rectangle")
                                              (("2"
                                                (insteep)
                                                (("2"
                                                  (beta)
                                                  (("2"
                                                    (replaces -1)
                                                    (("2"
                                                      (name-replace
                                                       "HMD"
                                                       "hmd_tangent_point[D](v)"
                                                       :hide?
                                                       nil)
                                                      (("2"
                                                        (case-replace
                                                         "so + HMD - so = HMD")
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (case-replace
                                                             "so - HMD - (so + HMD) = -2*HMD")
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (case-replace
                                                                 "so + T * v - HMD - (so + T * v) = -HMD")
                                                                (("1"
                                                                  (hide
                                                                   -1)
                                                                  (("1"
                                                                    (case-replace
                                                                     "so + T * v + HMD - (so + T * v - HMD) = 2*HMD")
                                                                    (("1"
                                                                      (hide
                                                                       -1)
                                                                      (("1"
                                                                        (rewrite
                                                                         "sqv_sym")
                                                                        (("1"
                                                                          (case-replace
                                                                           "si - (so + HMD) = -(s+HMD)")
                                                                          (("1"
                                                                            (hide
                                                                             -1)
                                                                            (("1"
                                                                              (case-replace
                                                                               "si - (so + T * v) = -(s+T*v)")
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (case-replace
                                                                                   "si - (so + T * v - HMD) = -(s + T*v - HMD)")
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (replaces
                                                                                       -3
                                                                                       :dir
                                                                                       rl)
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "sqv_neg")
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "sqv_neg")
                                                                                          (("1"
                                                                                            (case-replace
                                                                                             "sqv(HMD)=sq(D)")
                                                                                            (("1"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "cd2d[D,0,T]")
                                                                                                  (("1"
                                                                                                    (insteep)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "conflict_2D?")
                                                                                                      (("1"
                                                                                                        (replaces
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "cd2d?")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "sqv_sym")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "si"
                                                                                                                 "so")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "NOT so-si=s")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "HMD")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "hmd_tangent_point")
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "det(-(s + T * v - D * perpL(^(v))), 2 * (D * perpL(^(v)))) = -2*D * (s*v)/norm(v) + -2*D*T *norm(v)")
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (case
                                                                                                                                       "(s) * v >= 0")
                                                                                                                                      (("1"
                                                                                                                                        (lemma
                                                                                                                                         "dot_nneg_divergent_sqv")
                                                                                                                                        (("1"
                                                                                                                                          (inst?)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (lemma
                                                                                                                                               " omega_vv[D,0,T]")
                                                                                                                                              (("1"
                                                                                                                                                (inst?)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (case
                                                                                                                                                     "sqv(s)=sq(D)")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "omega_vv"
                                                                                                                                                       -6)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil)))
                                                                                                                                                     ("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (case
                                                                                                                                                           "NOT horizontal_omega[D,0,T](s, v) - sq(D) < 0 ")
                                                                                                                                                          (("1"
                                                                                                                                                            (mult-by
                                                                                                                                                             1
                                                                                                                                                             "sqv(v)")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil)))
                                                                                                                                                           ("2"
                                                                                                                                                            (lemma
                                                                                                                                                             "horizontal_omega_conflict[D,0,T]")
                                                                                                                                                            (("2"
                                                                                                                                                              (inst?)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (hide
                                                                                                                                                                   -2)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "conflict_2D?"
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (skeep)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -3
                                                                                                                                                                         "t")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (case
                                                                                                                                                                             "t=0")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               -1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil)))
                                                                                                                                                                             ("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil)))))))))))))))))))))))))))))))))))))))
                                                                                                                                       ("2"
                                                                                                                                        (flip-ineq
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (hide
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (case
                                                                                                                                               "EXISTS (t: Lookahead[0, T]): sqv(s + t * v) < sq(D)")
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "sq_det_sqv_dta")
                                                                                                                                                (("1"
                                                                                                                                                  (inst?)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (skeep
                                                                                                                                                       -2)
                                                                                                                                                      (("1"
                                                                                                                                                        (lemma
                                                                                                                                                         " horizontal_tca_min")
                                                                                                                                                        (("1"
                                                                                                                                                          (lemma
                                                                                                                                                           " horizontal_sq_dtca_eq")
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             -2
                                                                                                                                                             "v"
                                                                                                                                                             "s"
                                                                                                                                                             "t")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -1
                                                                                                                                                               "v"
                                                                                                                                                               "s")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (case
                                                                                                                                                                   "NOT sq((s) * perpL(^(v))) < sq(D)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "sq_lt")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       -1
                                                                                                                                                                       "abs(s*perpL(^(v)))"
                                                                                                                                                                       "D")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (split
                                                                                                                                                                           3)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (hide
                                                                                                                                                                               -1
                                                                                                                                                                               -2
                                                                                                                                                                               -3
                                                                                                                                                                               -4
                                                                                                                                                                               -5)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (hide
                                                                                                                                                                                 2
                                                                                                                                                                                 3
                                                                                                                                                                                 4)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (grind)
                                                                                                                                                                                  nil)))))))
                                                                                                                                                                           ("2"
                                                                                                                                                                            (flip-ineq
                                                                                                                                                                             1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (case
                                                                                                                                                                               "sqv(s) <= sq(D)")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (lemma
                                                                                                                                                                                 "sqv_decreasing_before_horizontal_tca")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -1
                                                                                                                                                                                     "v"
                                                                                                                                                                                     "s")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -1
                                                                                                                                                                                       "0"
                                                                                                                                                                                       "T")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "horizontal_tca"
                                                                                                                                                                                           -1)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (split
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (case
                                                                                                                                                                                                     "NOT (-2 * ((s * v) * D)) - 2 * sqv(v) * D * T <0 ")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (mult-by
                                                                                                                                                                                                       1
                                                                                                                                                                                                       "1/norm(v)")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (case
                                                                                                                                                                                                           "sqv(v) * (1 / norm(v)) = norm(v)")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (replace
                                                                                                                                                                                                               -1
                                                                                                                                                                                                               1)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil)))))
                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "norm"
                                                                                                                                                                                                               1)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil)))))))))
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (mult-by
                                                                                                                                                                                                         1
                                                                                                                                                                                                         "norm(v)")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                           "norm_eq_0")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (inst?)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil)))))))))
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (case
                                                                                                                                                                                                       "-s*v < sqv(v)*T")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (move-terms
                                                                                                                                                                                                         -1
                                                                                                                                                                                                         l
                                                                                                                                                                                                         2)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (div-by
                                                                                                                                                                                                             -1
                                                                                                                                                                                                             "2*D")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (case
                                                                                                                                                                                                                 " (-2 * ((s * v) * D)) / (2 * D) = -s*v")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                                                   1)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (grind)
                                                                                                                                                                                                                    nil)))))))))))))))))))))))
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (mult-by
                                                                                                                                                                                                 1
                                                                                                                                                                                                 "sqv(v)")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (lemma
                                                                                                                                                                                                   "sqv_eq_0")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -1
                                                                                                                                                                                                     "v")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil)))))))))
                                                                                                                                                                                             ("3"
                                                                                                                                                                                              (case
                                                                                                                                                                                               "-(s) * v = -(s * v)")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (mult-by
                                                                                                                                                                                                   1
                                                                                                                                                                                                   "sqv(v)")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                     "sqv_eq_0")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (inst?)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil)))))))))
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (grind)
                                                                                                                                                                                                  nil)))))))))))))))))))
                                                                                                                                                                               ("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (lemma
                                                                                                                                                                                   " sqv_decreasing_before_horizontal_tca")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -1
                                                                                                                                                                                     "v"
                                                                                                                                                                                     "s")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (case
                                                                                                                                                                                         "NOT sqv((s + T * v)) < sq(D)")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -1
                                                                                                                                                                                           "t"
                                                                                                                                                                                           "T")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (case
                                                                                                                                                                                               "T <= horizontal_tca(s, v)")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "horizontal_tca"
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (mult-by
                                                                                                                                                                                                     1
                                                                                                                                                                                                     "sqv(v)")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (case
                                                                                                                                                                                                         " -(s) * v =  -(s * v)")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (hide-all-but
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (grind)
                                                                                                                                                                                                            nil)))))))
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (lemma
                                                                                                                                                                                                       "sqv_eq_0")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (inst?)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil)))))))))))))))))
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (flatten)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (case
                                                                                                                                                                                               "NOT -2 * ((s * v) * D)  - 2 * (sqv(v) * D * T) < 0")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (mult-by
                                                                                                                                                                                                 -13
                                                                                                                                                                                                 "norm(v)")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (case
                                                                                                                                                                                                     " NOT norm(v) * (-2 * ((s * v) * D) / norm(v)) = -2*(s*v)*D")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (replace
                                                                                                                                                                                                       -1)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "norm"
                                                                                                                                                                                                         -14)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil)))))))))
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (lemma
                                                                                                                                                                                                   "norm_eq_0")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (inst?)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil)))))))
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (case
                                                                                                                                                                                                 "NOT -((s * v) * D) < (sqv(v) * D * T)")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (hide
                                                                                                                                                                                                   -2)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (div-by
                                                                                                                                                                                                     -1
                                                                                                                                                                                                     "D")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (case
                                                                                                                                                                                                         "NOT -((s * v) * D) / D = -(s)*v")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (hide-all-but
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (grind)
                                                                                                                                                                                                            nil)))
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (replace
                                                                                                                                                                                                           -1
                                                                                                                                                                                                           -2)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                                                                                                               ("2"
                                                                                                                                                (case
                                                                                                                                                 "sqv(s) <= sq(D)")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil)))))))))))))))
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2
                                                                                                                                     3
                                                                                                                                     4
                                                                                                                                     5
                                                                                                                                     6)
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         "det_scal_right")
                                                                                                                                        (("2"
                                                                                                                                          (inst?)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (case
                                                                                                                                               "det(-(s + T * v - D * perpL(^(v))), (D * perpL(^(v)))) = -( D * (s * v) / norm(v) +  D * T * norm(v))")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (hide
                                                                                                                                                 2)
                                                                                                                                                (("2"
                                                                                                                                                  (lemma
                                                                                                                                                   "det_scal_left")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -1
                                                                                                                                                     "-1"
                                                                                                                                                     "(s + T * v - D * perpL(^(v)))"
                                                                                                                                                     "(D * perpL(^(v)))")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (case
                                                                                                                                                         "NOT -1 * (s + T * v - D * perpL(^(v)))=-(s + T * v - D * perpL(^(v)))")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (replace
                                                                                                                                                           -2
                                                                                                                                                           1)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (lemma
                                                                                                                                                               "det_sub_left")
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 -1
                                                                                                                                                                 "s + T * v"
                                                                                                                                                                 "D * perpL(^(v))"
                                                                                                                                                                 "(D * perpL(^(v)))")
                                                                                                                                                                (("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   -1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "det_add_left")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "det_scal_right")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           -1
                                                                                                                                                                           "D"
                                                                                                                                                                           "s+T*v"
                                                                                                                                                                           "perpL(^(v))")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (lemma
                                                                                                                                                                               "det_add_left")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -1
                                                                                                                                                                                 "s"
                                                                                                                                                                                 "T*v"
                                                                                                                                                                                 "perpL(^(v))")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -1
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "det_scal_left")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -1
                                                                                                                                                                                       "T"
                                                                                                                                                                                       "v"
                                                                                                                                                                                       "perpL(^(v))")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (lemma
                                                                                                                                                                                           "det_asym")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (inst-cp
                                                                                                                                                                                             -1
                                                                                                                                                                                             "s"
                                                                                                                                                                                             "perpL(^(v))")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -2
                                                                                                                                                                                               1)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -1
                                                                                                                                                                                                 "v"
                                                                                                                                                                                                 "perpL(^(v))")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (replace
                                                                                                                                                                                                   -1)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                     "dot_perpL")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (inst-cp
                                                                                                                                                                                                       -1
                                                                                                                                                                                                       "^(v)"
                                                                                                                                                                                                       "s")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (replace
                                                                                                                                                                                                         -2
                                                                                                                                                                                                         1
                                                                                                                                                                                                         rl)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           -1
                                                                                                                                                                                                           "^(v)"
                                                                                                                                                                                                           "v")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (replace
                                                                                                                                                                                                             -1
                                                                                                                                                                                                             1
                                                                                                                                                                                                             rl)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "^"
                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (case
                                                                                                                                                                                                                     " (v * v) * (1 / norm(v)) = norm(v)")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                       -1)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (case
                                                                                                                                                                                                                           "v*s=s*v")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                            (hide-all-but
                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (grind)
                                                                                                                                                                                                                              nil)))))))))
                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (case
                                                                                                                                                                                                                         "sqv(v)=v*v")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (replace
                                                                                                                                                                                                                           -1
                                                                                                                                                                                                                           1
                                                                                                                                                                                                                           rl)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "norm"
                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              nil)))))
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "sqv"
                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                                              nil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                                                                                                                                   ("3"
                                                                                                                                    (assert)
                                                                                                                                    (("3"
                                                                                                                                      (lemma
                                                                                                                                       "norm_eq_0")
                                                                                                                                      (("3"
                                                                                                                                        (inst?)
                                                                                                                                        (("3"
                                                                                                                                          (assert)
                                                                                                                                          nil)))))))))))))))))))))))))))))))))))))))))))))
                                                                                             ("2"
                                                                                              (replace
                                                                                               -1
                                                                                               1
                                                                                               rl)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "hmd_tangent_point"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (lemma
                                                                                                   "sqv_scal")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "D"
                                                                                                     "perpL(^(v))")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "sqv(perpL(^(v)))  = 1")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (lemma
                                                                                                             "sqv_normalize")
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "sqv_perpL")
                                                                                                                  (("2"
                                                                                                                    (inst?)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil)))))))))))))))))))))))))))))))))))
                                                                                   ("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        1
                                                                                        4))
                                                                                      (("2"
                                                                                        (replaces
                                                                                         -1
                                                                                         :dir
                                                                                         rl)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "s"
                                                                                           1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (grind)
                                                                                              nil)))))))))))))))
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 (-3
                                                                                  1))
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil)))))))
                                                                           ("2"
                                                                            (hide-all-but
                                                                             (-3
                                                                              1))
                                                                            (("2"
                                                                              (grind)
                                                                              nil)))))))))
                                                                     ("2"
                                                                      (hide-all-but
                                                                       (-3
                                                                        1))
                                                                      (("2"
                                                                        (grind)
                                                                        nil)))))))
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (grind)
                                                                    nil)))))))
                                                             ("2"
                                                              (hide-all-but
                                                               1)
                                                              (("2"
                                                                (grind)
                                                                nil)))))))
                                                         ("2"
                                                          (hide-all-but
                                                           1)
                                                          (("2"
                                                            (assert)
                                                            nil))))))))))))))))))))))))))))))))))))))))))))))))))))))))
    nil)
   nil nil)
  (cd2d_haz_completeness-1 nil 3825443835
   ("" (skeep)
    (("" (skoletin*)
      (("" (hide -2)
        (("" (flatten)
          (("" (expand "cd2d_hazard_zone")
            (("" (case "T=0 OR v=zero")
              (("1" (replace -1)
                (("1" (replaces -3)
                  (("1" (expand "point_strictly_in?")
                    (("1" (expand "point_strictly_in?")
                      (("1" (rewrite "point_strictly_in_circle")
                        (("1" (rewrite "sqv_sym")
                          (("1" (replaces -3 :dir rl)
                            (("1" (skeep :preds? t)
                              (("1"
                                (split -3)
                                (("1"
                                  (case-replace "t=0")
                                  (("1" (assert) nil nil)
                                   ("2" (assert) nil nil))
                                  nil)
                                 ("2"
                                  (replaces -1)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (replace 1)
                (("2" (flatten)
                  (("2" (replaces -2)
                    (("2" (expand "point_strictly_in?")
                      (("2" (lemma "cd2d_circular_segment")
                        (("2" (inst -1 "so" "si" "v" "D")
                          (("2" (assert)
                            (("2" (flatten)
                              (("2"
                                (assert)
                                (("2"
                                  (hide -1)
                                  (("2"
                                    (hide 4)
                                    (("2"
                                      (expand "point_strictly_in?")
                                      (("2"
                                        (expand "point_strictly_in?")
                                        (("2"
                                          (expand "point_strictly_in?")
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (lemma "cd2d_rectangle")
                                              (("2"
                                                (insteep)
                                                (("2"
                                                  (beta)
                                                  (("2"
                                                    (replaces -1)
                                                    (("2"
                                                      (name-replace
                                                       "HMD"
                                                       "hmd_tangent_point[D](v)"
                                                       :hide?
                                                       nil)
                                                      (("2"
                                                        (case-replace
                                                         "so + HMD - so = HMD")
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (case-replace
                                                             "so - HMD - (so + HMD) = -2*HMD")
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (case-replace
                                                                 "so + T * v - HMD - (so + T * v) = -HMD")
                                                                (("1"
                                                                  (hide
                                                                   -1)
                                                                  (("1"
                                                                    (case-replace
                                                                     "so + T * v + HMD - (so + T * v - HMD) = 2*HMD")
                                                                    (("1"
                                                                      (hide
                                                                       -1)
                                                                      (("1"
                                                                        (rewrite
                                                                         "sqv_sym")
                                                                        (("1"
                                                                          (case-replace
                                                                           "si - (so + HMD) = -(s+HMD)")
                                                                          (("1"
                                                                            (hide
                                                                             -1)
                                                                            (("1"
                                                                              (case-replace
                                                                               "si - (so + T * v) = -(s+T*v)")
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (case-replace
                                                                                   "si - (so + T * v - HMD) = -(s + T*v - HMD)")
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("1"
                                                                                      (replaces
                                                                                       -3
                                                                                       :dir
                                                                                       rl)
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "sqv_neg")
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "sqv_neg")
                                                                                          (("1"
                                                                                            (case-replace
                                                                                             "sqv(HMD)=sq(D)")
                                                                                            (("1"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "cd2d[D,0,T]")
                                                                                                  (("1"
                                                                                                    (insteep)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "conflict_2D?")
                                                                                                      (("1"
                                                                                                        (replaces
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "cd2d?")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "sqv_sym")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "si"
                                                                                                                 "so")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "NOT so-si=s")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "HMD")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "hmd_tangent_point")
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "det(-(s + T * v - D * perpL(^(v))), 2 * (D * perpL(^(v)))) = -2*D * (s*v)/norm(v) + -2*D*T *norm(v)")
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (case
                                                                                                                                       "(s) * v >= 0")
                                                                                                                                      (("1"
                                                                                                                                        (lemma
                                                                                                                                         "dot_nneg_divergent_sqv")
                                                                                                                                        (("1"
                                                                                                                                          (inst?)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (lemma
                                                                                                                                               " omega_vv[D,0,T]")
                                                                                                                                              (("1"
                                                                                                                                                (inst?)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (case
                                                                                                                                                     "sqv(s)=sq(D)")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "omega_vv"
                                                                                                                                                       -6)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (case
                                                                                                                                                           "NOT horizontal_omega[D,0,T](s, v) - sq(D) < 0 ")
                                                                                                                                                          (("1"
                                                                                                                                                            (mult-by
                                                                                                                                                             1
                                                                                                                                                             "sqv(v)")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (lemma
                                                                                                                                                             "horizontal_omega_conflict[D,0,T]")
                                                                                                                                                            (("2"
                                                                                                                                                              (inst?)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (hide
                                                                                                                                                                   -2)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "conflict_2D?"
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (skeep)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -3
                                                                                                                                                                         "t")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (case
                                                                                                                                                                             "t=0")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               -1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (flip-ineq
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (hide
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (case
                                                                                                                                               "EXISTS (t: Lookahead[0, T]): sqv(s + t * v) < sq(D)")
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "sq_det_sqv_dta")
                                                                                                                                                (("1"
                                                                                                                                                  (inst?)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (skeep
                                                                                                                                                       -2)
                                                                                                                                                      (("1"
                                                                                                                                                        (lemma
                                                                                                                                                         " horizontal_tca_min")
                                                                                                                                                        (("1"
                                                                                                                                                          (lemma
                                                                                                                                                           " horizontal_sq_dtca_eq")
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             -2
                                                                                                                                                             "v"
                                                                                                                                                             "s"
                                                                                                                                                             "t")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -1
                                                                                                                                                               "v"
                                                                                                                                                               "s")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (case
                                                                                                                                                                   "NOT sq((s) * perpL(^(v))) < sq(D)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "sq_lt")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       -1
                                                                                                                                                                       "abs(s*perpL(^(v)))"
                                                                                                                                                                       "D")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (split
                                                                                                                                                                           3)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (hide
                                                                                                                                                                               -1
                                                                                                                                                                               -2
                                                                                                                                                                               -3
                                                                                                                                                                               -4
                                                                                                                                                                               -5)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (hide
                                                                                                                                                                                 2
                                                                                                                                                                                 3
                                                                                                                                                                                 4)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (grind)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (flip-ineq
                                                                                                                                                                             1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (case
                                                                                                                                                                               "sqv(s) <= sq(D)")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (lemma
                                                                                                                                                                                 "sqv_decreasing_before_horizontal_tca")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -1
                                                                                                                                                                                     "v"
                                                                                                                                                                                     "s")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -1
                                                                                                                                                                                       "0"
                                                                                                                                                                                       "T")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "horizontal_tca"
                                                                                                                                                                                           -1)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (split
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (case
                                                                                                                                                                                                     "NOT (-2 * ((s * v) * D)) - 2 * sqv(v) * D * T <0 ")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (mult-by
                                                                                                                                                                                                       1
                                                                                                                                                                                                       "1/norm(v)")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (case
                                                                                                                                                                                                           "sqv(v) * (1 / norm(v)) = norm(v)")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (replace
                                                                                                                                                                                                               -1
                                                                                                                                                                                                               1)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "norm"
                                                                                                                                                                                                               1)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (mult-by
                                                                                                                                                                                                         1
                                                                                                                                                                                                         "norm(v)")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                           "norm_eq_0")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (inst?)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (case
                                                                                                                                                                                                       "-s*v < sqv(v)*T")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (move-terms
                                                                                                                                                                                                         -1
                                                                                                                                                                                                         l
                                                                                                                                                                                                         2)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (div-by
                                                                                                                                                                                                             -1
                                                                                                                                                                                                             "2*D")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (case
                                                                                                                                                                                                                 " (-2 * ((s * v) * D)) / (2 * D) = -s*v")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                                                   1)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (grind)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (mult-by
                                                                                                                                                                                                 1
                                                                                                                                                                                                 "sqv(v)")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (lemma
                                                                                                                                                                                                   "sqv_eq_0")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -1
                                                                                                                                                                                                     "v")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("3"
                                                                                                                                                                                              (case
                                                                                                                                                                                               "-(s) * v = -(s * v)")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (mult-by
                                                                                                                                                                                                   1
                                                                                                                                                                                                   "sqv(v)")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                     "sqv_eq_0")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (inst?)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (grind)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (lemma
                                                                                                                                                                                   " sqv_decreasing_before_horizontal_tca")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -1
                                                                                                                                                                                     "v"
                                                                                                                                                                                     "s")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (case
                                                                                                                                                                                         "NOT sqv((s + T * v)) < sq(D)")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -1
                                                                                                                                                                                           "t"
                                                                                                                                                                                           "T")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (case
                                                                                                                                                                                               "T <= horizontal_tca(s, v)")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "horizontal_tca"
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (mult-by
                                                                                                                                                                                                     1
                                                                                                                                                                                                     "sqv(v)")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (case
                                                                                                                                                                                                         " -(s) * v =  -(s * v)")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (hide-all-but
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (grind)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (lemma
                                                                                                                                                                                                       "sqv_eq_0")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (inst?)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (flatten)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (case
                                                                                                                                                                                               "NOT -2 * ((s * v) * D)  - 2 * (sqv(v) * D * T) < 0")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (mult-by
                                                                                                                                                                                                 -13
                                                                                                                                                                                                 "norm(v)")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (case
                                                                                                                                                                                                     " NOT norm(v) * (-2 * ((s * v) * D) / norm(v)) = -2*(s*v)*D")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (replace
                                                                                                                                                                                                       -1)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "norm"
                                                                                                                                                                                                         -14)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (lemma
                                                                                                                                                                                                   "norm_eq_0")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (inst?)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (case
                                                                                                                                                                                                 "NOT -((s * v) * D) < (sqv(v) * D * T)")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (hide
                                                                                                                                                                                                   -2)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (div-by
                                                                                                                                                                                                     -1
                                                                                                                                                                                                     "D")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (case
                                                                                                                                                                                                         "NOT -((s * v) * D) / D = -(s)*v")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (hide-all-but
                                                                                                                                                                                                           1)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (grind)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (replace
                                                                                                                                                                                                           -1
                                                                                                                                                                                                           -2)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (case
                                                                                                                                                 "sqv(s) <= sq(D)")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide
                                                                                                                                     2
                                                                                                                                     3
                                                                                                                                     4
                                                                                                                                     5
                                                                                                                                     6)
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         "det_scal_right")
                                                                                                                                        (("2"
                                                                                                                                          (inst?)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (case
                                                                                                                                               "det(-(s + T * v - D * perpL(^(v))), (D * perpL(^(v)))) = -( D * (s * v) / norm(v) +  D * T * norm(v))")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (hide
                                                                                                                                                 2)
                                                                                                                                                (("2"
                                                                                                                                                  (lemma
                                                                                                                                                   "det_scal_left")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -1
                                                                                                                                                     "-1"
                                                                                                                                                     "(s + T * v - D * perpL(^(v)))"
                                                                                                                                                     "(D * perpL(^(v)))")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (case
                                                                                                                                                         "NOT -1 * (s + T * v - D * perpL(^(v)))=-(s + T * v - D * perpL(^(v)))")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (replace
                                                                                                                                                           -2
                                                                                                                                                           1)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (lemma
                                                                                                                                                               "det_sub_left")
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 -1
                                                                                                                                                                 "s + T * v"
                                                                                                                                                                 "D * perpL(^(v))"
                                                                                                                                                                 "(D * perpL(^(v)))")
                                                                                                                                                                (("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   -1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "det_add_left")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "det_scal_right")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           -1
                                                                                                                                                                           "D"
                                                                                                                                                                           "s+T*v"
                                                                                                                                                                           "perpL(^(v))")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (lemma
                                                                                                                                                                               "det_add_left")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -1
                                                                                                                                                                                 "s"
                                                                                                                                                                                 "T*v"
                                                                                                                                                                                 "perpL(^(v))")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -1
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "det_scal_left")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -1
                                                                                                                                                                                       "T"
                                                                                                                                                                                       "v"
                                                                                                                                                                                       "perpL(^(v))")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (lemma
                                                                                                                                                                                           "det_asym")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (inst-cp
                                                                                                                                                                                             -1
                                                                                                                                                                                             "s"
                                                                                                                                                                                             "perpL(^(v))")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -2
                                                                                                                                                                                               1)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -1
                                                                                                                                                                                                 "v"
                                                                                                                                                                                                 "perpL(^(v))")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (replace
                                                                                                                                                                                                   -1)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                     "dot_perpL")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (inst-cp
                                                                                                                                                                                                       -1
                                                                                                                                                                                                       "^(v)"
                                                                                                                                                                                                       "s")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (replace
                                                                                                                                                                                                         -2
                                                                                                                                                                                                         1
                                                                                                                                                                                                         rl)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           -1
                                                                                                                                                                                                           "^(v)"
                                                                                                                                                                                                           "v")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (replace
                                                                                                                                                                                                             -1
                                                                                                                                                                                                             1
                                                                                                                                                                                                             rl)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "^"
                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (case
                                                                                                                                                                                                                     " (v * v) * (1 / norm(v)) = norm(v)")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                       -1)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (case
                                                                                                                                                                                                                           "v*s=s*v")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                            (hide-all-but
                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (grind)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (case
                                                                                                                                                                                                                         "sqv(v)=v*v")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (replace
                                                                                                                                                                                                                           -1
                                                                                                                                                                                                                           1
                                                                                                                                                                                                                           rl)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "norm"
                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "sqv"
                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("3"
                                                                                                                                    (assert)
                                                                                                                                    (("3"
                                                                                                                                      (lemma
                                                                                                                                       "norm_eq_0")
                                                                                                                                      (("3"
                                                                                                                                        (inst?)
                                                                                                                                        (("3"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (replace
                                                                                               -1
                                                                                               1
                                                                                               rl)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "hmd_tangent_point"
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (lemma
                                                                                                   "sqv_scal")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "D"
                                                                                                     "perpL(^(v))")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "sqv(perpL(^(v)))  = 1")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (lemma
                                                                                                             "sqv_normalize")
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "sqv_perpL")
                                                                                                                  (("2"
                                                                                                                    (inst?)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        1
                                                                                        4))
                                                                                      (("2"
                                                                                        (replaces
                                                                                         -1
                                                                                         :dir
                                                                                         rl)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "s"
                                                                                           1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide-all-but
                                                                                 (-3
                                                                                  1))
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             (-3
                                                                              1))
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide-all-but
                                                                       (-3
                                                                        1))
                                                                      (("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               1)
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           1)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Vector type-eq-decl nil vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (point_strictly_in? def-decl "bool" shapes_2D shapes)
    (sq const-decl "nonneg_real" sq reals)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (Lookahead type-eq-decl nil Lookahead nil)
    (shapes_2D type-eq-decl nil shapes_2D shapes)
    (Shape2D type-decl nil Shape2D_adt shapes)
    (zero const-decl "Vector" vectors_2D vectors)
    (sqv_sym formula-decl nil vectors_2D vectors)
    (scal_zero formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (scal_0 formula-decl nil vectors_2D vectors)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (point_strictly_in_circle formula-decl nil circle_2D shapes)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (point_strictly_in? const-decl "bool" circular_segment_2D shapes)
    (hmd_tangent_point const-decl "Nz_vect2" horizontal nil)
    (add_cancel formula-decl nil vectors_2D vectors)
    (nz_sqv_gt_0 application-judgement "posreal" vectors_2D vectors)
    (sqv_scal formula-decl nil vectors_2D vectors)
    (sqv_perpL formula-decl nil perpendicular_2D vectors)
    (sqv_normalize formula-decl nil vectors_2D vectors)
    (cd2d formula-decl nil cd2d nil)
    (conflict_2D? const-decl "bool" cd2d nil)
    (cd2d? const-decl "bool" cd2d nil)
    (det const-decl "real" det_2D vectors)
    (perpL const-decl "Vect2" perpendicular_2D vectors)
    (Nz_vector type-eq-decl nil vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (Normalized type-eq-decl nil vectors_2D vectors)
    (^ const-decl "Normalized" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors)
    (omega_vv formula-decl nil cd2d nil)
    (omega_vv_continuous application-judgement "continuous_vr_fun" cd2d
     nil)
    (horizontal_omega const-decl "nnreal" cd2d nil)
    (horizontal_omega_conflict formula-decl nil cd2d nil)
    (omega_vv const-decl "real" cd2d nil)
    (scal_assoc formula-decl nil vectors_2D vectors)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    (dot_nneg_divergent_sqv formula-decl nil definitions nil)
    (horizontal_sq_dtca_eq formula-decl nil definitions nil)
    (horizontal_tca const-decl "real" definitions nil)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (norm_eq_0 formula-decl nil vectors_2D vectors)
    (sqv_decreasing_before_horizontal_tca formula-decl nil definitions
     nil)
    (sqrt_sqv_sq formula-decl nil vectors_2D vectors)
    (sq_abs formula-decl nil sq reals)
    (sq_lt formula-decl nil sq reals)
    (horizontal_tca_min formula-decl nil definitions nil)
    (sq_det_sqv_dta formula-decl nil definitions nil)
    (det_scal_left formula-decl nil det_2D vectors)
    (scal_neg_1 formula-decl nil vectors_2D vectors)
    (det_sub_left formula-decl nil det_2D vectors)
    (det_add_left formula-decl nil det_2D vectors)
    (det_asym formula-decl nil det_2D vectors)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (dot_perpL formula-decl nil det_2D vectors)
    (det_eq_0 formula-decl nil det_2D vectors)
    (det_scal_right formula-decl nil det_2D vectors)
    (perpL_nz application-judgement "Nz_vect2" perpendicular_2D
     vectors)
    (sqv_neg formula-decl nil vectors_2D vectors)
    (neg_nzv application-judgement "Nz_vector" vectors_2D vectors)
    (nz_nzv application-judgement "Nz_vector" vectors_2D vectors))
   nil))
 (cd2d_haz_correctness 0
  (cd2d_haz_correctness-1 nil 3823375582
   ("" (skeep)
    (("" (beta)
      (("" (lemma "cd2d_haz_soundness")
        (("" (insteep)
          (("" (beta)
            (("" (lemma "cd2d_haz_completeness")
              (("" (insteep)
                (("" (beta)
                  (("" (split 1)
                    (("1" (propax) nil nil) ("2" (propax) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((shapes_2D type-eq-decl nil shapes_2D shapes)
    (Shape2D type-decl nil Shape2D_adt shapes)
    (Vect2 type-eq-decl nil vectors_2D_def vectors))
   shostak)))

