(cd2d_shape
 (cd2d_rectangle_TCC1 0
  (cd2d_rectangle_TCC1-1 nil 3823716967
   ("" (skeep)
    (("" (replaces (-3 -4))
      (("" (case-replace "-vD = vD")
        (("1" (hide-all-but (-1 -3))
          (("1" (lemma "neg_eq_zero")
            (("1" (inst?) (("1" (assert) nil nil)) nil)) nil))
          nil)
         ("2" (hide-all-but (-4 1))
          (("2" (decompose-equality)
            (("1" (grind) nil nil) ("2" (grind) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((TRUE const-decl "bool" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil) nil
    (+ const-decl "Vector" vectors_2D vectors)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    (neg_eq_zero formula-decl nil vectors_2D vectors)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (/= const-decl "boolean" notequal nil) nil
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil)
    (neg_nzv application-judgement "Nz_vector" vectors_2D vectors))
   nil
   (cd2d_rectangle subtype "cd2d_shape.B"
    "{B: vectors_2D_def.Vect2 | B /= cd2d_shape.A}")))
 (cd2d_rectangle 0
  (cd2d_rectangle-1 nil 3823723331
   ("" (skeep)
    (("" (beta)
      (("" (name-replace "HMD" "hmd_tangent_point[D](v)" :hide? nil)
        (("" (name-replace "h" "-norm(T*v)" :hide? nil)
          (("" (expand "mk_rectangle")
            (("" (expand "point_strictly_in_rectangle?")
              (("" (case-replace "so-HMD-(so+HMD) = -2*HMD")
                (("1" (hide -1)
                  (("1" (rewrite "perpR_scal")
                    (("1" (rewrite "normalize_scal")
                      (("1" (expand "sign")
                        (("1" (case-replace "^(perpR(HMD)) = ^(v)")
                          (("1" (hide -1)
                            (("1"
                              (case-replace "h * (-1 * ^(v)) = T*v")
                              (("1"
                                (hide -1)
                                (("1"
                                  (hide -1)
                                  (("1"
                                    (case-replace
                                     "so + HMD + T * v - (so + HMD) = T*v")
                                    (("1"
                                      (hide -1)
                                      (("1"
                                        (rewrite "sqv_scal")
                                        (("1"
                                          (case-replace
                                           "sqv(HMD)=sq(D)")
                                          (("1"
                                            (hide -1)
                                            (("1"
                                              (case-replace
                                               "si - (so + HMD) = (si-so)-HMD")
                                              (("1"
                                                (hide -1)
                                                (("1"
                                                  (case-replace
                                                   "si-so = -(so-si)")
                                                  (("1"
                                                    (hide -1)
                                                    (("1"
                                                      (name-replace
                                                       "s"
                                                       "so-si")
                                                      (("1"
                                                        (case-replace
                                                         "(-s - HMD) * (-2 * HMD) = 2*(HMD*s + HMD*HMD)")
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (rewrite
                                                             "sqv"
                                                             :dir
                                                             rl)
                                                            (("1"
                                                              (replaces
                                                               -1
                                                               :dir
                                                               rl)
                                                              (("1"
                                                                (rewrite
                                                                 "sqv_hmd_tangent_point")
                                                                (("1"
                                                                  (expand
                                                                   "hmd_tangent_point"
                                                                   :assert?
                                                                   none)
                                                                  (("1"
                                                                    (eval-expr
                                                                     "sq(-2)")
                                                                    (("1"
                                                                      (replaces
                                                                       -1)
                                                                      (("1"
                                                                        (rewrite
                                                                         "sqv_scal")
                                                                        (("1"
                                                                          (case-replace
                                                                           "(-s - D * perpL(^(v))) * (T * v) = T*(-s*v - D * (perpL(^(v))*v))")
                                                                          (("1"
                                                                            (hide
                                                                             -1)
                                                                            (("1"
                                                                              (rewrite
                                                                               "perpL_normalized_dot")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (split
                                                                                   1)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (split
                                                                                       1)
                                                                                      (("1"
                                                                                        (hide
                                                                                         (-3
                                                                                          -4))
                                                                                        (("1"
                                                                                          (factor
                                                                                           -1)
                                                                                          (("1"
                                                                                            (div-by
                                                                                             -1
                                                                                             "2")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (move-terms
                                                                                                 -1
                                                                                                 r
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (move-terms
                                                                                                     -2
                                                                                                     l
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (div-by
                                                                                                         -2
                                                                                                         "2")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "sq"
                                                                                                           -)
                                                                                                          (("1"
                                                                                                            (real-props)
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "dot_comm")
                                                                                                              (("1"
                                                                                                                (div-by
                                                                                                                 -1
                                                                                                                 "D")
                                                                                                                (("1"
                                                                                                                  (case-replace
                                                                                                                   "-1 * (D * D) / D = -D")
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "abs_lt")
                                                                                                                      (("1"
                                                                                                                        (inst?)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         (-1
                                                                                          -2))
                                                                                        (("2"
                                                                                          (div-by
                                                                                           -1
                                                                                           "T")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (hide
                                                                                         (-1
                                                                                          -2))
                                                                                        (("3"
                                                                                          (expand
                                                                                           "sq"
                                                                                           -2)
                                                                                          (("3"
                                                                                            (div-by
                                                                                             -2
                                                                                             "T")
                                                                                            (("3"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (rewrite
                                                                                       "dot_comm"
                                                                                       -1)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "abs_lt")
                                                                                        (("2"
                                                                                          (inst?
                                                                                           -1)
                                                                                          (("2"
                                                                                            (replaces
                                                                                             -1)
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (split)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "sq")
                                                                                                  (("1"
                                                                                                    (hide-all-but
                                                                                                     (-1
                                                                                                      1))
                                                                                                    (("1"
                                                                                                      (name-replace
                                                                                                       "PS"
                                                                                                       "perpL(^(v)) * s")
                                                                                                      (("1"
                                                                                                        (factor
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (div-by
                                                                                                           1
                                                                                                           "D")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   (-2
                                                                                                    1))
                                                                                                  (("2"
                                                                                                    (name-replace
                                                                                                     "PS"
                                                                                                     "perpL(^(v)) * s")
                                                                                                    (("2"
                                                                                                      (move-terms
                                                                                                       1
                                                                                                       l
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "sq")
                                                                                                          (("2"
                                                                                                            (mult-by
                                                                                                             -1
                                                                                                             "2*D")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (mult-by
                                                                                                   -3
                                                                                                   "T")
                                                                                                  (("3"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("4"
                                                                                                  (mult-by
                                                                                                   -4
                                                                                                   "T")
                                                                                                  (("4"
                                                                                                    (expand
                                                                                                     "sq")
                                                                                                    (("4"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (name-replace
                                                                               "PP"
                                                                               "perpL(^(v))")
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           1)
                                                          (("2"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide-all-but 1)
                                                    (("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but 1)
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide-all-but (-1 1))
                                            (("2"
                                              (replaces -1 :dir rl)
                                              (("2"
                                                (rewrite
                                                 "sqv_hmd_tangent_point")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide-all-but 1)
                                      (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (hide-all-but (-1 1 4))
                                (("2"
                                  (replaces -1 :dir rl)
                                  (("2"
                                    (rewrite "scal_assoc")
                                    (("2"
                                      (grind-reals)
                                      (("2"
                                        (rewrite "norm_scal")
                                        (("2"
                                          (expand "abs")
                                          (("2"
                                            (lemma "scal_assoc")
                                            (("2"
                                              (inst
                                               -1
                                               "T"
                                               "norm(v)"
                                               "^(v)")
                                              (("2"
                                                (replaces -1 :dir rl)
                                                (("2"
                                                  (rewrite
                                                   "normalized_id")
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide-all-but (-2 1))
                            (("2" (replaces -1 :dir rl)
                              (("2"
                                (rewrite "perpR_hmd_tangent_point")
                                (("2"
                                  (rewrite "normalize_scal")
                                  (("2"
                                    (expand "sign")
                                    (("2"
                                      (rewrite "normalize_normalize")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide-all-but 1) (("2" (grind) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (nnreal type-eq-decl nil real_types nil)
    (norm const-decl "nnreal" vectors_2D vectors)
    (* const-decl "Vector" vectors_2D vectors)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (nz_sqv_gt_0 application-judgement "posreal" vectors_2D vectors)
    (nz_norm_gt_0 application-judgement "posreal" vectors_2D vectors)
    (point_strictly_in_rectangle? const-decl "bool" rectangle_2D
     shapes)
    (perpR const-decl "Vect2" perpendicular_2D vectors)
    (Nz_vector type-eq-decl nil vectors_2D vectors)
    (normalize_scal formula-decl nil vectors_2D vectors)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (^ const-decl "Normalized" vectors_2D vectors)
    (Normalized type-eq-decl nil vectors_2D vectors)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (sq const-decl "nonneg_real" sq reals)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (TRUE const-decl "bool" booleans nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (perpL const-decl "Vect2" perpendicular_2D vectors)
    (perpL_normalized_dot formula-decl nil perpendicular_2D vectors)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (nnrat_div_posrat_is_nnrat application-judgement "nonneg_rat"
     rationals nil)
    (nzreal_times_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (dot_comm formula-decl nil vectors_2D vectors)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (abs_lt formula-decl nil abs_lems reals)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (times_div_cancel2 formula-decl nil extra_real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (both_sides_times_pos_lt1 formula-decl nil real_props nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (< const-decl "bool" reals nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (times_div_cancel1 formula-decl nil extra_real_props nil)
    (both_sides_div_pos_lt1 formula-decl nil real_props nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (perpL_nz application-judgement "Nz_vect2" perpendicular_2D
     vectors)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (sqv_hmd_tangent_point formula-decl nil horizontal nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (* const-decl "real" vectors_2D vectors)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (sqv_scal formula-decl nil vectors_2D vectors)
    (neg_times_neg formula-decl nil real_props nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (normalized_id formula-decl nil vectors_2D vectors)
    (nonzero_abs_is_pos application-judgement "{y: posreal | y >= x}"
     real_defs nil)
    (norm_scal formula-decl nil vectors_2D vectors)
    (scal_assoc formula-decl nil vectors_2D vectors)
    (normalize_normalize formula-decl nil vectors_2D vectors)
    (scal_1 formula-decl nil vectors_2D vectors)
    (perpR_hmd_tangent_point formula-decl nil horizontal nil)
    (sign const-decl "Sign" sign reals)
    (perpR_nz application-judgement "Nz_vect2" perpendicular_2D
     vectors)
    (perpR_scal formula-decl nil perpendicular_2D vectors)
    (nz_nzv application-judgement "Nz_vector" vectors_2D vectors)
    (minus_even_is_even application-judgement "even_int" integers nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (mk_rectangle const-decl "Rectangle_2D" rectangle_2D shapes)
    (hmd_tangent_point const-decl "Nz_vect2" horizontal nil)
    (D formal-const-decl "posreal" cd2d_shape nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (/= const-decl "boolean" notequal nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil))
   nil))
 (cd2d_hazard_zone_TCC1 0
  (cd2d_hazard_zone_TCC1-1 nil 3823282632 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (/= const-decl "boolean" notequal nil))
   nil (cd2d_hazard_zone subtype "cd2d_shape.v" "Nz_vect2")))
 (cd2d_haz_soundness 0
  (cd2d_haz_soundness-1 nil 3825442015
   ("" (skeep)
    (("" (skoletin*)
      (("" (hide -2)
        (("" (flatten)
          (("" (expand "cd2d_hazard_zone")
            (("" (case "T=0")
              (("1" (assert)
                (("1" (replaces -4)
                  (("1" (inst 1 "0") (("1" (grind) nil nil)) nil))
                  nil))
                nil)
               ("2" (case "v = zero")
                (("1" (replace -1)
                  (("1" (inst 2 "0") (("1" (grind) nil nil)) nil)) nil)
                 ("2" (assert)
                  (("2" (replaces -2)
                    (("2" (expand "point_strictly_in?")
                      (("2" (split -1)
                        (("1" (expand "point_strictly_in?")
                          (("1" (inst 3 "0")
                            (("1" (assert)
                              (("1"
                                (flatten)
                                (("1"
                                  (rewrite "sqv_sym")
                                  (("1"
                                    (rewrite "sqv_hmd_tangent_point")
                                    (("1" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "point_strictly_in?")
                          (("2" (split -1)
                            (("1" (lemma "cd2d_rectangle")
                              (("1"
                                (inst?)
                                (("1"
                                  (inst -1 "so" "si")
                                  (("1"
                                    (beta)
                                    (("1"
                                      (replaces -1)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (replaces -4 :dir rl)
                                          (("1"
                                            (inst 3 "(-s*v)/sqv(v)")
                                            (("1"
                                              (lemma "norm_abs_perpL")
                                              (("1"
                                                (inst
                                                 -1
                                                 "s + (-s * v) / sqv(v) * v"
                                                 "v")
                                                (("1"
                                                  (split -1)
                                                  (("1"
                                                    (rewrite
                                                     "dot_add_left")
                                                    (("1"
                                                      (case-replace
                                                       "(v * perpL(^(v))) = 0")
                                                      (("1"
                                                        (hide -1)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (both-sides-f
                                                             3
                                                             "sqrt")
                                                            (("1"
                                                              (rewrite
                                                               "norm"
                                                               :dir
                                                               rl)
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (rewrite
                                                               "sqrt_lt")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide-all-but
                                                         1)
                                                        (("2"
                                                          (rewrite
                                                           "dot_comm")
                                                          (("2"
                                                            (rewrite
                                                             "perpL_normalized_dot")
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide-all-but 1)
                                                    (("2"
                                                      (rewrite
                                                       "dot_add_left")
                                                      (("2"
                                                        (rewrite
                                                         "sqv"
                                                         :dir
                                                         rl)
                                                        (("2"
                                                          (real-props)
                                                          (("2"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (split 1)
                                              (("1"
                                                (cross-mult 1)
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (cross-mult 1)
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (flatten)
                                              (("3"
                                                (rewrite "sqv_eq_0")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "point_strictly_in?")
                              (("2"
                                (expand "point_strictly_in?")
                                (("2"
                                  (flatten)
                                  (("2"
                                    (inst 3 "T")
                                    (("2"
                                      (hide -2)
                                      (("2"
                                        (rewrite "sqv_sym")
                                        (("2"
                                          (name-replace
                                           "SOT"
                                           "so + T * v")
                                          (("2"
                                            (case-replace
                                             "SOT - hmd_tangent_point[D](v) - SOT = - hmd_tangent_point[D](v)")
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (rewrite "sqv_neg")
                                                (("1"
                                                  (rewrite
                                                   "sqv_hmd_tangent_point")
                                                  (("1"
                                                    (expand "SOT")
                                                    (("1"
                                                      (case-replace
                                                       "so + T * v - si = s + T * v")
                                                      (("1"
                                                        (hide-all-but
                                                         (-2 1))
                                                        (("1"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide-all-but 1)
                                              (("2"
                                                (grind
                                                 :exclude
                                                 "hmd_tangent_point")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((TRUE const-decl "bool" booleans nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (bijective? const-decl "bool" functions nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (= const-decl "[T, T -> boolean]" equalities nil) nil
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (cd2d_hazard_zone const-decl "shapes_2D" cd2d_shape nil)
    (D formal-const-decl "posreal" cd2d_shape nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (sq const-decl "nonneg_real" sq reals)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (* const-decl "Vector" vectors_2D vectors)
    (+ const-decl "Vector" vectors_2D vectors)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (< const-decl "bool" reals nil)
    (Lookahead type-eq-decl nil Lookahead nil)
    (<= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (point_strictly_in? def-decl "bool" shapes_2D shapes)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (shapes_2D type-eq-decl nil shapes_2D shapes)
    (list type-decl nil list_adt nil)
    (Shape2D type-decl nil Shape2D_adt shapes)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (* const-decl "real" vectors_2D vectors)
    (mk_circle const-decl "Circle_2D" circle_2D shapes)
    (point_strictly_in_circle? const-decl "bool" circle_2D shapes)
    (posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_real_is_real application-judgement "real" reals nil) nil
    (sqv_neg formula-decl nil vectors_2D vectors)
    (neg_nzv application-judgement "Nz_vector" vectors_2D vectors)
    (hmd_tangent_point const-decl "Nz_vect2" horizontal nil)
    (cd2d_rectangle formula-decl nil cd2d_shape nil)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (div_mult_pos_ge1 formula-decl nil real_props nil)
    (div_mult_pos_le1 formula-decl nil real_props nil)
    (norm_abs_perpL formula-decl nil vect2_more vectors)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (sqrt_lt formula-decl nil sqrt reals)
    (sqrt_pos application-judgement "posreal" sqrt reals)
    (sqrt_sq formula-decl nil sqrt reals)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (dot_comm formula-decl nil vectors_2D vectors)
    (perpL_normalized_dot formula-decl nil perpendicular_2D vectors)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (perpL_nz application-judgement "Nz_vect2" perpendicular_2D
     vectors)
    (dot_add_left formula-decl nil vectors_2D vectors)
    (perpL const-decl "Vect2" perpendicular_2D vectors)
    (Nz_vector type-eq-decl nil vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (Normalized type-eq-decl nil vectors_2D vectors)
    (^ const-decl "Normalized" vectors_2D vectors)
    (div_cancel2 formula-decl nil real_props nil) nil nil nil
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil) nil
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    (nz_sqv_gt_0 application-judgement "posreal" vectors_2D vectors)
    (nz_norm_gt_0 application-judgement "posreal" vectors_2D vectors)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (point_strictly_in? const-decl "bool" circular_segment_2D shapes)
    (scal_0 formula-decl nil vectors_2D vectors)
    (add_zero_right formula-decl nil vectors_2D vectors)
    (add_cancel formula-decl nil vectors_2D vectors)
    (sqv_sym formula-decl nil vectors_2D vectors)
    (sqv_hmd_tangent_point formula-decl nil horizontal nil)
    (/= const-decl "boolean" notequal nil)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (comp_zero_x formula-decl nil vectors_2D vectors)
    (comp_zero_y formula-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors))
   nil))
 (cd2d_haz_completeness 0
  (cd2d_haz_completeness-1 nil 3825443835
   ("" (skeep)
    (("" (beta)
      (("" (flatten)
        (("" (expand "cd2d_hazard_zone")
          (("" (case "T=0")
            (("1" (assert) (("1" (grind) nil nil)) nil)
             ("2" (replace 1)
              (("2" (case "vo - vi = zero")
                (("1" (replace -1)
                  (("1" (hide -1) (("1" (grind) nil nil)) nil)) nil)
                 ("2" (replace 1)
                  (("2" (rotate++)
                    (("2" (rotate++)
                      (("2" (expand "point_strictly_in?")
                        (("2" (flatten)
                          (("2" (expand "point_strictly_in?" 2)
                            (("2" (flatten)
                              (("2"
                                (expand "point_strictly_in?" 3)
                                (("2"
                                  (name-replace
                                   "vD"
                                   "hmd_tangent_point[D](vo - vi)"
                                   :hide?
                                   nil)
                                  (("2"
                                    (name-replace
                                     "A"
                                     "so + vD"
                                     :hide?
                                     nil)
                                    (("2"
                                      (name-replace
                                       "B"
                                       "so - vD"
                                       :hide?
                                       nil)
                                      (("2"
                                        (name-replace
                                         "vT"
                                         "T * (vo - vi)"
                                         :hide?
                                         nil)
                                        (("2"
                                          (name-replace
                                           "C"
                                           "so + vT - vD"
                                           :hide?
                                           nil)
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (skeep)
                                              (("2"
                                                (typepred "t")
                                                (("2"
                                                  (expand
                                                   "point_strictly_in?")
                                                  (("2"
                                                    (name "s" "so-si")
                                                    (("2"
                                                      (replace -1)
                                                      (("2"
                                                        (name
                                                         "v"
                                                         "vo-vi")
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (case
                                                             "NOT si-so = -s")
                                                            (("1"
                                                              (replace
                                                               -2
                                                               1
                                                               rl)
                                                              (("1"
                                                                (hide-all-but
                                                                 1)
                                                                (("1"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (replace
                                                                 -1)
                                                                (("2"
                                                                  (case
                                                                   "NOT A - so = vD")
                                                                  (("1"
                                                                    (expand
                                                                     "hmd_tangent_point"
                                                                     -10)
                                                                    (("1"
                                                                      (replace
                                                                       -10
                                                                       1
                                                                       rl)
                                                                      (("1"
                                                                        (replace
                                                                         -9
                                                                         1
                                                                         rl)
                                                                        (("1"
                                                                          (replace
                                                                           -10
                                                                           1)
                                                                          (("1"
                                                                            (replace
                                                                             -10
                                                                             1
                                                                             rl)
                                                                            (("1"
                                                                              (hide-all-but
                                                                               1)
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (lemma
                                                                       "cd2d_rectangle")
                                                                      (("2"
                                                                        (inst?)
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "so"
                                                                           "si")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (replace
                                                                               -4
                                                                               1)
                                                                              (("2"
                                                                                (case
                                                                                 "NOT B-A = -2*vD")
                                                                                (("1"
                                                                                  (replace
                                                                                   -9
                                                                                   1
                                                                                   rl)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -10
                                                                                     1
                                                                                     rl)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "hmd_tangent_point"
                                                                                       -11)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -11
                                                                                         1
                                                                                         rl)
                                                                                        (("1"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("1"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "hmd_tangent_point"
                                                                                     -12)
                                                                                    (("2"
                                                                                      (case
                                                                                       "NOT sqv(si - (so + vT)) = sqv(s +T*v)")
                                                                                      (("1"
                                                                                        (hide
                                                                                         2
                                                                                         3
                                                                                         4
                                                                                         5
                                                                                         6)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -9
                                                                                           1
                                                                                           rl)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -5
                                                                                             1
                                                                                             rl)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "sqv_sym")
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (hide-all-but
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -9
                                                                                             4
                                                                                             rl)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (case
                                                                                                 "NOT  so + vT + vD - (so + vT - vD) = 2*vD")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -13
                                                                                                   1
                                                                                                   rl)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -10
                                                                                                     1
                                                                                                     rl)
                                                                                                    (("1"
                                                                                                      (hide-all-but
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (case
                                                                                                     "NOT si - (so + vT - vD) = -s - vT + vD")
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -14
                                                                                                       1
                                                                                                       rl)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -11
                                                                                                         1
                                                                                                         rl)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -5
                                                                                                           1
                                                                                                           rl)
                                                                                                          (("1"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "NOT si-A = -s - vD")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -14
                                                                                                           1
                                                                                                           rl)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -15
                                                                                                             1
                                                                                                             rl)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -8
                                                                                                               1
                                                                                                               rl)
                                                                                                              (("1"
                                                                                                                (hide-all-but
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             3)
                                                                                                            (("2"
                                                                                                              (case
                                                                                                               "NOT abs(s * perpL(^(v))) < D")
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 2
                                                                                                                 3
                                                                                                                 4)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "NOT abs((so - si) * perpL(^((vo - vi)))) < D ")
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     2)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (lemma
                                                                                                                         "schwarz")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "so - si + t * (vo - vi)"
                                                                                                                           "perpL(^((vo - vi)))")
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "((so - si + t * (vo - vi)) * perpL(^((vo - vi)))) = (so - si) * perpL(^((vo - vi)))")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -1
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (case
                                                                                                                                   " norm(perpL(^((vo - vi)))) = 1")
                                                                                                                                  (("1"
                                                                                                                                    (case
                                                                                                                                     " norm(so - si + t * (vo - vi)) < D")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (expand
                                                                                                                                       "norm"
                                                                                                                                       1)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         "sqrt_lt  ")
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -1
                                                                                                                                           "sqv(so - si + t * (vo - vi))"
                                                                                                                                           "sq(D)")
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (lemma
                                                                                                                                     "norm_perpL")
                                                                                                                                    (("2"
                                                                                                                                      (inst?)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (hide
                                                                                                                               -)
                                                                                                                              (("2"
                                                                                                                                (hide
                                                                                                                                 2
                                                                                                                                 3
                                                                                                                                 4
                                                                                                                                 5
                                                                                                                                 6
                                                                                                                                 7)
                                                                                                                                (("2"
                                                                                                                                  (lemma
                                                                                                                                   "dot_add_left")
                                                                                                                                  (("2"
                                                                                                                                    (inst?)
                                                                                                                                    (("2"
                                                                                                                                      (replace
                                                                                                                                       -1
                                                                                                                                       1)
                                                                                                                                      (("2"
                                                                                                                                        (grind)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (replace
                                                                                                                     -10
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (case
                                                                                                                   "-s*v <= 0 ")
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     3)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "sqv_sym")
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -3
                                                                                                                         -4
                                                                                                                         -5
                                                                                                                         -6
                                                                                                                         -7
                                                                                                                         -8
                                                                                                                         -9)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (case
                                                                                                                               "sqv(vD) = sq(D)")
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (case
                                                                                                                                     "sqv(s) <= sqv(s+t*v)")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (flatten)
                                                                                                                                        (("1"
                                                                                                                                          (lemma
                                                                                                                                           "det_scal_right")
                                                                                                                                          (("1"
                                                                                                                                            (inst?)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "det_sub_left")
                                                                                                                                                (("1"
                                                                                                                                                  (hide
                                                                                                                                                   -2)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst?)
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (lemma
                                                                                                                                                         "det_eq_0 ")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst?)
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (lemma
                                                                                                                                                                 "det_asym")
                                                                                                                                                                (("1"
                                                                                                                                                                  (hide
                                                                                                                                                                   -2)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (hide
                                                                                                                                                                     -2)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst?)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replace
                                                                                                                                                                         -1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (replace
                                                                                                                                                                           -15
                                                                                                                                                                           -16
                                                                                                                                                                           rl)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -15
                                                                                                                                                                             1
                                                                                                                                                                             rl)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (lemma
                                                                                                                                                                               "det_scal_left")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (inst?)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "dot_perpL")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (hide
                                                                                                                                                                                       -2)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -1
                                                                                                                                                                                         "^(v)"
                                                                                                                                                                                         "-s")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (case
                                                                                                                                                                                           "NOT -(^(v) * -s) = det(perpL(^(v)), -s)")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -1
                                                                                                                                                                                             -18
                                                                                                                                                                                             rl)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -1
                                                                                                                                                                                               1
                                                                                                                                                                                               rl)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "^"
                                                                                                                                                                                                   -18)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                     "dot_comm")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (inst
                                                                                                                                                                                                       -1
                                                                                                                                                                                                       "-s"
                                                                                                                                                                                                       "v")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (replace
                                                                                                                                                                                                             -1
                                                                                                                                                                                                             -8
                                                                                                                                                                                                             lr)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (mult-by
                                                                                                                                                                                                               -19
                                                                                                                                                                                                               "norm(v)")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (case
                                                                                                                                                                                                                   "NOT  -2 * (norm(v) * -(D * -((1 / norm(v)) * (v * -s)))) = -2 * (-s*v)*D")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                                                     1)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (grind)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                     -1)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (div-by
                                                                                                                                                                                                                         -20
                                                                                                                                                                                                                         "D")
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (lemma
                                                                                                                                                                                                                 "norm_eq_0")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (inst?)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (hide
                                                                                                                                         2)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "sqv"
                                                                                                                                           1)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (case
                                                                                                                                               "NOT  (s + t * v) * (s + t * v) = s*s + 2*t*s*v + t*t*v*v")
                                                                                                                                              (("1"
                                                                                                                                                (hide-all-but
                                                                                                                                                 1)
                                                                                                                                                (("1"
                                                                                                                                                  (grind)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (replace
                                                                                                                                                 -1
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (case
                                                                                                                                                   "0 <=  2 * t * s * v + t * t * v * v")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (hide
                                                                                                                                                     2)
                                                                                                                                                    (("2"
                                                                                                                                                      (case
                                                                                                                                                       "0 <= 2 * t * s * v")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "v*v*t*t >0")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (typepred
                                                                                                                                                             "sqv(t*v)")
                                                                                                                                                            (("2"
                                                                                                                                                              (lemma
                                                                                                                                                               "sqv_scal")
                                                                                                                                                              (("2"
                                                                                                                                                                (inst?)
                                                                                                                                                                (("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   -1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "sqv_eq_0")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       -1
                                                                                                                                                                       "v")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (typepred
                                                                                                                                                                           "sq(t)")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (case
                                                                                                                                                                             "sq(t)>0")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "sq"
                                                                                                                                                                                 -4)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "sqv"
                                                                                                                                                                                   -4)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (lemma
                                                                                                                                                                               "sq_eq_0")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst?)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (div-by
                                                                                                                                                           1
                                                                                                                                                           "2")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (div-by
                                                                                                                                                               1
                                                                                                                                                               "t")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "dot_scal_left")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -1
                                                                                                                                                                     "-1"
                                                                                                                                                                     "s"
                                                                                                                                                                     "v")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (replace
                                                                                                                                 -12
                                                                                                                                 1
                                                                                                                                 rl)
                                                                                                                                (("2"
                                                                                                                                  (lemma
                                                                                                                                   "sqv_scal")
                                                                                                                                  (("2"
                                                                                                                                    (inst?)
                                                                                                                                    (("2"
                                                                                                                                      (replace
                                                                                                                                       -1
                                                                                                                                       1)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         "sqv_perpL")
                                                                                                                                        (("2"
                                                                                                                                          (inst?)
                                                                                                                                          (("2"
                                                                                                                                            (lemma
                                                                                                                                             "sqv_normalize")
                                                                                                                                            (("2"
                                                                                                                                              (inst?)
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       3)
                                                                                                                      (("2"
                                                                                                                        (case
                                                                                                                         "sqv(s + T * v) < sqv(vD)")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "det_scal_right")
                                                                                                                              (("1"
                                                                                                                                (inst?)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (hide
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "det_add_left")
                                                                                                                                      (("1"
                                                                                                                                        (inst?)
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (lemma
                                                                                                                                             "det_eq_0 ")
                                                                                                                                            (("1"
                                                                                                                                              (inst?)
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "det_sub_left")
                                                                                                                                                  (("1"
                                                                                                                                                    (inst?)
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -18)
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           -18
                                                                                                                                                           -22
                                                                                                                                                           rl)
                                                                                                                                                          (("1"
                                                                                                                                                            (lemma
                                                                                                                                                             "det_scal_left")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst?)
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (replace
                                                                                                                                                                   -22
                                                                                                                                                                   -23
                                                                                                                                                                   rl)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "det_scal_right")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -1
                                                                                                                                                                       "D"
                                                                                                                                                                       "v"
                                                                                                                                                                       "perpL(^(v))")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replace
                                                                                                                                                                         -1
                                                                                                                                                                         -24)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (case
                                                                                                                                                                             "NOT 1/norm(v)*v = (^(v))")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "^"
                                                                                                                                                                               1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (mult-by
                                                                                                                                                                               -1
                                                                                                                                                                               "norm(v)")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (case
                                                                                                                                                                                 "(det(v, perpL(^(v)))) = norm(v) * det(^(v),perpL((^(v))))")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "det_asym")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -1
                                                                                                                                                                                       "^(v)"
                                                                                                                                                                                       "perpL((^(v)))")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -1
                                                                                                                                                                                         -26)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (lemma
                                                                                                                                                                                           "det_perpL_nsqv")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -1
                                                                                                                                                                                             "^(v)")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -1
                                                                                                                                                                                               -27)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (lemma
                                                                                                                                                                                                   "sqv_normalize")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -1
                                                                                                                                                                                                     "v")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (replace
                                                                                                                                                                                                       -1)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                           "det_scal_right")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             -1
                                                                                                                                                                                                             "D"
                                                                                                                                                                                                             "-s"
                                                                                                                                                                                                             "perpL(^(v))")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (replace
                                                                                                                                                                                                               -1
                                                                                                                                                                                                               -29)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (hide
                                                                                                                                                                                                                   -1
                                                                                                                                                                                                                   -2
                                                                                                                                                                                                                   -3
                                                                                                                                                                                                                   -4
                                                                                                                                                                                                                   -5
                                                                                                                                                                                                                   -6)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (case
                                                                                                                                                                                                                     "NOT (2 *  det(-s, perpL(^(v))) - 2 * (norm(v)  * T) < 0)")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (div-by
                                                                                                                                                                                                                       -23
                                                                                                                                                                                                                       "D")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (hide-all-but
                                                                                                                                                                                                                           (-23
                                                                                                                                                                                                                            1
                                                                                                                                                                                                                            6))
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (grind-reals)
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                      (hide
                                                                                                                                                                                                                       -24)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (case
                                                                                                                                                                                                                         "NOT det(-s, perpL(^(v))) -  (norm(v) * T) < 0 ")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (div-by
                                                                                                                                                                                                                           -1
                                                                                                                                                                                                                           "2")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (hide
                                                                                                                                                                                                                           -2)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (lemma
                                                                                                                                                                                                                             "det_scal_left")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (inst
                                                                                                                                                                                                                               -1
                                                                                                                                                                                                                               "-1"
                                                                                                                                                                                                                               "s"
                                                                                                                                                                                                                               "perpL(^(v))")
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                                   -1
                                                                                                                                                                                                                                   -2)
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (hide
                                                                                                                                                                                                                                     -1)
                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                      (lemma
                                                                                                                                                                                                                                       "det_asym")
                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                                         -1
                                                                                                                                                                                                                                         "s"
                                                                                                                                                                                                                                         "perpL(^(v))")
                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                          (replace
                                                                                                                                                                                                                                           -1
                                                                                                                                                                                                                                           -2)
                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                            (lemma
                                                                                                                                                                                                                                             "dot_perpL")
                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                              (inst
                                                                                                                                                                                                                                               -1
                                                                                                                                                                                                                                               "^(v)"
                                                                                                                                                                                                                                               "s")
                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                                                 -1
                                                                                                                                                                                                                                                 -3
                                                                                                                                                                                                                                                 rl)
                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                   "^"
                                                                                                                                                                                                                                                   -3)
                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                      (case
                                                                                                                                                                                                                                                       "NOT -1 * (norm(v)*norm(v) * T) -  (v * s) < 0")
                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                          (div-by
                                                                                                                                                                                                                                                           1
                                                                                                                                                                                                                                                           "norm(v)")
                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                                                            (lemma
                                                                                                                                                                                                                                                             "norm_eq_0")
                                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                                              (inst?)
                                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                                                         "norm"
                                                                                                                                                                                                                                                         -1)
                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                                            (case
                                                                                                                                                                                                                                                             "-s*v = -1 *  (v*s)")
                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                                                              nil)
                                                                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                                                                              (hide
                                                                                                                                                                                                                                                               -)
                                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                                (hide
                                                                                                                                                                                                                                                                 2
                                                                                                                                                                                                                                                                 3
                                                                                                                                                                                                                                                                 4
                                                                                                                                                                                                                                                                 5
                                                                                                                                                                                                                                                                 6)
                                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                                  (grind)
                                                                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "^"
                                                                                                                                                                                   1
                                                                                                                                                                                   2)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "det_scal_left")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -1
                                                                                                                                                                                       "1/norm(v)"
                                                                                                                                                                                       "v"
                                                                                                                                                                                       "perpL((^(v)))")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -1
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("3"
                                                                                                                                                                              (lemma
                                                                                                                                                                               "norm_eq_0")
                                                                                                                                                                              (("3"
                                                                                                                                                                                (inst?)
                                                                                                                                                                                (("3"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (case
                                                                                                                             "NOT sqv(vD) = sq(D)")
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -17
                                                                                                                               1
                                                                                                                               rl)
                                                                                                                              (("1"
                                                                                                                                (lemma
                                                                                                                                 "sqv_scal")
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "D"
                                                                                                                                   "perpL(^(v))")
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -1
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "sqv_normalize")
                                                                                                                                      (("1"
                                                                                                                                        (lemma
                                                                                                                                         "sqv_perpL")
                                                                                                                                        (("1"
                                                                                                                                          (inst?)
                                                                                                                                          (("1"
                                                                                                                                            (inst?)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (replace
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (hide
                                                                                                                                 -3
                                                                                                                                 -4
                                                                                                                                 -5
                                                                                                                                 -6
                                                                                                                                 -7
                                                                                                                                 -8)
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "NOT FORALL(r:real): sqv(s  + r*v) = sqv(s) + r*(2*s*v + r*sqv(v))")
                                                                                                                                  (("1"
                                                                                                                                    (skeep)
                                                                                                                                    (("1"
                                                                                                                                      (hide-all-but
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (grind)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (inst-cp
                                                                                                                                     -1
                                                                                                                                     "t")
                                                                                                                                    (("2"
                                                                                                                                      (inst-cp
                                                                                                                                       -1
                                                                                                                                       "T")
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -2)
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -3)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (case
                                                                                                                                               "sqv(s) + 2 * ((s * v) * T) + sqv(v) * T * T <= sqv(s) + 2 * ((s * v) * t) + sqv(v) * t * t")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (hide
                                                                                                                                                 2)
                                                                                                                                                (("2"
                                                                                                                                                  (case
                                                                                                                                                   "2 * ((s * v) * T) + sqv(v) * T * T <=  2 * ((s * v) * t) + sqv(v) * t * t")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (hide
                                                                                                                                                     2)
                                                                                                                                                    (("2"
                                                                                                                                                      (lemma
                                                                                                                                                       "quad_min_mono_dec")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "quadratic"
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           -1
                                                                                                                                                           "sqv(v)"
                                                                                                                                                           "2*s*v"
                                                                                                                                                           "0"
                                                                                                                                                           "t"
                                                                                                                                                           "T")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (split
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "sq"
                                                                                                                                                                 -1
                                                                                                                                                                 2)
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "sq"
                                                                                                                                                                   -1
                                                                                                                                                                   1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (lemma
                                                                                                                                                                 "sqv_eq_0")
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst?)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("3"
                                                                                                                                                                (assert)
                                                                                                                                                                (("3"
                                                                                                                                                                  (div-by
                                                                                                                                                                   4
                                                                                                                                                                   "sqv(v)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (flip-ineq
                                                                                                                                                                       1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (case
                                                                                                                                                                         " -(2 * (s * v)) / (2 * sqv(v)) = -s*v/sqv(v)")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (lemma
                                                                                                                                                                           "dot_scal_left")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             -1
                                                                                                                                                                             "-1"
                                                                                                                                                                             "s"
                                                                                                                                                                             "v")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "sqv_eq_0")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst?)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (lemma
                                                                                                                                                             "sqv_eq_0")
                                                                                                                                                            (("2"
                                                                                                                                                              (inst?)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((cd2d_hazard_zone const-decl "shapes_2D" cd2d_shape nil)
    (point_strictly_in? const-decl "bool" circular_segment_2D shapes)
    (sq_nz_pos application-judgement "posreal" sq reals)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nz_nzv application-judgement "Nz_vector" vectors_2D vectors)
    (perpL_nz application-judgement "Nz_vect2" perpendicular_2D
     vectors)
    (nzreal_div_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (perpL const-decl "Vect2" perpendicular_2D vectors)
    (^ const-decl "Normalized" vectors_2D vectors)
    (cd2d_rectangle formula-decl nil cd2d_shape nil)
    (sqv_sym formula-decl nil vectors_2D vectors)
    (neg_nzv application-judgement "Nz_vector" vectors_2D vectors)
    (sub_cancel formula-decl nil vectors_2D vectors)
    (< const-decl "bool" reals nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (Nz_vector type-eq-decl nil vectors_2D vectors)
    (Normalized type-eq-decl nil vectors_2D vectors)
    (dot_add_left formula-decl nil vectors_2D vectors)
    (sqrt_pos application-judgement "posreal" sqrt reals)
    (sqrt_sq formula-decl nil sqrt reals)
    (sqrt_lt formula-decl nil sqrt reals)
    (norm_normalize formula-decl nil vectors_2D vectors)
    (norm_perpL formula-decl nil perpendicular_2D vectors)
    (schwarz formula-decl nil vectors_2D vectors)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sqv_scal formula-decl nil vectors_2D vectors)
    (sq_eq_0 formula-decl nil sq reals)
    (sqv_eq_0 formula-decl nil vectors_2D vectors)
    (both_sides_div_pos_le1 formula-decl nil real_props nil)
    (times_div_cancel1 formula-decl nil extra_real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (times_div_cancel2 formula-decl nil extra_real_props nil)
    (scal_neg_1 formula-decl nil vectors_2D vectors)
    (nnrat_div_posrat_is_nnrat application-judgement "nonneg_rat"
     rationals nil)
    (det_scal_right formula-decl nil det_2D vectors)
    (det_scal_left formula-decl nil det_2D vectors)
    (det const-decl "real" det_2D vectors)
    (both_sides_times_pos_lt1 formula-decl nil real_props nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    nil
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (both_sides_div_pos_lt1 formula-decl nil real_props nil)
    (norm_eq_0 formula-decl nil vectors_2D vectors)
    (dot_scal_left formula-decl nil vectors_2D vectors)
    (dot_comm formula-decl nil vectors_2D vectors)
    (dot_perpL formula-decl nil det_2D vectors)
    (det_asym formula-decl nil det_2D vectors)
    (det_eq_0 formula-decl nil det_2D vectors)
    (det_sub_left formula-decl nil det_2D vectors)
    (sqv_normalize formula-decl nil vectors_2D vectors)
    (sqv_perpL formula-decl nil perpendicular_2D vectors)
    (quad_min_mono_dec formula-decl nil quad_minmax reals)
    (quadratic const-decl "real" quadratic reals)
    (nzreal_times_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (det_add_left formula-decl nil det_2D vectors)
    (scal_assoc formula-decl nil vectors_2D vectors)
    (scal_1 formula-decl nil vectors_2D vectors)
    (det_perpL_nsqv formula-decl nil det_2D vectors)
    (sqrt_sqv_sq formula-decl nil vectors_2D vectors)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (sqv_neg formula-decl nil vectors_2D vectors)
    (nz_sqv_gt_0 application-judgement "posreal" vectors_2D vectors)
    (nz_norm_gt_0 application-judgement "posreal" vectors_2D vectors)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (neg_cont name-judgement "continuous_vv_fun" vect_cont_2D
     vect_analysis)
    nil (Lookahead type-eq-decl nil Lookahead nil)
    (<= const-decl "bool" reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Shape2D type-decl nil Shape2D_adt shapes)
    (list type-decl nil list_adt nil)
    (shapes_2D type-eq-decl nil shapes_2D shapes)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (CircularSegment_2D type-decl nil circular_segment_2D shapes)
    (circular_segment? adt-recognizer-decl "[Shape2D -> boolean]"
     Shape2D_adt shapes)
    (CircularSegment adt-constructor-decl
     "[CircularSegment_2D -> (circular_segment?)]" Shape2D_adt shapes)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (Angle_2D type-eq-decl nil angle_2D shapes)
    (Arc type-eq-decl nil circular_segment_2D shapes)
    (circular_segement_2D? adt-recognizer-decl
     "[CircularSegment_2D -> boolean]" circular_segment_2D shapes)
    (mk_circular_segment adt-constructor-decl
     "[Arc -> (circular_segement_2D?)]" circular_segment_2D shapes)
    (Nz_vect2 type-eq-decl nil vectors_2D vectors)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (D formal-const-decl "posreal" cd2d_shape nil)
    (hmd_tangent_point const-decl "Nz_vect2" horizontal nil)
    (Parallelogram_2D type-decl nil parallelogram_2D shapes)
    (rectangle? const-decl "bool" rectangle_2D shapes)
    (Rectangle_2D type-eq-decl nil rectangle_2D shapes)
    (rectangle? adt-recognizer-decl "[Shape2D -> boolean]" Shape2D_adt
     shapes)
    (Rectangle adt-constructor-decl "[Rectangle_2D -> (rectangle?)]"
     Shape2D_adt shapes)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (mk_rectangle const-decl "Rectangle_2D" rectangle_2D shapes)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (norm const-decl "nnreal" vectors_2D vectors)
    (comp_zero_x formula-decl nil vectors_2D vectors)
    (comp_zero_y formula-decl nil vectors_2D vectors)
    (zero const-decl "Vector" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     vect_analysis)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (sq const-decl "nonneg_real" sq reals)
    (* const-decl "Vector" vectors_2D vectors)
    (point_strictly_in? def-decl "bool" shapes_2D shapes)
    (point_strictly_in_circle? const-decl "bool" circle_2D shapes)
    (sqv const-decl "nnreal" vectors_2D vectors)
    (* const-decl "real" vectors_2D vectors) nil
    (mk_circle const-decl "Circle_2D" circle_2D shapes)
    (+ const-decl "Vector" vectors_2D vectors)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil))
   nil))
 (cd2d_haz_correctness 0
  (cd2d_haz_correctness-1 nil 3823375582
   ("" (skeep)
    (("" (beta)
      (("" (lemma "cd2d_haz_soundness")
        (("" (insteep)
          (("" (beta)
            (("" (lemma "cd2d_haz_completeness")
              (("" (insteep)
                (("" (beta)
                  (("" (split 1)
                    (("1" (propax) nil nil) ("2" (propax) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((shapes_2D type-eq-decl nil shapes_2D shapes)
    (list type-decl nil list_adt nil)
    (Shape2D type-decl nil Shape2D_adt shapes)
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (real nonempty-type-from-decl nil reals nil)
    (cd2d_haz_completeness formula-decl nil cd2d_shape nil)
    (cd2d_haz_soundness formula-decl nil cd2d_shape nil))
   shostak)))

