% ---------------------------------------------------------------------
%  File Name: Sig_denot.pvs
%  Author Name: Gilberto Pérez
%  	  	Felicidad Aguado 
%  	  	Pablo Ascariz
%		Pedro Cabalar
%		Concepción Vidal
% ---------------------------------------------------------------------
%   This theory defines the denotation and provides related properties
% ---------------------------------------------------------------------
%  This file is a single component of a library of logic theories. 
%  --------------------------------------------------------------------
%  For the most part, we follow the treatmet in the following text:
%
% F. Aguado, P. Cabalar, D. Pearce, G. Pérez, C. Vidal,
% "A denotational semantics for equilibrium logic",
% in Proc. of the  31st Intl. Conf. on Logic Programming, 2015.
%
%----------------------------------------------------------------------


Sig_denot[T: TYPE+]: THEORY

 BEGIN


 IMPORTING Sig_int[T]



% Definition of denotation and characterization
 denotation(s: Sig_form): RECURSIVE set[I] =
 	   CASES s OF
	   bot: emptyset,
	   atom(t): {i: I | i(t) = 2},
	   op_and(t1,t2): intersection(denotation(t1),denotation(t2)),
	   op_or(t1,t2): union(denotation(t1),denotation(t2)),
	   op_imp(t1,t2): intersection(union(comp(denotation(t1)),denotation(t2)),bottom(classic(union(comp(denotation(t1)),denotation(t2)))))
	   ENDCASES
	   MEASURE s BY <<


 denot_charac: LEMMA FORALL (s: Sig_form,i: I): v_form(s,i) = 2 IFF member(i,denotation(s))



% Lemmas related to denotations
 denotation_include: LEMMA FORALL (s: Sig_form,i: I):  member(i,denotation(s)) IMPLIES member(RT(i),denotation(s))

 denotation_total_closed: LEMMA FORALL (s: Sig_form,i:I):  total_closed?(denotation(s))

 denot_charac_0: LEMMA FORALL (s: Sig_form,i: I): NOT v_form(s,i) = 0 IFF member(RT(i),denotation(s))

 denotation_sub: LEMMA FORALL (s: Sig_form,i: I):  subset?(denotation(s),bottom(classic(denotation(s))))

 denotation_sub_comp: LEMMA FORALL (s: Sig_form,i: I):  subset?(comp(bottom(classic(denotation(s)))),comp(denotation(s)))

 comp_denotation: LEMMA FORALL (s: Sig_form,i: I):  subset? (bottom(classic(comp(denotation(s)))),comp(bottom(classic(denotation(s)))))

 sub_comp_denotation: LEMMA FORALL (s: Sig_form,i: I):  subset? (bottom(classic(comp(denotation(s)))),comp(denotation(s)))

 coro_denotation_sub: LEMMA FORALL (s: Sig_form,i: I):  intersection(denotation(s),bottom(classic(denotation(s)))) = denotation(s)

 coro_sub_comp_denotation: LEMMA FORALL (s: Sig_form,i: I):  intersection(bottom(classic(comp(denotation(s)))),comp(denotation(s))) = 
                                      bottom(classic(comp(denotation(s))))



% Denotation and op_imp lemmas
 denotation_imp: LEMMA FORALL (t1,t2: Sig_form,i: I):
   denotation(op_imp(t1,t2)) =
     union(
     union(bottom(classic(comp(denotation(t1)))),
           intersection(comp(denotation(t1)),bottom(classic(denotation(t2))))),
           denotation(t2))


 denotation_imp_sub_r: LEMMA FORALL (t1,t2: Sig_form,i: I):
                          subset?(denotation(t2),denotation(op_imp(t1,t2)))


 mon_imp_left: LEMMA FORALL (t1,t2,s: Sig_form,i: I):
   subset? (denotation(t1),denotation(t2)) IMPLIES
     subset? (denotation(op_imp(s,t1)),denotation(op_imp(s,t2)))


 mon_imp_right: LEMMA FORALL (t1,t2,s: Sig_form,i: I):
   subset? (denotation(t1),denotation(t2)) IMPLIES
     subset? (denotation(op_imp(t2,s)),denotation(op_imp(t1,s)))


 denotation_inclusion: LEMMA FORALL (t1,t2: Sig_form): subset?(denotation(t1),denotation(t2)) IFF 
                                                       (FORALL (i:I): member (i,denotation(op_imp(t1,t2))))

 denotation_equal: LEMMA FORALL (t1,t2: Sig_form): denotation(t1) = denotation(t2) IFF 
                                           (FORALL (i:I): member (i,denotation(op_and(op_imp(t1,t2),op_imp(t2,t1))))) 

 denotation_imp_inc_1: LEMMA FORALL (t1,t2: Sig_form,i: I): subset?(denotation(op_imp(t1,t2)),
                                                                    union(comp(denotation(t1)),denotation(t2)))

 denotation_imp_inc_2: LEMMA FORALL (t1,t2: Sig_form,i: I): subset?(intersection(denotation(op_imp(t1,t2)),denotation(t1)),denotation(t2))

 denotation_imp_intersec: LEMMA FORALL (t1,t2: Sig_form,i: I): intersection(denotation(t1),denotation(op_imp(t1,t2)))=
                                                                intersection(denotation(t1),denotation(t2))

 denotation_and_imp: LEMMA FORALL (t1,t2: Sig_form,i: I): denotation(op_and(t1,op_imp(t1,t2)))= denotation(op_and(t1,t2))

 denotation_imp_classic: LEMMA FORALL (t1,t2: Sig_form,i: I): classic(denotation(op_imp(t1,t2)))=
                                                                 union(classic(comp(denotation(t1))),classic(denotation(t2)))

denotation_comp_imp_classic: LEMMA FORALL (t1,t2: Sig_form,i: I): classic(comp(denotation(op_imp(t1,t2))))=
                                                    classic(intersection(denotation(t1),comp(denotation(t2))))

 denotation_imp_sub_l: LEMMA FORALL (t1,t2: Sig_form,i: I):
                          subset?(denotation(t2),denotation(op_imp(op_imp(t2,t1),t1)))



% Other denotation lemmas
 denotation_full_aux: LEMMA FORALL (t: Sig_form,i: I):
 		          union(comp(denotation(t)),bottom(classic(denotation(t)))) = fullset[I[T]]

 denotation_imp_full: LEMMA FORALL (t1,t2: Sig_form,i: I):
 	   	 	  union(denotation(op_imp(t1,t2)),denotation(op_imp(t2,t1))) = fullset[I[T]]

 denotation_or: LEMMA FORALL (t1,t2: Sig_form,i: I):
   denotation(op_or(t1,t2)) =
   intersection(denotation(op_imp(op_imp(t1,t2),t2)) , denotation(op_imp(op_imp(t2,t1),t1)))

 denotation_not_charact: LEMMA FORALL (s: Sig_form, i: I): denotation(op_imp(s,bot))= bottom(classic(comp(denotation(s))))

 denotation_not: LEMMA FORALL (s: Sig_form, i: I): member(i,denotation(op_imp(s,bot))) IFF member(RT(i),comp(denotation(s)))


  END Sig_denot


