%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Properties of real numbers   %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

real_facts : THEORY

  BEGIN

  S: VAR (nonempty?[real])

  bounded?_lem  : LEMMA bounded?(S) IFF
                          EXISTS (B: real): FORALL (x: (S)):  abs(x) <= B


  %----------------------------------------
  %  More properties of archimedean field 
  %----------------------------------------

  archimedean2 : THEOREM
	FORALL (x : posreal) : EXISTS (a : posnat) : 1/a < x

  archimedean3 : THEOREM
	FORALL (x : nonneg_real) :
	   (FORALL (a : posnat) : x <= 1/a) implies x = 0


  %-------------------------------------------------
  %  Every real is between two successive integers
  %-------------------------------------------------

  nat_interval : LEMMA
	FORALL (x : nonneg_real) : EXISTS (a : nat) : a <= x and x < a + 1

  int_interval : LEMMA
	FORALL (x : real) : EXISTS (a : integer) : a <= x and x < a +1 


  %---------------------------------------
  %  Short cuts for lub and glb of sets
  %---------------------------------------

  U: VAR (bounded_above?)
  V: VAR (bounded_below?)
  a,b,x, y: VAR real
  epsilon: VAR posreal


  lub_is_bound: LEMMA FORALL (x: (U)):  x <= lub(U)

  lub_is_lub: LEMMA lub(U) <= y IFF FORALL (x: (U)): x <= y

  lub_closed_intv: LEMMA a < b IMPLIES lub({x | a <= x AND x <= b}) = b


  adherence_sup: LEMMA 
	FORALL epsilon: EXISTS (x: (U)): lub(U) - epsilon < x


  glb_is_bound: LEMMA FORALL (x: (V)): glb(V) <= x

  glb_is_glb: LEMMA y <= glb(V) IFF FORALL (x: (V)): y <= x

  glb_closed_intv: LEMMA a < b IMPLIES glb({x | a <= x AND x <= b}) = a

  adherence_inf: LEMMA
	FORALL epsilon: EXISTS (x: (V)): x < glb(V) + epsilon

  bounded_sequence_converges: LEMMA FORALL (seq:[nat->real]):
    (EXISTS (M:nat): FORALL (i:nat): i>=M IMPLIES 
      (a<=seq(i) AND seq(i)<=b)) IMPLIES
    EXISTS (y:real,sub:[nat->nat]): a<=y AND y<=b AND
    (FORALL (i,j:nat): i<j IMPLIES sub(i)<sub(j)) AND
    FORALL (epsil:posreal): EXISTS (N:posnat): FORALL (i:nat):
    i>=N IMPLIES abs(seq(sub(i))-y)<epsil

  bounded_double_sequence_converges: LEMMA FORALL (seq:[nat->[real,real]]):
    (EXISTS (M:nat): FORALL (i:nat): i>=M IMPLIES 
      (a<=seq(i)`1 AND seq(i)`1<=b AND x<=seq(i)`2 AND seq(i)`2<=y)) IMPLIES
    EXISTS (r,s:real,sub:[nat->nat]): a<=r AND r<=b AND x<=s AND s<=y AND
    (FORALL (i,j:nat): i<j IMPLIES sub(i)<sub(j)) AND
    FORALL (epsil:posreal): EXISTS (N:posnat): FORALL (i:nat):
    i>=N IMPLIES (abs(seq(sub(i))`1-r)<epsil AND abs(seq(sub(i))`2-s)<epsil)

  cont_int_min: LEMMA a<=b IMPLIES FORALL (f:[real->real]): 
    (FORALL (x:real): a<=x AND x<=b IMPLIES FORALL (epsil:posreal):
     EXISTS (delta:posreal): FORALL (y:real): a<=y AND y<=b 
     AND abs(y-x)<=delta IMPLIES abs(f(y)-f(x))<=epsil)
     IMPLIES
     (EXISTS (x:real): a<=x AND x<=b AND FORALL (y:real): a<=y AND y<=b
     IMPLIES f(y)>=f(x))

  cont_box_min: LEMMA FORALL (a1,a2,b1,b2:real):
    a1<=b1 AND a2<=b2 IMPLIES FORALL (f:[[real,real]->real]):
    (FORALL (x1,x2:real): a1<=x1 AND x1<=b1 AND a2<=x2 
      AND x2<=b2 IMPLIES FORALL (epsil:posreal):
     EXISTS (delta:posreal): FORALL (y1,y2:real): 
       a1<=y1 AND y1<=b1 AND a2<=y2 AND y2<=b2 AND abs(y1-x1)<=delta
     AND abs(y2-x2)<=delta
     IMPLIES abs(f(y1,y2)-f(x1,x2))<=epsil)
     IMPLIES
     (EXISTS (x1,x2:real): a1<=x1 AND x1<=b1 AND a2<=x2 AND x2<=b2 AND 
      FORALL (y1,y2:real): a1<=y1 AND y1<=b1 AND a2<=y2 AND y2<=b2 
     IMPLIES f(y1,y2)>=f(x1,x2))

  cont_int_ivt: LEMMA a<=b IMPLIES FORALL (f:[real->real],c:real): 
    (FORALL (x:real): a<=x AND x<=b IMPLIES FORALL (epsil:posreal):
     EXISTS (delta:posreal): FORALL (y:real): a<=y AND y<=b 
     AND abs(y-x)<=delta IMPLIES abs(f(y)-f(x))<=epsil)
     AND (f(a)-c)*(f(b)-c)<=0 IMPLIES
     (EXISTS (x:real): a<=x AND x<=b AND f(x)=c)

  quad_box_cont: LEMMA  FORALL (f:[[real,real]->real]):
    (EXISTS (Q,R,S,T,UU,V:real): FORALL (x,y):
      f(x,y)=Q*x^2+R*y^2+S*x*y+T*x+UU*y+V) IMPLIES
    (FORALL (x1,x2:real,epsil:posreal):
     EXISTS (delta:posreal): FORALL (y1,y2:real): abs(y1-x1)<=delta
     AND abs(y2-x2)<=delta
     IMPLIES abs(f(y1,y2)-f(x1,x2))<=epsil)

  END real_facts



