log_int : THEORY
  BEGIN
 
  IMPORTING log_nat 

  x,y  :VAR posreal
  p    :VAR above(1)
  z    :VAR int

  log_int(x,p): [ z:int, {y: real | y<p AND y>=1 AND x = p^z*y}] = 
    IF x>=1 THEN log_nat(x,p)
    ELSE LET LN = log_nat(1/x,p) IN
      IF LN`2=1 THEN (-LN`1,1)
      ELSE (-LN`1-1, p/LN`2)
      ENDIF
    ENDIF

  log_int_bounds : LEMMA
    LET (z,y)=log_int(x,p) in
    p^z <= x AND x < p^(z+1)

  log_int_incr : LEMMA
    p*x <= y IMPLIES
    log_int(x,p)`1 < log_int(y,p)`1

  log_int_le : LEMMA 
    x<=y IMPLIES 
    log_int(x,p)`1<= log_int(y,p)`1
 
END log_int
