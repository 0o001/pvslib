% modulus operation for real numbers
reals_mod: THEORY
BEGIN

  i,k,cc: VAR real % int
  m: VAR posreal % posnat
  n,a,b,c,x: VAR nat   

  j: VAR nonzero_real % nonzero_integer

  ml3: LEMMA abs(i -  m * floor(i/m)) < m
  ml4: LEMMA abs(i +  m * floor(-i/m)) < m

  mod(i,j): {k| abs(k) < abs(j)} = i-j*floor(i/j)

  mod_pos:  LEMMA mod(i,m) >= 0 AND mod(i,m) < m

  JUDGEMENT mod(i:int, m: posnat) HAS_TYPE below(m)

 mod_frac: LEMMA FORALL (x:real, y:posreal):
   mod(x,y)/y = fractional(x/y)

END reals_mod
