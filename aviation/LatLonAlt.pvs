LatLonAlt: THEORY
BEGIN

    IMPORTING units

    LatLonRad: TYPE = [# lat,lon: Radians #]

    latlonrad(lat,lon: Radians): LatLonRad
    = (# lat := lat, lon := lon #)

    LatLonDeg: TYPE = [# lat_deg,lon_deg: Degrees #]

    latlondeg(lat,lon: Degrees): LatLonDeg
    = (# lat_deg := lat, lon_deg := lon #)

    latlondeg_to_latlonrad(lld: LatLonDeg): LatLonRad
    = latlonrad(lld`lat_deg*deg,lld`lon_deg*deg)

    % The type LatLonAlt represents a position in the space denoted by a
    % degree of latitude, a degree of lontude, and an altitude. The degrees
    % are expressed in radians, while the altitude is expressed in meters.
    LatLonAlt: TYPE = LatLonRad WITH [# alt : Meters #]

    zero: LatLonAlt = (# lat := 0, lon := 0, alt := 0 #)

    lat(p: LatLonAlt): Radians = p`lat
    lon(p: LatLonAlt): Radians = p`lon
    alt(p: LatLonAlt): Meters  = p`alt

    mk(lat:Radians,  lon:Radians, alt:Meters): LatLonAlt = 
      (# lat := lat, lon := lon, alt := alt #)

    mk_lem: LEMMA FORALL (lat,lon,alt: real):
              lat(mk(lat,lon,alt)) = lat AND lon(mk(lat,lon,alt)) = lon 
              AND alt(mk(lat,lon,alt)) = alt

    make(lat:Degrees, lon:Degrees, alt:Feet): LatLonAlt = 
      (# lat  := lat*deg,
      	 lon := lon*deg,
	 alt  := alt*m #)

    % Creates a new LatLonAlt with only altitude changed
    mkAlt(lla: LatLonAlt, alt: real): LatLonAlt = mk(lat(lla), lon(lla), alt)

END LatLonAlt
