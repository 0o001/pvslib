TcpData: THEORY
BEGIN

  IMPORTING Velocity, Position

  WayType    : TYPE = {orig, virtual, altPreserve}        
  Trk_TCPType: TYPE = {NONE, BOT, EOT, EOTBOT}
  Gs_TCPType : TYPE = {NONE, BGS, EGS, EGSBGS}
  Vs_TCPType : TYPE = {NONE, BVS, EVS, EVSBVS}

  TcpDataType: TYPE = [#
                         ty: WayType,
                         tcp_trk: Trk_TCPType,
                         tcp_gs:  Gs_TCPType,
                         tcp_vs:  Vs_TCPType,
                         radiusSigned:  real,
                         centerTurn: Position,
                         accelGs: real,
                         accelVs: real,
                         linearIndex: int
                       #]

  ZERO: TcpDataType = (# ty := orig, 
                         tcp_trk := NONE,
                         tcp_gs := NONE,
                         tcp_vs := NONE,
                         radiusSigned := 0,
                         centerTurn := Position.INVALID,
                         accelGs := 0,
                         accelVs := 0,
                         linearIndex := -1
                       #)

   setLinearIndex(tcp: TcpDataType, ix: int): TcpDataType = 
         (#
            ty := tcp`ty,
            tcp_trk := tcp`tcp_trk,
            tcp_gs :=  tcp`tcp_gs,
            tcp_vs :=  tcp`tcp_vs,
            radiusSigned :=  tcp`radiusSigned,
            centerTurn := tcp`centerTurn,
            accelGs := tcp`accelGs,
            accelVs := tcp`accelVs,
            linearIndex := ix
          #)

END TcpData


