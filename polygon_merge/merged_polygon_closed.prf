(merged_polygon_closed
 (min_edge_sep_vertex_A_TCC1 0
  (min_edge_sep_vertex_A_TCC1-2 nil 3874129021
   ("" (skeep)
    (("" (rewrite "sqv_eq_0")
      (("" (replace -2) (("" (assert) nil nil)) nil)) nil))
    nil)
   nil shostak
   (min_edge_sep_vertex_A subtype
    "vectors_2D.sqv(merged_polygon_closed.v)" "nznum"))
  (min_edge_sep_vertex_A_TCC1-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (min_edge_sep_vertex_A subtype
    "vectors_2D.sqv(merged_polygon_closed.v)" "nznum")))
 (min_edge_sep_vertex_A_TCC2 0
  (min_edge_sep_vertex_A_TCC2-2 nil 3874129021
   ("" (skeep)
    (("" (use "norm_eq_0")
      (("" (assert) (("" (replace -1) (("" (assert) nil nil)) nil))
        nil))
      nil))
    nil)
   nil shostak
   (min_edge_sep_vertex_A subtype
    "vectors_2D.norm((vectors_2D.-)(merged_polygon_closed.vtx, merged_polygon_closed.e`p1))"
    "posreal"))
  (min_edge_sep_vertex_A_TCC2-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (min_edge_sep_vertex_A subtype
    "vectors_2D.norm((vectors_2D.-)(merged_polygon_closed.vtx, merged_polygon_closed.e`p1))"
    "posreal")))
 (min_edge_sep_vertex_A_TCC3 0
  (min_edge_sep_vertex_A_TCC3-2 nil 3874129021
   ("" (skeep)
    (("" (use "norm_eq_0")
      (("" (assert)
        (("" (replace -1)
          (("" (replace -3 :dir rl)
            (("" (expand "sqv") (("" (assert) nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (min_edge_sep_vertex_A subtype
    "vectors_2D.norm((vectors_2D.-)(merged_polygon_closed.vtx, merged_polygon_closed.e`p2))"
    "posreal"))
  (min_edge_sep_vertex_A_TCC3-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (min_edge_sep_vertex_A subtype
    "vectors_2D.norm((vectors_2D.-)(merged_polygon_closed.vtx, merged_polygon_closed.e`p2))"
    "posreal")))
 (min_edge_sep_vertex_A_TCC4 0
  (min_edge_sep_vertex_A_TCC4-2 nil 3874129021
   ("" (skeep)
    (("" (use "norm_eq_0")
      (("" (assert)
        (("" (replace -1 :dir rl)
          (("" (assert)
            (("" (typepred "j")
              (("" (rewrite "point_on_segment_has_offset")
                (("" (inst + "t_min")
                  (("" (expand "edges_of_polygon")
                    (("" (replace -5 :dir rl)
                      (("" (replace -3 1) (("" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (min_edge_sep_vertex_A subtype
    "vectors_2D.norm((vectors_2D.-)((vectors_2D.+)(merged_polygon_closed.e`p1, vectors_2D.*(merged_polygon_closed.t_min, merged_polygon_closed.v)), merged_polygon_closed.vtx))"
    "posreal"))
  (min_edge_sep_vertex_A_TCC4-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (min_edge_sep_vertex_A subtype
    "vectors_2D.norm((vectors_2D.-)((vectors_2D.+)(merged_polygon_closed.e`p1, vectors_2D.*(merged_polygon_closed.t_min, merged_polygon_closed.v)), merged_polygon_closed.vtx))"
    "posreal")))
 (min_edge_separation_A_TCC1 0
  (min_edge_separation_A_TCC1-2 nil 3874129021
   ("" (skeep)
    (("" (expand "empty?")
      ((""
        (case "point_on_segment?(A`vertices(0), edges_of_polygon(B)(0))")
        (("1" (case "A`vertices(0) = B`vertices(1)")
          (("1"
            (case "point_on_segment?(A`vertices(0), edges_of_polygon(B)(2))")
            (("1" (hide -4)
              (("1" (lemma "points_on_distinct_edges_differ")
                (("1" (inst - "B`vertices(1)" "B" "0" "2")
                  (("1" (rewrite* "is_point_on_seg_equiv")
                    (("1" (assert)
                      (("1" (expand "edges_of_polygon" -1)
                        (("1" (flatten)
                          (("1" (expand "next_index")
                            (("1" (assert)
                              (("1"
                                (lemma "vertex_neq_next")
                                (("1"
                                  (inst - "B" "0")
                                  (("1"
                                    (expand "next_index")
                                    (("1" (ground) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (inst - "min_edge_sep_vertex_A(A, B, 0, 2)")
              (("2" (expand "member") (("2" (inst + "0" "2") nil nil))
                nil))
              nil)
             ("3" (typepred "B")
              (("3" (expand "simple_polygon_2d?")
                (("3" (ground) nil nil)) nil))
              nil))
            nil)
           ("2"
            (case "point_on_segment?(A`vertices(0), edges_of_polygon(B)(1))")
            (("1" (hide -3)
              (("1" (lemma "points_on_distinct_edges_differ")
                (("1" (inst - "A`vertices(0)" "B" "0" "1")
                  (("1" (rewrite* "is_point_on_seg_equiv")
                    (("1" (assert)
                      (("1" (expand "edges_of_polygon" -1)
                        (("1" (ground)
                          (("1" (expand "next_index")
                            (("1" (lift-if) (("1" (ground) nil nil))
                              nil))
                            nil)
                           ("2" (typepred "B")
                            (("2" (expand "simple_polygon_2d?")
                              (("2" (propax) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (inst - "min_edge_sep_vertex_A(A, B, 0, 1)")
              (("2" (expand "member") (("2" (inst + "0" "1") nil nil))
                nil))
              nil))
            nil)
           ("3" (assert) nil nil))
          nil)
         ("2" (inst - "min_edge_sep_vertex_A(A, B, 0, 0)")
          (("2" (expand "member") (("2" (inst + "0" "0") nil nil))
            nil))
          nil)
         ("3" (assert) nil nil) ("4" (assert) nil nil))
        nil))
      nil))
    nil)
   nil shostak
   (min_edge_separation_A subtype
    "{v_min: real_types.posreal | EXISTS (i: naturalnumbers.below(merged_polygon_closed.A`num_vertices), j: naturalnumbers.below(merged_polygon_closed.B`num_vertices)): booleans.AND((booleans.NOT)(segments_2d.point_on_segment?(merged_polygon_closed.A`vertices(i), polygons_2d.edges_of_polygon(merged_polygon_closed.B)(j))), v_min = merged_polygon_closed.min_edge_sep_vertex_A(merged_polygon_closed.A, merged_polygon_closed.B, i, j))}"
    "non_empty_finite_set[posreal]"))
  (min_edge_separation_A_TCC1-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (min_edge_separation_A subtype
    "{v_min: real_types.posreal | EXISTS (i: naturalnumbers.below(merged_polygon_closed.A`num_vertices), j: naturalnumbers.below(merged_polygon_closed.B`num_vertices)): booleans.AND((booleans.NOT)(segments_2d.point_on_segment?(merged_polygon_closed.A`vertices(i), polygons_2d.edges_of_polygon(merged_polygon_closed.B)(j))), v_min = merged_polygon_closed.min_edge_sep_vertex_A(merged_polygon_closed.A, merged_polygon_closed.B, i, j))}"
    "non_empty_finite_set[posreal]")))
 (min_edge_sep_vertex_A_le_dist_to_vtx 0
  (min_edge_sep_vertex_A_le_dist_to_vtx-1 nil 3874129021
   ("" (skeep*)
    (("" (expand "min_edge_sep_vertex_A")
      (("" (expand "edges_of_polygon")
        ((""
          (name-replace*
           ("u" "A`vertices(i)" "v" "B`vertices(j)" "w"
            "B`vertices(next_index(B, j))"))
          (("" (case "v = w")
            (("1" (lemma "vertex_neq_next")
              (("1" (inst - "B" "j") (("1" (ground) nil nil)) nil))
              nil)
             ("2" (lemma "point_on_reverse_segment")
              (("2" (inst - "p" "(# p1 := v, p2 := w #)")
                (("1" (assert)
                  (("1" (expand "reverse_segment")
                    (("1" (lemma "point_on_segment_has_offset")
                      (("1" (inst-cp - "p" "(# p1 := w, p2 := v #)")
                        (("1" (inst - "p" "(# p1 := v, p2 := w #)")
                          (("1" (assert)
                            (("1" (replace -3)
                              (("1"
                                (assert)
                                (("1"
                                  (skeep*)
                                  (("1"
                                    (case "sqv(w - v) = 0")
                                    (("1"
                                      (lemma "vertex_neq_next")
                                      (("1"
                                        (inst - "B" "j")
                                        (("1"
                                          (ground)
                                          (("1"
                                            (use "sqv_eq_0")
                                            (("1" (ground) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (typepred "sqv(w - v)")
                                      (("2"
                                        (lift-if)
                                        (("2"
                                          (ground)
                                          (("1"
                                            (rewrite "norm_le_sqv")
                                            (("1"
                                              (replace -3 :hide? t)
                                              (("1"
                                                (lemma "sqv_sub")
                                                (("1"
                                                  (inst
                                                   -
                                                   "u -v"
                                                   "d * (w - v)")
                                                  (("1"
                                                    (equate
                                                     "u - (v + d * (w - v))"
                                                     "(u - v) - d * (w - v)")
                                                    (("1"
                                                      (replace
                                                       -1
                                                       :hide?
                                                       t)
                                                      (("1"
                                                        (cancel-add 1)
                                                        (("1"
                                                          (rewrite
                                                           "sqv_scal")
                                                          (("1"
                                                            (real-props)
                                                            (("1"
                                                              (case
                                                               "2 * (d * ((u - v) * (w - v))) <= 0")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (case-replace
                                                                 "d = 0")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (cancel-by
                                                                   2
                                                                   "2 * d")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (rewrite "norm_le_sqv")
                                            (("2"
                                              (cross-mult -1)
                                              (("2"
                                                (replace -5 :hide? t)
                                                (("2"
                                                  (equate
                                                   "u - (w + d!1 * (v - w))"
                                                   "(u - w) + d!1 * (w - v)")
                                                  (("1"
                                                    (lemma "sqv_add")
                                                    (("1"
                                                      (inst
                                                       -
                                                       "u - w"
                                                       "d!1 * (w - v)")
                                                      (("1"
                                                        (replace
                                                         -1
                                                         :hide?
                                                         t)
                                                        (("1"
                                                          (cancel-add
                                                           1)
                                                          (("1"
                                                            (rewrite
                                                             "sqv_scal")
                                                            (("1"
                                                              (real-props)
                                                              (("1"
                                                                (typepred
                                                                 "sq(d!1)")
                                                                (("1"
                                                                  (case
                                                                   "2 * ((u - w) * (w - v)) * d!1 >= 0")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (case-replace
                                                                     "d!1 = 0")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (cancel-by
                                                                       2
                                                                       "2 * d!1")
                                                                      (("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide-all-but 1)
                                                    (("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (name-replace
                                             "t_min"
                                             "((u - v) * (w - v)) / sqv(w - v)"
                                             :hide?
                                             nil)
                                            (("3"
                                              (rewrite "norm_le_sqv")
                                              (("3"
                                                (equate
                                                 "v + t_min * (w - v) - u"
                                                 "(v - u) + t_min * (w - v)")
                                                (("1"
                                                  (lemma
                                                   "perpendicular_2D.perp_is_min")
                                                  (("1"
                                                    (inst
                                                     -
                                                     "v"
                                                     "u"
                                                     "w - v"
                                                     "d"
                                                     "t_min")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (rewrite
                                                         "sqv_sym"
                                                         2)
                                                        (("1"
                                                          (equate
                                                           "(v + t_min * (w - v)) - u"
                                                           "(v - u) + t_min * (w - v)")
                                                          (("1"
                                                            (ground)
                                                            (("1"
                                                              (lemma
                                                               "norm_le_sqv")
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "(v - u) + t_min * (w - v)"
                                                                 "(v + d * (w - v)) - u")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "perp_pt")
                                                              (("2"
                                                                (expand
                                                                 "sqv")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             1)
                                                            (("2"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (ground) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (min_edge_separation_A_is_min 0
  (min_edge_separation_A_is_min-1 nil 3874129021
   ("" (skeep*)
    (("" (expand "min_edge_separation_A")
      (("" (invoke (typepred "%1") (! 2 l))
        (("1" (hide -1)
          (("1" (skeep)
            (("1" (replace -2 :hide? t)
              (("1" (inst - "min_edge_sep_vertex_A(A, B, i, j)")
                (("1" (ground)
                  (("1" (expand "restrict")
                    (("1"
                      (lemma "min_edge_sep_vertex_A_le_dist_to_vtx")
                      (("1" (inst - "A" "B" "i" "j")
                        (("1" (assert)
                          (("1" (inst?) (("1" (ground) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (inst + "i" "j") nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide 2)
          (("2" (expand "empty?")
            (("2" (inst - "min_edge_sep_vertex_A(A, B, i, j)")
              (("2" (expand "member") (("2" (inst?) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (min_edge_sep_AB_all_points 0
  (min_edge_sep_AB_all_points-1 nil 3874129021
   ("" (skeep)
    (("" (expand "min_edge_separation_AB")
      (("" (lemma "endpoint_nearest_point_between_segments")
        ((""
          (inst - "edges_of_polygon(A)(i)" "edges_of_polygon(B)(j)" "p"
           "q")
          (("" (expand "nearest_endpoint_cond")
            (("" (ground)
              (("1" (skeep)
                (("1" (inst?) (("1" (ground) nil nil)) nil)) nil)
               ("2" (skeep)
                (("2" (lemma "min_edge_separation_A_is_min")
                  (("2" (typepred "v")
                    (("2" (expand "segment_endpoint?")
                      (("2" (expand "edges_of_polygon" -1)
                        (("2" (ground)
                          (("1" (replace -1)
                            (("1" (inst - "A" "B" "i" "j")
                              (("1"
                                (ground)
                                (("1"
                                  (inst - "A`vertices(i)")
                                  (("1" (ground) nil nil))
                                  nil)
                                 ("2"
                                  (inst - "r")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (rewrite "norm_sym")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (replace -1)
                            (("2"
                              (inst - "A" "B" "next_index(A, i)" "j")
                              (("2"
                                (ground)
                                (("1"
                                  (inst
                                   -
                                   "A`vertices(next_index(A, i))")
                                  (("1" (ground) nil nil))
                                  nil)
                                 ("2"
                                  (inst - "r")
                                  (("2"
                                    (rewrite "norm_sym")
                                    (("2" (ground) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("3" (skeep)
                (("3" (lemma "min_edge_separation_A_is_min")
                  (("3" (typepred "v")
                    (("3" (expand "segment_endpoint?")
                      (("3" (expand "edges_of_polygon" -1)
                        (("3" (ground)
                          (("1" (replace -1)
                            (("1" (inst - "B" "A" "j" "i")
                              (("1"
                                (ground)
                                (("1"
                                  (inst - "B`vertices(j)")
                                  (("1" (ground) nil nil))
                                  nil)
                                 ("2"
                                  (inst - "r")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (rewrite "norm_sym")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (replace -1)
                            (("2"
                              (inst - "B" "A" "next_index(B, j)" "i")
                              (("2"
                                (ground)
                                (("1"
                                  (inst
                                   -
                                   "B`vertices(next_index(B, j))")
                                  (("1" (ground) nil nil))
                                  nil)
                                 ("2"
                                  (inst - "r")
                                  (("2"
                                    (rewrite "norm_sym")
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (extend_do_not_cross_off_seq_TCC1 0
  (extend_do_not_cross_off_seq_TCC1-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (extend_do_not_cross_off_seq subtype "0" "below[M`length]"))
  (extend_do_not_cross_off_seq_TCC1-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (extend_do_not_cross_off_seq subtype "0" "below[M`length]")))
 (extend_do_not_cross_off_seq_TCC2 0
  (extend_do_not_cross_off_seq_TCC2-2 nil 3874129021
   ("" (skeep)
    (("" (ground)
      (("1" (hide-all-but (-3 1)) (("1" (grind) nil nil)) nil)
       ("2" (skeep)
        (("2" (replace -4)
          (("2" (expand "o" -1)
            (("2" (lift-if)
              (("2" (expand "singleton_seq")
                (("2" (ground)
                  (("1" (inst - "M`seq(i)")
                    (("1" (ground)
                      (("1" (grind) nil nil)
                       ("2" (expand "point_on_segment_seq?")
                        (("2" (ground)
                          (("2" (inst + "i")
                            (("2" (expand "point_on_segment?")
                              (("2"
                                (inst + "0")
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (typepred "M")
                    (("2" (inst - "i - 1")
                      (("1" (assert) nil nil)
                       ("2" (assert)
                        (("2" (typepred "i")
                          (("2" (replace -6) (("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (extend_do_not_cross_off_seq subtype "merged_polygon_closed.S2"
    "segment_endpoint_seq"))
  (extend_do_not_cross_off_seq_TCC2-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (extend_do_not_cross_off_seq subtype "merged_polygon_closed.S2"
    "segment_endpoint_seq")))
 (extend_do_not_cross_off_seq 0
  (extend_do_not_cross_off_seq-1 nil 3874129021
   ("" (skeep*)
    (("" (case "S2`length = M`length + 1")
      (("1" (typepred "M")
        (("1"
          (case "forall (k: upto(M`length)): S2`seq(k) =
                                            if k = 0 then w else M`seq(k - 1) endif")
          (("1"
            (case "FORALL (u: point_2d):
                                                                    	  point_on_segment?(u, (# p1 := w, p2 := M`seq(0) #)) =>
                                                                    	   u = M`seq(0) OR NOT point_on_segment_seq?(u, M)")
            (("1" (expand "segments_do_not_cross?")
              (("1" (case "M`length = 1")
                (("1" (assert) nil nil)
                 ("2" (case "M`length = 2")
                  (("1" (hide -10)
                    (("1" (flatten)
                      (("1" (skeep*)
                        (("1" (case-replace "i = 0")
                          (("1" (equate "j" "1" (assert))
                            (("1" (rewrite -4)
                              (("1"
                                (rewrite -4)
                                (("1"
                                  (rewrite -4)
                                  (("1"
                                    (inst - "q")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (expand
                                         "point_on_segment_seq?")
                                        (("1" (inst + "0") nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (equate "i" "1" (assert))
                            (("2" (equate "j" "0" (assert))
                              (("2"
                                (rewrite -3)
                                (("2"
                                  (rewrite -3)
                                  (("1"
                                    (rewrite -3)
                                    (("1"
                                      (inst - "q")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand
                                           "point_on_segment_seq?")
                                          (("1" (inst + "0") nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (assert)
                                    (("2"
                                      (replace -8 4)
                                      (("2"
                                        (hide -)
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (assert)
                    (("2" (skeep*)
                      (("2" (rewrite -2 -10)
                        (("2" (rewrite -2 -10)
                          (("2" (rewrite -2 -11)
                            (("2" (rewrite -2 -11)
                              (("2"
                                (lift-if)
                                (("2"
                                  (split -10)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (inst - "q")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand
                                           "point_on_segment_seq?")
                                          (("1"
                                            (inst + "j - 1")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (flatten)
                                    (("2"
                                      (split -11)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (inst - "q")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (split -4)
                                              (("1"
                                                (inst - "i - 1" "0")
                                                (("1"
                                                  (inst -12 "q")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand
                                                       "point_on_segment?")
                                                      (("1"
                                                        (inst + "0")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 "point_on_segment_seq?")
                                                (("2"
                                                  (inst + "i - 1")
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (inst - "i - 1" "j - 1")
                                          (("1"
                                            (inst -11 "q")
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2" (assert) nil nil)
                                           ("3" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (skeep)
              (("2" (rewrite "point_on_segment_has_offset")
                (("2" (skeep)
                  (("2" (replace -8 -1)
                    (("2"
                      (equate
                       "d * (M`seq(0) - (M`seq(0) + (# x := 0, y := 1 #)))"
                       "-(d * (# x := 0, y := 1 #))")
                      (("1" (elim-unary -1)
                        (("1" (assert)
                          (("1" (case-replace "d = 1")
                            (("1" (assert) nil nil)
                             ("2" (factor -1 r (2 3))
                              (("2"
                                (inst -9 "u")
                                (("2"
                                  (assert)
                                  (("2"
                                    (hide-all-but (-1 -9 1))
                                    (("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide-all-but 1) (("2" (grind) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("3" (replace -5 1)
              (("3" (hide-all-but 1) (("3" (grind) nil nil)) nil))
              nil))
            nil)
           ("2" (skeep)
            (("2" (replace -6 1)
              (("2" (hide-all-but 1) (("2" (grind) nil nil)) nil))
              nil))
            nil)
           ("3" (skeep) (("3" (assert) nil nil)) nil)
           ("4" (skeep) (("4" (assert) nil nil)) nil))
          nil))
        nil)
       ("2" (replace -3 1) (("2" (grind) nil nil)) nil))
      nil))
    nil)
   nil shostak))
 (subseq_does_not_cross_TCC1 0
  (subseq_does_not_cross_TCC1-2 nil 3874129021
   ("" (skeep)
    (("" (ground)
      (("1" (grind) nil nil)
       ("2" (skeep + t)
        (("2" (typepred "M")
          (("2" (expand "^")
            (("2" (inst - "i!1 + k")
              (("1" (grind) nil nil) ("2" (grind) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (subseq_does_not_cross subtype
    "finite_sequences[point_2d].^(merged_polygon_closed.M, (merged_polygon_closed.k, merged_polygon_closed.l))"
    "segment_endpoint_seq"))
  (subseq_does_not_cross_TCC1-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (subseq_does_not_cross subtype
    "finite_sequences[point_2d].^(merged_polygon_closed.M, (merged_polygon_closed.k, merged_polygon_closed.l))"
    "segment_endpoint_seq")))
 (subseq_does_not_cross_TCC2 0
  (subseq_does_not_cross_TCC2-2 nil 3874129021
   ("" (skeep)
    (("" (ground)
      (("1" (grind) nil nil)
       ("2" (skeep + t)
        (("2" (expand "^" -2)
          (("2" (typepred "M")
            (("2" (inst - "i_1 + i")
              (("1" (assert) nil nil) ("2" (grind) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (subseq_does_not_cross subtype
    "finite_sequences[point_2d].^(merged_polygon_closed.M, (merged_polygon_closed.i, merged_polygon_closed.j))"
    "segment_endpoint_seq"))
  (subseq_does_not_cross_TCC2-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (subseq_does_not_cross subtype
    "finite_sequences[point_2d].^(merged_polygon_closed.M, (merged_polygon_closed.i, merged_polygon_closed.j))"
    "segment_endpoint_seq")))
 (subseq_does_not_cross 0
  (subseq_does_not_cross-1 nil 3874129021
   ("" (skeep*)
    (("" (expand "segments_do_not_cross?")
      (("" (flatten)
        (("" (split -4)
          (("1" (hide 2) (("1" (grind) nil nil)) nil)
           ("2" (case "i > j")
            (("1" (hide-all-but (-1 1)) (("1" (grind) nil nil)) nil)
             ("2" (skeep*)
              (("2" (inst - "i_1 + i - k" "j_1 + i - k")
                (("1" (inst - "q")
                  (("1" (expand "^")
                    (("1" (lift-if)
                      (("1" (assert) (("1" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil)
                 ("2" (assert)
                  (("2" (expand "^")
                    (("2" (expand "min")
                      (("2" (assert)
                        (("2" (typepred "j_1")
                          (("2" (expand "^")
                            (("2" (expand "min")
                              (("2" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("3" (assert)
                  (("3" (expand "^")
                    (("3" (expand "min")
                      (("3" (typepred "i_1")
                        (("3" (expand "^")
                          (("3" (expand "min") (("3" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (extend_do_not_cross_Am_edge_TCC1 0
  (extend_do_not_cross_Am_edge_TCC1-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (extend_do_not_cross_Am_edge subtype "merged_polygon_closed.B"
    "(injection_props.merge_pre_condition(merged_polygon_closed.A))"))
  (extend_do_not_cross_Am_edge_TCC1-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (extend_do_not_cross_Am_edge subtype "merged_polygon_closed.B"
    "(injection_props.merge_pre_condition(merged_polygon_closed.A))")))
 (extend_do_not_cross_Am_edge_TCC2 0
  (extend_do_not_cross_Am_edge_TCC2-2 nil 3874129021
   ("" (skeep) (("" (assert) (("" (postpone) nil nil)) nil)) nil) nil
   shostak
   (extend_do_not_cross_Am_edge subtype
    "(number_fields.-)(merged_polygon_closed.j, 1)" "below[M`length]"))
  (extend_do_not_cross_Am_edge_TCC2-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (extend_do_not_cross_Am_edge subtype
    "(number_fields.-)(merged_polygon_closed.j, 1)"
    "below[M`length]")))
 (extend_do_not_cross_Am_edge_TCC3 0
  (extend_do_not_cross_Am_edge_TCC3-2 nil 3874129021
   ("" (skeep)
    (("" (ground)
      (("1" (hide-all-but 1) (("1" (grind) nil nil)) nil)
       ("2" (skeep + t)
        (("2" (expand "^")
          (("2" (use "adj_merge_seq_vertices_distinct")
            (("2" (ground) (("2" (inst - "i") nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (extend_do_not_cross_Am_edge subtype
    "finite_sequences[point_2d].^(merged_polygon_closed.M, (0, merged_polygon_closed.j))"
    "segment_endpoint_seq"))
  (extend_do_not_cross_Am_edge_TCC3-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (extend_do_not_cross_Am_edge subtype
    "finite_sequences[point_2d].^(merged_polygon_closed.M, (0, merged_polygon_closed.j))"
    "segment_endpoint_seq")))
 (extend_do_not_cross_Am_edge_TCC4 0
  (extend_do_not_cross_Am_edge_TCC4-2 nil 3874129021
   ("" (skeep*)
    (("" (expand "^") (("" (expand "min") (("" (propax) nil nil)) nil))
      nil))
    nil)
   nil shostak
   (extend_do_not_cross_Am_edge subtype
    "(finite_sequences[point_2d].^(merged_polygon_closed.M, (0, merged_polygon_closed.j)))`seq"
    "[naturalnumbers.below((number_fields.+)(1, merged_polygon_closed.j)) -> point_2d]"))
  (extend_do_not_cross_Am_edge_TCC4-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (extend_do_not_cross_Am_edge subtype
    "(finite_sequences[point_2d].^(merged_polygon_closed.M, (0, merged_polygon_closed.j)))`seq"
    "[naturalnumbers.below((number_fields.+)(1, merged_polygon_closed.j)) -> point_2d]")))
 (extend_do_not_cross_Am_edge_TCC5 0
  (extend_do_not_cross_Am_edge_TCC5-2 nil 3874129021
   ("" (skeep)
    (("" (ground)
      (("1" (hide-all-but (-6 1)) (("1" (grind) nil nil)) nil)
       ("2" (skeep + t)
        (("2" (replace -8 :hide? t)
          (("2" (expand "o")
            (("2" (expand "^" (-1 -2))
              (("2" (expand "min")
                (("2" (expand "singleton_seq")
                  (("2" (assert)
                    (("2" (lift-if)
                      (("2" (ground)
                        (("2" (use "adj_merge_seq_vertices_distinct")
                          (("2" (assert) (("2" (inst - "i") nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (extend_do_not_cross_Am_edge subtype "merged_polygon_closed.S2"
    "segment_endpoint_seq"))
  (extend_do_not_cross_Am_edge_TCC5-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (extend_do_not_cross_Am_edge subtype "merged_polygon_closed.S2"
    "segment_endpoint_seq")))
 (extend_do_not_cross_Am_edge 0
  (extend_do_not_cross_Am_edge-1 nil 3874129021
   ("" (skeep*)
    (("" (case "S2`length = j + 2")
      (("1" (case "forall (k: below(j)): M`seq(k) /= M`seq(k + 1)")
        (("1"
          (case "forall (k: below(j + 2)): S2`seq(k) =
                                                                                                                         if k = j + 1 then e`p1 else M`seq(k) endif")
          (("1"
            (case "forall (k: below(j)): e /= (# p1 := M`seq(k), p2 := M`seq(k + 1) #)")
            (("1" (expand "segments_do_not_cross?")
              (("1" (flatten)
                (("1" (skeep*)
                  (("1" (rewrite -2 -13)
                    (("1" (rewrite -2 -13)
                      (("1" (rewrite -2 -14)
                        (("1" (rewrite -2 -14)
                          (("1" (assert)
                            (("1" (lift-if)
                              (("1"
                                (split -13)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (replace -1)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (use "merge_path_props")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (inst - "j!1")
                                            (("1"
                                              (split -1)
                                              (("1"
                                                (expand
                                                 "edge_of_polygon?")
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (typepred "Am")
                                                    (("1"
                                                      (expand
                                                       "simple_polygon_2d?")
                                                      (("1"
                                                        (typepred
                                                         "Am`num_vertices")
                                                        (("1"
                                                          (expand
                                                           "polygon_edges_do_not_cross?")
                                                          (("1"
                                                            (hide -17)
                                                            (("1"
                                                              (skeep)
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "i!2"
                                                                 "i!1")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "q")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "j!1")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "edges_of_polygon")
                                                                    (("2"
                                                                      (rewrite
                                                                       "point_on_reverse_segment"
                                                                       -
                                                                       :dir
                                                                       rl)
                                                                      (("2"
                                                                        (expand
                                                                         "reverse_segment")
                                                                        (("2"
                                                                          (replace
                                                                           -14)
                                                                          (("2"
                                                                            (replace
                                                                             -13
                                                                             -5
                                                                             :dir
                                                                             rl)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (use
                                                 "injected_only_vertex_intersections")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (inst-cp
                                                       -6
                                                       "j!1")
                                                      (("2"
                                                        (inst
                                                         -
                                                         "(# p1 := M`seq(j!1), p2 := M`seq(1 + j!1) #)")
                                                        (("1"
                                                          (hide -2)
                                                          (("1"
                                                            (expand
                                                             "only_vertex_intersections?")
                                                            (("1"
                                                              (inst
                                                               -
                                                               "e")
                                                              (("1"
                                                                (split
                                                                 -1)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (hide
                                                                       -1
                                                                       -16)
                                                                      (("1"
                                                                        (expand
                                                                         "reverse_segment")
                                                                        (("1"
                                                                          (expand
                                                                           "segment_endpoint?")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (replace
                                                                               -1
                                                                               -13)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "uniq_vertex_list?")
                                                                                  (("1"
                                                                                    (inst-cp
                                                                                     -15
                                                                                     "j"
                                                                                     "1 + j!1")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "^")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -15
                                                                                         "j"
                                                                                         "j!1")
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (replace
                                                                     -13)
                                                                    (("2"
                                                                      (rewrite
                                                                       "point_on_reverse_segment"
                                                                       :dir
                                                                       rl)
                                                                      (("2"
                                                                        (expand
                                                                         "reverse_segment")
                                                                        (("2"
                                                                          (equate
                                                                           "(# p1 := e`p1, p2 := e`p2 #)"
                                                                           "e")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "q")
                                                                            (("1"
                                                                              (expand
                                                                               "segment_endpoint?")
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (apply-extensionality
                                                                             :hide?
                                                                             t)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (inst
                                                           -7
                                                           "j!1")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2"
                                    (split -14)
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (replace -1)
                                        (("1"
                                          (hide -14)
                                          (("1"
                                            (expand
                                             "segment_endpoint?")
                                            (("1"
                                              (rewrite
                                               "point_on_reverse_segment"
                                               :dir
                                               rl)
                                              (("1"
                                                (expand
                                                 "reverse_segment")
                                                (("1"
                                                  (case-replace
                                                   "(# p1 := e`p1, p2 := e`p2 #) = e")
                                                  (("1"
                                                    (use
                                                     "merge_path_props")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst - "i")
                                                        (("1"
                                                          (split -1)
                                                          (("1"
                                                            (expand
                                                             "edge_of_polygon?")
                                                            (("1"
                                                              (skeep)
                                                              (("1"
                                                                (typepred
                                                                 "Am")
                                                                (("1"
                                                                  (expand
                                                                   "simple_polygon_2d?")
                                                                  (("1"
                                                                    (typepred
                                                                     "Am`num_vertices")
                                                                    (("1"
                                                                      (expand
                                                                       "polygon_edges_do_not_cross?")
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "i_1"
                                                                           "i!1")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "q")
                                                                            (("1"
                                                                              (expand
                                                                               "edges_of_polygon")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "i")
                                                                                    (("1"
                                                                                      (split
                                                                                       -2)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (replace
                                                                                         -15)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -16)
                                                                                          (("2"
                                                                                            (equate
                                                                                             "(# p1 := e`p1, p2 := e`p2 #)"
                                                                                             "e")
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "edges_of_polygon")
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (use
                                                             "injected_only_vertex_intersections")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (inst-cp
                                                                   -8
                                                                   "i")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "(# p1 := M`seq(i), p2 := M`seq(1 + i) #)")
                                                                    (("1"
                                                                      (hide
                                                                       -2)
                                                                      (("1"
                                                                        (expand
                                                                         "only_vertex_intersections?")
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "e")
                                                                          (("1"
                                                                            (ground)
                                                                            (("1"
                                                                              (expand
                                                                               "reverse_segment")
                                                                              (("1"
                                                                                (replace
                                                                                 -1
                                                                                 -16)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "uniq_vertex_list?")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -18
                                                                                       "j"
                                                                                       "i")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "^")
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (inst
                                                                               -
                                                                               "q")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand
                                                                                   "segment_endpoint?")
                                                                                  (("2"
                                                                                    (replace
                                                                                     -14)
                                                                                    (("2"
                                                                                      (equate
                                                                                       "(# p1 := e`p1, p2 := e`p2 #)"
                                                                                       "e")
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (inst
                                                                       -9
                                                                       "i")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (apply-extensionality
                                                     :hide?
                                                     t)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten)
                                      (("2"
                                        (split -13)
                                        (("1"
                                          (expand "^")
                                          (("1"
                                            (expand "min")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (inst - "i" "j!1")
                                          (("1"
                                            (inst - "q")
                                            (("1"
                                              (expand "^")
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "^")
                                            (("2"
                                              (expand "min")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (expand "^")
                                            (("3"
                                              (expand "min")
                                              (("3" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("2" (assert) nil nil))
                        nil)
                       ("2" (assert) nil nil))
                      nil)
                     ("2" (assert) nil nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (skeep)
              (("2" (replace -1)
                (("2" (expand "segment_endpoint?")
                  (("2" (expand "uniq_vertex_list?")
                    (("2" (flatten)
                      (("2" (case-replace "j = k + 1")
                        (("1" (assert) nil nil)
                         ("2" (inst-cp -12 "j" "k")
                          (("2" (inst-cp -12 "j" "k + 1")
                            (("1" (expand "^") (("1" (assert) nil nil))
                              nil)
                             ("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (skeep)
            (("2" (replace -8 1)
              (("2" (hide-all-but 1) (("2" (grind) nil nil)) nil))
              nil))
            nil)
           ("3" (skeep) (("3" (assert) nil nil)) nil)
           ("4" (skeep) (("4" (assert) nil nil)) nil))
          nil)
         ("2" (skeep)
          (("2" (expand "uniq_vertex_list?")
            (("2" (inst - "k" "k + 1")
              (("2" (expand "^") (("2" (assert) nil nil)) nil)) nil))
            nil))
          nil))
        nil)
       ("2" (replace -6)
        (("2" (hide-all-but 1) (("2" (grind) nil nil)) nil)) nil))
      nil))
    nil)
   nil shostak))
 (left_side_loop_back_is_ccw_TCC1 0
  (left_side_loop_back_is_ccw_TCC1-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (left_side_loop_back_is_ccw subtype
    "(number_fields.-)(merged_polygon_closed.j, 1)" "nat"))
  (left_side_loop_back_is_ccw_TCC1-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (left_side_loop_back_is_ccw subtype
    "(number_fields.-)(merged_polygon_closed.j, 1)" "nat")))
 (left_side_loop_back_is_ccw_TCC2 0
  (left_side_loop_back_is_ccw_TCC2-2 nil 3874129021
   ("" (skeep*)
    (("" (expand "^") (("" (expand "min") (("" (propax) nil nil)) nil))
      nil))
    nil)
   nil shostak
   (left_side_loop_back_is_ccw subtype
    "(finite_sequences[point_2d].^(merged_polygon_closed.M, (0, (number_fields.-)(merged_polygon_closed.j, 1))))`seq"
    "[naturalnumbers.below(merged_polygon_closed.j) -> point_2d]"))
  (left_side_loop_back_is_ccw_TCC2-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (left_side_loop_back_is_ccw subtype
    "(finite_sequences[point_2d].^(merged_polygon_closed.M, (0, (number_fields.-)(merged_polygon_closed.j, 1))))`seq"
    "[naturalnumbers.below(merged_polygon_closed.j) -> point_2d]")))
 (left_side_loop_back_is_ccw_TCC3 0
  (left_side_loop_back_is_ccw_TCC3-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (left_side_loop_back_is_ccw subtype "merged_polygon_closed.i"
    "below[M`length]"))
  (left_side_loop_back_is_ccw_TCC3-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (left_side_loop_back_is_ccw subtype "merged_polygon_closed.i"
    "below[M`length]")))
 (left_side_loop_back_is_ccw_TCC4 0
  (left_side_loop_back_is_ccw_TCC4-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (left_side_loop_back_is_ccw subtype
    "(number_fields.-)(merged_polygon_closed.j, 1)" "below[M`length]"))
  (left_side_loop_back_is_ccw_TCC4-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (left_side_loop_back_is_ccw subtype
    "(number_fields.-)(merged_polygon_closed.j, 1)"
    "below[M`length]")))
 (left_side_loop_back_is_ccw_TCC5 0
  (left_side_loop_back_is_ccw_TCC5-2 nil 3874129021
   ("" (skeep) (("" (assert) (("" (postpone) nil nil)) nil)) nil) nil
   shostak
   (left_side_loop_back_is_ccw subtype
    "(number_fields.+)(merged_polygon_closed.j, 1)"
    "below[S2`length]"))
  (left_side_loop_back_is_ccw_TCC5-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (left_side_loop_back_is_ccw subtype
    "(number_fields.+)(merged_polygon_closed.j, 1)"
    "below[S2`length]")))
 (left_side_loop_back_is_ccw_TCC6 0
  (left_side_loop_back_is_ccw_TCC6-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (left_side_loop_back_is_ccw subtype "0" "below[M`length]"))
  (left_side_loop_back_is_ccw_TCC6-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (left_side_loop_back_is_ccw subtype "0" "below[M`length]")))
 (left_side_loop_back_is_ccw_TCC7 0
  (left_side_loop_back_is_ccw_TCC7-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (left_side_loop_back_is_ccw subtype
    "(number_fields.-)(merged_polygon_closed.i, 1)" "below[M`length]"))
  (left_side_loop_back_is_ccw_TCC7-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (left_side_loop_back_is_ccw subtype
    "(number_fields.-)(merged_polygon_closed.i, 1)"
    "below[M`length]")))
 (left_side_loop_back_is_ccw_TCC8 0
  (left_side_loop_back_is_ccw_TCC8-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (left_side_loop_back_is_ccw subtype
    "(number_fields.+)(1, merged_polygon_closed.i)" "below[M`length]"))
  (left_side_loop_back_is_ccw_TCC8-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (left_side_loop_back_is_ccw subtype
    "(number_fields.+)(1, merged_polygon_closed.i)"
    "below[M`length]")))
 (left_side_loop_back_is_ccw_TCC9 0
  (left_side_loop_back_is_ccw_TCC9-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (left_side_loop_back_is_ccw subtype
    "merged_polygon_closed.S2`length" "posnat"))
  (left_side_loop_back_is_ccw_TCC9-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (left_side_loop_back_is_ccw subtype
    "merged_polygon_closed.S2`length" "posnat")))
 (left_side_loop_back_is_ccw_TCC10 0
  (left_side_loop_back_is_ccw_TCC10-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (left_side_loop_back_is_ccw subtype
    "segment_endpoint_sequences.loop_back_intercept(merged_polygon_closed.S2)"
    "naturalnumbers.below(merged_polygon_closed.S2`length)"))
  (left_side_loop_back_is_ccw_TCC10-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (left_side_loop_back_is_ccw subtype
    "segment_endpoint_sequences.loop_back_intercept(merged_polygon_closed.S2)"
    "naturalnumbers.below(merged_polygon_closed.S2`length)")))
 (left_side_loop_back_is_ccw_TCC11 0
  (left_side_loop_back_is_ccw_TCC11-2 nil 3874129021
   ("" (skeep*) (("" (assert) nil nil)) nil) nil shostak
   (left_side_loop_back_is_ccw subtype
    "(number_fields.+)(merged_polygon_closed.i, merged_polygon_closed.k)"
    "below[M`length]"))
  (left_side_loop_back_is_ccw_TCC11-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (left_side_loop_back_is_ccw subtype
    "(number_fields.+)(merged_polygon_closed.i, merged_polygon_closed.k)"
    "below[M`length]")))
 (left_side_loop_back_is_ccw 0
  (left_side_loop_back_is_ccw-1 nil 3874129021
   ("" (skeep*)
    (("" (name-replace "R" "reverse_polygon(C)")
      (("" (use "ccw_reverse_polygon")
        (("" (assert)
          ((""
            (name-replace "d"
             "min(in_out_edge_offset_dist(R), max_miter_offset(S2))")
            (("1" (case "R`num_vertices = C`num_vertices")
              (("1" (name-replace "h" "edges_of_polygon(R)(0)")
                (("1"
                  (name-replace "q" "leftward_segment_offset(h, d)")
                  (("1" (case "point_outside_polygon?(q, C)")
                    (("1" (use "pt_outside_eqv_outside_rev_polygon")
                      (("1" (assert)
                        (("1"
                          (lemma "leftward_nearby_ccw_points_inside")
                          (("1" (inst - "R" "0")
                            (("1"
                              (expand "leftward_nearby_points_inside?")
                              (("1"
                                (inst - "d")
                                (("1"
                                  (expand "in_out_edge_offset_dist")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (use "point_out_not_in")
                                      (("1" (ground) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (name-replace "MPS" "miter_point_seq(S2, d)")
                      (("2" (case "MPS`length = j")
                        (("1"
                          (case "forall (k: upto(j + 1)): S2`seq(k) =                                             if k = 0 then w elsif k = j + 1 then Am`vertices(r)				       else M`seq(k - 1) endif")
                          (("1"
                            (case "S2`seq(1 + i) = S2`seq(S2`length - 1)")
                            (("1"
                              (case "1 + i = loop_back_intercept(S2)")
                              (("1"
                                (case
                                 "point_outside_polygon?(MPS`seq(j - 1), C)")
                                (("1"
                                  (use
                                   "three_pt_miniseq_in_endpt_seq_wrap")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (ground)
                                      (("1"
                                        (use
                                         "four_pt_miniseq_in_endpt_seq_wrap")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (ground)
                                            (("1"
                                              (use
                                               "four_pt_miniseq_in_endpt_seq_wrap_2")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (ground)
                                                  (("1"
                                                    (replace
                                                     -8
                                                     :dir
                                                     rl)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (replace -23)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (rewrite
                                                             -10
                                                             -1)
                                                            (("1"
                                                              (rewrite
                                                               -10
                                                               -1)
                                                              (("1"
                                                                (rewrite
                                                                 -10
                                                                 -1)
                                                                (("1"
                                                                  (rewrite
                                                                   -10
                                                                   -1)
                                                                  (("1"
                                                                    (rewrite
                                                                     -10
                                                                     -3)
                                                                    (("1"
                                                                      (copy
                                                                       -3)
                                                                      (("1"
                                                                        (copy
                                                                         -2)
                                                                        (("1"
                                                                          (expand
                                                                           "four_point_miniseq?"
                                                                           (-1
                                                                            -2))
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (name-replace*
                                                                               ("m2"
                                                                                "miter_point(M`seq(j - 1),
                                                                                                                                                                              M`seq(j - 2),
                                                                                                                                                                              M`seq(i),
                                                                                                                                                                              d)"
                                                                                "m3"
                                                                                "miter_point(M`seq(i),
                                                                                                                                                                              M`seq(j - 1),
                                                                                                                                                                              M`seq(1 + i),
                                                                                                                                                                              d)"))
                                                                              (("1"
                                                                                (case
                                                                                 "m2 = m3")
                                                                                (("1"
                                                                                  (lemma
                                                                                   "successive_miter_pair_neq")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "M`seq(j - 2)"
                                                                                     "M`seq(j - 1)"
                                                                                     "M`seq(i)"
                                                                                     "M`seq(i + 1)"
                                                                                     "d")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "norm(m3 - m2) > 0")
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "extend_points_outside_polygon")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "MPS`seq(j - 1)"
                                                                                       "(# p1 := m2, p2 := m3 #)"
                                                                                       "C")
                                                                                      (("1"
                                                                                        (case
                                                                                         "point_on_segment?(q, (# p1 := m2, p2 := m3 #))")
                                                                                        (("1"
                                                                                          (ground)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "q")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "MPS"
                                                                                             1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "miter_point_seq"
                                                                                               1)
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 -14
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (rewrite
                                                                                                   -14
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (rewrite
                                                                                                     -14
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (skeep)
                                                                                            (("3"
                                                                                              (expand
                                                                                               "point_on_polygon_perimeter?")
                                                                                              (("3"
                                                                                                (skeep
                                                                                                 -
                                                                                                 t)
                                                                                                (("3"
                                                                                                  (expand
                                                                                                   "edge_of_polygon?")
                                                                                                  (("3"
                                                                                                    (skeep)
                                                                                                    (("3"
                                                                                                      (case
                                                                                                       "i!1 < j - i - 2")
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "miter_seg_pts_not_on_nonadj_prev_wrap")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "S2"
                                                                                                           "i + i!1 + 1"
                                                                                                           "d")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -17
                                                                                                               :dir
                                                                                                               rl)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -32)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     -19
                                                                                                                     -2)
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       -19
                                                                                                                       -2)
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         -19
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (rewrite
                                                                                                                           -19
                                                                                                                           -2)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -8)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -9)
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "q!1")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (rewrite
                                                                                                                                       -18
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (rewrite
                                                                                                                                         -18
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "edges_of_polygon")
                                                                                                                                          (("1"
                                                                                                                                            (inst-cp
                                                                                                                                             -45
                                                                                                                                             "i!1")
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -45
                                                                                                                                               "1 + i!1")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "next_index")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (case
                                                                                                                                     "norm(M`seq(j - 1) - M`seq(i)) > 0")
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "miter_seg_pts_not_on_next_seg")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "M`seq(j - 1)"
                                                                                                                                         "M`seq(i)"
                                                                                                                                         "M`seq(1 + i)"
                                                                                                                                         "norm(m2 - m3) / norm(M`seq(j - 1) - M`seq(i))"
                                                                                                                                         "d")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "q!1")
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -10)
                                                                                                                                              (("1"
                                                                                                                                                (split
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "edges_of_polygon")
                                                                                                                                                  (("1"
                                                                                                                                                    (inst-cp
                                                                                                                                                     -47
                                                                                                                                                     "0")
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       -47
                                                                                                                                                       "1")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "next_index")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             -4
                                                                                                                                                             :dir
                                                                                                                                                             rl)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -47)
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -48)
                                                                                                                                                                (("1"
                                                                                                                                                                  (propax)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (lemma
                                                                                                                                                   "miter_pt_segment_parallel_to_orig")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "M`seq(j - 2)"
                                                                                                                                                     "M`seq(j - 1)"
                                                                                                                                                     "M`seq(i)"
                                                                                                                                                     "M`seq(1 + i)"
                                                                                                                                                     "d")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -10)
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -11)
                                                                                                                                                          (("2"
                                                                                                                                                            (rewrite
                                                                                                                                                             "dir_parallel_diff")
                                                                                                                                                            (("2"
                                                                                                                                                              (rewrite
                                                                                                                                                               "dir_parallel_eqv_normalized_diffs_eq")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "^"
                                                                                                                                                                 -1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (mult-by
                                                                                                                                                                   -1
                                                                                                                                                                   "norm(M`seq(j - 1) - M`seq(i))")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (name-replace
                                                                                                                                                                     "n"
                                                                                                                                                                     "norm(M`seq(j - 1) - M`seq(i))")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       -1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (real-props)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (hide-all-but
                                                                                                                                                                           (-6
                                                                                                                                                                            1))
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "point_on_segment?")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (skeep)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 +
                                                                                                                                                                                 "1 - t")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (ground)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (grind-with-ext)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (splash
                                                                                                                                           1
                                                                                                                                           t)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (cross-mult
                                                                                                                                             1)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (lemma
                                                                                                                                       "norm_eq_0")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (case-replace
                                                                                                         "i!1 = j - i - 2")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "norm(M`seq(i) - M`seq(j - 1)) > 0")
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "miter_seg_pts_not_on_prev_seg")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "M`seq(j - 2)"
                                                                                                                 "M`seq(j - 1)"
                                                                                                                 "M`seq(i)"
                                                                                                                 "norm(m3 - m2) / norm(M`seq(i) - M`seq(j - 1))"
                                                                                                                 "d")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "q!1")
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -10)
                                                                                                                      (("1"
                                                                                                                        (split
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "edges_of_polygon")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "next_index")
                                                                                                                            (("1"
                                                                                                                              (inst-cp
                                                                                                                               -46
                                                                                                                               "-2 - i + j")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -46
                                                                                                                                 "-1 - i + j")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (lemma
                                                                                                                           "miter_pt_segment_parallel_to_orig")
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "M`seq(j - 2)"
                                                                                                                             "M`seq(j - 1)"
                                                                                                                             "M`seq(i)"
                                                                                                                             "M`seq(1 + i)"
                                                                                                                             "d")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -10)
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -9)
                                                                                                                                  (("2"
                                                                                                                                    (rewrite
                                                                                                                                     "dir_parallel_eqv_normalized_diffs_eq")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "^"
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (mult-by
                                                                                                                                         -1
                                                                                                                                         "norm(M`seq(i) - M`seq(j - 1))")
                                                                                                                                        (("2"
                                                                                                                                          (name-replace
                                                                                                                                           "n"
                                                                                                                                           "norm(M`seq(i) - M`seq(j - 1))")
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (real-props)
                                                                                                                                              (("2"
                                                                                                                                                (hide-all-but
                                                                                                                                                 (-5
                                                                                                                                                  1))
                                                                                                                                                (("2"
                                                                                                                                                  (grind)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (lemma
                                                                                                                   "three_pt_miniseq_in_endpt_seq")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "S2"
                                                                                                                     "j"
                                                                                                                     "d")
                                                                                                                    (("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         -21
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (rewrite
                                                                                                                           -21
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (rewrite
                                                                                                                             -21
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("3"
                                                                                                                  (splash
                                                                                                                   1
                                                                                                                   t)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (cross-mult
                                                                                                                     1)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("4"
                                                                                                                  (assert)
                                                                                                                  (("4"
                                                                                                                    (expand
                                                                                                                     "three_point_miniseq?")
                                                                                                                    (("4"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (lemma
                                                                                                               "norm_eq_0")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "M`seq(i) - M`seq(j - 1)")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (equate
                                                                                                           "i!1"
                                                                                                           "j - i - 1"
                                                                                                           (assert))
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "miter_seg_points_not_on_seg")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "M`seq(j - 2)"
                                                                                                               "M`seq(j - 1)"
                                                                                                               "M`seq(i)"
                                                                                                               "M`seq(1 + i)"
                                                                                                               "d")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -7)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -8)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "q!1")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "edges_of_polygon")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "next_index")
                                                                                                                            (("2"
                                                                                                                              (inst-cp
                                                                                                                               -44
                                                                                                                               "-1 - i + j")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -44
                                                                                                                                 "0")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("2"
                                                                                            (case
                                                                                             "q = rightward_segment_offset((# p1 := M`seq(j - 1), p2 := M`seq(i) #), d)")
                                                                                            (("1"
                                                                                              (use
                                                                                               "right_seg_offset_on_miter_pt_seg_wrap")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -13
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     -15
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       -15
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         -15
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           -15
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (replace
                                                                                               -16
                                                                                               1
                                                                                               :dir
                                                                                               rl)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -17
                                                                                                 1
                                                                                                 :dir
                                                                                                 rl)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "R"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (rewrite
                                                                                                     "edges_of_reverse_polygon")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "rev_polygon_index")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "prev_index")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "edges_of_polygon"
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "next_index")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "reverse_segment")
                                                                                                              (("2"
                                                                                                                (inst-cp
                                                                                                                 -40
                                                                                                                 "0")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -40
                                                                                                                   "C`num_vertices - 1")
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -39)
                                                                                                                    (("2"
                                                                                                                      (hide-all-but
                                                                                                                       (-25
                                                                                                                        -40
                                                                                                                        -41
                                                                                                                        1))
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -2
                                                                                                                         :hide?
                                                                                                                         t)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -2
                                                                                                                           :hide?
                                                                                                                           t)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "leftward_segment_offset")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "rightward_segment_offset")
                                                                                                                                (("2"
                                                                                                                                  (equate
                                                                                                                                   "perp_right(M`seq(j - 1) - M`seq(i))"
                                                                                                                                   "perp_left(M`seq(i) - M`seq(j - 1))")
                                                                                                                                  (("1"
                                                                                                                                    (cancel-add
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (hide
                                                                                                                                       -)
                                                                                                                                      (("1"
                                                                                                                                        (grind)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (expand
                                                                                                                                       "uniq_vertex_list?")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "i"
                                                                                                                                         "j - 1")
                                                                                                                                        (("2"
                                                                                                                                          (hide
                                                                                                                                           2)
                                                                                                                                          (("2"
                                                                                                                                            (grind)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide-all-but
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (grind)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (use
                                                                                     "norm_eq_0")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (hide 2)
                                  (("2"
                                    (expand "point_outside_polygon?")
                                    (("2"
                                      (inst
                                       +
                                       "(# body := (# length := j,
                                                                                               seq := reverse_segment_seq(MPS)`seq #), tail := (-1, 0) #)")
                                      (("1"
                                        (split 1)
                                        (("1"
                                          (expand "serp_ray_outside?")
                                          (("1"
                                            (split 1)
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (expand
                                                 "reverse_segment_seq")
                                                (("1"
                                                  (replace -6)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (use
                                                       "no_intersection_with_skimming_segments")
                                                      (("1"
                                                        (split -1)
                                                        (("1"
                                                          (expand
                                                           "MPS"
                                                           -2)
                                                          (("1"
                                                            (inst
                                                             -
                                                             "p")
                                                            (("1"
                                                              (split 1)
                                                              (("1"
                                                                (expand
                                                                 "point_on_segment_seq?")
                                                                (("1"
                                                                  (expand
                                                                   "point_on_polygon_perimeter?")
                                                                  (("1"
                                                                    (skeep
                                                                     -
                                                                     t)
                                                                    (("1"
                                                                      (expand
                                                                       "edge_of_polygon?")
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (expand
                                                                           "edges_of_polygon")
                                                                          (("1"
                                                                            (inst-cp
                                                                             -33
                                                                             "i!2")
                                                                            (("1"
                                                                              (inst
                                                                               -33
                                                                               "next_index(C, i!2)")
                                                                              (("1"
                                                                                (inst
                                                                                 +
                                                                                 "i!2 + i + 1")
                                                                                (("1"
                                                                                  (rewrite
                                                                                   -6
                                                                                   1)
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     -6
                                                                                     1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "next_index")
                                                                                      (("1"
                                                                                        (lift-if)
                                                                                        (("1"
                                                                                          (ground)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "point_on_segment_seq?")
                                                                (("2"
                                                                  (rewrite
                                                                   "point_on_reverse_segment"
                                                                   -1
                                                                   :dir
                                                                   rl)
                                                                  (("1"
                                                                    (expand
                                                                     "reverse_segment")
                                                                    (("1"
                                                                      (inst
                                                                       +
                                                                       "-2 - i!1 + j")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "miter_point_seq"
                                                                     1)
                                                                    (("2"
                                                                      (use
                                                                       "successive_miter_points_neq")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "no_right_side_loop_back?")
                                                          (("2"
                                                            (replace
                                                             -4
                                                             :dir
                                                             rl)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (rewrite
                                                                 -6
                                                                 -1)
                                                                (("2"
                                                                  (rewrite
                                                                   -6
                                                                   -1)
                                                                  (("2"
                                                                    (rewrite
                                                                     -6
                                                                     -1)
                                                                    (("2"
                                                                      (rewrite
                                                                       -6
                                                                       -1)
                                                                      (("2"
                                                                        (replace
                                                                         -22
                                                                         :dir
                                                                         rl)
                                                                        (("2"
                                                                          (replace
                                                                           -21
                                                                           :dir
                                                                           rl)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (rewrite*
                                                                               "between_rays_equiv")
                                                                              (("1"
                                                                                (rewrite
                                                                                 "reverse_reverse_segment")
                                                                                (("1"
                                                                                  (use
                                                                                   "point_between_rays_antisymmetric")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "reverse_segment")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (split
                                                                                           1)
                                                                                          (("1"
                                                                                            (hide-all-but
                                                                                             (-25
                                                                                              -26
                                                                                              1))
                                                                                            (("1"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (lift-if)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -19)
                                                                                              (("2"
                                                                                                (ground)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -2
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -28
                                                                                                       :dir
                                                                                                       rl)
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (replace
                                                                                                   -1
                                                                                                   +)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -26
                                                                                                       :dir
                                                                                                       rl)
                                                                                                      (("2"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "reverse_segment")
                                                                                (("2"
                                                                                  (replace
                                                                                   -26
                                                                                   1)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -25
                                                                                       1)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (use
                                                                                 "adj_merge_seq_vertices_distinct")
                                                                                (("3"
                                                                                  (assert)
                                                                                  (("3"
                                                                                    (inst
                                                                                     -
                                                                                     "i")
                                                                                    (("3"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("4"
                                                                                (lift-if)
                                                                                (("4"
                                                                                  (ground)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -32
                                                                                     "Am`vertices(r)")
                                                                                    (("1"
                                                                                      (split
                                                                                       -32
                                                                                       :depth
                                                                                       1)
                                                                                      (("1"
                                                                                        (ground)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -28
                                                                                           :dir
                                                                                           rl)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -8)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -31)
                                                                                              (("1"
                                                                                                (hide-all-but
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "point_on_polygon_perimeter?")
                                                                                          (("2"
                                                                                            (inst
                                                                                             +
                                                                                             "edges_of_polygon(Am)(r)")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (use
                                                                                     "adj_merge_seq_vertices_distinct")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "i - 1")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("5"
                                                                                (ground)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (skeep)
                                              (("2"
                                                (expand
                                                 "reverse_segment_seq")
                                                (("2"
                                                  (replace -5)
                                                  (("2"
                                                    (expand "MPS")
                                                    (("2"
                                                      (expand
                                                       "miter_point_seq"
                                                       -1)
                                                      (("2"
                                                        (rewrite -4 -1)
                                                        (("2"
                                                          (rewrite
                                                           -4
                                                           -1)
                                                          (("2"
                                                            (rewrite
                                                             -4
                                                             -1)
                                                            (("2"
                                                              (case
                                                               "miter_point(M`seq(0), w, M`seq(1), d)`x < M`seq(0)`x")
                                                              (("1"
                                                                (expand
                                                                 "point_on_polygon_perimeter?")
                                                                (("1"
                                                                  (skeep)
                                                                  (("1"
                                                                    (copy
                                                                     -2)
                                                                    (("1"
                                                                      (expand
                                                                       "point_on_segment?"
                                                                       -1)
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (inst
                                                                           -29
                                                                           "miter_point(M`seq(0), w, M`seq(1), d) + d!1 * (# x := -1, y := 0 #)")
                                                                          (("1"
                                                                            (split
                                                                             -29
                                                                             :depth
                                                                             1)
                                                                            (("1"
                                                                              (expand
                                                                               "+"
                                                                               -1)
                                                                              (("1"
                                                                                (expand
                                                                                 "*"
                                                                                 -1)
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (inst-cp
                                                                                 +
                                                                                 "edges_of_polygon(Am)(r)")
                                                                                (("2"
                                                                                  (replace
                                                                                   -3
                                                                                   2)
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "e!1")
                                                                                    (("2"
                                                                                      (inst
                                                                                       +
                                                                                       "e!1")
                                                                                      (("2"
                                                                                        (inst
                                                                                         +
                                                                                         "e!1")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "edge_of_polygon?")
                                                                                          (("2"
                                                                                            (skeep)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "edges_of_polygon")
                                                                                              (("2"
                                                                                                (inst-cp
                                                                                                 -34
                                                                                                 "i!1")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "next_index"
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (lift-if
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -35
                                                                                                           "0")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "point_on_segment?")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               3
                                                                                                               "1 - t")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -2
                                                                                                                   3
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -34)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (hide-all-but
                                                                                                                             (-24
                                                                                                                              -25
                                                                                                                              -35
                                                                                                                              -36
                                                                                                                              3))
                                                                                                                            (("1"
                                                                                                                              (grind)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -34
                                                                                                           "1 + i!1")
                                                                                                          (("2"
                                                                                                            (use
                                                                                                             "merge_path_props")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "i + i!1")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "edge_of_polygon?")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "edges_of_polygon")
                                                                                                                    (("2"
                                                                                                                      (split
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (skeep)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           3
                                                                                                                           "i_1")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (skeep)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           2
                                                                                                                           "i_1")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (replace
                                                                 -21
                                                                 1)
                                                                (("2"
                                                                  (lemma
                                                                   "miter_point_cross_pos")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "S2"
                                                                     "1"
                                                                     "d")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (rewrite
                                                                         -5
                                                                         -1)
                                                                        (("2"
                                                                          (rewrite
                                                                           -5
                                                                           -1)
                                                                          (("2"
                                                                            (rewrite
                                                                             -5
                                                                             -1)
                                                                            (("2"
                                                                              (inst
                                                                               -26
                                                                               "M`seq(1)")
                                                                              (("2"
                                                                                (replace
                                                                                 -22
                                                                                 -1)
                                                                                (("2"
                                                                                  (hide-all-but
                                                                                   (-1
                                                                                    -26
                                                                                    1))
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (split
                                                                                       -3
                                                                                       :depth
                                                                                       1)
                                                                                      (("1"
                                                                                        (name-replace
                                                                                         "mp"
                                                                                         "miter_point(M`seq(0), M`seq(0) + (# x := 0, y := 1 #), M`seq(1), d)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide-all-but
                                                                                         1)
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "point_on_polygon_perimeter?")
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "merge_path_props")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "A"
                                                                                                 "B"
                                                                                                 "Am"
                                                                                                 "Bm"
                                                                                                 "M")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "1")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "edge_of_polygon?")
                                                                                                      (("1"
                                                                                                        (ground)
                                                                                                        (("1"
                                                                                                          (skeep)
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "edges_of_polygon")
                                                                                                              (("1"
                                                                                                                (ground)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "point_on_segment?")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "0")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (skeep)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "point_on_segment?")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   +
                                                                                                                   "0")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (typepred
                                                                                                   "B")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "ccw_merge_pre_condition")
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "MPS" 1)
                                          (("2"
                                            (expand
                                             "reverse_segment_seq")
                                            (("2"
                                              (expand
                                               "miter_point_seq")
                                              (("2"
                                                (replace -16 1)
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (skeep)
                                        (("2"
                                          (expand
                                           "reverse_segment_seq")
                                          (("2"
                                            (replace -5)
                                            (("2"
                                              (expand "MPS" -1)
                                              (("2"
                                                (expand
                                                 "miter_point_seq")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (lemma
                                                     "successive_miter_points_neq")
                                                    (("2"
                                                      (inst
                                                       -
                                                       "S2"
                                                       "-1 - i!1 + j"
                                                       "d")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3"
                                        (hide-all-but 1)
                                        (("3" (grind) nil nil))
                                        nil)
                                       ("4"
                                        (expand "reverse_segment_seq")
                                        (("4"
                                          (hide-all-but (-4 1))
                                          (("4" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3" (assert) nil nil))
                                nil)
                               ("2"
                                (use "intercept_index_value")
                                (("2" (ground) nil nil))
                                nil))
                              nil)
                             ("2" (rewrite -1 1)
                              (("2" (rewrite -1 1) nil nil)) nil))
                            nil)
                           ("2" (replace -14 1)
                            (("2" (hide-all-but 1)
                              (("2" (grind) nil nil)) nil))
                            nil)
                           ("3" (hide-all-but 1)
                            (("3" (grind) nil nil)) nil))
                          nil)
                         ("2" (expand "MPS" 1)
                          (("2" (expand "miter_point_seq")
                            (("2" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (replace -4 1 :dir rl)
                  (("2" (expand "reverse_polygon")
                    (("2" (assert) nil nil)) nil))
                  nil))
                nil)
               ("2" (replace -3 1 :dir rl)
                (("2" (expand "reverse_polygon")
                  (("2" (propax) nil nil)) nil))
                nil))
              nil)
             ("2" (use "reverse_polygon_is_simple")
              (("2" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (no_incoming_edge_at_i_TCC1 0
  (no_incoming_edge_at_i_TCC1-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_incoming_edge_at_i subtype
    "(number_fields.-)(merged_polygon_closed.M`length, 1)" "nat"))
  (no_incoming_edge_at_i_TCC1-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_incoming_edge_at_i subtype
    "(number_fields.-)(merged_polygon_closed.M`length, 1)" "nat")))
 (no_incoming_edge_at_i_TCC2 0
  (no_incoming_edge_at_i_TCC2-2 nil 3874129021
   ("" (skeep*) (("" (ground) nil nil)) nil) nil shostak
   (no_incoming_edge_at_i subtype
    "(number_fields.-)(merged_polygon_closed.i, 1)" "below[M`length]"))
  (no_incoming_edge_at_i_TCC2-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_incoming_edge_at_i subtype
    "(number_fields.-)(merged_polygon_closed.i, 1)"
    "below[M`length]")))
 (no_incoming_edge_at_i_TCC3 0
  (no_incoming_edge_at_i_TCC3-2 nil 3874129021
   ("" (skeep*) (("" (assert) nil nil)) nil) nil shostak
   (no_incoming_edge_at_i subtype "merged_polygon_closed.i"
    "below[M`length]"))
  (no_incoming_edge_at_i_TCC3-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_incoming_edge_at_i subtype "merged_polygon_closed.i"
    "below[M`length]")))
 (no_incoming_edge_at_i_TCC4 0
  (no_incoming_edge_at_i_TCC4-2 nil 3874129021
   ("" (skeep*) (("" (assert) nil nil)) nil) nil shostak
   (no_incoming_edge_at_i subtype
    "(number_fields.+)(merged_polygon_closed.i, 1)" "below[M`length]"))
  (no_incoming_edge_at_i_TCC4-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_incoming_edge_at_i subtype
    "(number_fields.+)(merged_polygon_closed.i, 1)"
    "below[M`length]")))
 (no_min_inc_back_side_edge_from_M_contained_TCC1 0
  (no_min_inc_back_side_edge_from_M_contained_TCC1-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_min_inc_back_side_edge_from_M_contained subtype
    "merged_polygon_closed.B"
    "(injection_props.merge_pre_condition(merged_polygon_closed.A))"))
  (no_min_inc_back_side_edge_from_M_contained_TCC1-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M_contained subtype
    "merged_polygon_closed.B"
    "(injection_props.merge_pre_condition(merged_polygon_closed.A))")))
 (no_min_inc_back_side_edge_from_M_contained_TCC2 0
  (no_min_inc_back_side_edge_from_M_contained_TCC2-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_min_inc_back_side_edge_from_M_contained subtype
    "(finite_sequences[point_2d].^(merged_polygon_closed.M, (0, (number_fields.+)(1, merged_polygon_closed.i))))`seq"
    "[naturalnumbers.below((number_fields.+)(2, merged_polygon_closed.i)) -> point_2d]"))
  (no_min_inc_back_side_edge_from_M_contained_TCC2-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M_contained subtype
    "(finite_sequences[point_2d].^(merged_polygon_closed.M, (0, (number_fields.+)(1, merged_polygon_closed.i))))`seq"
    "[naturalnumbers.below((number_fields.+)(2, merged_polygon_closed.i)) -> point_2d]")))
 (no_min_inc_back_side_edge_from_M_contained_TCC3 0
  (no_min_inc_back_side_edge_from_M_contained_TCC3-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_min_inc_back_side_edge_from_M_contained subtype
    "(number_fields.+)(merged_polygon_closed.k, merged_polygon_closed.l)"
    "below[M`length]"))
  (no_min_inc_back_side_edge_from_M_contained_TCC3-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M_contained subtype
    "(number_fields.+)(merged_polygon_closed.k, merged_polygon_closed.l)"
    "below[M`length]")))
 (no_min_inc_back_side_edge_from_M_contained_TCC4 0
  (no_min_inc_back_side_edge_from_M_contained_TCC4-2 nil 3874129021
   ("" (skeep*) (("" (ground) nil nil)) nil) nil shostak
   (no_min_inc_back_side_edge_from_M_contained subtype
    "merged_polygon_closed.C"
    "[# num_vertices: int, vertices: [naturalnumbers.below((number_fields.-)((number_fields.+)(1, merged_polygon_closed.i), merged_polygon_closed.k)) -> point_2d] #]"))
  (no_min_inc_back_side_edge_from_M_contained_TCC4-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M_contained subtype
    "merged_polygon_closed.C"
    "[# num_vertices: int, vertices: [naturalnumbers.below((number_fields.-)((number_fields.+)(1, merged_polygon_closed.i), merged_polygon_closed.k)) -> point_2d] #]")))
 (no_min_inc_back_side_edge_from_M_contained_TCC5 0
  (no_min_inc_back_side_edge_from_M_contained_TCC5-2 nil 3874129021
   ("" (skeep*) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_back_side_edge_from_M_contained subtype
    "(number_fields.+)(merged_polygon_closed.k, merged_polygon_closed.l)"
    "below[M`length]"))
  (no_min_inc_back_side_edge_from_M_contained_TCC5-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M_contained subtype
    "(number_fields.+)(merged_polygon_closed.k, merged_polygon_closed.l)"
    "below[M`length]")))
 (no_min_inc_back_side_edge_from_M_contained_TCC6 0
  (no_min_inc_back_side_edge_from_M_contained_TCC6-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_min_inc_back_side_edge_from_M_contained subtype "0"
    "below[M`length]"))
  (no_min_inc_back_side_edge_from_M_contained_TCC6-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M_contained subtype "0"
    "below[M`length]")))
 (no_min_inc_back_side_edge_from_M_contained_TCC7 0
  (no_min_inc_back_side_edge_from_M_contained_TCC7-2 nil 3874129021
   ("" (skeep*) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_back_side_edge_from_M_contained subtype
    "merged_polygon_closed.i" "below[M`length]"))
  (no_min_inc_back_side_edge_from_M_contained_TCC7-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M_contained subtype
    "merged_polygon_closed.i" "below[M`length]")))
 (no_min_inc_back_side_edge_from_M_contained_TCC8 0
  (no_min_inc_back_side_edge_from_M_contained_TCC8-2 nil 3874129021
   ("" (skeep*) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_back_side_edge_from_M_contained subtype
    "(number_fields.+)(1, merged_polygon_closed.i)" "below[M`length]"))
  (no_min_inc_back_side_edge_from_M_contained_TCC8-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M_contained subtype
    "(number_fields.+)(1, merged_polygon_closed.i)"
    "below[M`length]")))
 (no_min_inc_back_side_edge_from_M_contained_TCC9 0
  (no_min_inc_back_side_edge_from_M_contained_TCC9-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_min_inc_back_side_edge_from_M_contained subtype "0"
    "below[M`length]"))
  (no_min_inc_back_side_edge_from_M_contained_TCC9-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M_contained subtype "0"
    "below[M`length]")))
 (no_min_inc_back_side_edge_from_M_contained_TCC10 0
  (no_min_inc_back_side_edge_from_M_contained_TCC10-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_min_inc_back_side_edge_from_M_contained subtype
    "merged_polygon_closed.i" "below[M`length]"))
  (no_min_inc_back_side_edge_from_M_contained_TCC10-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M_contained subtype
    "merged_polygon_closed.i" "below[M`length]")))
 (no_min_inc_back_side_edge_from_M_contained_TCC11 0
  (no_min_inc_back_side_edge_from_M_contained_TCC11-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_back_side_edge_from_M_contained subtype
    "(number_fields.-)(merged_polygon_closed.i, 1)" "below[M`length]"))
  (no_min_inc_back_side_edge_from_M_contained_TCC11-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M_contained subtype
    "(number_fields.-)(merged_polygon_closed.i, 1)"
    "below[M`length]")))
 (no_min_inc_back_side_edge_from_M_contained_TCC12 0
  (no_min_inc_back_side_edge_from_M_contained_TCC12-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_back_side_edge_from_M_contained subtype
    "(number_fields.+)(1, merged_polygon_closed.i)" "below[M`length]"))
  (no_min_inc_back_side_edge_from_M_contained_TCC12-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M_contained subtype
    "(number_fields.+)(1, merged_polygon_closed.i)"
    "below[M`length]")))
 (no_min_inc_back_side_edge_from_M_contained_TCC13 0
  (no_min_inc_back_side_edge_from_M_contained_TCC13-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_back_side_edge_from_M_contained subtype
    "merged_polygon_closed.k" "below[M`length]"))
  (no_min_inc_back_side_edge_from_M_contained_TCC13-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M_contained subtype
    "merged_polygon_closed.k" "below[M`length]")))
 (no_min_inc_back_side_edge_from_M_contained 0
  (no_min_inc_back_side_edge_from_M_contained-1 nil 3874129021
   ("" (skeep*)
    (("" (expand "polygon_contained?")
      (("" (skeep)
        (("" (use "point_out_not_in")
          (("" (assert)
            ((""
              (case "FORALL (h: (edge_of_polygon?(Am))):
                                     only_vertex_intersections?(C, Am, h)")
              (("1"
                (case "exists (v: (vertex?(Am))): point_outside_polygon?(v, C)")
                (("1" (skeep - t)
                  (("1"
                    (lemma "first_path_to_exit_B_from_vertex_exists")
                    (("1" (inst - "Am" "C" "Am`vertices(r)" "v")
                      (("1" (ground)
                        (("1" (skeep)
                          (("1"
                            (name-replace "ku" "rem(Am`num_vertices)
                                                    (k!1 + find_index(Am, Am`vertices(r)))")
                            (("1" (hide -1)
                              (("1"
                                (expand "segment_exits_polygon?")
                                (("1"
                                  (skeep)
                                  (("1"
                                    (expand "vertex?" -1)
                                    (("1"
                                      (skeep)
                                      (("1"
                                        (case-replace "i!1 = 0")
                                        (("1"
                                          (inst-cp -14 "0")
                                          (("1"
                                            (case-replace "ku = r")
                                            (("1"
                                              (inst -15 "i - k")
                                              (("1"
                                                (lemma
                                                 "perimeter_not_outside")
                                                (("1"
                                                  (inst - "pt" "C")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand
                                                       "point_on_polygon_perimeter?")
                                                      (("1"
                                                        (inst
                                                         +
                                                         "edges_of_polygon(C)(i - k)")
                                                        (("1"
                                                          (expand
                                                           "edges_of_polygon")
                                                          (("1"
                                                            (expand
                                                             "next_index"
                                                             1)
                                                            (("1"
                                                              (rewrite
                                                               "point_on_reverse_segment"
                                                               1
                                                               :dir
                                                               rl)
                                                              (("1"
                                                                (expand
                                                                 "reverse_segment")
                                                                (("1"
                                                                  (replace
                                                                   -15)
                                                                  (("1"
                                                                    (replace
                                                                     -16)
                                                                    (("1"
                                                                      (replace
                                                                       -24
                                                                       :dir
                                                                       rl)
                                                                      (("1"
                                                                        (replace
                                                                         -19
                                                                         :dir
                                                                         rl)
                                                                        (("1"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (typepred "Am`vertices")
                                              (("2"
                                                (expand
                                                 "uniq_vertex_list?")
                                                (("2"
                                                  (inst - "ku" "r")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (lemma
                                           "outside_point_on_segment_between_rays")
                                          (("2"
                                            (inst
                                             -
                                             "Am"
                                             "C"
                                             "pt"
                                             "Am`vertices(next_index(Am, ku))"
                                             "i!1"
                                             "edges_of_polygon(Am)(ku)")
                                            (("2"
                                              (ground)
                                              (("1"
                                                (lemma
                                                 "no_outgoing_edges_from_M")
                                                (("1"
                                                  (inst
                                                   -
                                                   "A"
                                                   "B"
                                                   "Am"
                                                   "Bm"
                                                   "M"
                                                   "edges_of_polygon(C)(i!1 - 1)"
                                                   "edges_of_polygon(C)(i!1)"
                                                   "i!1 + k")
                                                  (("1"
                                                    (expand
                                                     "edges_of_polygon"
                                                     -1
                                                     (1 2))
                                                    (("1"
                                                      (expand
                                                       "next_index"
                                                       -1
                                                       1)
                                                      (("1"
                                                        (rewrite
                                                         -15
                                                         -1)
                                                        (("1"
                                                          (rewrite
                                                           -15
                                                           -1)
                                                          (("1"
                                                            (ground)
                                                            (("1"
                                                              (inst
                                                               +
                                                               "edges_of_polygon(Am)(ku)")
                                                              (("1"
                                                                (ground)
                                                                (("1"
                                                                  (expand
                                                                   "edges_of_polygon"
                                                                   1
                                                                   3)
                                                                  (("1"
                                                                    (expand
                                                                     "prev_index")
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "edges_of_polygon"
                                                                   1)
                                                                  (("2"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (rewrite
                                                               -14
                                                               1)
                                                              (("2"
                                                                (expand
                                                                 "next_index"
                                                                 1)
                                                                (("2"
                                                                  (lift-if)
                                                                  (("2"
                                                                    (ground)
                                                                    (("2"
                                                                      (expand
                                                                       "prev_index")
                                                                      (("2"
                                                                        (case
                                                                         "edges_of_polygon(C)(i!1) =
                         reverse_segment(edges_of_polygon(Am)(r))")
                                                                        (("1"
                                                                          (case-replace
                                                                           "edges_of_polygon(C)(i!1 - 1) = s")
                                                                          (("1"
                                                                            (lemma
                                                                             "no_outgoing_edges_from_M")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "A"
                                                                               "B"
                                                                               "Am"
                                                                               "Bm"
                                                                               "M"
                                                                               "s"
                                                                               "e"
                                                                               "i")
                                                                              (("1"
                                                                                (ground)
                                                                                (("1"
                                                                                  (inst
                                                                                   +
                                                                                   "edges_of_polygon(Am)(ku)")
                                                                                  (("1"
                                                                                    (ground)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "edges_of_polygon"
                                                                                       1)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "extend_between_rays_left")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "s"
                                                                                           "e"
                                                                                           "reverse_segment(edges_of_polygon(Am)(r))"
                                                                                           "Am`vertices(next_index(Am, ku))")
                                                                                          (("1"
                                                                                            (ground)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "edges_of_polygon")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "reverse_segment")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               "edges_of_polygon")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "reverse_segment")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "edges_of_polygon")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             (-2
                                                                              -15
                                                                              -16
                                                                              -21
                                                                              1))
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           (-1
                                                                            -14
                                                                            -15
                                                                            -19
                                                                            -23
                                                                            1))
                                                                          (("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (lemma
                                                 "perimeter_not_outside")
                                                (("2"
                                                  (inst - "pt" "C")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (use
                                                       "vertex_on_perimeter")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (expand
                                                           "vertex?")
                                                          (("2"
                                                            (inst
                                                             +
                                                             "i!1")
                                                            (("2"
                                                              (expand
                                                               "edges_of_polygon")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (expand
                                                 "edges_of_polygon")
                                                (("3"
                                                  (lemma
                                                   "vertex_neq_next")
                                                  (("3"
                                                    (inst - "Am" "ku")
                                                    (("3"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("4"
                                                (expand
                                                 "edges_of_polygon")
                                                (("4"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "vertex?")
                          (("2" (inst + "0")
                            (("2" (inst -10 "0")
                              (("2" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "vertex?")
                        (("2" (inst + "r") nil nil)) nil))
                      nil))
                    nil))
                  nil)
                 ("2" (copy -17)
                  (("2" (expand "point_on_polygon_perimeter?" -1)
                    (("2" (skeep - t)
                      (("2" (expand "edge_of_polygon?")
                        (("2" (skeep)
                          (("2" (inst-cp + "Am`vertices(i!1)")
                            (("1"
                              (inst-cp +
                               "Am`vertices(next_index(Am, i!1))")
                              (("1"
                                (inst-cp - "e!1")
                                (("1"
                                  (case
                                   "point_in_polygon?(Am`vertices(i!1), C)")
                                  (("1"
                                    (lemma
                                     "non_vertex_points_inside_polygon")
                                    (("1"
                                      (inst - "Am" "C" "e!1" "p")
                                      (("1"
                                        (expand "edges_of_polygon")
                                        (("1" (ground) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (use "point_out_not_in")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (expand
                                         "point_on_polygon_perimeter?"
                                         -
                                         1)
                                        (("2"
                                          (skeep - t)
                                          (("2"
                                            (expand "edge_of_polygon?")
                                            (("2"
                                              (skeep)
                                              (("2"
                                                (expand
                                                 "only_vertex_intersections?"
                                                 -6)
                                                (("2"
                                                  (inst -6 "e!2")
                                                  (("2"
                                                    (split -6)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (expand
                                                         "point_on_polygon_perimeter?")
                                                        (("1"
                                                          (inst
                                                           6
                                                           "e!2")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (replace
                                                               -2)
                                                              (("1"
                                                                (rewrite
                                                                 "point_on_reverse_segment"
                                                                 +)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (inst
                                                         -
                                                         "Am`vertices(i!1)")
                                                        (("2"
                                                          (ground)
                                                          (("1"
                                                            (hide -2)
                                                            (("1"
                                                              (expand
                                                               "segment_endpoint?")
                                                              (("1"
                                                                (replace
                                                                 -2
                                                                 -1
                                                                 :dir
                                                                 rl)
                                                                (("1"
                                                                  (expand
                                                                   "edges_of_polygon"
                                                                   -1)
                                                                  (("1"
                                                                    (split
                                                                     -1)
                                                                    (("1"
                                                                      (rewrite
                                                                       -13
                                                                       -1)
                                                                      (("1"
                                                                        (case-replace
                                                                         "i!2 = 0")
                                                                        (("1"
                                                                          (lemma
                                                                           "shared_endpoints_imp_same_edge")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "Am"
                                                                             "e!1"
                                                                             "edges_of_polygon(Am)(r)")
                                                                            (("1"
                                                                              (ground)
                                                                              (("1"
                                                                                (expand
                                                                                 "point_on_polygon_perimeter?")
                                                                                (("1"
                                                                                  (inst
                                                                                   7
                                                                                   "edges_of_polygon(C)(C`num_vertices - 1)")
                                                                                  (("1"
                                                                                    (equate
                                                                                     "edges_of_polygon(C)(C`num_vertices - 1)"
                                                                                     "reverse_segment(e!1)")
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "point_on_reverse_segment"
                                                                                       +)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (replace
                                                                                       -1
                                                                                       1)
                                                                                      (("2"
                                                                                        (hide-all-but
                                                                                         (-15
                                                                                          -19
                                                                                          -23
                                                                                          1))
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "edges_of_polygon")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (lemma
                                                                           "outside_point_on_segment_between_rays")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "Am"
                                                                             "C"
                                                                             "p"
                                                                             "Am`vertices(next_index(Am, i!1))"
                                                                             "i!2"
                                                                             "edges_of_polygon(Am)(i!1)")
                                                                            (("2"
                                                                              (ground)
                                                                              (("1"
                                                                                (lemma
                                                                                 "no_outgoing_edges_from_M")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "A"
                                                                                   "B"
                                                                                   "Am"
                                                                                   "Bm"
                                                                                   "M"
                                                                                   "edges_of_polygon(C)(prev_index(C, i!2))"
                                                                                   "edges_of_polygon(C)(i!2)"
                                                                                   "i!2 + k")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "edges_of_polygon"
                                                                                     -1
                                                                                     (1
                                                                                      2))
                                                                                    (("1"
                                                                                      (expand
                                                                                       "prev_index")
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         -15
                                                                                         -1)
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           -15
                                                                                           -1)
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             -15
                                                                                             -1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "next_index"
                                                                                               -1
                                                                                               1)
                                                                                              (("1"
                                                                                                (ground)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   +
                                                                                                   "edges_of_polygon(Am)(i!1)")
                                                                                                  (("1"
                                                                                                    (ground)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "edges_of_polygon"
                                                                                                       1
                                                                                                       3)
                                                                                                      (("1"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       "edges_of_polygon"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (rewrite
                                                                                                   -14
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "next_index"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (lift-if)
                                                                                                      (("2"
                                                                                                        (ground)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "edges_of_polygon(C)(i!2) =
                                                      reverse_segment(edges_of_polygon(Am)(r))")
                                                                                                          (("1"
                                                                                                            (case-replace
                                                                                                             "edges_of_polygon(C)(i!2 - 1) = s")
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "no_outgoing_edges_from_M")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "A"
                                                                                                                 "B"
                                                                                                                 "Am"
                                                                                                                 "Bm"
                                                                                                                 "M"
                                                                                                                 "s"
                                                                                                                 "e"
                                                                                                                 "i")
                                                                                                                (("1"
                                                                                                                  (ground)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "edges_of_polygon(Am)(i!1)")
                                                                                                                    (("1"
                                                                                                                      (ground)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "edges_of_polygon"
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "extend_between_rays_left")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "s"
                                                                                                                             "e"
                                                                                                                             "reverse_segment(edges_of_polygon(Am)(r))"
                                                                                                                             "Am`vertices(next_index(Am, i!1))")
                                                                                                                            (("1"
                                                                                                                              (ground)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "edges_of_polygon")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "reverse_segment")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (expand
                                                                                                                                 "edges_of_polygon")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "reverse_segment")
                                                                                                                                  (("2"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "edges_of_polygon")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide-all-but
                                                                                                               (-2
                                                                                                                -15
                                                                                                                -16
                                                                                                                -21
                                                                                                                1))
                                                                                                              (("2"
                                                                                                                (grind)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             (-1
                                                                                                              -14
                                                                                                              -15
                                                                                                              -19
                                                                                                              -23
                                                                                                              1))
                                                                                                            (("2"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "edges_of_polygon")
                                                                                (("2"
                                                                                  (expand
                                                                                   "point_on_polygon_perimeter?")
                                                                                  (("2"
                                                                                    (inst
                                                                                     8
                                                                                     "e!2")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (expand
                                                                                 "edges_of_polygon")
                                                                                (("3"
                                                                                  (lemma
                                                                                   "vertex_neq_next")
                                                                                  (("3"
                                                                                    (inst
                                                                                     -
                                                                                     "Am"
                                                                                     "i!1")
                                                                                    (("3"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("4"
                                                                                (expand
                                                                                 "edges_of_polygon")
                                                                                (("4"
                                                                                  (rewrite
                                                                                   -13
                                                                                   1)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (rewrite
                                                                       -13
                                                                       -1)
                                                                      (("2"
                                                                        (case-replace
                                                                         "i!2 = C`num_vertices - 1")
                                                                        (("1"
                                                                          (expand
                                                                           "next_index"
                                                                           -
                                                                           1)
                                                                          (("1"
                                                                            (lemma
                                                                             "shared_endpoints_imp_same_edge")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "Am"
                                                                               "e!1"
                                                                               "edges_of_polygon(Am)(r)")
                                                                              (("1"
                                                                                (ground)
                                                                                (("1"
                                                                                  (expand
                                                                                   "point_on_polygon_perimeter?")
                                                                                  (("1"
                                                                                    (inst
                                                                                     7
                                                                                     "edges_of_polygon(C)(C`num_vertices - 1)")
                                                                                    (("1"
                                                                                      (equate
                                                                                       "edges_of_polygon(C)(C`num_vertices - 1)"
                                                                                       "reverse_segment(e!1)")
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "point_on_reverse_segment"
                                                                                         +)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (replace
                                                                                         -1
                                                                                         1)
                                                                                        (("2"
                                                                                          (hide-all-but
                                                                                           (-15
                                                                                            -19
                                                                                            -23
                                                                                            1))
                                                                                          (("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "edges_of_polygon")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "next_index"
                                                                           -1)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (lemma
                                                                               "outside_point_on_segment_between_rays")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "Am"
                                                                                 "C"
                                                                                 "p"
                                                                                 "Am`vertices(next_index(Am, i!1))"
                                                                                 "1 + i!2"
                                                                                 "edges_of_polygon(Am)(i!1)")
                                                                                (("2"
                                                                                  (ground)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "prev_index")
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "no_outgoing_edges_from_M")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "A"
                                                                                         "B"
                                                                                         "Am"
                                                                                         "Bm"
                                                                                         "M"
                                                                                         "edges_of_polygon(C)(i!2)"
                                                                                         "edges_of_polygon(C)(1 + i!2)"
                                                                                         "1 + i!2 + k")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "edges_of_polygon"
                                                                                           -1
                                                                                           (1
                                                                                            2))
                                                                                          (("1"
                                                                                            (expand
                                                                                             "next_index"
                                                                                             -1
                                                                                             1)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               -15
                                                                                               -1)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 -15
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (ground)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     +
                                                                                                     "edges_of_polygon(Am)(i!1)")
                                                                                                    (("1"
                                                                                                      (ground)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "edges_of_polygon"
                                                                                                         1
                                                                                                         3)
                                                                                                        (("1"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "edges_of_polygon"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (rewrite
                                                                                                     -14
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "next_index"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (lift-if)
                                                                                                        (("2"
                                                                                                          (ground)
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             "edges_of_polygon(C)(1 + i!2) =
                                                                                   reverse_segment(edges_of_polygon(Am)(r))")
                                                                                                            (("1"
                                                                                                              (case-replace
                                                                                                               "edges_of_polygon(C)(i!2) = s")
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "no_outgoing_edges_from_M")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "A"
                                                                                                                   "B"
                                                                                                                   "Am"
                                                                                                                   "Bm"
                                                                                                                   "M"
                                                                                                                   "s"
                                                                                                                   "e"
                                                                                                                   "i")
                                                                                                                  (("1"
                                                                                                                    (ground)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       +
                                                                                                                       "edges_of_polygon(Am)(i!1)")
                                                                                                                      (("1"
                                                                                                                        (ground)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "edges_of_polygon"
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (lemma
                                                                                                                             "extend_between_rays_left")
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "s"
                                                                                                                               "e"
                                                                                                                               "reverse_segment(edges_of_polygon(Am)(r))"
                                                                                                                               "Am`vertices(next_index(Am, i!1))")
                                                                                                                              (("1"
                                                                                                                                (ground)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "edges_of_polygon")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "reverse_segment")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "edges_of_polygon")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "reverse_segment")
                                                                                                                                    (("2"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (expand
                                                                                                                           "edges_of_polygon")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide-all-but
                                                                                                                 (-2
                                                                                                                  -15
                                                                                                                  -16
                                                                                                                  -21
                                                                                                                  1))
                                                                                                                (("2"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide-all-but
                                                                                                               (-1
                                                                                                                -14
                                                                                                                -15
                                                                                                                -19
                                                                                                                -23
                                                                                                                1))
                                                                                                              (("2"
                                                                                                                (grind)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "edges_of_polygon")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "point_on_polygon_perimeter?")
                                                                                      (("2"
                                                                                        (inst
                                                                                         8
                                                                                         "e!2")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (expand
                                                                                     "edges_of_polygon")
                                                                                    (("3"
                                                                                      (lemma
                                                                                       "vertex_neq_next")
                                                                                      (("3"
                                                                                        (inst
                                                                                         -
                                                                                         "Am"
                                                                                         "i!1")
                                                                                        (("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("4"
                                                                                    (rewrite
                                                                                     -13
                                                                                     1)
                                                                                    (("4"
                                                                                      (expand
                                                                                       "edges_of_polygon")
                                                                                      (("4"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (replace
                                                             -3
                                                             1
                                                             :dir
                                                             rl)
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (expand "vertex?")
                                (("2"
                                  (inst + "next_index(Am, i!1)")
                                  nil
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "vertex?")
                              (("2" (inst + "i!1") nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (skeep + t)
                (("2" (expand "only_vertex_intersections?")
                  (("2" (skeep + t)
                    (("2" (expand "edge_of_polygon?" -1)
                      (("2" (skeep)
                        (("2" (case-replace "i!1 = i - k")
                          (("1"
                            (case "s!1 = reverse_segment(edges_of_polygon(Am)(r))")
                            (("1" (expand "edge_of_polygon?")
                              (("1"
                                (skeep)
                                (("1"
                                  (case-replace "i!2 = r")
                                  (("1"
                                    (replace -2)
                                    (("1"
                                      (rewrite
                                       "are_segments_overlapping_symm")
                                      (("1"
                                        (rewrite
                                         "reverse_segment_overlapping")
                                        (("1"
                                          (replace -5)
                                          (("1"
                                            (rewrite
                                             "are_segments_overlapping_refl")
                                            nil
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (ground)
                                    (("1"
                                      (rewrite
                                       "are_segments_overlapping_symm")
                                      (("1"
                                        (replace -2 -1)
                                        (("1"
                                          (rewrite
                                           "reverse_segment_overlapping")
                                          (("1"
                                            (lemma
                                             "same_polygon_edge_overlaps_equal")
                                            (("1"
                                              (inst
                                               -
                                               "Am"
                                               "h"
                                               "edges_of_polygon(Am)(r)")
                                              (("1" (ground) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (typepred "Am")
                                      (("2"
                                        (expand "simple_polygon_2d?")
                                        (("2"
                                          (expand
                                           "polygon_edges_do_not_cross?")
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (split 2)
                                              (("1"
                                                (copy -4)
                                                (("1"
                                                  (typepred
                                                   "Am`num_vertices")
                                                  (("1"
                                                    (hide -2)
                                                    (("1"
                                                      (copy -4)
                                                      (("1"
                                                        (replace -7 -1)
                                                        (("1"
                                                          (rewrite
                                                           "point_on_reverse_segment")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "r"
                                                             "i!2")
                                                            (("1"
                                                              (inst
                                                               -
                                                               "p!1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "segment_endpoint?")
                                                                  (("1"
                                                                    (expand
                                                                     "edges_of_polygon")
                                                                    (("1"
                                                                      (expand
                                                                       "reverse_segment")
                                                                      (("1"
                                                                        (ground)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (typepred
                                                 "Am`num_vertices")
                                                (("2"
                                                  (inst - "i!2" "r")
                                                  (("2"
                                                    (inst - "p!1")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand
                                                         "segment_endpoint?")
                                                        (("1"
                                                          (ground)
                                                          (("1"
                                                            (replace
                                                             -5
                                                             -3)
                                                            (("1"
                                                              (rewrite
                                                               "point_on_reverse_segment")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2)
                              (("2"
                                (expand "edges_of_polygon")
                                (("2"
                                  (expand "reverse_segment")
                                  (("2"
                                    (expand "next_index" -2)
                                    (("2"
                                      (inst-cp -10 "0")
                                      (("2"
                                        (inst-cp -10 "i - k")
                                        (("2"
                                          (replace -2 1 :dir rl)
                                          (("2"
                                            (apply-extensionality
                                             :hide?
                                             t)
                                            nil
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2"
                            (lemma "merge_seq_only_vertex_int_subseq")
                            (("2"
                              (inst - "A" "B" "Am" "Bm" "M ^ (k, i)"
                               "k" "i")
                              (("2"
                                (assert)
                                (("2"
                                  (flatten)
                                  (("2"
                                    (expand "edges_of_polygon")
                                    (("2"
                                      (expand "next_index" -3)
                                      (("2"
                                        (inst-cp -11 "i!1")
                                        (("2"
                                          (inst -11 "i!1 + 1")
                                          (("2"
                                            (hide -2)
                                            (("2"
                                              (inst - "h")
                                              (("2"
                                                (expand
                                                 "seq_only_vertex_intersections?")
                                                (("2"
                                                  (inst - "i!1")
                                                  (("1"
                                                    (expand "^" -1)
                                                    (("1"
                                                      (expand
                                                       "same_edge_or_vertex_intersection?")
                                                      (("1"
                                                        (case-replace
                                                         "(# p1 := M`seq(i!1 + k),
                                                p2 := M`seq(1 + i!1 + k) #) = s!1")
                                                        (("1"
                                                          (apply-extensionality
                                                           :hide?
                                                           t)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand "^" 1)
                                                    (("2"
                                                      (expand "min")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (no_min_inc_back_side_edge_from_M_TCC1 0
  (no_min_inc_back_side_edge_from_M_TCC1-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_min_inc_back_side_edge_from_M subtype "merged_polygon_closed.B"
    "(injection_props.merge_pre_condition(merged_polygon_closed.A))"))
  (no_min_inc_back_side_edge_from_M_TCC1-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M subtype "merged_polygon_closed.B"
    "(injection_props.merge_pre_condition(merged_polygon_closed.A))")))
 (no_min_inc_back_side_edge_from_M_TCC2 0
  (no_min_inc_back_side_edge_from_M_TCC2-2 nil 3874129021
   ("" (skeep*)
    (("" (expand "^") (("" (expand "min") (("" (propax) nil nil)) nil))
      nil))
    nil)
   nil shostak
   (no_min_inc_back_side_edge_from_M subtype
    "(finite_sequences[point_2d].^(merged_polygon_closed.M, (0, (number_fields.+)(1, merged_polygon_closed.i))))`seq"
    "[naturalnumbers.below((number_fields.+)(2, merged_polygon_closed.i)) -> point_2d]"))
  (no_min_inc_back_side_edge_from_M_TCC2-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M subtype
    "(finite_sequences[point_2d].^(merged_polygon_closed.M, (0, (number_fields.+)(1, merged_polygon_closed.i))))`seq"
    "[naturalnumbers.below((number_fields.+)(2, merged_polygon_closed.i)) -> point_2d]")))
 (no_min_inc_back_side_edge_from_M_TCC3 0
  (no_min_inc_back_side_edge_from_M_TCC3-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_min_inc_back_side_edge_from_M subtype "0" "below[M`length]"))
  (no_min_inc_back_side_edge_from_M_TCC3-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M subtype "0" "below[M`length]")))
 (no_min_inc_back_side_edge_from_M_TCC4 0
  (no_min_inc_back_side_edge_from_M_TCC4-2 nil 3874129021
   ("" (skeep) (("" (hide-all-but (-4 -7)) (("" (grind) nil nil)) nil))
    nil)
   nil shostak
   (no_min_inc_back_side_edge_from_M subtype
    "merged_polygon_closed.M`seq(0)"
    "{p: vectors_cross_2d.point_2d | p /= merged_polygon_closed.w}"))
  (no_min_inc_back_side_edge_from_M_TCC4-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M subtype
    "merged_polygon_closed.M`seq(0)"
    "{p: vectors_cross_2d.point_2d | p /= merged_polygon_closed.w}")))
 (no_min_inc_back_side_edge_from_M_TCC5 0
  (no_min_inc_back_side_edge_from_M_TCC5-2 nil 3874129021
   ("" (skeep*)
    (("" (ground)
      (("" (use "adj_merge_seq_vertices_distinct")
        (("" (assert) nil nil)) nil))
      nil))
    nil)
   nil shostak
   (no_min_inc_back_side_edge_from_M subtype "merged_polygon_closed.M"
    "segment_endpoint_seq"))
  (no_min_inc_back_side_edge_from_M_TCC5-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M subtype "merged_polygon_closed.M"
    "segment_endpoint_seq")))
 (no_min_inc_back_side_edge_from_M_TCC6 0
  (no_min_inc_back_side_edge_from_M_TCC6-2 nil 3874129021
   ("" (skeep*) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_back_side_edge_from_M subtype "merged_polygon_closed.i"
    "below[M`length]"))
  (no_min_inc_back_side_edge_from_M_TCC6-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M subtype "merged_polygon_closed.i"
    "below[M`length]")))
 (no_min_inc_back_side_edge_from_M_TCC7 0
  (no_min_inc_back_side_edge_from_M_TCC7-2 nil 3874129021
   ("" (skeep*) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_back_side_edge_from_M subtype
    "(number_fields.+)(1, merged_polygon_closed.i)" "below[M`length]"))
  (no_min_inc_back_side_edge_from_M_TCC7-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M subtype
    "(number_fields.+)(1, merged_polygon_closed.i)"
    "below[M`length]")))
 (no_min_inc_back_side_edge_from_M_TCC8 0
  (no_min_inc_back_side_edge_from_M_TCC8-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_min_inc_back_side_edge_from_M subtype "merged_polygon_closed.i"
    "below[M`length]"))
  (no_min_inc_back_side_edge_from_M_TCC8-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M subtype "merged_polygon_closed.i"
    "below[M`length]")))
 (no_min_inc_back_side_edge_from_M_TCC9 0
  (no_min_inc_back_side_edge_from_M_TCC9-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_back_side_edge_from_M subtype
    "(number_fields.-)(merged_polygon_closed.i, 1)" "below[M`length]"))
  (no_min_inc_back_side_edge_from_M_TCC9-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M subtype
    "(number_fields.-)(merged_polygon_closed.i, 1)"
    "below[M`length]")))
 (no_min_inc_back_side_edge_from_M_TCC10 0
  (no_min_inc_back_side_edge_from_M_TCC10-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_back_side_edge_from_M subtype
    "(number_fields.+)(1, merged_polygon_closed.i)" "below[M`length]"))
  (no_min_inc_back_side_edge_from_M_TCC10-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M subtype
    "(number_fields.+)(1, merged_polygon_closed.i)"
    "below[M`length]")))
 (no_min_inc_back_side_edge_from_M_TCC11 0
  (no_min_inc_back_side_edge_from_M_TCC11-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_min_inc_back_side_edge_from_M subtype "merged_polygon_closed.k"
    "below[M`length]"))
  (no_min_inc_back_side_edge_from_M_TCC11-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_back_side_edge_from_M subtype "merged_polygon_closed.k"
    "below[M`length]")))
 (no_min_inc_back_side_edge_from_M 0
  (no_min_inc_back_side_edge_from_M-1 nil 3874129021
   ("" (skeep*)
    (("" (case-replace "k = i")
      (("1" (lemma "vertex_neq_next")
        (("1" (inst - "Am" "r") (("1" (assert) nil nil)) nil)) nil)
       ("2"
        (name-replace*
         ("ss" "(# p1 := if k = 0 then w else M`seq(k - 1) endif,
                                                                          p2 := M`seq(k) #)"
          "ee" "(# p1 := M`seq(k), p2 := M`seq(1 + k) #)"))
        (("2" (lemma "between_rays_antisymmetric_2")
          (("2" (inst - "M`seq(i)" "ss" "ee")
            (("1" (ground)
              (("1" (lift-if)
                (("1" (ground)
                  (("1" (lemma "no_outgoing_edges_from_M_0")
                    (("1" (inst - "A" "B" "Am" "Bm" "M" "ss" "ee" "w")
                      (("1" (assert)
                        (("1" (inst + "edges_of_polygon(Am)(r)")
                          (("1" (assert)
                            (("1" (expand "edges_of_polygon")
                              (("1" (propax) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (lemma "no_outgoing_edges_from_M")
                    (("2" (inst - "A" "B" "Am" "Bm" "M" "ss" "ee" "k")
                      (("2" (assert)
                        (("2" (inst + "edges_of_polygon(Am)(r)")
                          (("2" (assert)
                            (("2" (expand "edges_of_polygon")
                              (("2" (propax) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2"
                (name-replace "C" "(# num_vertices := i - k + 1,
                                                          vertices := lambda (l: below(i - k + 1)): M`seq(k + l) #)")
                (("2" (case "C`num_vertices = i - k + 1")
                  (("1"
                    (case "FORALL (l: below(C`num_vertices)): C`vertices(l) = M`seq(k + l)")
                    (("1"
                      (name-replace "S2"
                       "singleton_seq(w) o (M ^ (0, i)) o
                                                                                                 	     singleton_seq(Am`vertices(r))")
                      (("1" (case "S2`length = i + 3")
                        (("1"
                          (case "forall (k: below(i + 3)): S2`seq(k) =
                                                                                                 if k = 0 then w elsif k = i + 2 then Am`vertices(r) else M`seq(k - 1) endif")
                          (("1"
                            (case "forall (i, j: below(S2`length - 1)):
                                                                                                           S2`seq(i) = S2`seq(j) => i = j")
                            (("1" (case "single_loop_back_seq?(S2)")
                              (("1"
                                (case "segments_do_not_cross?(S2)")
                                (("1"
                                  (case "simple_polygon_2d?(C)")
                                  (("1"
                                    (case "ccw_vertex_order?(C)")
                                    (("1"
                                      (case
                                       "polygon_contained?(Am, C)")
                                      (("1"
                                        (name-replace*
                                         ("d"
                                          "min(in_out_edge_offset_dist(Am),
                                                                                                                                                                               in_out_edge_offset_dist(C))"
                                          "u"
                                          "rightward_segment_offset(edges_of_polygon(C)(C`num_vertices - 1), d)"))
                                        (("1"
                                          (lemma
                                           "rightward_nearby_ccw_points_outside")
                                          (("1"
                                            (inst
                                             -
                                             "C"
                                             "C`num_vertices - 1")
                                            (("1"
                                              (expand
                                               "rightward_nearby_points_outside?")
                                              (("1"
                                                (inst - "d")
                                                (("1"
                                                  (replace -2)
                                                  (("1"
                                                    (split -1)
                                                    (("1"
                                                      (lemma
                                                       "contained_membership_cor")
                                                      (("1"
                                                        (inst
                                                         -
                                                         "u"
                                                         "Am"
                                                         "C")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (case
                                                             "u = leftward_segment_offset(edges_of_polygon(Am)(r), d)")
                                                            (("1"
                                                              (lemma
                                                               "leftward_nearby_ccw_points_inside")
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "Am"
                                                                 "r")
                                                                (("1"
                                                                  (expand
                                                                   "leftward_nearby_points_inside?")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "d")
                                                                    (("1"
                                                                      (split
                                                                       -1)
                                                                      (("1"
                                                                        (replace
                                                                         -2
                                                                         :dir
                                                                         rl)
                                                                        (("1"
                                                                          (use
                                                                           "point_out_not_in")
                                                                          (("1"
                                                                            (ground)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "in_out_edge_offset_dist")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (equate
                                                               "edges_of_polygon(C)(C`num_vertices - 1)"
                                                               "reverse_segment(edges_of_polygon(Am)(r))")
                                                              (("1"
                                                                (replace
                                                                 -3
                                                                 1
                                                                 :dir
                                                                 rl)
                                                                (("1"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "reverse_segment")
                                                                    (("1"
                                                                      (expand
                                                                       "rightward_segment_offset")
                                                                      (("1"
                                                                        (expand
                                                                         "leftward_segment_offset")
                                                                        (("1"
                                                                          (equate
                                                                           "perp_left(edges_of_polygon(Am)(r)`p1 -
                                                                                                                                                                                                                                                             edges_of_polygon(Am)(r)`p2)"
                                                                           "perp_right(edges_of_polygon(Am)(r)`p2 -
                                                                                                                                                                                                                                                               edges_of_polygon(Am)(r)`p1)")
                                                                          (("1"
                                                                            (cancel-add
                                                                             1)
                                                                            (("1"
                                                                              (grind)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (ground)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "edges_of_polygon"
                                                                 1)
                                                                (("2"
                                                                  (equate
                                                                   "next_index(C, C`num_vertices - 1)"
                                                                   "0")
                                                                  (("1"
                                                                    (expand
                                                                     "reverse_segment")
                                                                    (("1"
                                                                      (replace
                                                                       -16
                                                                       1
                                                                       :dir
                                                                       rl)
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "next_index"
                                                                     1)
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "in_out_edge_offset_dist")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (use
                                         "no_min_inc_back_side_edge_from_M_contained")
                                        (("2" (ground) nil nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (lemma
                                       "left_side_loop_back_is_ccw")
                                      (("2"
                                        (inst
                                         -
                                         "A"
                                         "B"
                                         "Am"
                                         "Bm"
                                         "M"
                                         "C"
                                         "i + 1"
                                         "k"
                                         "S2"
                                         "w"
                                         "r"
                                         "ss"
                                         "ee")
                                        (("1"
                                          (ground)
                                          (("1"
                                            (hide-all-but (-16 1))
                                            (("1"
                                              (expand
                                               "uniq_vertex_list?")
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (inst - "i_1" "j")
                                                  (("1"
                                                    (expand "^")
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (rewrite -5 1)
                                            (("2" (assert) nil nil))
                                            nil)
                                           ("3"
                                            (replace -13)
                                            (("3" (propax) nil nil))
                                            nil)
                                           ("4"
                                            (expand
                                             "mostly_uniq_point_list?")
                                            (("4"
                                              (skeep)
                                              (("4"
                                                (typepred
                                                 "loop_back_intercept(S2)")
                                                (("4"
                                                  (name-replace
                                                   "lbi"
                                                   "loop_back_intercept(S2)")
                                                  (("4"
                                                    (split -3)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (rewrite
                                                         -10
                                                         -2)
                                                        (("1"
                                                          (rewrite
                                                           -10
                                                           -2)
                                                          (("1"
                                                            (lift-if)
                                                            (("1"
                                                              (split
                                                               -2)
                                                              (("1"
                                                                (inst
                                                                 -23
                                                                 "r")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (rewrite
                                                                     -9
                                                                     -4)
                                                                    (("2"
                                                                      (rewrite
                                                                       -9
                                                                       -4)
                                                                      (("2"
                                                                        (apply
                                                                         (repeat
                                                                          (lift-if)))
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (inst-cp
                                                                             -22
                                                                             "r")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (split
                                                                                 -4)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (split
                                                                                     -2)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (inst
                                                                                       -27
                                                                                       "j - 1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (split
                                                                                     -1)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (split
                                                                                         -2)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "uniq_vertex_list?")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -21
                                                                                               "j - 1"
                                                                                               "lbi - 1")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "^")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil)
                                                                                               ("3"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (split
                                                                                         -1)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -26
                                                                                           "i!1 - 1")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (split
                                                                                             -1)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "uniq_vertex_list?")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -21
                                                                                                   "i!1 - 1"
                                                                                                   "lbi - 1")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "^")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               "uniq_vertex_list?")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -20
                                                                                                 "i!1 - 1"
                                                                                                 "j - 1")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "^")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (inst - "k + 1")
                                                      (("1"
                                                        (rewrite -9 -1)
                                                        (("1"
                                                          (rewrite
                                                           -9
                                                           -1)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (assert)
                                                        (("2"
                                                          (equate
                                                           "k"
                                                           "i - 1")
                                                          (("1"
                                                            (lemma
                                                             "on_segment_not_between_rays")
                                                            (("1"
                                                              (inst
                                                               -
                                                               "s"
                                                               "e"
                                                               "M`seq(i - 1)")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (expand
                                                                     "point_on_segment?")
                                                                    (("1"
                                                                      (inst
                                                                       +
                                                                       "0")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (equate "k" "i - 1" (assert))
                                          (("2"
                                            (lemma
                                             "on_segment_not_between_rays")
                                            (("2"
                                              (inst
                                               -
                                               "s"
                                               "e"
                                               "M`seq(i - 1)")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (split 1)
                                                  (("1"
                                                    (replace -25 1)
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (expand
                                                       "point_on_segment?")
                                                      (("2"
                                                        (inst + "0")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3" (propax) nil nil))
                                    nil)
                                   ("2"
                                    (expand "simple_polygon_2d?")
                                    (("2"
                                      (ground)
                                      (("2"
                                        (lemma "subseq_does_not_cross")
                                        (("2"
                                          (inst
                                           -
                                           "S2"
                                           "0"
                                           "S2`length - 1"
                                           "k + 1"
                                           "S2`length - 1")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (equate
                                               "S2 ^ (0, S2`length - 1)"
                                               "S2")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (hide -2)
                                                  (("1"
                                                    (expand
                                                     "polygon_edges_do_not_cross?")
                                                    (("1"
                                                      (skeep)
                                                      (("1"
                                                        (skeep + t)
                                                        (("1"
                                                          (expand
                                                           "segments_do_not_cross?")
                                                          (("1"
                                                            (split -2)
                                                            (("1"
                                                              (expand
                                                               "^"
                                                               -1)
                                                              (("1"
                                                                (expand
                                                                 "min")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (expand
                                                                 "edges_of_polygon")
                                                                (("2"
                                                                  (rewrite
                                                                   -9
                                                                   -2)
                                                                  (("2"
                                                                    (rewrite
                                                                     -9
                                                                     -2)
                                                                    (("2"
                                                                      (rewrite
                                                                       -9
                                                                       -3)
                                                                      (("2"
                                                                        (rewrite
                                                                         -9
                                                                         -3)
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "i!1"
                                                                           "j")
                                                                          (("1"
                                                                            (expand
                                                                             "^"
                                                                             -1)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "q")
                                                                              (("1"
                                                                                (rewrite
                                                                                 -6
                                                                                 -1)
                                                                                (("1"
                                                                                  (rewrite
                                                                                   -6
                                                                                   -1)
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     -6
                                                                                     -1)
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       -6
                                                                                       -1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "next_index")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -10
                                                                                           (-2
                                                                                            -3))
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (lift-if)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -10
                                                                                                 +)
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   -14)
                                                                                                  (("1"
                                                                                                    (ground)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "^")
                                                                            (("2"
                                                                              (expand
                                                                               "min")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (expand
                                                                             "^")
                                                                            (("3"
                                                                              (expand
                                                                               "min")
                                                                              (("3"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but 1)
                                                (("2"
                                                  (grind-with-ext)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3"
                                    (assert)
                                    (("3"
                                      (ground)
                                      (("1"
                                        (skeep)
                                        (("1"
                                          (replace -8)
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "uniq_vertex_list?")
                                        (("2"
                                          (skeep)
                                          (("2"
                                            (inst
                                             -16
                                             "k + i!1"
                                             "k + j")
                                            (("2"
                                              (expand "^")
                                              (("2"
                                                (expand "C" -1)
                                                (("2"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3"
                                        (expand "C" 1)
                                        (("3"
                                          (case-replace "k = i - 1")
                                          (("1"
                                            (lemma
                                             "on_segment_not_between_rays")
                                            (("1"
                                              (inst
                                               -
                                               "s"
                                               "e"
                                               "M`seq(i - 1)")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (expand
                                                     "point_on_segment?")
                                                    (("1"
                                                      (inst + "0")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (lemma "extend_do_not_cross_Am_edge")
                                  (("2"
                                    (inst
                                     -
                                     "A"
                                     "B"
                                     "Am"
                                     "Bm"
                                     "M"
                                     "i"
                                     "(M ^ (0, i)) o singleton_seq(Am`vertices(r))"
                                     "edges_of_polygon(Am)(r)")
                                    (("2"
                                      (ground)
                                      (("1"
                                        (lemma
                                         "extend_do_not_cross_off_seq")
                                        (("1"
                                          (inst
                                           -
                                           "(M ^ (0, i)) o singleton_seq(Am`vertices(r))"
                                           "w"
                                           "S2")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (split 1)
                                              (("1"
                                                (hide-all-but (-16 1))
                                                (("1" (grind) nil nil))
                                                nil)
                                               ("2"
                                                (skeep)
                                                (("2"
                                                  (expand
                                                   "point_on_segment_seq?")
                                                  (("2"
                                                    (split -1)
                                                    (("1"
                                                      (hide-all-but
                                                       (-1 1 2))
                                                      (("1"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (skeep - t)
                                                        (("2"
                                                          (expand
                                                           "o"
                                                           (-1 +))
                                                          (("2"
                                                            (expand
                                                             "singleton_seq"
                                                             (-1 +))
                                                            (("2"
                                                              (expand
                                                               "^"
                                                               (-1 +))
                                                              (("2"
                                                                (expand
                                                                 "min")
                                                                (("2"
                                                                  (expand
                                                                   "o"
                                                                   -2)
                                                                  (("2"
                                                                    (expand
                                                                     "singleton_seq"
                                                                     -2)
                                                                    (("2"
                                                                      (expand
                                                                       "^"
                                                                       -2)
                                                                      (("2"
                                                                        (expand
                                                                         "min")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (lift-if)
                                                                            (("2"
                                                                              (split
                                                                               -2)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (use
                                                                                   "merge_path_props")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "i_1")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -22
                                                                                         "p")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (split
                                                                                             -22)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "point_on_polygon_perimeter?")
                                                                                                (("2"
                                                                                                  (split
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     +
                                                                                                     "(# p1 := M`seq(i_1), p2 := M`seq(1 + i_1) #)")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -23
                                                                                                       "i_1")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (inst
                                                                                                     2
                                                                                                     "(# p1 := M`seq(i_1), p2 := M`seq(1 + i_1) #)")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -23
                                                                                                       "i_1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (equate
                                                                                   "i_1"
                                                                                   "i"
                                                                                   (assert))
                                                                                  (("2"
                                                                                    (rewrite
                                                                                     "point_on_reverse_segment"
                                                                                     :dir
                                                                                     rl)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "reverse_segment")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -20
                                                                                         "p")
                                                                                        (("1"
                                                                                          (split
                                                                                           -20)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("3"
                                                                                            (flatten)
                                                                                            (("3"
                                                                                              (expand
                                                                                               "point_on_polygon_perimeter?")
                                                                                              (("3"
                                                                                                (inst
                                                                                                 +
                                                                                                 "edges_of_polygon(Am)(r)")
                                                                                                (("3"
                                                                                                  (expand
                                                                                                   "edges_of_polygon")
                                                                                                  (("3"
                                                                                                    (replace
                                                                                                     -24)
                                                                                                    (("3"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (lemma
                                                                                       "vertex_neq_next")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "Am"
                                                                                         "r")
                                                                                        (("2"
                                                                                          (ground)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (replace -6 1 :dir rl)
                                                (("3"
                                                  (hide-all-but 1)
                                                  (("3"
                                                    (case
                                                     "forall (a, b, c: finseq[point_2d]): (a o b) o c = a o (b o c)")
                                                    (("1"
                                                      (inst?)
                                                      nil
                                                      nil)
                                                     ("2"
                                                      (hide 2)
                                                      (("2"
                                                        (skeep)
                                                        (("2"
                                                          (grind-with-ext)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "edges_of_polygon")
                                        (("2" (propax) nil nil))
                                        nil)
                                       ("3"
                                        (expand "segment_endpoint?")
                                        (("3"
                                          (expand "edges_of_polygon")
                                          (("3"
                                            (split -1)
                                            (("1"
                                              (lemma
                                               "on_segment_not_between_rays")
                                              (("1"
                                                (inst
                                                 -
                                                 "s"
                                                 "e"
                                                 "M`seq(i - 1)")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (expand
                                                       "point_on_segment?")
                                                      (("1"
                                                        (inst + "0")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (inst -20 "i - 1")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("4"
                                        (expand "edges_of_polygon")
                                        (("4" (propax) nil nil))
                                        nil)
                                       ("5"
                                        (lemma
                                         "merge_initial_segments_do_not_cross")
                                        (("5"
                                          (inst - "A" "B" "i + 1")
                                          (("5"
                                            (assert)
                                            (("5"
                                              (replace -13 :dir rl)
                                              (("5"
                                                (hide-all-but (-14 1))
                                                (("5"
                                                  (expand
                                                   "uniq_vertex_list?")
                                                  (("5"
                                                    (skeep)
                                                    (("5"
                                                      (inst
                                                       -
                                                       "i_1"
                                                       "j")
                                                      (("5"
                                                        (expand "^")
                                                        (("5"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("6"
                                        (hide-all-but (-14 1))
                                        (("6"
                                          (expand "uniq_vertex_list?")
                                          (("6"
                                            (skeep)
                                            (("6"
                                              (inst - "i_1" "j")
                                              (("6"
                                                (expand "^")
                                                (("6"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (expand "single_loop_back_seq?")
                                (("2"
                                  (replace -3)
                                  (("2"
                                    (assert)
                                    (("2"
                                      (split 1)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (inst + "i_1")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (inst - "i_1" "j")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (rewrite -3 -1)
                                        (("2"
                                          (rewrite -3 -1)
                                          (("2"
                                            (lemma
                                             "on_segment_not_between_rays")
                                            (("2"
                                              (inst
                                               -
                                               "s"
                                               "e"
                                               "M`seq(i - 1)")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (expand
                                                     "point_on_segment?")
                                                    (("2"
                                                      (inst + "0")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (assert)
                                (("3"
                                  (skeep)
                                  (("3"
                                    (rewrite -3 -1)
                                    (("3"
                                      (rewrite -3 -1)
                                      (("3"
                                        (apply (repeat (lift-if)))
                                        (("3"
                                          (hide -11)
                                          (("3"
                                            (ground)
                                            (("1"
                                              (inst -20 "i!1")
                                              (("1" (assert) nil nil))
                                              nil)
                                             ("2"
                                              (lemma "vertex_neq_next")
                                              (("2"
                                                (inst - "Am" "r")
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (inst -18 "i!1 - 1")
                                              (("3" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (skeep)
                              (("2"
                                (rewrite -2 -1)
                                (("1"
                                  (rewrite -2 -1)
                                  (("1"
                                    (apply (repeat (lift-if)))
                                    (("1"
                                      (assert)
                                      (("1"
                                        (split -1)
                                        (("1"
                                          (inst -19 "j - 1")
                                          (("1" (assert) nil nil)
                                           ("2" (assert) nil nil))
                                          nil)
                                         ("2"
                                          (flatten)
                                          (("2"
                                            (split -1)
                                            (("1"
                                              (inst -19 "i!1 - 1")
                                              (("1" (assert) nil nil)
                                               ("2" (assert) nil nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (expand
                                                 "uniq_vertex_list?")
                                                (("2"
                                                  (inst
                                                   -13
                                                   "i!1 - 1"
                                                   "j - 1")
                                                  (("1"
                                                    (expand "^")
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("3"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (assert) nil nil))
                                  nil)
                                 ("2" (assert) nil nil))
                                nil))
                              nil))
                            nil)
                           ("2" (skeep)
                            (("2" (replace -2 1 :dir rl)
                              (("2"
                                (hide-all-but 1)
                                (("2" (grind) nil nil))
                                nil))
                              nil))
                            nil)
                           ("3" (skeep) (("3" (assert) nil nil)) nil)
                           ("4" (skeep) (("4" (assert) nil nil)) nil))
                          nil)
                         ("2" (replace -1 1 :dir rl)
                          (("2" (hide-all-but 1)
                            (("2" (grind) nil nil)) nil))
                          nil))
                        nil))
                      nil)
                     ("2" (skeep)
                      (("2" (expand "C" 1) (("2" (propax) nil nil))
                        nil))
                      nil)
                     ("3" (skeep) (("3" (assert) nil nil)) nil)
                     ("4" (skeep) (("4" (assert) nil nil)) nil))
                    nil)
                   ("2" (assert) nil nil))
                  nil))
                nil)
               ("3" (expand "point_on_arb_ray?")
                (("3" (skeep)
                  (("3" (use "merge_initial_segments_do_not_cross")
                    (("3" (assert)
                      (("3" (replace -6 :dir rl)
                        (("3" (replace -4 -2 :dir rl)
                          (("3" (assert)
                            (("3" (case "M`seq(i) = M`seq(k)")
                              (("1"
                                (expand "uniq_vertex_list?")
                                (("1"
                                  (inst - "i" "k")
                                  (("1"
                                    (expand "^")
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (case-replace "d = 0")
                                (("1" (assert) nil nil)
                                 ("2"
                                  (lift-if)
                                  (("2"
                                    (split -2)
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (replace -1)
                                        (("1"
                                          (replace -9 -2 :dir rl)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (hide-all-but (-2 -15 +))
                                              (("1"
                                                (inst - "i")
                                                (("1" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten)
                                      (("2"
                                        (case "i = k - 1")
                                        (("1"
                                          (lemma
                                           "on_segment_not_between_rays")
                                          (("1"
                                            (inst - "s" "e" "M`seq(k)")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (case
                                           "M`seq(i) = M`seq(k - 1)")
                                          (("1"
                                            (expand
                                             "uniq_vertex_list?")
                                            (("1"
                                              (inst - "i" "k - 1")
                                              (("1"
                                                (expand "^")
                                                (("1"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2" (assert) nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (case-replace
                                             "d = norm(M`seq(k - 1) - M`seq(k))")
                                            (("1"
                                              (expand "^" -2)
                                              (("1"
                                                (real-props)
                                                (("1"
                                                  (hide-all-but (-2 1))
                                                  (("1"
                                                    (cancel-add -1)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (case
                                               "d < norm(M`seq(k - 1) - M`seq(k))")
                                              (("1"
                                                (lemma
                                                 "merge_seq_vertices_always_endpoints_M")
                                                (("1"
                                                  (inst
                                                   -
                                                   "A"
                                                   "B"
                                                   "Am"
                                                   "Bm"
                                                   "M"
                                                   "ss"
                                                   "1 + i"
                                                   "k - 1"
                                                   "i")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (replace
                                                         -5
                                                         1
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (rewrite
                                                           "point_on_reverse_segment"
                                                           1
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (expand
                                                             "reverse_segment")
                                                            (("1"
                                                              (rewrite
                                                               "point_on_segment_has_norm_offset")
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "d")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "length")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (lemma
                                                 "merge_seq_vertices_always_endpoints_Am")
                                                (("2"
                                                  (inst
                                                   -
                                                   "A"
                                                   "B"
                                                   "Am"
                                                   "Bm"
                                                   "M"
                                                   "edges_of_polygon(Am)(r)"
                                                   "r"
                                                   "k - 1")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand
                                                       "edges_of_polygon")
                                                      (("1"
                                                        (rewrite
                                                         "point_on_segment_has_offset")
                                                        (("1"
                                                          (inst
                                                           +
                                                           "norm(M`seq(k - 1) - M`seq(k)) / d")
                                                          (("1"
                                                            (replace
                                                             -19)
                                                            (("1"
                                                              (replace
                                                               -15
                                                               :dir
                                                               rl)
                                                              (("1"
                                                                (case-replace
                                                                 "M`seq(i) - M`seq(k) = d * ^(M`seq(k - 1) - M`seq(k))")
                                                                (("1"
                                                                  (expand
                                                                   "^")
                                                                  (("1"
                                                                    (real-props)
                                                                    (("1"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("1"
                                                                        (grind-with-ext)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   (-1
                                                                    1))
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (cross-mult
                                                             1)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("4" (expand "point_on_arb_ray?")
                (("4" (skeep)
                  (("4" (replace -2 -1 :dir rl)
                    (("4" (assert)
                      (("4" (use "merge_initial_segments_do_not_cross")
                        (("4" (assert)
                          (("4" (replace -6 :dir rl)
                            (("4" (case "M`seq(i) = M`seq(k)")
                              (("1"
                                (expand "uniq_vertex_list?")
                                (("1"
                                  (inst - "i" "k")
                                  (("1"
                                    (expand "^")
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (case-replace "d = 0")
                                (("1" (assert) nil nil)
                                 ("2"
                                  (case "i = k + 1")
                                  (("1"
                                    (lemma
                                     "on_segment_not_between_rays")
                                    (("1"
                                      (inst - "s" "e" "M`seq(k)")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (expand
                                             "point_on_segment?")
                                            (("1"
                                              (inst + "0")
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (case "M`seq(i) = M`seq(k + 1)")
                                    (("1"
                                      (expand "uniq_vertex_list?")
                                      (("1"
                                        (inst - "i" "k + 1")
                                        (("1"
                                          (expand "^")
                                          (("1" (assert) nil nil))
                                          nil)
                                         ("2" (assert) nil nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (case-replace
                                       "d = norm(M`seq(1 + k) - M`seq(k))")
                                      (("1"
                                        (expand "^" -3)
                                        (("1"
                                          (real-props)
                                          (("1"
                                            (hide-all-but (-3 1))
                                            (("1"
                                              (cancel-add -1)
                                              nil
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (case
                                         "d < norm(M`seq(1 + k) - M`seq(k))")
                                        (("1"
                                          (expand
                                           "segments_do_not_cross?")
                                          (("1"
                                            (split -2)
                                            (("1"
                                              (expand "^")
                                              (("1"
                                                (expand "min")
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (inst - "k" "i")
                                              (("1"
                                                (inst - "M`seq(i)")
                                                (("1"
                                                  (expand "^")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (split 1)
                                                      (("1"
                                                        (expand
                                                         "point_on_segment?")
                                                        (("1"
                                                          (inst
                                                           +
                                                           "d * (1 / norm(M`seq(1 + k) - M`seq(k)))")
                                                          (("1"
                                                            (real-props)
                                                            (("1"
                                                              (replace
                                                               -2
                                                               1)
                                                              (("1"
                                                                (hide-all-but
                                                                 (-1
                                                                  1))
                                                                (("1"
                                                                  (distrib
                                                                   1)
                                                                  (("1"
                                                                    (name-replace
                                                                     "dn"
                                                                     "d / norm(M`seq(1 + k) - M`seq(k)) * M`seq(1 + k)")
                                                                    (("1"
                                                                      (name-replace
                                                                       "nn"
                                                                       "norm(M`seq(1 + k) - M`seq(k))")
                                                                      (("1"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "point_on_segment?")
                                                        (("2"
                                                          (inst + "0")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand "^")
                                                (("2"
                                                  (expand "min")
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (expand "^")
                                                (("3"
                                                  (expand "min")
                                                  (("3"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (lemma
                                           "merge_seq_vertices_always_endpoints_Am")
                                          (("2"
                                            (inst
                                             -
                                             "A"
                                             "B"
                                             "Am"
                                             "Bm"
                                             "M"
                                             "edges_of_polygon(Am)(r)"
                                             "r"
                                             "k + 1")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (expand
                                                 "edges_of_polygon")
                                                (("2"
                                                  (rewrite
                                                   "point_on_segment_has_offset")
                                                  (("2"
                                                    (inst
                                                     +
                                                     "norm(M`seq(1 + k) - M`seq(k)) / d")
                                                    (("1"
                                                      (replace -19)
                                                      (("1"
                                                        (replace
                                                         -15
                                                         :dir
                                                         rl)
                                                        (("1"
                                                          (case-replace
                                                           "M`seq(i) - M`seq(k) = d * ^(M`seq(1 + k) - M`seq(k))")
                                                          (("1"
                                                            (expand
                                                             "^")
                                                            (("1"
                                                              (real-props)
                                                              (("1"
                                                                (hide-all-but
                                                                 1)
                                                                (("1"
                                                                  (grind-with-ext)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (-2 1))
                                                            (("2"
                                                              (replace
                                                               -1)
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (cross-mult 1)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("5" (expand "point_on_arb_ray?")
                (("5" (skeep)
                  (("5" (lift-if)
                    (("5" (split -3)
                      (("1" (flatten)
                        (("1" (replace -1)
                          (("1" (replace -2 -3 :dir rl)
                            (("1" (replace -4 -3 :dir rl)
                              (("1"
                                (assert)
                                (("1"
                                  (case-replace "d = 0")
                                  (("1"
                                    (inst -14 "0")
                                    (("1" (assert) nil nil))
                                    nil)
                                   ("2"
                                    (replace -8 -3 :dir rl)
                                    (("2"
                                      (cancel-add -3)
                                      (("2"
                                        (expand "^" -3)
                                        (("2"
                                          (name-replace
                                           "n"
                                           "norm(M`seq(1) - M`seq(0))")
                                          (("2"
                                            (real-props)
                                            (("2"
                                              (hide-all-but
                                               (-3 -12 -14 1))
                                              (("2"
                                                (inst - "0")
                                                (("2"
                                                  (inst - "1")
                                                  (("2"
                                                    (use "comps_eq")
                                                    (("2"
                                                      (replace
                                                       -1
                                                       :hide?
                                                       t)
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (expand "*")
                                                          (("2"
                                                            (expand
                                                             "-")
                                                            (("2"
                                                              (grind)
                                                              (("2"
                                                                (factor
                                                                 -1
                                                                 r)
                                                                (("2"
                                                                  (case
                                                                   "M`seq(1)`y - M`seq(0)`y <= 0")
                                                                  (("1"
                                                                    (name-replace
                                                                     "dy"
                                                                     "M`seq(1)`y - M`seq(0)`y")
                                                                    (("1"
                                                                      (case
                                                                       "(d / n) * dy <= 0")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (replace
                                                                           -3
                                                                           :dir
                                                                           rl)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (mult-cases
                                                                         1)
                                                                        (("2"
                                                                          (cross-mult
                                                                           1)
                                                                          (("2"
                                                                            (ground)
                                                                            (("2"
                                                                              (expand
                                                                               "n")
                                                                              (("2"
                                                                                (use
                                                                                 "norm_eq_0")
                                                                                (("2"
                                                                                  (name-replace
                                                                                   "nn"
                                                                                   "norm(M`seq(1) - M`seq(0))")
                                                                                  (("2"
                                                                                    (case
                                                                                     "nn = 0")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (move-terms
                                                                                           -2
                                                                                           l
                                                                                           2)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (flatten)
                        (("2" (replace -1 -2 :dir rl)
                          (("2" (replace -3 -2 :dir rl)
                            (("2" (assert)
                              (("2"
                                (case "i = k + 1")
                                (("1"
                                  (lemma "on_segment_not_between_rays")
                                  (("1"
                                    (inst - "s" "e" "M`seq(k)")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (expand "point_on_segment?")
                                          (("1"
                                            (inst + "0")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (case-replace
                                   "d = norm(M`seq(1 + k) - M`seq(k))")
                                  (("1"
                                    (expand "^" -3)
                                    (("1"
                                      (real-props)
                                      (("1"
                                        (cancel-add -3)
                                        (("1"
                                          (expand "uniq_vertex_list?")
                                          (("1"
                                            (inst - "k - 1" "k + 1")
                                            (("1"
                                              (expand "^")
                                              (("1" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (case
                                     "d < norm(M`seq(1 + k) - M`seq(k))")
                                    (("1"
                                      (lemma
                                       "merge_seq_vertices_always_endpoints_M")
                                      (("1"
                                        (inst
                                         -
                                         "A"
                                         "B"
                                         "Am"
                                         "Bm"
                                         "M"
                                         "ee"
                                         "1 + i"
                                         "k"
                                         "k - 1")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (replace -4 1 :dir rl)
                                            (("1"
                                              (rewrite
                                               "point_on_segment_has_norm_offset")
                                              (("1"
                                                (inst + "d")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand "length")
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (case
                                       "point_on_segment?(M`seq(1 + k), ss)")
                                      (("1"
                                        (lemma
                                         "merge_seq_vertices_always_endpoints_M")
                                        (("1"
                                          (inst
                                           -
                                           "A"
                                           "B"
                                           "Am"
                                           "Bm"
                                           "M"
                                           "ss"
                                           "1 + i"
                                           _
                                           _)
                                          (("1"
                                            (inst - "k - 1" "1 + k")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (replace -1 1 :dir rl)
                                        (("2"
                                          (rewrite
                                           "point_on_reverse_segment"
                                           1
                                           :dir
                                           rl)
                                          (("1"
                                            (expand "reverse_segment")
                                            (("1"
                                              (rewrite
                                               "point_on_segment_has_offset")
                                              (("1"
                                                (case
                                                 "M`seq(k - 1) - M`seq(k) = d * ^(M`seq(1 + k) - M`seq(k))")
                                                (("1"
                                                  (replace -1 1)
                                                  (("1"
                                                    (case-replace
                                                     "d = 0")
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil)
                                                     ("2"
                                                      (expand "^" 2)
                                                      (("2"
                                                        (inst
                                                         +
                                                         "norm(M`seq(1 + k) - M`seq(k)) / d")
                                                        (("1"
                                                          (real-props)
                                                          (("1"
                                                            (hide-all-but
                                                             2)
                                                            (("1"
                                                              (grind-with-ext)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (cross-mult
                                                           1)
                                                          nil
                                                          nil)
                                                         ("3"
                                                          (ground)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but (-2 1))
                                                  (("2"
                                                    (replace -1)
                                                    (("2"
                                                      (name-replace
                                                       "n"
                                                       "^(M`seq(1 + k) - M`seq(k))")
                                                      (("2"
                                                        (cancel-add 1)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (inst -11 "k - 1")
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (inst -11 "k - 1")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3"
                                        (replace -1 1 :dir rl)
                                        (("3"
                                          (assert)
                                          (("3"
                                            (inst -12 "k - 1")
                                            (("3" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("6" (replace -2 1 :dir rl) (("6" (assert) nil nil))
                nil))
              nil)
             ("2" (inst -10 "k")
              (("2" (replace -1 1 :dir rl) (("2" (assert) nil nil))
                nil))
              nil)
             ("3" (lift-if)
              (("3" (split -2)
                (("1" (flatten)
                  (("1" (replace -2 -3 :dir rl)
                    (("1" (inst -13 "k") (("1" (assert) nil nil)) nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (replace -1 -2 :dir rl)
                    (("2" (inst -11 "k - 1")
                      (("1" (assert) nil nil) ("2" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (no_min_inc_edge_to_M_Am_no_cross_TCC1 0
  (no_min_inc_edge_to_M_Am_no_cross_TCC1-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_edge_to_M_Am_no_cross subtype
    "merged_polygon_closed.S2`length" "posnat"))
  (no_min_inc_edge_to_M_Am_no_cross_TCC1-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_edge_to_M_Am_no_cross subtype
    "merged_polygon_closed.S2`length" "posnat")))
 (no_min_inc_edge_to_M_Am_no_cross_TCC2 0
  (no_min_inc_edge_to_M_Am_no_cross_TCC2-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_edge_to_M_Am_no_cross subtype
    "segment_endpoint_sequences.loop_back_intercept(merged_polygon_closed.S2)"
    "naturalnumbers.below(merged_polygon_closed.S2`length)"))
  (no_min_inc_edge_to_M_Am_no_cross_TCC2-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_edge_to_M_Am_no_cross subtype
    "segment_endpoint_sequences.loop_back_intercept(merged_polygon_closed.S2)"
    "naturalnumbers.below(merged_polygon_closed.S2`length)")))
 (no_min_inc_edge_to_M_Am_no_cross_TCC3 0
  (no_min_inc_edge_to_M_Am_no_cross_TCC3-2 nil 3874129021
   ("" (skeep*) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_edge_to_M_Am_no_cross subtype "merged_polygon_closed.i"
    "below[S2`length]"))
  (no_min_inc_edge_to_M_Am_no_cross_TCC3-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_edge_to_M_Am_no_cross subtype "merged_polygon_closed.i"
    "below[S2`length]")))
 (no_min_inc_edge_to_M_Am_no_cross_TCC4 0
  (no_min_inc_edge_to_M_Am_no_cross_TCC4-2 nil 3874129021
   ("" (skeep*) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_edge_to_M_Am_no_cross subtype
    "(number_fields.+)(1, merged_polygon_closed.i)"
    "below[S2`length]"))
  (no_min_inc_edge_to_M_Am_no_cross_TCC4-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_edge_to_M_Am_no_cross subtype
    "(number_fields.+)(1, merged_polygon_closed.i)"
    "below[S2`length]")))
 (no_min_inc_edge_to_M_Am_no_cross_TCC5 0
  (no_min_inc_edge_to_M_Am_no_cross_TCC5-2 nil 3874129021
   ("" (skeep*) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_edge_to_M_Am_no_cross subtype "merged_polygon_closed.k"
    "below[S2`length]"))
  (no_min_inc_edge_to_M_Am_no_cross_TCC5-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_edge_to_M_Am_no_cross subtype "merged_polygon_closed.k"
    "below[S2`length]")))
 (no_min_inc_edge_to_M_Am_no_cross_TCC6 0
  (no_min_inc_edge_to_M_Am_no_cross_TCC6-2 nil 3874129021
   ("" (skeep*) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_edge_to_M_Am_no_cross subtype
    "(number_fields.-)(merged_polygon_closed.k, 1)" "below[M`length]"))
  (no_min_inc_edge_to_M_Am_no_cross_TCC6-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_edge_to_M_Am_no_cross subtype
    "(number_fields.-)(merged_polygon_closed.k, 1)"
    "below[M`length]")))
 (no_min_inc_edge_to_M_Am_no_cross 0
  (no_min_inc_edge_to_M_Am_no_cross-1 nil 3874129021
   ("" (skeep*)
    (("" (use "no_min_inc_back_side_edge_from_M")
      (("" (ground)
        (("" (lemma "merge_initial_segments_do_not_cross")
          (("" (inst - "A" "B" "i + 2")
            (("" (assert)
              (("" (expand "segments_do_not_cross?" +)
                (("" (skeep*)
                  (("" (rewrite -9 +)
                    (("" (rewrite -9 2)
                      (("" (rewrite -9 3)
                        (("" (rewrite -9 -22)
                          (("" (rewrite -9 -22)
                            (("" (apply (repeat (lift-if)))
                              ((""
                                (assert)
                                ((""
                                  (lemma "point_on_reverse_segment")
                                  ((""
                                    (inst
                                     -
                                     "q"
                                     "(# p1 := Am`vertices(r),
            p2 := Am`vertices(prev_index(Am, r)) #)")
                                    ((""
                                      (expand "reverse_segment")
                                      ((""
                                        (replace -1 :dir rl :hide? t)
                                        ((""
                                          (case
                                           "point_on_segment?(q, (# p1 := w, p2 := M`seq(0) #)) =>
                                                                                                      q = M`seq(0) or not point_on_polygon_perimeter?(Am)(q) and not point_on_polygon_perimeter?(Bm)(q)")
                                          (("1"
                                            (split -22)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (replace -1)
                                                  (("1"
                                                    (split -3)
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (expand
                                                         "point_on_polygon_perimeter?")
                                                        (("2"
                                                          (split -23)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (inst
                                                               +
                                                               "edges_of_polygon(Am)(prev_index(Am, r))")
                                                              (("1"
                                                                (expand
                                                                 "edges_of_polygon")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (equate
                                                                   "j"
                                                                   "1 + i"
                                                                   (assert))
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (replace
                                                                       -21)
                                                                      (("1"
                                                                        (rewrite
                                                                         "point_on_reverse_segment"
                                                                         -1
                                                                         :dir
                                                                         rl)
                                                                        (("1"
                                                                          (expand
                                                                           "reverse_segment")
                                                                          (("1"
                                                                            (inst
                                                                             +
                                                                             "edges_of_polygon(Am)(r)")
                                                                            (("1"
                                                                              (expand
                                                                               "edges_of_polygon")
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten)
                                                                (("2"
                                                                  (use
                                                                   "merge_path_props")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "j - 1")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (inst?
                                                                           +)
                                                                          (("1"
                                                                            (inst?
                                                                             +)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (inst
                                                                               -18
                                                                               "j - 1")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (inst
                                                                             -18
                                                                             "j - 1")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (split -1)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (split -24)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (inst
                                                             -17
                                                             "q")
                                                            (("1"
                                                              (split
                                                               -5)
                                                              (("1"
                                                                (lemma
                                                                 "merge_seq_vertices_always_endpoints_Am")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "A"
                                                                   "B"
                                                                   "Am"
                                                                   "Bm"
                                                                   "M"
                                                                   "(# p1 := Am`vertices(prev_index(Am, r)),
                                                               p2 := Am`vertices(r) #)"
                                                                   "prev_index(Am, r)"
                                                                   "0")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "edges_of_polygon")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten)
                                                                (("2"
                                                                  (expand
                                                                   "point_on_polygon_perimeter?")
                                                                  (("2"
                                                                    (inst
                                                                     +
                                                                     "edges_of_polygon(Am)(prev_index(Am, r))")
                                                                    (("2"
                                                                      (expand
                                                                       "edges_of_polygon")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (split -1)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (equate
                                                               "j"
                                                               "1 + i"
                                                               (assert))
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   -22)
                                                                  (("1"
                                                                    (rewrite
                                                                     "point_on_reverse_segment"
                                                                     :dir
                                                                     rl)
                                                                    (("1"
                                                                      (expand
                                                                       "reverse_segment")
                                                                      (("1"
                                                                        (use
                                                                         "prev_edge_shares_only_vertex")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "q")
                                                                            (("1"
                                                                              (expand
                                                                               "edges_of_polygon")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "edges_of_polygon")
                                                                              (("2"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (use
                                                               "merge_path_props")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "j - 1")
                                                                  (("2"
                                                                    (split
                                                                     -1)
                                                                    (("1"
                                                                      (expand
                                                                       "edge_of_polygon?")
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (expand
                                                                           "edges_of_polygon")
                                                                          (("1"
                                                                            (typepred
                                                                             "Am")
                                                                            (("1"
                                                                              (expand
                                                                               "simple_polygon_2d?")
                                                                              (("1"
                                                                                (typepred
                                                                                 "Am`num_vertices")
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "polygon_edges_do_not_cross?")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "prev_index(Am, r)"
                                                                                       "i!2")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "q")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "edges_of_polygon")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -9)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "j")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -2
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "edges_of_polygon")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (use
                                                                       "injected_only_vertex_intersections")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (inst?
                                                                             -1)
                                                                            (("1"
                                                                              (hide
                                                                               -2)
                                                                              (("1"
                                                                                (expand
                                                                                 "only_vertex_intersections?")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "edges_of_polygon(Am)(prev_index(Am, r))")
                                                                                  (("1"
                                                                                    (split
                                                                                     -1)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "reverse_segment")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "edges_of_polygon")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -6)
                                                                                                (("1"
                                                                                                  (inst-cp
                                                                                                   -
                                                                                                   "j")
                                                                                                  (("1"
                                                                                                    (inst-cp
                                                                                                     -
                                                                                                     "j - 1")
                                                                                                    (("1"
                                                                                                      (ground)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "q")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "edges_of_polygon")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -5)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "segment_endpoint?")
                                                                                                  (("2"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (inst
                                                                               -20
                                                                               "j - 1")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (split -1)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (equate
                                                           "i!1"
                                                           "1 + i"
                                                           (assert))
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (replace
                                                               -20)
                                                              (("1"
                                                                (rewrite
                                                                 "point_on_reverse_segment"
                                                                 :dir
                                                                 rl)
                                                                (("1"
                                                                  (expand
                                                                   "reverse_segment")
                                                                  (("1"
                                                                    (split
                                                                     -23)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (split
                                                                           -4)
                                                                          (("1"
                                                                            (lemma
                                                                             "merge_seq_vertices_always_endpoints_Am")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "A"
                                                                               "B"
                                                                               "Am"
                                                                               "Bm"
                                                                               "M"
                                                                               "(# p1 := Am`vertices(r),
                                                                     p2 := Am`vertices(next_index(Am, r)) #)"
                                                                               "r"
                                                                               "0")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "edges_of_polygon")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (expand
                                                                               "point_on_polygon_perimeter?")
                                                                              (("2"
                                                                                (inst
                                                                                 +
                                                                                 "edges_of_polygon(Am)(r)")
                                                                                (("2"
                                                                                  (expand
                                                                                   "edges_of_polygon")
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (use
                                                                             "prev_edge_shares_only_vertex")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "q")
                                                                                (("1"
                                                                                  (expand
                                                                                   "edges_of_polygon")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "edges_of_polygon")
                                                                                  (("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (use
                                                                             "merge_path_props")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "j - 1")
                                                                                (("2"
                                                                                  (split
                                                                                   -1)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "edge_of_polygon?")
                                                                                    (("1"
                                                                                      (skeep)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "edges_of_polygon")
                                                                                        (("1"
                                                                                          (typepred
                                                                                           "Am")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "simple_polygon_2d?")
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "Am`num_vertices")
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "polygon_edges_do_not_cross?")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "r"
                                                                                                     "i!2")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "q")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "edges_of_polygon")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "j - 1")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "edges_of_polygon")
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (use
                                                                                     "injected_only_vertex_intersections")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (inst?
                                                                                           -1)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -2)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "only_vertex_intersections?")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "edges_of_polygon(Am)(r)")
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "reverse_segment")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "edges_of_polygon")
                                                                                                          (("1"
                                                                                                            (inst-cp
                                                                                                             -
                                                                                                             "j")
                                                                                                            (("1"
                                                                                                              (inst-cp
                                                                                                               -
                                                                                                               "j - 1")
                                                                                                              (("1"
                                                                                                                (ground)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "q")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "edges_of_polygon")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -4)
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "segment_endpoint?")
                                                                                                                (("2"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (inst
                                                                                             -19
                                                                                             "j - 1")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (split -23)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (split
                                                                 -4)
                                                                (("1"
                                                                  (lemma
                                                                   "merge_seq_vertices_always_endpoints")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "A"
                                                                     "B"
                                                                     "Am"
                                                                     "Bm"
                                                                     "M"
                                                                     "(# p1 := M`seq(i!1 - 1), p2 := M`seq(i!1) #)"
                                                                     "i!1 - 1"
                                                                     "0")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (inst
                                                                       -18
                                                                       "i!1 - 1")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (expand
                                                                     "point_on_polygon_perimeter?")
                                                                    (("2"
                                                                      (use
                                                                       "merge_path_props")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "i!1 - 1")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (inst
                                                                               +
                                                                               "(# p1 := M`seq(i!1 - 1), p2 := M`seq(i!1) #)")
                                                                              (("1"
                                                                                (inst
                                                                                 +
                                                                                 "(# p1 := M`seq(i!1 - 1), p2 := M`seq(i!1) #)")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (inst
                                                                                   -18
                                                                                   "i!1 - 1")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (inst
                                                                                 -18
                                                                                 "i!1 - 1")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (use
                                                                   "merge_path_props")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "i!1 - 1")
                                                                      (("1"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (typepred
                                                                           "Am")
                                                                          (("1"
                                                                            (expand
                                                                             "simple_polygon_2d?")
                                                                            (("1"
                                                                              (typepred
                                                                               "Am`num_vertices")
                                                                              (("1"
                                                                                (expand
                                                                                 "polygon_edges_do_not_cross?")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "edge_of_polygon?")
                                                                                    (("1"
                                                                                      (skeep)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "i!2"
                                                                                         "prev_index(Am, r)")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "q")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "edges_of_polygon")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -7)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "i!1")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "edges_of_polygon")
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (use
                                                                           "injected_only_vertex_intersections")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (inst?
                                                                                 -1)
                                                                                (("1"
                                                                                  (hide
                                                                                   -2)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "only_vertex_intersections?")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "edges_of_polygon(Am)(prev_index(Am, r))")
                                                                                      (("1"
                                                                                        (split
                                                                                         -1)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "reverse_segment")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "edges_of_polygon")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (inst-cp
                                                                                                     -
                                                                                                     "i!1")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "i!1 - 1")
                                                                                                      (("1"
                                                                                                        (ground)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "q")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "edges_of_polygon")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -4)
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "segment_endpoint?")
                                                                                                      (("2"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (inst
                                                                                   -20
                                                                                   "i!1 - 1")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten)
                                                                (("2"
                                                                  (split
                                                                   -1)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (equate
                                                                       "j"
                                                                       "1 + i"
                                                                       (assert))
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (replace
                                                                           -21)
                                                                          (("1"
                                                                            (rewrite
                                                                             "point_on_reverse_segment"
                                                                             :dir
                                                                             rl)
                                                                            (("1"
                                                                              (expand
                                                                               "reverse_segment")
                                                                              (("1"
                                                                                (use
                                                                                 "merge_path_props")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "i!1 - 1")
                                                                                    (("1"
                                                                                      (split
                                                                                       -1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "edge_of_polygon?")
                                                                                        (("1"
                                                                                          (skeep)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "edges_of_polygon")
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (typepred
                                                                                                 "Am")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "simple_polygon_2d?")
                                                                                                  (("1"
                                                                                                    (typepred
                                                                                                     "Am`num_vertices")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "polygon_edges_do_not_cross?")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "i!2"
                                                                                                         "r")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "q")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "edges_of_polygon")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -6)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "i!1 - 1")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "edges_of_polygon")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (use
                                                                                         "injected_only_vertex_intersections")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (inst?
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "only_vertex_intersections?")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "edges_of_polygon(Am)(r)")
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "reverse_segment")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "edges_of_polygon")
                                                                                                              (("1"
                                                                                                                (inst-cp
                                                                                                                 -
                                                                                                                 "i!1")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "i!1 - 1")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "q")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "edges_of_polygon")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -3)
                                                                                                                (("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "segment_endpoint?")
                                                                                                                    (("2"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst
                                                                                                 -19
                                                                                                 "i!1 - 1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (expand
                                                                       "segments_do_not_cross?")
                                                                      (("2"
                                                                        (split
                                                                         -4)
                                                                        (("1"
                                                                          (expand
                                                                           "^")
                                                                          (("1"
                                                                            (expand
                                                                             "min")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (replace
                                                                           -7
                                                                           :dir
                                                                           rl)
                                                                          (("2"
                                                                            (expand
                                                                             "^")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "i!1 - 1"
                                                                               "j - 1")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "q")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (expand
                                                                                   "^")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "min")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (expand
                                                                                 "^")
                                                                                (("3"
                                                                                  (expand
                                                                                   "min")
                                                                                  (("3"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide -21 -22 3 4)
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (inst -13 "q")
                                                (("2"
                                                  (split -13 :depth 1)
                                                  (("1"
                                                    (rewrite
                                                     "point_on_segment_has_offset")
                                                    (("1"
                                                      (skeep)
                                                      (("1"
                                                        (case-replace
                                                         "d = 1")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (cancel-add
                                                             -3)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (replace
                                                           -13
                                                           -2
                                                           :dir
                                                           rl)
                                                          (("2"
                                                            (replace
                                                             -2
                                                             -1)
                                                            (("2"
                                                              (hide-all-but
                                                               (-1
                                                                -3
                                                                1))
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (inst -15 "0")
                                            (("3" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (no_min_inc_edge_to_M_Am_uniq_list_TCC1 0
  (no_min_inc_edge_to_M_Am_uniq_list_TCC1-2 nil 3874129021
   ("" (skeep*) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_edge_to_M_Am_uniq_list subtype "merged_polygon_closed.i"
    "below[S2`length]"))
  (no_min_inc_edge_to_M_Am_uniq_list_TCC1-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_edge_to_M_Am_uniq_list subtype "merged_polygon_closed.i"
    "below[S2`length]")))
 (no_min_inc_edge_to_M_Am_uniq_list_TCC2 0
  (no_min_inc_edge_to_M_Am_uniq_list_TCC2-2 nil 3874129021
   ("" (skeep*) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_edge_to_M_Am_uniq_list subtype
    "(number_fields.+)(1, merged_polygon_closed.i)"
    "below[S2`length]"))
  (no_min_inc_edge_to_M_Am_uniq_list_TCC2-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_edge_to_M_Am_uniq_list subtype
    "(number_fields.+)(1, merged_polygon_closed.i)"
    "below[S2`length]")))
 (no_min_inc_edge_to_M_Am_uniq_list_TCC3 0
  (no_min_inc_edge_to_M_Am_uniq_list_TCC3-2 nil 3874129021
   ("" (skeep*) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_edge_to_M_Am_uniq_list subtype "merged_polygon_closed.k"
    "below[S2`length]"))
  (no_min_inc_edge_to_M_Am_uniq_list_TCC3-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_edge_to_M_Am_uniq_list subtype "merged_polygon_closed.k"
    "below[S2`length]")))
 (no_min_inc_edge_to_M_Am_uniq_list_TCC4 0
  (no_min_inc_edge_to_M_Am_uniq_list_TCC4-2 nil 3874129021
   ("" (skeep*) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_edge_to_M_Am_uniq_list subtype
    "(number_fields.-)(merged_polygon_closed.k, 1)" "below[M`length]"))
  (no_min_inc_edge_to_M_Am_uniq_list_TCC4-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_edge_to_M_Am_uniq_list subtype
    "(number_fields.-)(merged_polygon_closed.k, 1)"
    "below[M`length]")))
 (no_min_inc_edge_to_M_Am_uniq_list_TCC5 0
  (no_min_inc_edge_to_M_Am_uniq_list_TCC5-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_edge_to_M_Am_uniq_list subtype
    "(number_fields.-)(merged_polygon_closed.i, 1)" "below[M`length]"))
  (no_min_inc_edge_to_M_Am_uniq_list_TCC5-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_edge_to_M_Am_uniq_list subtype
    "(number_fields.-)(merged_polygon_closed.i, 1)"
    "below[M`length]")))
 (no_min_inc_edge_to_M_Am_uniq_list_TCC6 0
  (no_min_inc_edge_to_M_Am_uniq_list_TCC6-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (no_min_inc_edge_to_M_Am_uniq_list subtype
    "(number_fields.+)(1, merged_polygon_closed.i)" "below[M`length]"))
  (no_min_inc_edge_to_M_Am_uniq_list_TCC6-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_inc_edge_to_M_Am_uniq_list subtype
    "(number_fields.+)(1, merged_polygon_closed.i)"
    "below[M`length]")))
 (no_min_inc_edge_to_M_Am_uniq_list 0
  (no_min_inc_edge_to_M_Am_uniq_list-1 nil 3874129021
   ("" (skeep*)
    (("" (expand "mostly_uniq_point_list?")
      ((""
        (case "(FORALL (i: below(S2`length), j: below(i)):
                                                      i = loop_back_intercept(S2) AND j = S2`length - 1 OR
                                                       j = loop_back_intercept(S2) AND i = S2`length - 1 OR
                                                        S2`seq(i) /= S2`seq(j)) =>
                                                FORALL (i, j: below(S2`length)):
                                                      i = loop_back_intercept(S2) AND j = S2`length - 1 OR
                                                       j = loop_back_intercept(S2) AND i = S2`length - 1 OR
                                                        i = j OR S2`seq(i) /= S2`seq(j)")
        (("1" (split -1)
          (("1" (propax) nil nil)
           ("2" (hide 2)
            (("2" (skeep)
              (("2" (rewrite -8 -1)
                (("1" (rewrite -8 -1)
                  (("1" (apply (repeat (lift-if)))
                    (("1" (assert)
                      (("1" (hide 1)
                        (("1" (inst-cp -10 "r")
                          (("1" (inst-cp -10 "prev_index(Am, r)")
                            (("1" (inst -16 "i!1 - 1")
                              (("1"
                                (lemma "vertex_neq_prev")
                                (("1"
                                  (inst - "Am" "r")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (split -2)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (split -2)
                                          (("1" (propax) nil nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (use
                                               "no_min_inc_back_side_edge_from_M")
                                              (("2"
                                                (expand
                                                 "edges_of_polygon")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (ground)
                                                    (("1"
                                                      (inst - "j - 1")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (inst - "j - 1")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (inst - "j - 1")
                                                      (("3"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (inst - "j - 1")
                                                      (("4"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (split -1)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (split -2)
                                              (("1" (propax) nil nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (split -1)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (typepred
                                                       "loop_back_intercept(S2)")
                                                      (("2"
                                                        (split -3)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (rewrite
                                                             -13
                                                             -2)
                                                            (("1"
                                                              (lift-if)
                                                              (("1"
                                                                (split
                                                                 -2)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (rewrite
                                                                     -14
                                                                     -2)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (expand
                                                                     "uniq_vertex_list?")
                                                                    (("2"
                                                                      (inst
                                                                       -9
                                                                       "j - 1"
                                                                       "loop_back_intercept(S2) - 1")
                                                                      (("1"
                                                                        (expand
                                                                         "^"
                                                                         -9)
                                                                        (("1"
                                                                          (rewrite
                                                                           -12
                                                                           -1)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        nil
                                                                        nil)
                                                                       ("3"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (inst - "j")
                                                          (("1"
                                                            (rewrite
                                                             -12
                                                             -1)
                                                            (("1"
                                                              (rewrite
                                                               -12
                                                               -1)
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            (("2"
                                                              (expand
                                                               "edges_of_polygon")
                                                              (("2"
                                                                (replace
                                                                 -18
                                                                 :dir
                                                                 rl)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (case-replace
                                                                     "i = j - 1")
                                                                    (("1"
                                                                      (replace
                                                                       -23)
                                                                      (("1"
                                                                        (use
                                                                         "prev_vertex_neq_next_vertex")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("2"
                                                                            (typepred
                                                                             "Am")
                                                                            (("2"
                                                                              (expand
                                                                               "simple_polygon_2d?")
                                                                              (("2"
                                                                                (ground)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (split -1)
                                              (("1" (propax) nil nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (expand
                                                   "uniq_vertex_list?")
                                                  (("2"
                                                    (inst
                                                     -
                                                     "i!1 - 1"
                                                     "j - 1")
                                                    (("1"
                                                      (expand "^")
                                                      (("1"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      nil
                                                      nil)
                                                     ("3"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (assert)
                                (("2"
                                  (split -1)
                                  (("1" (propax) nil nil)
                                   ("2"
                                    (flatten)
                                    (("2"
                                      (split -1)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (lemma "vertex_neq_prev")
                                          (("1"
                                            (inst - "Am" "r")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (typepred
                                           "loop_back_intercept(S2)")
                                          (("2"
                                            (split -3)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (rewrite -12 -2)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (split -2)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (rewrite
                                                         -13
                                                         -2)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (expand
                                                         "uniq_vertex_list?")
                                                        (("2"
                                                          (inst
                                                           -8
                                                           "j - 1"
                                                           "loop_back_intercept(S2) - 1")
                                                          (("1"
                                                            (expand
                                                             "^"
                                                             -8)
                                                            (("1"
                                                              (rewrite
                                                               -11
                                                               -1)
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("3"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (inst - "j")
                                              (("1"
                                                (rewrite -11 -1)
                                                (("1"
                                                  (rewrite -11 -1)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (expand
                                                   "edges_of_polygon")
                                                  (("2"
                                                    (replace
                                                     -17
                                                     :dir
                                                     rl)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (case-replace
                                                         "i = j - 1")
                                                        (("1"
                                                          (replace -22)
                                                          (("1"
                                                            (use
                                                             "prev_vertex_neq_next_vertex")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               1)
                                                              (("2"
                                                                (typepred
                                                                 "Am")
                                                                (("2"
                                                                  (expand
                                                                   "simple_polygon_2d?")
                                                                  (("2"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (assert) nil nil))
                  nil)
                 ("2" (assert) nil nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1)
          (("2" (flatten)
            (("2" (skeep)
              (("2" (case "j < i!1")
                (("1" (inst - "i!1" "j") (("1" (ground) nil nil)) nil)
                 ("2" (inst - "j" "i!1")
                  (("1" (ground) nil nil) ("2" (assert) nil nil)) nil))
                nil))
              nil))
            nil))
          nil)
         ("3" (hide-all-but (-4 1)) (("3" (ground) nil nil)) nil)
         ("4" (hide-all-but (-4 1)) (("4" (ground) nil nil)) nil)
         ("5" (hide-all-but (-4 1)) (("5" (ground) nil nil)) nil)
         ("6" (hide-all-but (-4 1)) (("6" (ground) nil nil)) nil))
        nil))
      nil))
    nil)
   nil shostak))
 (no_min_incoming_edge_to_M_Am_TCC1 0
  (no_min_incoming_edge_to_M_Am_TCC1-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_min_incoming_edge_to_M_Am subtype "merged_polygon_closed.B"
    "(injection_props.merge_pre_condition(merged_polygon_closed.A))"))
  (no_min_incoming_edge_to_M_Am_TCC1-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_incoming_edge_to_M_Am subtype "merged_polygon_closed.B"
    "(injection_props.merge_pre_condition(merged_polygon_closed.A))")))
 (no_min_incoming_edge_to_M_Am_TCC2 0
  (no_min_incoming_edge_to_M_Am_TCC2-2 nil 3874129021
   ("" (skeep*)
    (("" (expand "^") (("" (expand "min") (("" (propax) nil nil)) nil))
      nil))
    nil)
   nil shostak
   (no_min_incoming_edge_to_M_Am subtype
    "(finite_sequences[point_2d].^(merged_polygon_closed.M, (0, (number_fields.+)(merged_polygon_closed.i, 1))))`seq"
    "[naturalnumbers.below((number_fields.+)(2, merged_polygon_closed.i)) -> point_2d]"))
  (no_min_incoming_edge_to_M_Am_TCC2-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_incoming_edge_to_M_Am subtype
    "(finite_sequences[point_2d].^(merged_polygon_closed.M, (0, (number_fields.+)(merged_polygon_closed.i, 1))))`seq"
    "[naturalnumbers.below((number_fields.+)(2, merged_polygon_closed.i)) -> point_2d]")))
 (no_min_incoming_edge_to_M_Am_TCC3 0
  (no_min_incoming_edge_to_M_Am_TCC3-2 nil 3874129021
   ("" (skeep*)
    (("" (ground)
      (("" (use "adj_merge_seq_vertices_distinct")
        (("" (ground) nil nil)) nil))
      nil))
    nil)
   nil shostak
   (no_min_incoming_edge_to_M_Am subtype "merged_polygon_closed.M"
    "segment_endpoint_seq"))
  (no_min_incoming_edge_to_M_Am_TCC3-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_incoming_edge_to_M_Am subtype "merged_polygon_closed.M"
    "segment_endpoint_seq")))
 (no_min_incoming_edge_to_M_Am_TCC4 0
  (no_min_incoming_edge_to_M_Am_TCC4-2 nil 3874129021
   ("" (skeep*) (("" (assert) nil nil)) nil) nil shostak
   (no_min_incoming_edge_to_M_Am subtype "merged_polygon_closed.k"
    "naturalnumbers.below((number_fields.-)(merged_polygon_closed.M`length, 1))"))
  (no_min_incoming_edge_to_M_Am_TCC4-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_incoming_edge_to_M_Am subtype "merged_polygon_closed.k"
    "naturalnumbers.below((number_fields.-)(merged_polygon_closed.M`length, 1))")))
 (no_min_incoming_edge_to_M_Am_TCC5 0
  (no_min_incoming_edge_to_M_Am_TCC5-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_min_incoming_edge_to_M_Am subtype "0" "below[M`length]"))
  (no_min_incoming_edge_to_M_Am_TCC5-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_incoming_edge_to_M_Am subtype "0" "below[M`length]")))
 (no_min_incoming_edge_to_M_Am_TCC6 0
  (no_min_incoming_edge_to_M_Am_TCC6-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (no_min_incoming_edge_to_M_Am subtype
    "(number_fields.-)(merged_polygon_closed.i, 1)" "below[M`length]"))
  (no_min_incoming_edge_to_M_Am_TCC6-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_incoming_edge_to_M_Am subtype
    "(number_fields.-)(merged_polygon_closed.i, 1)"
    "below[M`length]")))
 (no_min_incoming_edge_to_M_Am_TCC7 0
  (no_min_incoming_edge_to_M_Am_TCC7-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_min_incoming_edge_to_M_Am subtype "merged_polygon_closed.i"
    "below[M`length]"))
  (no_min_incoming_edge_to_M_Am_TCC7-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_incoming_edge_to_M_Am subtype "merged_polygon_closed.i"
    "below[M`length]")))
 (no_min_incoming_edge_to_M_Am_TCC8 0
  (no_min_incoming_edge_to_M_Am_TCC8-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (no_min_incoming_edge_to_M_Am subtype
    "(number_fields.+)(1, merged_polygon_closed.i)" "below[M`length]"))
  (no_min_incoming_edge_to_M_Am_TCC8-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_incoming_edge_to_M_Am subtype
    "(number_fields.+)(1, merged_polygon_closed.i)"
    "below[M`length]")))
 (no_min_incoming_edge_to_M_Am 0
  (no_min_incoming_edge_to_M_Am-1 nil 3874129021
   ("" (skeep*)
    (("" (use "first_merge_vertex_is_topleft")
      (("" (assert)
        (("" (case "forall (k: below(M`length)): w /= M`seq(k)")
          (("1" (use "adj_merge_seq_vertices_distinct")
            (("1" (assert)
              (("1"
                (case "forall (u: point_2d):
                                                                                                                                                                                                    point_on_segment?(u, (# p1 := w, p2 := M`seq(0) #)) =>
                                                                                                                                                                                                      u = M`seq(0) or not point_on_segment_seq?(u, M)")
                (("1" (lemma "first_merge_vertex_is_topleft_all")
                  (("1" (inst - "A" "B" "Am" "Bm" "M" _)
                    (("1" (assert)
                      (("1"
                        (case "forall (k: below(Am`num_vertices)): w /= Am`vertices(k)")
                        (("1" (expand "edge_of_polygon?")
                          (("1" (skeep - t)
                            (("1"
                              (name-replace "S2"
                               "singleton_seq(w) o (M ^ (0, i)) o
                                                                                                              singleton_seq(Am`vertices(i!1)) o
                                                                                                 	      singleton_seq(Am`vertices(prev_index(Am, i!1)))")
                              (("1"
                                (case "S2`length = i + 4")
                                (("1"
                                  (case
                                   "forall (k: below(i + 4)):
                                                                                                           S2`seq(k) = if k = 0 then w elsif k = i + 2 then Am`vertices(i!1)
                                                                                                            elsif k = i + 3 then Am`vertices(prev_index(Am, i!1))
                                                                                                            else M`seq(k - 1) endif")
                                  (("1"
                                    (case
                                     "FORALL (i: below(S2`length - 1)): NOT S2`seq(i) = S2`seq(1 + i)")
                                    (("1"
                                      (case
                                       "single_loop_back_seq?(S2)")
                                      (("1"
                                        (case
                                         "mostly_uniq_point_list?(S2`length, loop_back_intercept(S2))(S2`seq)")
                                        (("1"
                                          (case
                                           "segments_do_not_cross?(S2)")
                                          (("1"
                                            (use
                                             "first_vertex_x_le_vertices")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (case-replace
                                                   "first_vertex_merge(A, B) = M`seq(0)")
                                                  (("1"
                                                    (case
                                                     "forall (u: point_2d): point_on_segment_seq?(u, S2) =>
                                                                                                                                                                                                                                                                                                                                                             M`seq(0)`x <= u`x")
                                                    (("1"
                                                      (case
                                                       "S2`seq(1 + i) = S2`seq(2 + i)")
                                                      (("1"
                                                        (inst
                                                         -9
                                                         "1 + i")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (name-replace
                                                         "d"
                                                         "min(min(max_miter_offset(S2),
                                                                                                                                  min_miter_sine(S2) * min_edge_separation_AB(Am, Bm) / 3),
                                                                                                                                  min(min_miter_sine(S2) * min_edge_sep(Am) / 2,
                                                                                                                                      inward_edge_offset_dist(Am)))")
                                                        (("2"
                                                          (name-replace
                                                           "q"
                                                           "leftward_segment_offset(edges_of_polygon(Am)(i!1), d)")
                                                          (("2"
                                                            (case
                                                             "point_outside_polygon?(q, Am)")
                                                            (("1"
                                                              (lemma
                                                               "leftward_nearby_ccw_points_inside")
                                                              (("1"
                                                                (expand
                                                                 "leftward_nearby_points_inside?")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "Am"
                                                                   "i!1")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "d")
                                                                    (("1"
                                                                      (replace
                                                                       -3)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (use
                                                                           "point_out_not_in")
                                                                          (("1"
                                                                            (ground)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (case
                                                               "norm(S2`seq(1 + i) - S2`seq(2 + i)) > 0")
                                                              (("1"
                                                                (name-replace
                                                                 "MPS"
                                                                 "miter_point_seq(S2, d)")
                                                                (("1"
                                                                  (case
                                                                   "MPS`length = 2 + i")
                                                                  (("1"
                                                                    (case
                                                                     "FORALL (k: below(i + 1)): MPS`seq(k) /= MPS`seq(k + 1)")
                                                                    (("1"
                                                                      (case
                                                                       "(# p1 := S2`seq(1 + i), p2 := S2`seq(2 + i) #) =
                                                                                                                                                                                                                                                             (# p1 := Am`vertices(next_index(Am, i!1)), p2 := Am`vertices(i!1) #)")
                                                                      (("1"
                                                                        (case
                                                                         "reverse_segment(edges_of_polygon(Am)(i!1)) =
                                                                                                                                                                                                                                                                      (# p1 := Am`vertices(next_index(Am, i!1)), p2 := Am`vertices(i!1) #)")
                                                                        (("1"
                                                                          (case
                                                                           "q = rightward_segment_offset((# p1 := S2`seq(1 + i), p2 := S2`seq(2 + i) #), d)")
                                                                          (("1"
                                                                            (case
                                                                             "forall (p: point_2d): point_on_segment_seq?(p, MPS) implies
                                                                                                                                                                                                                                                                                                                              not point_on_polygon_perimeter?(Am)(p)")
                                                                            (("1"
                                                                              (case
                                                                               "point_on_polygon_perimeter?(Am)(w)")
                                                                              (("1"
                                                                                (inst
                                                                                 -25
                                                                                 "w")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (hide-all-but
                                                                                     (-25
                                                                                      -34))
                                                                                    (("1"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "point_outside_polygon?")
                                                                                (("2"
                                                                                  (inst
                                                                                   +
                                                                                   "(# body := (# length := i + 2,
                                                                                                                                                                                                                                                                                                                                                                                                                        seq := (singleton_seq(q) o reverse_segment_seq(MPS ^ (0, i)))`seq #),
                                                                                                                                                                                                                                                                                                                                                                                                                        tail := (-1, 0) #)")
                                                                                  (("1"
                                                                                    (ground)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "serp_ray_outside?")
                                                                                      (("1"
                                                                                        (ground)
                                                                                        (("1"
                                                                                          (skeep
                                                                                           +
                                                                                           t)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -4
                                                                                             "p")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "reverse_segment_seq"
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "o"
                                                                                                   -2)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "singleton_seq"
                                                                                                     -2)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "^"
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "min"
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (lift-if)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "point_on_segment_seq?")
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (equate
                                                                                                                   "i_1"
                                                                                                                   "0"
                                                                                                                   (assert))
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "i")
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "point_on_reverse_segment"
                                                                                                                       -
                                                                                                                       :dir
                                                                                                                       rl)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "reverse_segment"
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "point_on_subsegment")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "p"
                                                                                                                             "(# p1 := MPS`seq(i), p2 := q #)"
                                                                                                                             "(# p1 := MPS`seq(i), p2 := MPS`seq(1 + i) #)")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "subsegment?")
                                                                                                                                  (("1"
                                                                                                                                    (split
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "point_on_segment?")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         +
                                                                                                                                         "0")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (expand
                                                                                                                                       "MPS"
                                                                                                                                       1)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "miter_point_seq"
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -5
                                                                                                                                           1)
                                                                                                                                          (("2"
                                                                                                                                            (lemma
                                                                                                                                             "right_seg_offset_on_miter_pt_seg")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "S2"
                                                                                                                                               "1 + i"
                                                                                                                                               "d")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (inst
                                                                                                                               -9
                                                                                                                               "i")
                                                                                                                              (("2"
                                                                                                                                (ground)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("3"
                                                                                                                              (flatten)
                                                                                                                              (("3"
                                                                                                                                (replace
                                                                                                                                 -1
                                                                                                                                 :dir
                                                                                                                                 rl)
                                                                                                                                (("3"
                                                                                                                                  (case-replace
                                                                                                                                   "q = p")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "point_on_segment?")
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       +
                                                                                                                                       "0")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide-all-but
                                                                                                                                     (-3
                                                                                                                                      1))
                                                                                                                                    (("2"
                                                                                                                                      (grind-with-ext)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (case-replace
                                                                                                                         "q = p")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "point_on_segment?")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             +
                                                                                                                             "0")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (hide-all-but
                                                                                                                           (-1
                                                                                                                            -3
                                                                                                                            1))
                                                                                                                          (("2"
                                                                                                                            (grind-with-ext)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (rewrite
                                                                                                                 "point_on_reverse_segment"
                                                                                                                 :dir
                                                                                                                 rl)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "reverse_segment")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     +
                                                                                                                     "i - i_1")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -9
                                                                                                                     "i - i_1")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (skeep)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "o"
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "singleton_seq"
                                                                                               -1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "reverse_segment_seq"
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "^"
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "min"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (case
                                                                                                       "MPS`seq(0)`x < M`seq(0)`x")
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "topleft_vertex_bounds_all_points")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "Am"
                                                                                                           "Am`vertices(topleft_vertex_idx(Am))")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "MPS`seq(0) + d!1 * (# x := -1, y := 0 #)")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -17
                                                                                                                 "topleft_vertex_idx(Am)")
                                                                                                                (("1"
                                                                                                                  (hide-all-but
                                                                                                                   (-1
                                                                                                                    -2
                                                                                                                    -17))
                                                                                                                  (("1"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "vertex?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               +
                                                                                                               "topleft_vertex_idx(Am)")
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "MPS"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "miter_point_seq"
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "miter_point_cross_pos")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "S2"
                                                                                                               "1"
                                                                                                               "d")
                                                                                                              (("2"
                                                                                                                (skoletin)
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   -23
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (rewrite
                                                                                                                     -23
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       -23
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -32
                                                                                                                         "1")
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -2
                                                                                                                           :dir
                                                                                                                           rl)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -17
                                                                                                                             "i!1")
                                                                                                                            (("2"
                                                                                                                              (hide-all-but
                                                                                                                               (-1
                                                                                                                                -17
                                                                                                                                -23
                                                                                                                                -32
                                                                                                                                -37
                                                                                                                                1))
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (hide
                                                                                                                                   -4)
                                                                                                                                  (("2"
                                                                                                                                    (grind)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (skeep
                                                                                     +
                                                                                     t)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "o"
                                                                                       -2)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "singleton_seq"
                                                                                         -2)
                                                                                        (("2"
                                                                                          (lift-if)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "reverse_segment_seq"
                                                                                             -2)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "^"
                                                                                               -2)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "min"
                                                                                                   -2)
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     -2)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (equate
                                                                                                         "i_1"
                                                                                                         "0"
                                                                                                         (assert))
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "MPS"
                                                                                                           -2)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "miter_point_seq"
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "miter_point_neq_right_offset_point")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "S2"
                                                                                                                 "1 + i"
                                                                                                                 "d")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -8
                                                                                                         "i - i_1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("3"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("4"
                                                                                    (hide-all-but
                                                                                     (-6
                                                                                      1))
                                                                                    (("4"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("5"
                                                                                    (expand
                                                                                     "^"
                                                                                     1)
                                                                                    (("5"
                                                                                      (assert)
                                                                                      (("5"
                                                                                        (expand
                                                                                         "min"
                                                                                         1)
                                                                                        (("5"
                                                                                          (skeep
                                                                                           +
                                                                                           t)
                                                                                          (("5"
                                                                                            (expand
                                                                                             "^"
                                                                                             -1)
                                                                                            (("5"
                                                                                              (expand
                                                                                               "min"
                                                                                               -1)
                                                                                              (("5"
                                                                                                (inst
                                                                                                 -8
                                                                                                 "i_1")
                                                                                                (("5"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (skeep)
                                                                              (("2"
                                                                                (expand
                                                                                 "point_on_segment_seq?")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "point_on_polygon_perimeter?")
                                                                                    (("2"
                                                                                      (skeep*
                                                                                       -
                                                                                       t)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "edge_of_polygon?")
                                                                                        (("2"
                                                                                          (skeep)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "MPS"
                                                                                             -3)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "miter_point_seq"
                                                                                               -3)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "miter_seg_pts_max_min_dist")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "S2"
                                                                                                   "p"
                                                                                                   "i!2"
                                                                                                   "d")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (skeep)
                                                                                                        (("2"
                                                                                                          (name-replace*
                                                                                                           ("m1"
                                                                                                            "miter_point(S2`seq(1 + i!2),
                                                                                                                                                                                                                                                                                                                                                                                                       S2`seq(i!2),
                                                                                                                                                                                                                                                                                                                                                                                                       S2`seq(2 + i!2),
                                                                                                                                                                                                                                                                                                                                                                                                       d)"
                                                                                                            "m2"
                                                                                                            "miter_point(S2`seq(2 + i!2),
                                                                                                                                                                                                                                                                                                                                                                                                       S2`seq(1 + i!2),
                                                                                                                                                                                                                                                                                                                                                                                                       S2`seq(3 + i!2),
                                                                                                                                                                                                                                                                                                                                                                                                       d)"))
                                                                                                          (("2"
                                                                                                            (inst-cp
                                                                                                             -27
                                                                                                             "1 + i!2")
                                                                                                            (("2"
                                                                                                              (inst-cp
                                                                                                               -27
                                                                                                               "2 + i!2")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (case
                                                                                                                   "norm(m2 - m1) > 0")
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "forall (s, e: segment_2d, p, q: point_2d):
                                                                                                                                                                                                                                                                                                                            between_rays?(s, e)(p) & not between_rays?(s, e)(q) => p /= q")
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "miter_seg_pts_between_segments_1")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "S2"
                                                                                                                         "p"
                                                                                                                         "i!2"
                                                                                                                         "d")
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "miter_seg_pts_between_segments_2")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "S2"
                                                                                                                             "p"
                                                                                                                             "i!2"
                                                                                                                             "d")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (lift-if)
                                                                                                                                (("1"
                                                                                                                                  (split
                                                                                                                                   -32)
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (case-replace
                                                                                                                                       "i!3 = i!1")
                                                                                                                                      (("1"
                                                                                                                                        (lemma
                                                                                                                                         "miter_seg_points_not_on_edge")
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "S2"
                                                                                                                                           "1 + i!2"
                                                                                                                                           "d")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "p")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (rewrite
                                                                                                                                                   "point_on_reverse_segment"
                                                                                                                                                   1
                                                                                                                                                   :dir
                                                                                                                                                   rl)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "reverse_segment")
                                                                                                                                                    (("1"
                                                                                                                                                      (case-replace
                                                                                                                                                       "(# p1 := S2`seq(2 + i!2), p2 := S2`seq(1 + i!2) #) = e!1")
                                                                                                                                                      (("1"
                                                                                                                                                        (apply-extensionality
                                                                                                                                                         :hide?
                                                                                                                                                         t)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (case-replace
                                                                                                                                         "i!3 = prev_index(Am, i!1)")
                                                                                                                                        (("1"
                                                                                                                                          (lemma
                                                                                                                                           "miter_seg_pts_not_on_next_edge")
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "S2"
                                                                                                                                             "2 + i!2"
                                                                                                                                             "norm(m1 - m2) / norm(S2`seq(1 + i!2) - S2`seq(2 + i!2))"
                                                                                                                                             "d")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "p")
                                                                                                                                                (("1"
                                                                                                                                                  (split
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (rewrite
                                                                                                                                                     "point_on_reverse_segment"
                                                                                                                                                     1
                                                                                                                                                     :dir
                                                                                                                                                     rl)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "reverse_segment")
                                                                                                                                                      (("1"
                                                                                                                                                        (equate
                                                                                                                                                         "(# p1 := S2`seq(3 + i!2), p2 := S2`seq(2 + i!2) #)"
                                                                                                                                                         "e!1")
                                                                                                                                                        (("1"
                                                                                                                                                          (apply-extensionality
                                                                                                                                                           :hide?
                                                                                                                                                           t)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "edges_of_polygon")
                                                                                                                                                            (("1"
                                                                                                                                                              (rewrite
                                                                                                                                                               -34
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (expand
                                                                                                                                                             "edges_of_polygon")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (inst
                                                                                                                                                       -33
                                                                                                                                                       "2 + i!2")
                                                                                                                                                      (("2"
                                                                                                                                                        (ground)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (lemma
                                                                                                                                                     "miter_pt_segment_parallel_to_edge")
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -
                                                                                                                                                       "S2"
                                                                                                                                                       "1 + i!2"
                                                                                                                                                       "d")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (rewrite
                                                                                                                                                           "dir_parallel_diff")
                                                                                                                                                          (("2"
                                                                                                                                                            (rewrite
                                                                                                                                                             "dir_parallel_eqv_normalized_diffs_eq")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "^"
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -9)
                                                                                                                                                                (("1"
                                                                                                                                                                  (replace
                                                                                                                                                                   -10)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (equate
                                                                                                                                                                     "norm(m1 - m2) / norm(S2`seq(1 + i!2) - S2`seq(2 + i!2))
                                                                                                                                                                                                                                                                                                                                                                                                                                                           * (S2`seq(1 + i!2) - S2`seq(2 + i!2))"
                                                                                                                                                                     "m1 - m2")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (hide-all-but
                                                                                                                                                                       (-15
                                                                                                                                                                        1))
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "point_on_segment?")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (skeep)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst
                                                                                                                                                                             +
                                                                                                                                                                             "1 - t")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (grind)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (hide-all-but
                                                                                                                                                                       (-1
                                                                                                                                                                        1))
                                                                                                                                                                      (("2"
                                                                                                                                                                        (mult-by
                                                                                                                                                                         -1
                                                                                                                                                                         "norm(m1 - m2)")
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (lemma
                                                                                                                                                               "successive_miter_points_neq")
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 -
                                                                                                                                                                 "S2"
                                                                                                                                                                 "1 + i!2"
                                                                                                                                                                 "d")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (splash
                                                                                                                                               1
                                                                                                                                               t)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (cross-mult
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("3"
                                                                                                                                              (use
                                                                                                                                               "norm_eq_0")
                                                                                                                                              (("3"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (case-replace
                                                                                                                                           "i!3 = next_index(Am, i!1)")
                                                                                                                                          (("1"
                                                                                                                                            (ground)
                                                                                                                                            (("1"
                                                                                                                                              (use
                                                                                                                                               "no_outgoing_edges_from_M_0")
                                                                                                                                              (("1"
                                                                                                                                                (ground)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   +
                                                                                                                                                   "e!1")
                                                                                                                                                  (("1"
                                                                                                                                                    (split
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "edges_of_polygon"
                                                                                                                                                       -14)
                                                                                                                                                      (("1"
                                                                                                                                                        (lemma
                                                                                                                                                         "on_segment_btw_rays_imp_all_btw")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           -
                                                                                                                                                           "p"
                                                                                                                                                           "e!1`p2"
                                                                                                                                                           "s"
                                                                                                                                                           "e"
                                                                                                                                                           "e!1")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (rewrite
                                                                                                                                                               -36
                                                                                                                                                               -7)
                                                                                                                                                              (("1"
                                                                                                                                                                (rewrite
                                                                                                                                                                 -35
                                                                                                                                                                 -6)
                                                                                                                                                                (("1"
                                                                                                                                                                  (rewrite
                                                                                                                                                                   -35
                                                                                                                                                                   -6)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     -35
                                                                                                                                                                     -6)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "extend_between_rays_left")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -
                                                                                                                                                                         "s"
                                                                                                                                                                         "e"
                                                                                                                                                                         "(# p1 := M`seq(i!2), p2 := Am`vertices(i!1) #)"
                                                                                                                                                                         "p")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (expand
                                                                                                                                                                             "edges_of_polygon")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (expand
                                                                                                                                                       "edges_of_polygon")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("3"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("3"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (use
                                                                                                                                               "no_outgoing_edges_from_M")
                                                                                                                                              (("2"
                                                                                                                                                (ground)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   +
                                                                                                                                                   "e!1")
                                                                                                                                                  (("2"
                                                                                                                                                    (split
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "edges_of_polygon")
                                                                                                                                                      (("1"
                                                                                                                                                        (lemma
                                                                                                                                                         "on_segment_btw_rays_imp_all_btw")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           -
                                                                                                                                                           "p"
                                                                                                                                                           "e!1`p2"
                                                                                                                                                           "s"
                                                                                                                                                           "e"
                                                                                                                                                           "e!1")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (rewrite
                                                                                                                                                               -35
                                                                                                                                                               -6)
                                                                                                                                                              (("1"
                                                                                                                                                                (rewrite
                                                                                                                                                                 -34
                                                                                                                                                                 -5)
                                                                                                                                                                (("1"
                                                                                                                                                                  (rewrite
                                                                                                                                                                   -34
                                                                                                                                                                   -5)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     -34
                                                                                                                                                                     -5)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "extend_between_rays_left")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -
                                                                                                                                                                         "s"
                                                                                                                                                                         "e"
                                                                                                                                                                         "(# p1 := M`seq(i!2), p2 := Am`vertices(i!1) #)"
                                                                                                                                                                         "p")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (expand
                                                                                                                                                       "edges_of_polygon")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("3"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("3"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (lemma
                                                                                                                                             "min_edge_sep_all_points")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "Am"
                                                                                                                                               "i!1"
                                                                                                                                               "i!3"
                                                                                                                                               "q!1"
                                                                                                                                               "p")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (split
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     (-1
                                                                                                                                                      -11
                                                                                                                                                      -25))
                                                                                                                                                    (("1"
                                                                                                                                                      (rewrite
                                                                                                                                                       "norm_sym")
                                                                                                                                                      (("1"
                                                                                                                                                        (real-props)
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "norm(p - q!1) * min_miter_sine(S2) <=
                                                                                                                                                                                                                                          min_miter_sine(S2) * min_edge_sep(Am) / 2")
                                                                                                                                                          (("1"
                                                                                                                                                            (cancel-by
                                                                                                                                                             -1
                                                                                                                                                             "min_miter_sine(S2)")
                                                                                                                                                            nil
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (expand
                                                                                                                                                     "edges_of_polygon"
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (rewrite
                                                                                                                                                       "point_on_reverse_segment"
                                                                                                                                                       1
                                                                                                                                                       :dir
                                                                                                                                                       rl)
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "reverse_segment")
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("2"
                                                                                                                                                            (replace
                                                                                                                                                             -2)
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               -17)
                                                                                                                                                              (("2"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (flatten)
                                                                                                                                    (("2"
                                                                                                                                      (case
                                                                                                                                       "segment_endpoint?(e!1)(S2`seq(1 + i!2))")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "segment_endpoint?")
                                                                                                                                        (("1"
                                                                                                                                          (split
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (lemma
                                                                                                                                             "on_segment_btw_rays_imp_all_btw")
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "p"
                                                                                                                                               "e!1`p2"
                                                                                                                                               _
                                                                                                                                               _
                                                                                                                                               "e!1")
                                                                                                                                              (("1"
                                                                                                                                                (inst?)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (rewrite
                                                                                                                                                       -34
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (rewrite
                                                                                                                                                         -34
                                                                                                                                                         -1)
                                                                                                                                                        (("1"
                                                                                                                                                          (rewrite
                                                                                                                                                           -34
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (lift-if)
                                                                                                                                                            (("1"
                                                                                                                                                              (split
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("1"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "no_outgoing_edges_from_M_0")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "A"
                                                                                                                                                                     "B"
                                                                                                                                                                     "Am"
                                                                                                                                                                     "Bm"
                                                                                                                                                                     "M"
                                                                                                                                                                     _
                                                                                                                                                                     _
                                                                                                                                                                     "w")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst?)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           +
                                                                                                                                                                           "e!1")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -41
                                                                                                                                                                         "i!2")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("3"
                                                                                                                                                                        (inst
                                                                                                                                                                         -42
                                                                                                                                                                         "i!2")
                                                                                                                                                                        (("3"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("2"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "no_outgoing_edges_from_M")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "A"
                                                                                                                                                                     "B"
                                                                                                                                                                     "Am"
                                                                                                                                                                     "Bm"
                                                                                                                                                                     "M"
                                                                                                                                                                     _
                                                                                                                                                                     _
                                                                                                                                                                     "i!2")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst?)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           +
                                                                                                                                                                           "e!1")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -40
                                                                                                                                                                         "i!2")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("3"
                                                                                                                                                                        (inst
                                                                                                                                                                         -40
                                                                                                                                                                         "i!2 - 1")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("4"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (inst
                                                                                                                                                   -32
                                                                                                                                                   "1 + i!2")
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("3"
                                                                                                                                                  (inst
                                                                                                                                                   -32
                                                                                                                                                   "i!2")
                                                                                                                                                  (("3"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (lemma
                                                                                                                                             "on_segment_btw_rays_imp_all_btw")
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "p"
                                                                                                                                               "e!1`p1"
                                                                                                                                               _
                                                                                                                                               _
                                                                                                                                               "reverse_segment(e!1)")
                                                                                                                                              (("2"
                                                                                                                                                (inst?)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "reverse_segment"
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (split
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (rewrite
                                                                                                                                                         -34
                                                                                                                                                         -1)
                                                                                                                                                        (("1"
                                                                                                                                                          (rewrite
                                                                                                                                                           -34
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (rewrite
                                                                                                                                                             -34
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -46
                                                                                                                                                               "i!2")
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "no_incoming_edge_at_i")
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst?
                                                                                                                                                                   +)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replace
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lift-if)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -40
                                                                                                                                                                     "i!2")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("3"
                                                                                                                                                                    (inst
                                                                                                                                                                     -40
                                                                                                                                                                     "i!2 - 1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (lift-if)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (ground)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst
                                                                                                                                                                               -45
                                                                                                                                                                               "0")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -41
                                                                                                                                                                         "i!2")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("4"
                                                                                                                                                                    (ground)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (rewrite
                                                                                                                                                         "point_on_reverse_segment"
                                                                                                                                                         1
                                                                                                                                                         :dir
                                                                                                                                                         rl)
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "reverse_segment")
                                                                                                                                                          (("2"
                                                                                                                                                            (hide-all-but
                                                                                                                                                             (-14
                                                                                                                                                              1))
                                                                                                                                                            (("2"
                                                                                                                                                              (grind)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("3"
                                                                                                                                                        (expand
                                                                                                                                                         "point_on_segment?")
                                                                                                                                                        (("3"
                                                                                                                                                          (inst
                                                                                                                                                           +
                                                                                                                                                           "1")
                                                                                                                                                          (("3"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (inst
                                                                                                                                                   -32
                                                                                                                                                   "1 + i!2")
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("3"
                                                                                                                                                  (inst
                                                                                                                                                   -32
                                                                                                                                                   "i!2")
                                                                                                                                                  (("3"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (case
                                                                                                                                         "segment_endpoint?(e!1)(S2`seq(2 + i!2))")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "segment_endpoint?")
                                                                                                                                          (("1"
                                                                                                                                            (split
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (lemma
                                                                                                                                               "on_segment_btw_rays_imp_all_btw")
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "p"
                                                                                                                                                 "e!1`p2"
                                                                                                                                                 _
                                                                                                                                                 _
                                                                                                                                                 "e!1")
                                                                                                                                                (("1"
                                                                                                                                                  (hide
                                                                                                                                                   -4)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst?)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (rewrite
                                                                                                                                                           -33
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (rewrite
                                                                                                                                                             -33
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (rewrite
                                                                                                                                                               -32
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (lift-if)
                                                                                                                                                                (("1"
                                                                                                                                                                  (split
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (equate
                                                                                                                                                                       "i!2"
                                                                                                                                                                       "i - 1"
                                                                                                                                                                       (assert))
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (lemma
                                                                                                                                                                           "no_outgoing_edges_from_M")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst
                                                                                                                                                                             -
                                                                                                                                                                             "A"
                                                                                                                                                                             "B"
                                                                                                                                                                             "Am"
                                                                                                                                                                             "Bm"
                                                                                                                                                                             "M"
                                                                                                                                                                             "s"
                                                                                                                                                                             "e"
                                                                                                                                                                             "i")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (inst
                                                                                                                                                                                 +
                                                                                                                                                                                 "e!1")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "extend_between_rays_left")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -
                                                                                                                                                                                       "s"
                                                                                                                                                                                       "e"
                                                                                                                                                                                       "(# p1 := M`seq(i), p2 := Am`vertices(i!1) #)"
                                                                                                                                                                                       "e!1`p2")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "edges_of_polygon")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "edges_of_polygon")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (lemma
                                                                                                                                                                       "no_outgoing_edges_from_M")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -
                                                                                                                                                                         "A"
                                                                                                                                                                         "B"
                                                                                                                                                                         "Am"
                                                                                                                                                                         "Bm"
                                                                                                                                                                         "M"
                                                                                                                                                                         _
                                                                                                                                                                         _
                                                                                                                                                                         "1 + i!2")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst?)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst
                                                                                                                                                                               +
                                                                                                                                                                               "e!1")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             -39
                                                                                                                                                                             "1 + i!2")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("3"
                                                                                                                                                                            (inst
                                                                                                                                                                             -39
                                                                                                                                                                             "i!2")
                                                                                                                                                                            (("3"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (inst
                                                                                                                                                       -31
                                                                                                                                                       "2 + i!2")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("3"
                                                                                                                                                      (inst
                                                                                                                                                       -31
                                                                                                                                                       "1 + i!2")
                                                                                                                                                      (("3"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (flatten)
                                                                                                                                              (("2"
                                                                                                                                                (case-replace
                                                                                                                                                 "i = 0")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (expand
                                                                                                                                                   "edges_of_polygon")
                                                                                                                                                  (("2"
                                                                                                                                                    (rewrite
                                                                                                                                                     -33
                                                                                                                                                     -3)
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (rewrite
                                                                                                                                                         -33
                                                                                                                                                         -3)
                                                                                                                                                        (("2"
                                                                                                                                                          (rewrite
                                                                                                                                                           -32
                                                                                                                                                           -3)
                                                                                                                                                          (("2"
                                                                                                                                                            (rewrite
                                                                                                                                                             -32
                                                                                                                                                             -3)
                                                                                                                                                            (("2"
                                                                                                                                                              (lift-if)
                                                                                                                                                              (("2"
                                                                                                                                                                (split
                                                                                                                                                                 -3)
                                                                                                                                                                (("1"
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (equate
                                                                                                                                                                     "i!2"
                                                                                                                                                                     "i - 1"
                                                                                                                                                                     (assert))
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (case-replace
                                                                                                                                                                         "e!1 = h")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (hide-all-but
                                                                                                                                                                           (-2
                                                                                                                                                                            -3
                                                                                                                                                                            -14
                                                                                                                                                                            -52))
                                                                                                                                                                          (("1"
                                                                                                                                                                            (use
                                                                                                                                                                             "on_segment_not_between_rays")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (ground)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (hide
                                                                                                                                                                                 1)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (rewrite
                                                                                                                                                                                   "point_on_reverse_segment"
                                                                                                                                                                                   1
                                                                                                                                                                                   :dir
                                                                                                                                                                                   rl)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "reverse_segment")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (replace
                                                                                                                                                                                       -4
                                                                                                                                                                                       :dir
                                                                                                                                                                                       rl)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -2)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (propax)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (lemma
                                                                                                                                                                           "shared_endpoints_imp_same_edge")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             -
                                                                                                                                                                             "Am"
                                                                                                                                                                             "e!1"
                                                                                                                                                                             "h")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -45
                                                                                                                                                                     "1 + i!2")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "no_incoming_edge_at_i")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         +
                                                                                                                                                                         _
                                                                                                                                                                         _
                                                                                                                                                                         "e!1")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst?
                                                                                                                                                                           +)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (rewrite
                                                                                                                                                                               "point_on_segment_has_offset"
                                                                                                                                                                               -13)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (skeep)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -13
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (case-replace
                                                                                                                                                                                     "d!1 = 0")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (case-replace
                                                                                                                                                                                       "d!1 = 1")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (hide-all-but
                                                                                                                                                                                         (-2
                                                                                                                                                                                          -3))
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (grind)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (lemma
                                                                                                                                                                                         "scaled_vector_between_rays")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -
                                                                                                                                                                                           "(# p1 := M`seq(i!2), p2 := M`seq(1 + i!2) #)"
                                                                                                                                                                                           "(# p1 := M`seq(1 + i!2), p2 := M`seq(2 + i!2) #)"
                                                                                                                                                                                           "(1 - d!1) * (e!1`p1 - e!1`p2)"
                                                                                                                                                                                           "1 / (1 - d!1)")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (split
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -3)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (real-props)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (equate
                                                                                                                                                                                                   "e!1`p2 + (e!1`p1 - e!1`p2)"
                                                                                                                                                                                                   "e!1`p1")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                                     1)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (grind-with-ext)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -2)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (equate
                                                                                                                                                                                                 "e!1`p2 + (1 - d!1) * (e!1`p1 - e!1`p2)"
                                                                                                                                                                                                 "e!1`p1 + d!1 * (e!1`p2 - e!1`p1)")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                                   1)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (grind-with-ext)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (real-props)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("3"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("4"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -40
                                                                                                                                                                                             "1 + i!2")
                                                                                                                                                                                            (("4"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             -39
                                                                                                                                                                             "1 + i!2")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (case
                                                                                                                                           "edge_of_polygon?(Am)((# p1 := S2`seq(1 + i!2), p2 := S2`seq(2 + i!2) #))")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "edge_of_polygon?")
                                                                                                                                            (("1"
                                                                                                                                              (skeep)
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "min_edge_sep_all_points")
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -
                                                                                                                                                   "Am"
                                                                                                                                                   "i!3"
                                                                                                                                                   "i!4"
                                                                                                                                                   "p"
                                                                                                                                                   "q!1")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "segment_endpoint?")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "edges_of_polygon")
                                                                                                                                                        (("1"
                                                                                                                                                          (ground)
                                                                                                                                                          (("1"
                                                                                                                                                            (hide-all-but
                                                                                                                                                             (-1
                                                                                                                                                              -12))
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "d")
                                                                                                                                                              (("1"
                                                                                                                                                                (real-props)
                                                                                                                                                                (("1"
                                                                                                                                                                  (case
                                                                                                                                                                   "norm(p - q!1) * min_miter_sine(S2) <=
                                                                                                                                                                                                                                               min_miter_sine(S2) * min_edge_sep(Am) / 2")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (cancel-by
                                                                                                                                                                     -1
                                                                                                                                                                     "min_miter_sine(S2)")
                                                                                                                                                                    nil
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (replace
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (case
                                                                                                                                             "edge_of_polygon?(Bm)
                                                                                                                                                                                                                                                                                                                                                                              ((# p1 := S2`seq(1 + i!2), p2 := S2`seq(2 + i!2) #))")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "edge_of_polygon?"
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (skeep)
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "min_edge_sep_AB_all_points")
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "Am"
                                                                                                                                                     "Bm"
                                                                                                                                                     "i!3"
                                                                                                                                                     "i!4"
                                                                                                                                                     "p"
                                                                                                                                                     "q!1")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (split
                                                                                                                                                         -1)
                                                                                                                                                        (("1"
                                                                                                                                                          (hide-all-but
                                                                                                                                                           (-1
                                                                                                                                                            -11))
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "d")
                                                                                                                                                            (("1"
                                                                                                                                                              (real-props)
                                                                                                                                                              (("1"
                                                                                                                                                                (case
                                                                                                                                                                 "norm(p - q!1) * min_miter_sine(S2) <=
                                                                                                                                                                                                                                                                                                                                                                                   min_miter_sine(S2) * min_edge_separation_AB(Am, Bm) / 3")
                                                                                                                                                                (("1"
                                                                                                                                                                  (hide
                                                                                                                                                                   -3)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (cancel-by
                                                                                                                                                                     -1
                                                                                                                                                                     "min_miter_sine(S2)")
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (skeep)
                                                                                                                                                          (("2"
                                                                                                                                                            (use
                                                                                                                                                             "injected_only_vertex_intersections")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -
                                                                                                                                                                   "edges_of_polygon(Bm)(i!4)")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "only_vertex_intersections?"
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "e!1")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (split
                                                                                                                                                                         -1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (hide-all-but
                                                                                                                                                                             (-2
                                                                                                                                                                              -6
                                                                                                                                                                              2
                                                                                                                                                                              3))
                                                                                                                                                                            (("1"
                                                                                                                                                                              (grind)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             -
                                                                                                                                                                             "u")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "segment_endpoint?")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                     (-1
                                                                                                                                                                                      -2
                                                                                                                                                                                      -6
                                                                                                                                                                                      3
                                                                                                                                                                                      4))
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (grind)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (rewrite
                                                                                                                                               -32
                                                                                                                                               1)
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (use
                                                                                                                                                   "merge_path_props")
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -
                                                                                                                                                       "i!2")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("3"
                                                                                                                                            (inst
                                                                                                                                             -31
                                                                                                                                             "1 + i!2")
                                                                                                                                            (("3"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (hide-all-but
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (grind)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (use
                                                                                                                     "norm_eq_0")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (lemma
                                                                                                                         "successive_miter_points_neq")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "S2"
                                                                                                                           "1 + i!2"
                                                                                                                           "d")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "rightward_segment_offset")
                                                                            (("2"
                                                                              (expand
                                                                               "leftward_segment_offset")
                                                                              (("2"
                                                                                (replace
                                                                                 -2
                                                                                 1)
                                                                                (("2"
                                                                                  (expand
                                                                                   "edges_of_polygon"
                                                                                   -7)
                                                                                  (("2"
                                                                                    (rewrite
                                                                                     "midpoint_reverse"
                                                                                     1
                                                                                     :dir
                                                                                     rl)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "reverse_segment"
                                                                                       1)
                                                                                      (("2"
                                                                                        (equate
                                                                                         "perp_right(Am`vertices(next_index(Am, i!1)) - Am`vertices(i!1))"
                                                                                         "perp_left(S2`seq(2 + i) - S2`seq(1 + i))")
                                                                                        (("1"
                                                                                          (hide-all-but
                                                                                           (-7
                                                                                            1))
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (rewrite
                                                                                           -17
                                                                                           1)
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             -17
                                                                                             1)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -35)
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -36
                                                                                                 1
                                                                                                 :dir
                                                                                                 rl)
                                                                                                (("2"
                                                                                                  (hide-all-but
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (rewrite
                                                                         -15
                                                                         1)
                                                                        (("2"
                                                                          (rewrite
                                                                           -15
                                                                           1)
                                                                          (("2"
                                                                            (expand
                                                                             "edges_of_polygon")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (skeep)
                                                                      (("2"
                                                                        (expand
                                                                         "MPS"
                                                                         -1)
                                                                        (("2"
                                                                          (expand
                                                                           "miter_point_seq"
                                                                           -1)
                                                                          (("2"
                                                                            (lemma
                                                                             "successive_miter_pair_neq")
                                                                            (("2"
                                                                              (lemma
                                                                               "four_pt_miniseq_in_endpt_seq")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "S2"
                                                                                 "1 + k"
                                                                                 "d")
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "S2`seq(k)"
                                                                                       "S2`seq(1 + k)"
                                                                                       "S2`seq(2 + k)"
                                                                                       "S2`seq(3 + k)"
                                                                                       "d")
                                                                                      (("2"
                                                                                        (ground)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (skeep)
                                                                      (("3"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("4"
                                                                      (skeep)
                                                                      (("4"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "MPS"
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "miter_point_seq"
                                                                       1)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (use
                                                                 "norm_eq_0")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (skeep)
                                                      (("2"
                                                        (expand
                                                         "point_on_segment_seq?")
                                                        (("2"
                                                          (skeep)
                                                          (("2"
                                                            (rewrite
                                                             -9
                                                             -1)
                                                            (("2"
                                                              (rewrite
                                                               -9
                                                               -1)
                                                              (("2"
                                                                (apply
                                                                 (repeat
                                                                  (lift-if)))
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (split
                                                                     -1)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (rewrite
                                                                         "point_on_segment_has_offset")
                                                                        (("1"
                                                                          (skeep)
                                                                          (("1"
                                                                            (replace
                                                                             -25
                                                                             -2)
                                                                            (("1"
                                                                              (replace
                                                                               -2
                                                                               +)
                                                                              (("1"
                                                                                (replace
                                                                                 -1)
                                                                                (("1"
                                                                                  (hide-all-but
                                                                                   +)
                                                                                  (("1"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (inst
                                                                             -19
                                                                             "i!2")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (inst
                                                                         -14
                                                                         "u")
                                                                        (("2"
                                                                          (split
                                                                           -1)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (split
                                                                               -15
                                                                               :depth
                                                                               1)
                                                                              (("1"
                                                                                (ground)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (rewrite
                                                                                   "point_on_reverse_segment"
                                                                                   :dir
                                                                                   rl)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "reverse_segment")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "point_on_polygon_perimeter?")
                                                                                      (("2"
                                                                                        (inst
                                                                                         +
                                                                                         "edges_of_polygon(Am)(prev_index(Am, i!1))")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "edges_of_polygon")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (split
                                                                               -1)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (equate
                                                                                   "i!2"
                                                                                   "1 + i"
                                                                                   (assert))
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "point_on_reverse_segment"
                                                                                       :dir
                                                                                       rl)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "reverse_segment")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "edges_of_polygon")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -27
                                                                                             -26
                                                                                             :dir
                                                                                             rl)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -26)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "point_on_polygon_perimeter?")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       +
                                                                                                       "edges_of_polygon(Am)(i!1)")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "edges_of_polygon")
                                                                                                        (("1"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (replace
                                                                                         -27)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "edges_of_polygon")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (inst-cp
                                                                                   -18
                                                                                   "i!2")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -18
                                                                                     "i!2 - 1")
                                                                                    (("1"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        -18
                                                                                        -19
                                                                                        +))
                                                                                      (("1"
                                                                                        (expand
                                                                                         "point_on_segment?")
                                                                                        (("1"
                                                                                          (skeep)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -3
                                                                                             :hide?
                                                                                             t)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "one_parameter_min")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "M`seq(i!2 - 1)`x"
                                                                                                 "M`seq(i!2)`x"
                                                                                                 "M`seq(0)`x"
                                                                                                 "t")
                                                                                                (("1"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (replace -18 1)
                                                    (("2"
                                                      (expand
                                                       "merge_seq"
                                                       1)
                                                      (("2"
                                                        (expand "o" +)
                                                        (("2"
                                                          (expand
                                                           "singleton_seq")
                                                          (("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (use
                                             "no_min_inc_edge_to_M_Am_no_cross")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (ground)
                                                (("1"
                                                  (expand
                                                   "edges_of_polygon")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand
                                                   "edges_of_polygon")
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (use
                                           "no_min_inc_edge_to_M_Am_uniq_list")
                                          (("2"
                                            (assert)
                                            (("2" (ground) nil nil))
                                            nil))
                                          nil)
                                         ("3" (assert) nil nil)
                                         ("4" (propax) nil nil)
                                         ("5" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (expand
                                         "single_loop_back_seq?")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (ground)
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (inst + "i!2")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (skeep)
                                                    (("1"
                                                      (expand
                                                       "uniq_vertex_list?")
                                                      (("1"
                                                        (rewrite -4 -1)
                                                        (("1"
                                                          (rewrite
                                                           -4
                                                           -2)
                                                          (("1"
                                                            (rewrite
                                                             -4
                                                             -2)
                                                            (("1"
                                                              (lift-if)
                                                              (("1"
                                                                (ground)
                                                                (("1"
                                                                  (use
                                                                   "vertex_neq_prev")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (use
                                                                   "vertex_neq_prev")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (inst?
                                                                   -11)
                                                                  (("3"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("4"
                                                                  (inst?
                                                                   -10)
                                                                  (("4"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("5"
                                                                  (inst?
                                                                   -10)
                                                                  (("5"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("6"
                                                                  (use
                                                                   "vertex_neq_prev")
                                                                  (("6"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("7"
                                                                  (inst
                                                                   -17
                                                                   "i!2 - 1"
                                                                   "j - 1")
                                                                  (("7"
                                                                    (expand
                                                                     "^")
                                                                    (("7"
                                                                      (ground)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (rewrite -3 -1)
                                              (("2"
                                                (rewrite -3 -1)
                                                (("2"
                                                  (expand
                                                   "edges_of_polygon")
                                                  (("2"
                                                    (typepred
                                                     "Am`vertices")
                                                    (("2"
                                                      (expand
                                                       "uniq_vertex_list?")
                                                      (("2"
                                                        (inst
                                                         -
                                                         "prev_index(Am, i!1)"
                                                         "next_index(Am, i!1)")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           1)
                                                          (("2"
                                                            (typepred
                                                             "Am")
                                                            (("2"
                                                              (expand
                                                               "simple_polygon_2d?")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (hide
                                                                   (-1
                                                                    -2))
                                                                  (("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3" (ground) nil nil))
                                      nil)
                                     ("2"
                                      (skeep)
                                      (("2"
                                        (rewrite -2 -1)
                                        (("1"
                                          (rewrite -2 -1)
                                          (("1"
                                            (apply (repeat (lift-if)))
                                            (("1"
                                              (ground)
                                              (("1"
                                                (inst -13 "i!2")
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (inst -12 "i!2")
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("3"
                                                (use "vertex_neq_prev")
                                                (("3"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("4"
                                                (use "vertex_neq_prev")
                                                (("4"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("5"
                                                (hide-all-but
                                                 (-3 -4 -22 -23))
                                                (("5" (grind) nil nil))
                                                nil)
                                               ("6"
                                                (hide-all-but
                                                 (-2 -3 -21 -22))
                                                (("6" (grind) nil nil))
                                                nil)
                                               ("7"
                                                (inst -10 "i!2 - 1")
                                                (("7"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (assert) nil nil))
                                          nil)
                                         ("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (skeep)
                                    (("2"
                                      (expand "S2" 1)
                                      (("2"
                                        (hide-all-but 1)
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3"
                                    (skeep)
                                    (("3" (assert) nil nil))
                                    nil)
                                   ("4"
                                    (skeep)
                                    (("4" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (replace -1 1 :dir rl :hide? t)
                                  (("2"
                                    (hide-all-but 1)
                                    (("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (skeep)
                          (("2" (inst - "Am`vertices(k)")
                            (("2" (split -2 :depth 1)
                              (("1"
                                (replace -2)
                                (("1"
                                  (replace -11)
                                  (("1"
                                    (hide-all-but -1)
                                    (("1" (grind) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (expand
                                   "point_on_polygon_perimeter?")
                                  (("2"
                                    (inst + "edges_of_polygon(Am)(k)")
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (skeep)
                  (("2" (expand "point_on_segment_seq?")
                    (("2" (skeep)
                      (("2" (inst-cp -5 "i!1")
                        (("2" (inst -5 "1 + i!1")
                          (("2" (rewrite "point_on_segment_has_offset")
                            (("2" (skeep)
                              (("2"
                                (case-replace "d = 1")
                                (("1"
                                  (replace -2)
                                  (("1"
                                    (hide-all-but 1)
                                    (("1" (grind-with-ext) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (rewrite
                                   "point_on_segment_has_offset")
                                  (("1"
                                    (skeep)
                                    (("1"
                                      (replace -3 -1)
                                      (("1"
                                        (use "comps_eq")
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (split -1)
                                            (("1"
                                              (hide -2 -3)
                                              (("1"
                                                (replace -13)
                                                (("1"
                                                  (hide-all-but
                                                   (-1
                                                    -2
                                                    -4
                                                    -5
                                                    -7
                                                    -8
                                                    1))
                                                  (("1"
                                                    (grind)
                                                    (("1"
                                                      (lemma
                                                       "one_parameter_min_lt")
                                                      (("1"
                                                        (inst
                                                         -
                                                         "M`seq(i!1)`x"
                                                         "M`seq(1 + i!1)`x"
                                                         "M`seq(0)`x"
                                                         "d!1")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (case-replace
                                                       "d!1 = 0")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (cancel-by
                                                         -1
                                                         "d!1")
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (move-terms
                                                       -1
                                                       l
                                                       2)
                                                      (("3"
                                                        (real-props)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (move-terms
                                                       -1
                                                       l
                                                       2)
                                                      (("4"
                                                        (factor -1 *)
                                                        (("4"
                                                          (cancel-by
                                                           -1
                                                           "1 - d!1")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("5"
                                                      (factor
                                                       -1
                                                       l
                                                       (1 3))
                                                      (("5"
                                                        (assert)
                                                        (("5"
                                                          (lemma
                                                           "one_parameter_max")
                                                          (("5"
                                                            (inst
                                                             -
                                                             "M`seq(i!1)`y"
                                                             "M`seq(1 + i!1)`y"
                                                             "M`seq(0)`y"
                                                             "d!1")
                                                            (("5"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (inst - "i!1")
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("3" (skeep*) nil nil)
                 ("4" (inst -2 "0") (("4" (assert) nil nil)) nil))
                nil))
              nil))
            nil)
           ("2" (skeep)
            (("2" (inst?)
              (("2" (replace -7)
                (("2" (replace -1 :dir rl)
                  (("2" (hide-all-but -2) (("2" (grind) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (no_min_incoming_edge_to_M_TCC1 0
  (no_min_incoming_edge_to_M_TCC1-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_min_incoming_edge_to_M subtype "merged_polygon_closed.B"
    "(injection_props.merge_pre_condition(merged_polygon_closed.A))"))
  (no_min_incoming_edge_to_M_TCC1-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_incoming_edge_to_M subtype "merged_polygon_closed.B"
    "(injection_props.merge_pre_condition(merged_polygon_closed.A))")))
 (no_min_incoming_edge_to_M_TCC2 0
  (no_min_incoming_edge_to_M_TCC2-2 nil 3874129021
   ("" (skeep*)
    (("" (expand "^") (("" (expand "min") (("" (propax) nil nil)) nil))
      nil))
    nil)
   nil shostak
   (no_min_incoming_edge_to_M subtype
    "(finite_sequences[point_2d].^(merged_polygon_closed.M, (0, (number_fields.+)(merged_polygon_closed.i, 1))))`seq"
    "[naturalnumbers.below((number_fields.+)(2, merged_polygon_closed.i)) -> point_2d]"))
  (no_min_incoming_edge_to_M_TCC2-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_incoming_edge_to_M subtype
    "(finite_sequences[point_2d].^(merged_polygon_closed.M, (0, (number_fields.+)(merged_polygon_closed.i, 1))))`seq"
    "[naturalnumbers.below((number_fields.+)(2, merged_polygon_closed.i)) -> point_2d]")))
 (no_min_incoming_edge_to_M_TCC3 0
  (no_min_incoming_edge_to_M_TCC3-2 nil 3874129021
   ("" (skeep*)
    (("" (assert)
      (("" (use "adj_merge_seq_vertices_distinct")
        (("" (ground) nil nil)) nil))
      nil))
    nil)
   nil shostak
   (no_min_incoming_edge_to_M subtype "merged_polygon_closed.M"
    "segment_endpoint_seq"))
  (no_min_incoming_edge_to_M_TCC3-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_incoming_edge_to_M subtype "merged_polygon_closed.M"
    "segment_endpoint_seq")))
 (no_min_incoming_edge_to_M_TCC4 0
  (no_min_incoming_edge_to_M_TCC4-2 nil 3874129021
   ("" (skeep*) (("" (assert) nil nil)) nil) nil shostak
   (no_min_incoming_edge_to_M subtype "merged_polygon_closed.k"
    "naturalnumbers.below((number_fields.-)(merged_polygon_closed.M`length, 1))"))
  (no_min_incoming_edge_to_M_TCC4-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_incoming_edge_to_M subtype "merged_polygon_closed.k"
    "naturalnumbers.below((number_fields.-)(merged_polygon_closed.M`length, 1))")))
 (no_min_incoming_edge_to_M_TCC5 0
  (no_min_incoming_edge_to_M_TCC5-2 nil 3874129021
   ("" (skeep)
    (("" (assert)
      (("" (use "adj_merge_seq_vertices_distinct")
        (("" (ground) nil nil)) nil))
      nil))
    nil)
   nil shostak
   (no_min_incoming_edge_to_M subtype "merged_polygon_closed.M"
    "segment_endpoint_seq"))
  (no_min_incoming_edge_to_M_TCC5-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_min_incoming_edge_to_M subtype "merged_polygon_closed.M"
    "segment_endpoint_seq")))
 (no_min_incoming_edge_to_M 0
  (no_min_incoming_edge_to_M-1 nil 3874129021
   ("" (skeep*)
    (("" (expand "no_incoming_edge_at_i" +)
      (("" (skeep)
        (("" (ground)
          (("1" (lemma "no_min_incoming_edge_to_M_Am")
            (("1"
              (inst - "A" "B" "Am" "Bm" "M" "i" "s" "e" "h"
               "M`seq(0) + (# x := 0, y := 1 #)")
              (("1" (assert) (("1" (ground) nil nil)) nil)) nil))
            nil)
           ("2" (rewrite "merge_seq_commutative")
            (("2" (lemma "inject_vertices_into_polygon_comm")
              (("2" (inst - "A" "B" "Am" "Bm")
                (("2" (ground)
                  (("1"
                    (case "FORALL (k: below(i)): no_incoming_edge_at_i(Bm, Am, M, k)")
                    (("1" (lemma "no_min_incoming_edge_to_M_Am")
                      (("1"
                        (inst - "B" "A" "Bm" "Am" "M" "i" "s" "e" "h"
                         "M`seq(0) + (# x := 0, y := 1 #)")
                        (("1" (assert) (("1" (ground) nil nil)) nil)
                         ("2" (expand "ccw_merge_pre_condition")
                          (("2" (typepred "Bm")
                            (("2" (expand "ccw_merge_pre_condition")
                              (("2"
                                (rewrite
                                 "merge_pre_condition_symmetric")
                                nil
                                nil))
                              nil))
                            nil))
                          nil)
                         ("3" (expand "ccw_merge_pre_condition")
                          (("3" (typepred "B")
                            (("3" (expand "ccw_merge_pre_condition")
                              (("3"
                                (rewrite
                                 "merge_pre_condition_symmetric")
                                nil
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide-all-but (-6 1))
                      (("2" (skeep)
                        (("2" (inst?)
                          (("2" (expand "no_incoming_edge_at_i")
                            (("2" (ground)
                              (("2"
                                (skeep)
                                (("2"
                                  (inst?)
                                  (("2" (ground) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("3" (skeep*)
                      (("3" (use "adj_merge_seq_vertices_distinct")
                        (("3" (assert) (("3" (inst?) nil nil)) nil))
                        nil))
                      nil)
                     ("4" (skeep)
                      (("4" (expand "ccw_merge_pre_condition")
                        (("4" (typepred "Bm")
                          (("4" (expand "ccw_merge_pre_condition")
                            (("4"
                              (rewrite "merge_pre_condition_symmetric")
                              nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (typepred "B")
                    (("2" (expand "ccw_merge_pre_condition")
                      (("2" (propax) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (no_incoming_edges_to_M_TCC1 0
  (no_incoming_edges_to_M_TCC1-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_incoming_edges_to_M subtype "merged_polygon_closed.B"
    "(injection_props.merge_pre_condition(merged_polygon_closed.A))"))
  (no_incoming_edges_to_M_TCC1-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_incoming_edges_to_M subtype "merged_polygon_closed.B"
    "(injection_props.merge_pre_condition(merged_polygon_closed.A))")))
 (no_incoming_edges_to_M_TCC2 0
  (no_incoming_edges_to_M_TCC2-2 nil 3874129021
   ("" (skeep*)
    (("" (expand "^")
      (("" (assert) (("" (expand "min") (("" (propax) nil nil)) nil))
        nil))
      nil))
    nil)
   nil shostak
   (no_incoming_edges_to_M subtype
    "(finite_sequences[point_2d].^(merged_polygon_closed.M, (0, (number_fields.+)(merged_polygon_closed.i, 1))))`seq"
    "[naturalnumbers.below((number_fields.+)(2, merged_polygon_closed.i)) -> point_2d]"))
  (no_incoming_edges_to_M_TCC2-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_incoming_edges_to_M subtype
    "(finite_sequences[point_2d].^(merged_polygon_closed.M, (0, (number_fields.+)(merged_polygon_closed.i, 1))))`seq"
    "[naturalnumbers.below((number_fields.+)(2, merged_polygon_closed.i)) -> point_2d]")))
 (no_incoming_edges_to_M_TCC3 0
  (no_incoming_edges_to_M_TCC3-2 nil 3874129021
   ("" (skeep)
    (("" (assert)
      (("" (use "adj_merge_seq_vertices_distinct")
        (("" (ground) nil nil)) nil))
      nil))
    nil)
   nil shostak
   (no_incoming_edges_to_M subtype "merged_polygon_closed.M"
    "segment_endpoint_seq"))
  (no_incoming_edges_to_M_TCC3-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_incoming_edges_to_M subtype "merged_polygon_closed.M"
    "segment_endpoint_seq")))
 (no_incoming_edges_to_M_TCC4 0
  (no_incoming_edges_to_M_TCC4-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (no_incoming_edges_to_M subtype "merged_polygon_closed.i"
    "naturalnumbers.below((number_fields.-)(merged_polygon_closed.M`length, 1))"))
  (no_incoming_edges_to_M_TCC4-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_incoming_edges_to_M subtype "merged_polygon_closed.i"
    "naturalnumbers.below((number_fields.-)(merged_polygon_closed.M`length, 1))")))
 (no_incoming_edges_to_M 0
  (no_incoming_edges_to_M-1 nil 3874129021
   ("" (skeep)
    (("" (induct "i" :name "NAT_induction")
      (("1" (skeep*)
        (("1" (use "no_min_incoming_edge_to_M")
          (("1" (ground)
            (("1" (skeep)
              (("1" (inst - "k")
                (("1" (ground)
                  (("1" (inst?)
                    (("1" (ground)
                      (("1" (expand "uniq_vertex_list?")
                        (("1" (skeep)
                          (("1" (expand "^")
                            (("1" (inst - "i" "j!1") nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (skeep) (("2" (assert) nil nil)) nil)
       ("3" (hide 2)
        (("3" (skeep)
          (("3" (assert)
            (("3" (skeep)
              (("3" (use "adj_merge_seq_vertices_distinct")
                (("3" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil)
       ("4" (hide 2)
        (("4" (skeep)
          (("4" (skeep)
            (("4" (expand "^")
              (("4" (expand "empty_seq")
                (("4" (expand "min") (("4" (ground) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("5" (skeep)
        (("5" (typepred "B")
          (("5" (expand "ccw_merge_pre_condition")
            (("5" (propax) nil nil)) nil))
          nil))
        nil)
       ("6" (skeep)
        (("6" (typepred "B")
          (("6" (expand "ccw_merge_pre_condition")
            (("6" (propax) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (no_right_side_loop_back_on_M_TCC1 0
  (no_right_side_loop_back_on_M_TCC1-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_right_side_loop_back_on_M subtype "merged_polygon_closed.B"
    "(injection_props.merge_pre_condition(merged_polygon_closed.A))"))
  (no_right_side_loop_back_on_M_TCC1-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_right_side_loop_back_on_M subtype "merged_polygon_closed.B"
    "(injection_props.merge_pre_condition(merged_polygon_closed.A))")))
 (no_right_side_loop_back_on_M_TCC2 0
  (no_right_side_loop_back_on_M_TCC2-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (no_right_side_loop_back_on_M subtype
    "(number_fields.-)(merged_polygon_closed.i, 1)" "below[M`length]"))
  (no_right_side_loop_back_on_M_TCC2-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_right_side_loop_back_on_M subtype
    "(number_fields.-)(merged_polygon_closed.i, 1)"
    "below[M`length]")))
 (no_right_side_loop_back_on_M_TCC3 0
  (no_right_side_loop_back_on_M_TCC3-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_right_side_loop_back_on_M subtype "merged_polygon_closed.i"
    "below[M`length]"))
  (no_right_side_loop_back_on_M_TCC3-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_right_side_loop_back_on_M subtype "merged_polygon_closed.i"
    "below[M`length]")))
 (no_right_side_loop_back_on_M_TCC4 0
  (no_right_side_loop_back_on_M_TCC4-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_right_side_loop_back_on_M subtype
    "(number_fields.+)(merged_polygon_closed.i, 1)" "below[M`length]"))
  (no_right_side_loop_back_on_M_TCC4-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_right_side_loop_back_on_M subtype
    "(number_fields.+)(merged_polygon_closed.i, 1)"
    "below[M`length]")))
 (no_right_side_loop_back_on_M_TCC5 0
  (no_right_side_loop_back_on_M_TCC5-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_right_side_loop_back_on_M subtype
    "(number_fields.-)(merged_polygon_closed.j, 1)" "below[M`length]"))
  (no_right_side_loop_back_on_M_TCC5-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_right_side_loop_back_on_M subtype
    "(number_fields.-)(merged_polygon_closed.j, 1)"
    "below[M`length]")))
 (no_right_side_loop_back_on_M_TCC6 0
  (no_right_side_loop_back_on_M_TCC6-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_right_side_loop_back_on_M subtype
    "(number_fields.-)(merged_polygon_closed.j, 1)" "nat"))
  (no_right_side_loop_back_on_M_TCC6-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_right_side_loop_back_on_M subtype
    "(number_fields.-)(merged_polygon_closed.j, 1)" "nat")))
 (no_right_side_loop_back_on_M_TCC7 0
  (no_right_side_loop_back_on_M_TCC7-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (no_right_side_loop_back_on_M subtype
    "(finite_sequences[point_2d].^(merged_polygon_closed.M, (0, (number_fields.-)(merged_polygon_closed.j, 1))))`seq"
    "[naturalnumbers.below(merged_polygon_closed.j) -> point_2d]"))
  (no_right_side_loop_back_on_M_TCC7-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (no_right_side_loop_back_on_M subtype
    "(finite_sequences[point_2d].^(merged_polygon_closed.M, (0, (number_fields.-)(merged_polygon_closed.j, 1))))`seq"
    "[naturalnumbers.below(merged_polygon_closed.j) -> point_2d]")))
 (no_right_side_loop_back_on_M 0
  (no_right_side_loop_back_on_M-1 nil 3874129021
   ("" (skeep*)
    ((""
      (name-replace*
       ("Am" "inject_vertices_into_polygon(A, B)`1" "Bm"
        "inject_vertices_into_polygon(A, B)`2"))
      (("" (case "(Am, Bm) = inject_vertices_into_polygon(A, B)")
        (("1" (hide -2 -3)
          (("1" (lemma "no_incoming_edges_to_M")
            (("1" (inst - "A" "B" "Am" "Bm" "M" "i")
              (("1" (assert)
                (("1" (ground)
                  (("1" (expand "no_incoming_edge_at_i")
                    (("1" (inst?)
                      (("1" (assert)
                        (("1" (lemma "merge_path_props")
                          (("1" (inst - "A" "B" "Am" "Bm" "M")
                            (("1" (assert)
                              (("1"
                                (inst - "j - 1")
                                (("1"
                                  (assert)
                                  (("1"
                                    (replace -7 1)
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (expand "uniq_vertex_list?")
                    (("2" (skeep)
                      (("2" (inst - "i_1" "j!1")
                        (("2" (expand "^") (("2" (propax) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (expand "ccw_merge_pre_condition")
                (("2" (use "injected_polygons_have_ccw_order")
                  (("2" (ground)
                    (("2"
                      (use "injected_polygon_has_merge_precondition")
                      (("2" (ground) nil nil)) nil))
                    nil))
                  nil))
                nil)
               ("3" (use "injected_polygons_have_ccw_order")
                (("3" (ground) nil nil)) nil))
              nil))
            nil))
          nil)
         ("2" (apply-extensionality :hide? t) nil nil))
        nil))
      nil))
    nil)
   nil shostak))
 (edge_on_perim_imp_outgoing_edge_TCC1 0
  (edge_on_perim_imp_outgoing_edge_TCC1-2 nil 3874129021
   ("" (skeep*)
    (("" (expand "edge_of_polygon?")
      (("" (skeep - t)
        (("" (expand "vertex?")
          (("" (inst + "next_index(A, i!1)")
            (("" (hide-all-but (-3 1)) (("" (grind) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (edge_on_perim_imp_outgoing_edge subtype
    "merged_polygon_closed.e`p2"
    "(polygons_2d.vertex?(merged_polygon_closed.A))"))
  (edge_on_perim_imp_outgoing_edge_TCC1-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (edge_on_perim_imp_outgoing_edge subtype
    "merged_polygon_closed.e`p2"
    "(polygons_2d.vertex?(merged_polygon_closed.A))")))
 (edge_on_perim_imp_outgoing_edge 0
  (edge_on_perim_imp_outgoing_edge-1 nil 3874129021
   ("" (skeep)
    (("" (name-replace "j" "find_index(A, e`p2)")
      ((""
        (name-replace "k" "min[below(A`num_vertices)]
         ({k: below(A`num_vertices) | point_outside_polygon?(A`vertices(rem(A`num_vertices)(j + k)), B)})")
        (("1" (typepred "k")
          (("1" (hide -4)
            (("1" (case-replace "k = 0")
              (("1" (expand "edge_of_polygon?")
                (("1" (skeep)
                  (("1" (hide +)
                    (("1" (expand "edges_of_polygon")
                      (("1" (use "perimeter_not_outside")
                        (("1" (ground)
                          (("1" (expand "point_on_polygon_perimeter?")
                            (("1" (rewrite "rem_mod" +)
                              (("1"
                                (inst + "e")
                                (("1"
                                  (case "j = next_index(A, i)")
                                  (("1"
                                    (replace -1 +)
                                    (("1"
                                      (replace -8 1 :dir rl)
                                      (("1"
                                        (expand "point_on_segment?")
                                        (("1"
                                          (inst + "1")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (replace -7 -5 :dir rl)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (use "find_index_self_index")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "edge_of_polygon?")
                                  (("2"
                                    (skeep)
                                    (("2"
                                      (inst + "i!1")
                                      (("2"
                                        (expand "edges_of_polygon")
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (split 1)
                                (("1"
                                  (use "vertex_find_index")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (expand "vertex?")
                                      (("1"
                                        (inst + "next_index(A, i)")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (typepred "j")
                                  (("2" (ground) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (name-replace "l" "rem(A`num_vertices)(j + k - 1)")
                (("2"
                  (inst + "A`vertices(l)" _ "edges_of_polygon(A)(l)")
                  (("2"
                    (case "exists (i: below(B`num_vertices)): B`vertices(i) = A`vertices(l)")
                    (("1" (skeep)
                      (("1" (inst? +)
                        (("1" (expand "edges_of_polygon" 2 1)
                          (("1" (ground)
                            (("1" (expand "vertex?")
                              (("1" (inst? +) nil nil)) nil)
                             ("2" (expand "edges_of_polygon" 1 3)
                              (("2"
                                (case-replace
                                 "rem(A`num_vertices)(j + k) = next_index(A, l)")
                                (("1"
                                  (name-replace
                                   "c"
                                   "min(vertex_wedge_radius(B), length(edges_of_polygon(A)(l)))")
                                  (("1"
                                    (name-replace
                                     "r"
                                     "A`vertices(l) + c *
             ^(A`vertices(next_index(A, l)) - A`vertices(l))")
                                    (("1"
                                      (lemma
                                       "extend_points_outside_polygon_excl")
                                      (("1"
                                        (name-replace
                                         "s"
                                         "(# p1 := A`vertices(next_index(A, l)), p2 :=  A`vertices(l) #)")
                                        (("1"
                                          (case "s`p2 = s`p1")
                                          (("1"
                                            (lemma "vertex_neq_next")
                                            (("1"
                                              (inst - "A" "l")
                                              (("1"
                                                (replace -3 -2 :dir rl)
                                                (("1"
                                                  (ground)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (inst
                                             -
                                             "A`vertices(next_index(A, l))"
                                             "s"
                                             "B")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (claim
                                                 "%1"
                                                 nil
                                                 (! -2 1))
                                                (("1"
                                                  (ground)
                                                  (("1"
                                                    (inst - "r")
                                                    (("1"
                                                      (ground)
                                                      (("1"
                                                        (lemma
                                                         "in_wedge_or_on_edge")
                                                        (("1"
                                                          (inst
                                                           -
                                                           "r"
                                                           "B"
                                                           "i")
                                                          (("1"
                                                            (split
                                                             -1
                                                             :depth
                                                             1)
                                                            (("1"
                                                              (use
                                                               "perimeter_not_outside")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "point_on_polygon_perimeter?")
                                                                  (("1"
                                                                    (inst-cp
                                                                     1
                                                                     "edges_of_polygon(B)(i)")
                                                                    (("1"
                                                                      (inst
                                                                       1
                                                                       "edges_of_polygon(B)(prev_index(B,i))")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (use
                                                                           "all_wedge_points_inside")
                                                                          (("1"
                                                                            (use
                                                                             "point_out_not_in")
                                                                            (("1"
                                                                              (ground)
                                                                              (("1"
                                                                                (expand
                                                                                 "point_in_vertex_wedge?")
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "extend_points_between_edges")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "r"
                                                                                       "edges_of_polygon(A)(l)"
                                                                                       "true"
                                                                                       "B"
                                                                                       "i")
                                                                                      (("1"
                                                                                        (ground)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "A`vertices(next_index(A, l))")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "edges_of_polygon"
                                                                                             -1
                                                                                             2)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "point_between_edges?")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "edges_of_polygon")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (expand
                                                                                           "edges_of_polygon")
                                                                                          (("3"
                                                                                            (hide-all-but
                                                                                             (-1
                                                                                              -8
                                                                                              -9))
                                                                                            (("3"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("3"
                                                                                                (name-replace
                                                                                                 "V"
                                                                                                 "^(A`vertices(next_index(A, l)) - A`vertices(l))")
                                                                                                (("3"
                                                                                                  (cancel-add
                                                                                                   -2)
                                                                                                  (("3"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("4"
                                                                                          (hide-all-but
                                                                                           (-7
                                                                                            -8
                                                                                            2))
                                                                                          (("4"
                                                                                            (rewrite
                                                                                             "point_on_segment_has_norm_offset")
                                                                                            (("4"
                                                                                              (inst
                                                                                               +
                                                                                               "c")
                                                                                              (("4"
                                                                                                (expand
                                                                                                 "edges_of_polygon")
                                                                                                (("4"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (replace
                                                               -4
                                                               1
                                                               :dir
                                                               rl)
                                                              (("2"
                                                                (replace
                                                                 -7)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "abs")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (use
                                                         "point_on_reverse_segment")
                                                        (("2"
                                                          (replace
                                                           -1
                                                           :dir
                                                           rl)
                                                          (("2"
                                                            (replace
                                                             -3
                                                             1
                                                             :dir
                                                             rl)
                                                            (("2"
                                                              (expand
                                                               "reverse_segment")
                                                              (("2"
                                                                (replace
                                                                 -3
                                                                 2
                                                                 :dir
                                                                 rl)
                                                                (("2"
                                                                  (hide-all-but
                                                                   (-4
                                                                    2))
                                                                  (("2"
                                                                    (rewrite
                                                                     "point_on_segment_has_norm_offset")
                                                                    (("2"
                                                                      (inst?)
                                                                      (("2"
                                                                        (expand
                                                                         "edges_of_polygon")
                                                                        (("2"
                                                                          (name-replace
                                                                           "L"
                                                                           "length((# p1 := A`vertices(l), p2 := A`vertices(next_index(A, l)) #))")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (replace
                                                         -3
                                                         -1
                                                         :dir
                                                         rl)
                                                        (("3"
                                                          (assert)
                                                          (("3"
                                                            (replace
                                                             -4
                                                             -1
                                                             :dir
                                                             rl)
                                                            (("3"
                                                              (hide-all-but
                                                               (-1 -5))
                                                              (("3"
                                                                (name-replace
                                                                 "V"
                                                                 "^(A`vertices(next_index(A, l)) - A`vertices(l))")
                                                                (("3"
                                                                  (cancel-add
                                                                   -1)
                                                                  (("3"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide -2 -10 3)
                                                  (("2"
                                                    (skeep)
                                                    (("2"
                                                      (inst
                                                       -12
                                                       "reverse_segment(s)")
                                                      (("1"
                                                        (expand
                                                         "point_on_polygon_perimeter?")
                                                        (("1"
                                                          (skeep - t)
                                                          (("1"
                                                            (expand
                                                             "only_vertex_intersections?")
                                                            (("1"
                                                              (inst
                                                               -
                                                               "e!1")
                                                              (("1"
                                                                (ground)
                                                                (("1"
                                                                  (replace
                                                                   -1)
                                                                  (("1"
                                                                    (expand
                                                                     "edge_of_polygon?")
                                                                    (("1"
                                                                      (skeep)
                                                                      (("1"
                                                                        (replace
                                                                         -6
                                                                         -3
                                                                         :dir
                                                                         rl)
                                                                        (("1"
                                                                          (expand
                                                                           "reverse_segment")
                                                                          (("1"
                                                                            (expand
                                                                             "edges_of_polygon")
                                                                            (("1"
                                                                              (use
                                                                               "perimeter_not_outside")
                                                                              (("1"
                                                                                (ground)
                                                                                (("1"
                                                                                  (use
                                                                                   "vertex_on_perimeter")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "vertex?")
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (rewrite
                                                                   "reverse_reverse_segment")
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (expand
                                                                       "edge_of_polygon?")
                                                                      (("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (expand
                                                                           "edges_of_polygon")
                                                                          (("2"
                                                                            (replace
                                                                             -6
                                                                             -3
                                                                             :dir
                                                                             rl)
                                                                            (("2"
                                                                              (use
                                                                               "perimeter_not_outside")
                                                                              (("2"
                                                                                (ground)
                                                                                (("2"
                                                                                  (use
                                                                                   "vertex_on_perimeter")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "vertex?")
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        (("2"
                                                                                          (ground)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (inst
                                                                   -
                                                                   "q!1")
                                                                  (("3"
                                                                    (use
                                                                     "point_on_reverse_segment")
                                                                    (("3"
                                                                      (ground)
                                                                      (("3"
                                                                        (expand
                                                                         "reverse_segment")
                                                                        (("3"
                                                                          (expand
                                                                           "segment_endpoint?")
                                                                          (("3"
                                                                            (use
                                                                             "perimeter_not_outside")
                                                                            (("3"
                                                                              (hide
                                                                               -2)
                                                                              (("3"
                                                                                (ground)
                                                                                (("3"
                                                                                  (expand
                                                                                   "point_on_polygon_perimeter?")
                                                                                  (("3"
                                                                                    (inst
                                                                                     +
                                                                                     "e!1")
                                                                                    (("3"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "reverse_segment")
                                                        (("2"
                                                          (replace
                                                           -3
                                                           1
                                                           :dir
                                                           rl)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (expand
                                                               "edge_of_polygon?")
                                                              (("2"
                                                                (inst?
                                                                 +)
                                                                (("2"
                                                                  (expand
                                                                   "edges_of_polygon")
                                                                  (("2"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (lemma "vertex_neq_next")
                                      (("2"
                                        (inst - "A" "l")
                                        (("2" (ground) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (replace -2 1 :dir rl)
                                  (("2"
                                    (expand "next_index" 1)
                                    (("2"
                                      (lift-if)
                                      (("2"
                                        (use "rem_add_one")
                                        (("2" (ground) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (skeep + t)
                              (("3"
                                (expand "on_perimeter_vertex_path?")
                                (("3"
                                  (ground)
                                  (("1"
                                    (use "perimeter_not_outside")
                                    (("1"
                                      (ground)
                                      (("1"
                                        (expand
                                         "point_on_polygon_perimeter?")
                                        (("1"
                                          (inst + "e")
                                          (("1"
                                            (replace -2)
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (skeep - t)
                                    (("2"
                                      (replace -10)
                                      (("2"
                                        (use "find_index_self_index")
                                        (("2"
                                          (replace -1)
                                          (("2"
                                            (replace -7 -2 :dir rl)
                                            (("2"
                                              (lemma "rem_sum1")
                                              (("2"
                                                (inst
                                                 -
                                                 "A`num_vertices"
                                                 "j - 1 + k"
                                                 "A`num_vertices - j")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (replace -1)
                                                    (("2"
                                                      (lemma
                                                       "rem_sum1")
                                                      (("2"
                                                        (inst
                                                         -
                                                         "A`num_vertices"
                                                         "A`num_vertices"
                                                         "k - 1")
                                                        (("2"
                                                          (rewrite
                                                           "rem_self"
                                                           -1)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (replace
                                                               -1
                                                               :dir
                                                               rl)
                                                              (("2"
                                                                (rewrite
                                                                 "rem_mod"
                                                                 -4)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (inst
                                                                     -12
                                                                     "k!1")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 3)
                      (("2" (inst -4 "k - 1")
                        (("1" (assert)
                          (("1"
                            (lemma
                             "in_out_have_crossing_on_subsegment")
                            (("1"
                              (inst - "B"
                               "A`vertices(rem(A`num_vertices)(j - 1 + k))"
                               "A`vertices(rem(A`num_vertices)(j + k))")
                              (("1"
                                (assert)
                                (("1"
                                  (skeep)
                                  (("1"
                                    (inst
                                     -
                                     "edges_of_polygon(A)(rem(A`num_vertices)(j - 1 + k))")
                                    (("1"
                                      (replace -3)
                                      (("1"
                                        (expand
                                         "only_vertex_intersections?")
                                        (("1"
                                          (name-replace
                                           "m"
                                           "find_index_any(B, v)")
                                          (("1"
                                            (inst
                                             -
                                             "edges_of_polygon(B)(m)")
                                            (("1"
                                              (use
                                               "perimeter_find_index_any")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (ground)
                                                  (("1"
                                                    (inst + "m")
                                                    (("1"
                                                      (expand
                                                       "edges_of_polygon")
                                                      (("1"
                                                        (ground)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (inst
                                                     +
                                                     "next_index(B, m)")
                                                    (("2"
                                                      (hide-all-but
                                                       (-1 1))
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("3"
                                                    (inst - "v")
                                                    (("3"
                                                      (case-replace
                                                       "rem(A`num_vertices)(j + k) = next_index(A, l)")
                                                      (("1"
                                                        (ground)
                                                        (("1"
                                                          (expand
                                                           "segment_endpoint?")
                                                          (("1"
                                                            (expand
                                                             "edges_of_polygon"
                                                             (-1 -2))
                                                            (("1"
                                                              (ground)
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "m")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (use
                                                                 "perimeter_not_outside")
                                                                (("2"
                                                                  (ground)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (inst
                                                                 +
                                                                 "next_index(B, m)")
                                                                (("3"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("4"
                                                                (use
                                                                 "perimeter_not_outside")
                                                                (("4"
                                                                  (ground)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (use
                                                           "point_on_find_index_segment")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (expand
                                                           "edges_of_polygon")
                                                          (("3"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (replace
                                                         -6
                                                         1
                                                         :dir
                                                         rl)
                                                        (("2"
                                                          (expand
                                                           "next_index")
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (use
                                                               "rem_add_one")
                                                              (("2"
                                                                (ground)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand
                                               "edge_of_polygon?")
                                              (("2"
                                                (inst? +)
                                                (("2"
                                                  (use
                                                   "perimeter_find_index_any")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (typepred "m")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (use
                                               "perimeter_find_index_any")
                                              (("3"
                                                (assert)
                                                (("3"
                                                  (typepred "m")
                                                  (("3"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (assert) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide 2)
          (("2" (expand "nonempty?")
            (("2" (expand "empty?")
              (("2" (expand "vertex?")
                (("2" (skeep)
                  (("2" (inst - "rem(A`num_vertices)(i - j)")
                    (("2" (expand "member")
                      (("2" (rewrite "rem_sum1" +)
                        (("2" (rewrite "rem_mod" +)
                          (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (ccw_shared_edges_imp_ccw_TCC1 0
  (ccw_shared_edges_imp_ccw_TCC1-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (ccw_shared_edges_imp_ccw subtype "merged_polygon_closed.B"
    "(injection_props.merge_pre_condition(merged_polygon_closed.A))"))
  (ccw_shared_edges_imp_ccw_TCC1-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (ccw_shared_edges_imp_ccw subtype "merged_polygon_closed.B"
    "(injection_props.merge_pre_condition(merged_polygon_closed.A))")))
 (ccw_shared_edges_imp_ccw_TCC2 0
  (ccw_shared_edges_imp_ccw_TCC2-2 nil 3874129021
   ("" (skeep*) (("" (assert) nil nil)) nil) nil shostak
   (ccw_shared_edges_imp_ccw subtype
    "(number_fields.+)(merged_polygon_closed.i0, merged_polygon_closed.k)"
    "below[M`length]"))
  (ccw_shared_edges_imp_ccw_TCC2-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (ccw_shared_edges_imp_ccw subtype
    "(number_fields.+)(merged_polygon_closed.i0, merged_polygon_closed.k)"
    "below[M`length]")))
 (ccw_shared_edges_imp_ccw_TCC3 0
  (ccw_shared_edges_imp_ccw_TCC3-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (ccw_shared_edges_imp_ccw subtype
    "(number_fields.-)((number_fields.+)(merged_polygon_closed.i0, merged_polygon_closed.C`num_vertices), 1)"
    "nat"))
  (ccw_shared_edges_imp_ccw_TCC3-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (ccw_shared_edges_imp_ccw subtype
    "(number_fields.-)((number_fields.+)(merged_polygon_closed.i0, merged_polygon_closed.C`num_vertices), 1)"
    "nat")))
 (ccw_shared_edges_imp_ccw_TCC4 0
  (ccw_shared_edges_imp_ccw_TCC4-2 nil 3874129021
   ("" (skeep*)
    (("" (expand "^")
      (("" (lift-if)
        (("" (assert) (("" (expand "min") (("" (propax) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (ccw_shared_edges_imp_ccw subtype
    "(finite_sequences[point_2d].^(merged_polygon_closed.M, (0, (number_fields.-)((number_fields.+)(merged_polygon_closed.i0, merged_polygon_closed.C`num_vertices), 1))))`seq"
    "[naturalnumbers.below((number_fields.+)(merged_polygon_closed.i0, merged_polygon_closed.C`num_vertices)) -> point_2d]"))
  (ccw_shared_edges_imp_ccw_TCC4-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (ccw_shared_edges_imp_ccw subtype
    "(finite_sequences[point_2d].^(merged_polygon_closed.M, (0, (number_fields.-)((number_fields.+)(merged_polygon_closed.i0, merged_polygon_closed.C`num_vertices), 1))))`seq"
    "[naturalnumbers.below((number_fields.+)(merged_polygon_closed.i0, merged_polygon_closed.C`num_vertices)) -> point_2d]")))
 (ccw_shared_edges_imp_ccw_TCC5 0
  (ccw_shared_edges_imp_ccw_TCC5-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (ccw_shared_edges_imp_ccw subtype
    "(number_fields.+)(merged_polygon_closed.i0, merged_polygon_closed.C`num_vertices)"
    "below[M`length]"))
  (ccw_shared_edges_imp_ccw_TCC5-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (ccw_shared_edges_imp_ccw subtype
    "(number_fields.+)(merged_polygon_closed.i0, merged_polygon_closed.C`num_vertices)"
    "below[M`length]")))
 (ccw_shared_edges_imp_ccw_TCC6 0
  (ccw_shared_edges_imp_ccw_TCC6-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (ccw_shared_edges_imp_ccw subtype "merged_polygon_closed.i0"
    "below[M`length]"))
  (ccw_shared_edges_imp_ccw_TCC6-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (ccw_shared_edges_imp_ccw subtype "merged_polygon_closed.i0"
    "below[M`length]")))
 (ccw_shared_edges_imp_ccw 0
  (ccw_shared_edges_imp_ccw-1 nil 3874129021
   ("" (skeep)
    (("" (name-replace "H" "polygon_vertex_seq(C)")
      (("" (case "C`num_vertices > 2")
        (("1" (name-replace "w" "M`seq(0) + (0,1)")
          (("1" (use "first_merge_vertex_is_topleft")
            (("1" (assert)
              (("1" (case "forall (k: below(M`length)): w /= M`seq(k)")
                (("1"
                  (name-replace*
                   ("Am" "inject_vertices_into_polygon(A, B)`1" "Bm"
                    "inject_vertices_into_polygon(A, B)`2"))
                  (("1"
                    (case "(Am, Bm) = inject_vertices_into_polygon(A, B)")
                    (("1" (hide -2 -3)
                      (("1" (use "adj_merge_seq_vertices_distinct")
                        (("1" (replace -2)
                          (("1" (assert)
                            (("1"
                              (case "forall (u: point_2d):
                                                         point_on_segment?(u, (# p1 := w, p2 := M`seq(0) #)) =>
                                                           u = M`seq(0) or not point_on_segment_seq?(u, M)")
                              (("1"
                                (name-replace
                                 "M1"
                                 "singleton_seq(w) o (M ^ (0, i0 + C`num_vertices))")
                                (("1"
                                  (case
                                   "M1`length = 2 + i0 + C`num_vertices")
                                  (("1"
                                    (case
                                     "forall (u: point_2d): point_on_segment_seq?(u, M1) =>
                                                                        M`seq(0)`x <= u`x")
                                    (("1"
                                      (name-replace
                                       "d"
                                       "min(max_miter_offset(M1), max_miter_offset(H))")
                                      (("1"
                                        (lemma
                                         "polygon_miter_sequence_in_or_out")
                                        (("1"
                                          (inst - "C" "d")
                                          (("1"
                                            (skoletin*)
                                            (("1"
                                              (split -1)
                                              (("1" (flatten) nil nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (expand
                                                   "segment_seq_inside?")
                                                  (("2"
                                                    (use
                                                     "length_closed_miter_point_seq")
                                                    (("2"
                                                      (case
                                                       "S`length = C`num_vertices + 1")
                                                      (("1"
                                                        (inst
                                                         -
                                                         "MS`seq(1)")
                                                        (("1"
                                                          (ground)
                                                          (("1"
                                                            (case
                                                             "point_outside_polygon?(MS`seq(1), C)")
                                                            (("1"
                                                              (use
                                                               "point_out_not_in")
                                                              (("1"
                                                                (ground)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide
                                                               -1
                                                               2
                                                               3)
                                                              (("2"
                                                                (name-replace
                                                                 "MS1"
                                                                 "miter_point_seq(M1, d)")
                                                                (("2"
                                                                  (case
                                                                   "MS1`length = C`num_vertices + i0")
                                                                  (("1"
                                                                    (case
                                                                     "point_outside_polygon?(MS1`seq(0), C)")
                                                                    (("1"
                                                                      (lemma
                                                                       "point_out_pts_on_non_perim_path_out")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "MS1`seq(0)"
                                                                         "C"
                                                                         "MS1")
                                                                        (("1"
                                                                          (ground)
                                                                          (("1"
                                                                            (expand
                                                                             "segment_seq_outside?")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "MS`seq(1)")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "point_on_segment_seq?"
                                                                                   1)
                                                                                  (("1"
                                                                                    (inst
                                                                                     +
                                                                                     "i0")
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "polygon_miter_point_seq_element")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "S"
                                                                                         "C"
                                                                                         "d"
                                                                                         "1")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -7
                                                                                             :dir
                                                                                             rl)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1
                                                                                               1)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "MS1`seq(1 + i0) = MS`seq(1)")
                                                                                                (("1"
                                                                                                  (use
                                                                                                   "polygon_miter_point_seq_element")
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1
                                                                                                       :dir
                                                                                                       rl)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "closed_miter_point_seq"
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "o")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "singleton_seq")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "miter_point_seq"
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "point_on_segment?")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   +
                                                                                                                   "1")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "MS1"
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "miter_point_seq"
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "M1"
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "o"
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "^"
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "singleton_seq"
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "S"
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "polygon_vertex_seq"
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (rewrite*
                                                                                                                                       "rem_mod")
                                                                                                                                      (("1"
                                                                                                                                        (inst-cp
                                                                                                                                         -26
                                                                                                                                         "0")
                                                                                                                                        (("1"
                                                                                                                                          (inst-cp
                                                                                                                                           -26
                                                                                                                                           "1")
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -26
                                                                                                                                             "2")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "MS1"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "MS"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "closed_miter_point_seq"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "o ")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "singleton_seq")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "miter_point_seq"
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "M1"
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "o"
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "^"
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "singleton_seq"
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "S"
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "polygon_vertex_seq"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (rewrite*
                                                                                                                           "rem_mod")
                                                                                                                          (("2"
                                                                                                                            (inst-cp
                                                                                                                             -24
                                                                                                                             "0")
                                                                                                                            (("2"
                                                                                                                              (inst-cp
                                                                                                                               -24
                                                                                                                               "1")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -24
                                                                                                                                 "2")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (lemma
                                                                               "no_intersection_with_skimming_segments")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "M1"
                                                                                 "d")
                                                                                (("2"
                                                                                  (case
                                                                                   "forall (i: below(M1`length)): i > 0 => M1`seq(i) = M`seq(i - 1)")
                                                                                  (("1"
                                                                                    (split
                                                                                     -2)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "q")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "point_on_segment_seq?"
                                                                                           1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "point_on_polygon_perimeter?")
                                                                                            (("1"
                                                                                              (skeep
                                                                                               -
                                                                                               t)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "edge_of_polygon?")
                                                                                                (("1"
                                                                                                  (skeep)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     +
                                                                                                     "1 + i + i0")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       -2
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         -2
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "edges_of_polygon")
                                                                                                          (("1"
                                                                                                            (case-replace
                                                                                                             "i = C`num_vertices - 1")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "next_index")
                                                                                                              (("1"
                                                                                                                (inst-cp
                                                                                                                 -28
                                                                                                                 "0")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -28
                                                                                                                   "C`num_vertices - 1")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (expand
                                                                                                               "next_index")
                                                                                                              (("2"
                                                                                                                (inst-cp
                                                                                                                 -27
                                                                                                                 "i")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -27
                                                                                                                   "1 + i")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "no_right_side_loop_back?")
                                                                                      (("2"
                                                                                        (name-replace
                                                                                         "lbi"
                                                                                         "loop_back_intercept(M1)")
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (case-replace
                                                                                             "lbi = 1")
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "lbi")
                                                                                              (("1"
                                                                                                (ground)
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -4)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -19
                                                                                                     -2)
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       -7
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         -7
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -2
                                                                                                           :dir
                                                                                                           rl)
                                                                                                          (("1"
                                                                                                            (hide-all-but
                                                                                                             (-33
                                                                                                              -34))
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "uniq_vertex_list?")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "0"
                                                                                                                 "i0")
                                                                                                                (("1"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (lemma
                                                                                               "no_right_side_loop_back_on_M")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "A"
                                                                                                 "B"
                                                                                                 "M"
                                                                                                 "(# p1 := M1`seq(lbi - 1), p2 := M1`seq(lbi) #)"
                                                                                                 "(# p1 := M1`seq(lbi), p2 := M1`seq(1 + lbi) #)"
                                                                                                 "(# p1 := M1`seq(M1`length - 2), p2 := M1`seq(M1`length - 1) #)"
                                                                                                 "C`num_vertices + i0"
                                                                                                 "i0")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -16
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       -4
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         -4
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           -4
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             -4
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               -4
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 -4
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "lbi = i0 + 1")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (typepred
                                                                                                                     "lbi")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (split
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -18
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (rewrite
                                                                                                                               -6
                                                                                                                               -2)
                                                                                                                              (("1"
                                                                                                                                (rewrite
                                                                                                                                 -6
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -33)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "uniq_vertex_list?")
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -32
                                                                                                                                       "i0"
                                                                                                                                       "lbi - 1")
                                                                                                                                      (("1"
                                                                                                                                        (hide-all-but
                                                                                                                                         (-2
                                                                                                                                          -32
                                                                                                                                          2))
                                                                                                                                        (("1"
                                                                                                                                          (grind)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (replace
                                                                                                   -15
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (rewrite
                                                                                                       -4
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (rewrite
                                                                                                         -4
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -19
                                                                                                           "C`num_vertices - 1 + i0")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (rewrite
                                                                                                   -3
                                                                                                   1)
                                                                                                  (("3"
                                                                                                    (rewrite
                                                                                                     -3
                                                                                                     1)
                                                                                                    (("3"
                                                                                                      (inst
                                                                                                       -18
                                                                                                       "lbi - 1")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("4"
                                                                                                  (rewrite
                                                                                                   -3
                                                                                                   1)
                                                                                                  (("4"
                                                                                                    (inst
                                                                                                     -3
                                                                                                     "lbi - 1")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -18
                                                                                                         "lbi - 2")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("5"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide-all-but
                                                                                     (-13
                                                                                      -14
                                                                                      1))
                                                                                    (("2"
                                                                                      (grind)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -4
                                                                                         1
                                                                                         :dir
                                                                                         rl)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (hide-all-but
                                                                                     1)
                                                                                    (("3"
                                                                                      (grind)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       2)
                                                                      (("2"
                                                                        (expand
                                                                         "MS1"
                                                                         1)
                                                                        (("2"
                                                                          (expand
                                                                           "miter_point_seq"
                                                                           1)
                                                                          (("2"
                                                                            (expand
                                                                             "M1"
                                                                             1)
                                                                            (("2"
                                                                              (expand
                                                                               "o"
                                                                               1)
                                                                              (("2"
                                                                                (expand
                                                                                 "^"
                                                                                 1)
                                                                                (("2"
                                                                                  (expand
                                                                                   "singleton_seq"
                                                                                   1)
                                                                                  (("2"
                                                                                    (name-replace
                                                                                     "mp0"
                                                                                     "miter_point(M`seq(0), w, M`seq(1), d)"
                                                                                     :hide?
                                                                                     nil)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "point_outside_polygon?")
                                                                                      (("2"
                                                                                        (inst
                                                                                         +
                                                                                         "(# body := (# length := 1,  seq := lambda (i: below(1)): mp0 #),
                                                                                                                                                                                                tail := (-1, 0) #)")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "serp_ray_outside?")
                                                                                          (("1"
                                                                                            (ground)
                                                                                            (("1"
                                                                                              (skeep)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (skeep)
                                                                                              (("2"
                                                                                                (name-replace
                                                                                                 "q"
                                                                                                 "mp0 + d!1 * (-1, 0)"
                                                                                                 :hide?
                                                                                                 nil)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "point_on_polygon_perimeter?")
                                                                                                  (("2"
                                                                                                    (skeep
                                                                                                     -
                                                                                                     t)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "edge_of_polygon?")
                                                                                                      (("2"
                                                                                                        (skeep)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "edges_of_polygon")
                                                                                                          (("2"
                                                                                                            (inst-cp
                                                                                                             -26
                                                                                                             "i")
                                                                                                            (("2"
                                                                                                              (inst-cp
                                                                                                               -26
                                                                                                               "next_index(C, i)")
                                                                                                              (("2"
                                                                                                                (copy
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -28
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -29
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "mp0`x < M`seq(0)`x")
                                                                                                                      (("1"
                                                                                                                        (lemma
                                                                                                                         "leftmost_xval_le_segment")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "e"
                                                                                                                           "q"
                                                                                                                           "M`seq(0)`x")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -5
                                                                                                                               -1
                                                                                                                               :dir
                                                                                                                               rl)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -4
                                                                                                                                 -1
                                                                                                                                 :dir
                                                                                                                                 rl)
                                                                                                                                (("1"
                                                                                                                                  (ground)
                                                                                                                                  (("1"
                                                                                                                                    (hide-all-but
                                                                                                                                     (-1
                                                                                                                                      -2))
                                                                                                                                    (("1"
                                                                                                                                      (grind)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide-all-but
                                                                                                                                     (-21
                                                                                                                                      1))
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "i0 + i")
                                                                                                                                      (("2"
                                                                                                                                        (ground)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("3"
                                                                                                                                    (hide-all-but
                                                                                                                                     (-21
                                                                                                                                      1))
                                                                                                                                    (("3"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "next_index(C, i) + i0")
                                                                                                                                      (("3"
                                                                                                                                        (ground)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (lemma
                                                                                                                         "miter_point_cross_gt_0")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "w"
                                                                                                                           "M`seq(0)"
                                                                                                                           "M`seq(1)"
                                                                                                                           "d")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -7)
                                                                                                                                (("1"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-1
                                                                                                                                    -23
                                                                                                                                    1))
                                                                                                                                  (("1"
                                                                                                                                    (grind)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (expand
                                                                                                                             "three_point_miniseq?")
                                                                                                                            (("2"
                                                                                                                              (ground)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -20
                                                                                                                                 "0")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (inst
                                                                                                                                 -18
                                                                                                                                 "0")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("3"
                                                                                                                                (expand
                                                                                                                                 "dir_parallel?")
                                                                                                                                (("3"
                                                                                                                                  (skeep)
                                                                                                                                  (("3"
                                                                                                                                    (expand
                                                                                                                                     "w"
                                                                                                                                     -1)
                                                                                                                                    (("3"
                                                                                                                                      (assert)
                                                                                                                                      (("3"
                                                                                                                                        (inst
                                                                                                                                         -21
                                                                                                                                         "1")
                                                                                                                                        (("3"
                                                                                                                                          (hide-all-but
                                                                                                                                           (-1
                                                                                                                                            -21))
                                                                                                                                          (("3"
                                                                                                                                            (use
                                                                                                                                             "comps_eq")
                                                                                                                                            (("3"
                                                                                                                                              (replace
                                                                                                                                               -2)
                                                                                                                                              (("3"
                                                                                                                                                (flatten)
                                                                                                                                                (("3"
                                                                                                                                                  (grind)
                                                                                                                                                  (("1"
                                                                                                                                                    (cancel-by
                                                                                                                                                     -1
                                                                                                                                                     "pk")
                                                                                                                                                    nil
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (cancel-by
                                                                                                                                                     -1
                                                                                                                                                     "pk")
                                                                                                                                                    (("2"
                                                                                                                                                      (move-terms
                                                                                                                                                       -1
                                                                                                                                                       r
                                                                                                                                                       2)
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -1
                                                                                                                                                         :dir
                                                                                                                                                         rl)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (skeep)
                                                                                          nil
                                                                                          nil)
                                                                                         ("3"
                                                                                          (hide-all-but
                                                                                           1)
                                                                                          (("3"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (replace
                                                                     -1
                                                                     1
                                                                     :dir
                                                                     rl)
                                                                    (("2"
                                                                      (expand
                                                                       "miter_point_seq")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "point_on_segment_seq?")
                                                            (("2"
                                                              (expand
                                                               "closed_miter_point_seq"
                                                               -2)
                                                              (("2"
                                                                (expand
                                                                 "o"
                                                                 -2)
                                                                (("2"
                                                                  (expand
                                                                   "singleton_seq")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst
                                                                       +
                                                                       "1")
                                                                      (("2"
                                                                        (expand
                                                                         "point_on_segment?")
                                                                        (("2"
                                                                          (inst
                                                                           +
                                                                           "0")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (replace -4 1)
                                                        (("2"
                                                          (expand
                                                           "polygon_vertex_seq")
                                                          (("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (expand "min")
                                                (("3"
                                                  (lift-if)
                                                  (("3"
                                                    (ground)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (assert)
                                        (("2"
                                          (replace -3 1 :dir rl)
                                          (("2"
                                            (name-replace
                                             "lbi"
                                             "loop_back_intercept(singleton_seq(w) o (M ^ (0, C`num_vertices + i0)))"
                                             :hide?
                                             nil)
                                            (("1"
                                              (case
                                               "single_loop_back_seq?(singleton_seq(w) o
                                                                                                                          (M ^ (0, C`num_vertices + i0)))")
                                              (("1"
                                                (ground)
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (expand "o" -1)
                                                    (("1"
                                                      (expand
                                                       "singleton_seq"
                                                       -1)
                                                      (("1"
                                                        (expand "^" -1)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (ground)
                                                            (("1"
                                                              (inst
                                                               -11
                                                               "0")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (inst
                                                               -8
                                                               "i - 1")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (equate
                                                   "lbi"
                                                   "i0 + 1")
                                                  (("1"
                                                    (expand
                                                     "mostly_uniq_point_list?")
                                                    (("1"
                                                      (skeep + t)
                                                      (("1"
                                                        (expand
                                                         "^"
                                                         (-1 -2 1 2))
                                                        (("1"
                                                          (expand
                                                           "min")
                                                          (("1"
                                                            (expand
                                                             "o"
                                                             -3)
                                                            (("1"
                                                              (expand
                                                               "singleton_seq"
                                                               -3)
                                                              (("1"
                                                                (apply
                                                                 (repeat
                                                                  (lift-if)))
                                                                (("1"
                                                                  (expand
                                                                   "^"
                                                                   -3)
                                                                  (("1"
                                                                    (expand
                                                                     "uniq_vertex_list?")
                                                                    (("1"
                                                                      (split
                                                                       -3)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (split
                                                                           -2)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (inst
                                                                               -13
                                                                               "j - 1")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (split
                                                                           -1)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (inst
                                                                               -13
                                                                               "i - 1")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (case
                                                                               "i - 1 = C`num_vertices + i0")
                                                                              (("1"
                                                                                (case
                                                                                 "j - 1 = C`num_vertices + i0")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (inst
                                                                                   -22
                                                                                   "j - 1"
                                                                                   "i0")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "^"
                                                                                     -22)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil)
                                                                                   ("3"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (case
                                                                                 "j - 1 = C`num_vertices + i0")
                                                                                (("1"
                                                                                  (inst
                                                                                   -22
                                                                                   "i - 1"
                                                                                   "i0")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "^"
                                                                                     -22)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil)
                                                                                   ("3"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (inst
                                                                                   -21
                                                                                   "i - 1"
                                                                                   "j - 1")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "^"
                                                                                     -21)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil)
                                                                                   ("3"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide 2 3)
                                                    (("2"
                                                      (expand
                                                       "single_loop_back_seq?")
                                                      (("2"
                                                        (expand "o" -1)
                                                        (("2"
                                                          (expand
                                                           "singleton_seq"
                                                           -1)
                                                          (("2"
                                                            (expand
                                                             "^"
                                                             -1)
                                                            (("2"
                                                              (expand
                                                               "min")
                                                              (("2"
                                                                (ground)
                                                                (("1"
                                                                  (skeep
                                                                   -
                                                                   t)
                                                                  (("1"
                                                                    (typepred
                                                                     "lbi")
                                                                    (("1"
                                                                      (expand
                                                                       "o"
                                                                       -3)
                                                                      (("1"
                                                                        (expand
                                                                         "singleton_seq"
                                                                         -3)
                                                                        (("1"
                                                                          (expand
                                                                           "^"
                                                                           -3)
                                                                          (("1"
                                                                            (expand
                                                                             "min")
                                                                            (("1"
                                                                              (split
                                                                               -3)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (lift-if)
                                                                                  (("1"
                                                                                    (split
                                                                                     -2)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -15
                                                                                       "C`num_vertices + i0")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "uniq_vertex_list?")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -24
                                                                                           "lbi - 1"
                                                                                           "i0")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "^"
                                                                                             -24)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (inst
                                                                                 -
                                                                                 "i0 + 1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "^"
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "min")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (inst
                                                                   +
                                                                   "i0 + 1")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "^"
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "min")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (lemma
                                                   "merge_wrapped_segments_do_not_cross")
                                                  (("3"
                                                    (inst
                                                     -
                                                     "A"
                                                     "B"
                                                     "i0"
                                                     "C`num_vertices + i0")
                                                    (("3"
                                                      (assert)
                                                      (("3"
                                                        (replace
                                                         -15
                                                         :dir
                                                         rl)
                                                        (("3"
                                                          (expand
                                                           "segments_do_not_cross?")
                                                          (("3"
                                                            (skeep + t)
                                                            (("3"
                                                              (skeep)
                                                              (("3"
                                                                (expand
                                                                 "o"
                                                                 (-4
                                                                  -5
                                                                  2
                                                                  3))
                                                                (("3"
                                                                  (expand
                                                                   "singleton_seq"
                                                                   (-4
                                                                    -5
                                                                    2
                                                                    3))
                                                                  (("3"
                                                                    (lift-if)
                                                                    (("3"
                                                                      (expand
                                                                       "^"
                                                                       -3
                                                                       1)
                                                                      (("3"
                                                                        (expand
                                                                         "min")
                                                                        (("3"
                                                                          (case
                                                                           "i = 0")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "^"
                                                                               -5)
                                                                              (("1"
                                                                                (inst
                                                                                 -12
                                                                                 "q")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "^"
                                                                                     +)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "point_on_segment_seq?")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "^"
                                                                                           -6)
                                                                                          (("1"
                                                                                            (inst
                                                                                             +
                                                                                             "j - 1")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (case
                                                                               "j = 0")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "^"
                                                                                   (-5
                                                                                    -6
                                                                                    +))
                                                                                  (("1"
                                                                                    (inst
                                                                                     -12
                                                                                     "q")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (split
                                                                                         -12)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "merge_seq_vertices_always_endpoints")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "A"
                                                                                             "B"
                                                                                             "Am"
                                                                                             "Bm"
                                                                                             "M"
                                                                                             "(# p1 := M`seq(i - 1), p2 := M`seq(i) #)"
                                                                                             "i - 1"
                                                                                             "0")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (inst
                                                                                               -13
                                                                                               "i - 1")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (use
                                                                                               "injected_polygons_have_ccw_order")
                                                                                              (("3"
                                                                                                (assert)
                                                                                                (("3"
                                                                                                  (use
                                                                                                   "injected_polygon_has_merge_precondition")
                                                                                                  (("3"
                                                                                                    (expand
                                                                                                     "ccw_merge_pre_condition")
                                                                                                    (("3"
                                                                                                      (ground)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("4"
                                                                                              (use
                                                                                               "injected_polygon_has_ccw_order")
                                                                                              (("4"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "point_on_segment_seq?")
                                                                                          (("2"
                                                                                            (inst
                                                                                             +
                                                                                             "i - 1")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "i - 1"
                                                                                   "j - 1")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "q")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide 2 3)
                                                (("2"
                                                  (expand
                                                   "single_loop_back_seq?")
                                                  (("2"
                                                    (split 1)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (skeep - t)
                                                        (("1"
                                                          (inst + "i")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (skeep
                                                               +
                                                               t)
                                                              (("1"
                                                                (expand
                                                                 "o ")
                                                                (("1"
                                                                  (expand
                                                                   "singleton_seq")
                                                                  (("1"
                                                                    (expand
                                                                     "^")
                                                                    (("1"
                                                                      (expand
                                                                       "min")
                                                                      (("1"
                                                                        (expand
                                                                         "uniq_vertex_list?")
                                                                        (("1"
                                                                          (hide
                                                                           -5
                                                                           -8)
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (split
                                                                               -3)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (inst
                                                                                   -11
                                                                                   "C`num_vertices + i0")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (split
                                                                                   -4)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -11
                                                                                       "C`num_vertices + i0")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (case
                                                                                       "i - 1 = i0")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -20
                                                                                         "j - 1"
                                                                                         "i0")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (inst
                                                                                         -19
                                                                                         "i - 1"
                                                                                         "i0")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but
                                                       (-16 -18 1))
                                                      (("2"
                                                        (expand "o ")
                                                        (("2"
                                                          (expand
                                                           "singleton_seq")
                                                          (("2"
                                                            (expand
                                                             "^")
                                                            (("2"
                                                              (expand
                                                               "min")
                                                              (("2"
                                                                (inst-cp
                                                                 -
                                                                 "0")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "C`num_vertices - 2")
                                                                  (("2"
                                                                    (typepred
                                                                     "C`vertices")
                                                                    (("2"
                                                                      (expand
                                                                       "uniq_vertex_list?")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "0"
                                                                         "C`num_vertices - 2")
                                                                        (("2"
                                                                          (ground)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide 2 3)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (split 1)
                                                    (("1"
                                                      (skeep + t)
                                                      (("1"
                                                        (expand
                                                         "o"
                                                         (-1 -2))
                                                        (("1"
                                                          (expand
                                                           "singleton_seq"
                                                           (-1 -2))
                                                          (("1"
                                                            (expand
                                                             "^"
                                                             (-1 -2))
                                                            (("1"
                                                              (expand
                                                               "min")
                                                              (("1"
                                                                (lift-if)
                                                                (("1"
                                                                  (ground)
                                                                  (("1"
                                                                    (inst
                                                                     -10
                                                                     "i")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (inst
                                                                     -7
                                                                     "i - 1")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "single_loop_back_seq?")
                                                      (("2"
                                                        (split 1)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (skeep)
                                                            (("1"
                                                              (inst
                                                               +
                                                               "i")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (skeep
                                                                   +
                                                                   t)
                                                                  (("1"
                                                                    (expand
                                                                     "o"
                                                                     (-1
                                                                      -2
                                                                      -3))
                                                                    (("1"
                                                                      (expand
                                                                       "singleton_seq"
                                                                       (-1
                                                                        -2
                                                                        -3))
                                                                      (("1"
                                                                        (expand
                                                                         "^"
                                                                         (-1
                                                                          -2
                                                                          -3))
                                                                        (("1"
                                                                          (expand
                                                                           "min")
                                                                          (("1"
                                                                            (lift-if)
                                                                            (("1"
                                                                              (split
                                                                               -2)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (inst
                                                                                   -11
                                                                                   "C`num_vertices + i0")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (split
                                                                                   -3)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -11
                                                                                       "C`num_vertices + i0")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "uniq_vertex_list?")
                                                                                      (("2"
                                                                                        (case
                                                                                         "i - 1 = i0")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -20
                                                                                           "j - 1"
                                                                                           "i0")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "^"
                                                                                             -20)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("3"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (inst
                                                                                           -19
                                                                                           "i - 1"
                                                                                           "i0")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "^"
                                                                                             -19)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("3"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           (-15 -17 1))
                                                          (("2"
                                                            (expand
                                                             "o")
                                                            (("2"
                                                              (expand
                                                               "singleton_seq")
                                                              (("2"
                                                                (expand
                                                                 "^")
                                                                (("2"
                                                                  (expand
                                                                   "min")
                                                                  (("2"
                                                                    (inst-cp
                                                                     -
                                                                     "0")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "C`num_vertices - 2")
                                                                      (("2"
                                                                        (typepred
                                                                         "C`vertices")
                                                                        (("2"
                                                                          (expand
                                                                           "uniq_vertex_list?")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "0"
                                                                             "C`num_vertices - 2")
                                                                            (("2"
                                                                              (ground)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (skeep)
                                      (("2"
                                        (expand
                                         "point_on_segment_seq?")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (case
                                               "M`seq(0)`x <= M1`seq(i)`x & M`seq(0)`x <= M1`seq(1 + i)`x")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (rewrite
                                                   "point_on_segment_has_offset")
                                                  (("1"
                                                    (skeep)
                                                    (("1"
                                                      (replace -3 1)
                                                      (("1"
                                                        (expand "+" 1)
                                                        (("1"
                                                          (expand
                                                           "*"
                                                           1)
                                                          (("1"
                                                            (expand
                                                             "-"
                                                             1)
                                                            (("1"
                                                              (factor
                                                               1
                                                               r
                                                               (1 3))
                                                              (("1"
                                                                (lemma
                                                                 "one_parameter_min")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "M1`seq(i)`x"
                                                                   "M1`seq(1 + i)`x"
                                                                   "M`seq(0)`x"
                                                                   "d")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand "M1" 1)
                                                    (("2"
                                                      (expand "o" -1)
                                                      (("2"
                                                        (expand
                                                         "singleton_seq"
                                                         -1)
                                                        (("2"
                                                          (lift-if)
                                                          (("2"
                                                            (split -1)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (equate
                                                                 "i"
                                                                 "0"
                                                                 (assert))
                                                                (("1"
                                                                  (expand
                                                                   "^"
                                                                   -2)
                                                                  (("1"
                                                                    (hide-all-but
                                                                     (-2
                                                                      -13))
                                                                    (("1"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (expand
                                                                 "^"
                                                                 -1)
                                                                (("2"
                                                                  (inst
                                                                   -8
                                                                   "i - 1")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand "M1" 1)
                                                (("2"
                                                  (expand "o" 1)
                                                  (("2"
                                                    (expand
                                                     "singleton_seq"
                                                     1)
                                                    (("2"
                                                      (split 1)
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (expand
                                                           "^"
                                                           1)
                                                          (("1"
                                                            (ground)
                                                            (("1"
                                                              (replace
                                                               -10
                                                               1
                                                               :dir
                                                               rl)
                                                              (("1"
                                                                (hide-all-but
                                                                 1)
                                                                (("1"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               (-8
                                                                1
                                                                2))
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "i - 1")
                                                                (("2"
                                                                  (ground)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand "^" 1)
                                                        (("2"
                                                          (hide-all-but
                                                           (-8 1))
                                                          (("2"
                                                            (inst
                                                             -
                                                             "i")
                                                            (("2"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3"
                                      (assert)
                                      (("3"
                                        (skeep)
                                        (("3"
                                          (expand "M1" -1)
                                          (("3"
                                            (expand "o" -1)
                                            (("3"
                                              (expand
                                               "singleton_seq"
                                               -1)
                                              (("3"
                                                (expand "^" -1)
                                                (("3"
                                                  (lift-if)
                                                  (("3"
                                                    (ground)
                                                    (("1"
                                                      (inst -8 "i")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (inst -5 "i - 1")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (expand "M1" 1)
                                    (("2"
                                      (expand "o" 1)
                                      (("2"
                                        (expand "singleton_seq" 1)
                                        (("2"
                                          (expand "^" 1)
                                          (("2"
                                            (expand "min")
                                            (("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (skeep)
                                (("2"
                                  (expand "point_on_segment_seq?")
                                  (("2"
                                    (skeep)
                                    (("2"
                                      (inst-cp -6 "i")
                                      (("2"
                                        (inst -6 "1 + i")
                                        (("2"
                                          (rewrite
                                           "point_on_segment_has_offset")
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (case-replace "d = 1")
                                              (("1"
                                                (replace -2)
                                                (("1"
                                                  (hide-all-but 1)
                                                  (("1"
                                                    (grind-with-ext)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (rewrite
                                                 "point_on_segment_has_offset")
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (replace
                                                     -10
                                                     -1
                                                     :dir
                                                     rl)
                                                    (("1"
                                                      (replace -3 -1)
                                                      (("1"
                                                        (hide-all-but
                                                         (-1
                                                          -2
                                                          -4
                                                          -5
                                                          -8
                                                          -9
                                                          1))
                                                        (("1"
                                                          (use
                                                           "comps_eq")
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (split
                                                               -1)
                                                              (("1"
                                                                (hide
                                                                 -2
                                                                 -3)
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "i")
                                                                  (("1"
                                                                    (grind)
                                                                    (("1"
                                                                      (lemma
                                                                       "one_parameter_min_lt")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "M`seq(i)`x"
                                                                         "M`seq(1 + i)`x"
                                                                         "M`seq(0)`x"
                                                                         "d!1")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (case-replace
                                                                       "d!1 = 0")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (cancel-by
                                                                         -1
                                                                         "d!1")
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (move-terms
                                                                       -1
                                                                       l
                                                                       2)
                                                                      (("3"
                                                                        (factor
                                                                         -1
                                                                         *)
                                                                        (("3"
                                                                          (cancel-by
                                                                           -1
                                                                           "1 - d!1")
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("4"
                                                                      (factor
                                                                       -1
                                                                       l
                                                                       (1
                                                                        3))
                                                                      (("4"
                                                                        (lemma
                                                                         "one_parameter_max")
                                                                        (("4"
                                                                          (inst
                                                                           -
                                                                           "M`seq(i)`y"
                                                                           "M`seq(1 + i)`y"
                                                                           "M`seq(0)`y"
                                                                           "d!1")
                                                                          (("4"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (inst - "i")
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3" (skeep) nil nil)
                               ("4"
                                (inst -3 "0")
                                (("4" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (apply-extensionality :hide? t) nil nil))
                    nil))
                  nil)
                 ("2" (skeep)
                  (("2" (inst?)
                    (("2" (replace -3 :dir rl)
                      (("2" (replace -1 :dir rl)
                        (("2" (hide-all-but -2) (("2" (grind) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (typepred "C")
          (("2" (expand "simple_polygon_2d?") (("2" (ground) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (merge_subseq_edges_do_not_cross_TCC1 0
  (merge_subseq_edges_do_not_cross_TCC1-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (merge_subseq_edges_do_not_cross subtype "merged_polygon_closed.B"
    "(injection_props.merge_pre_condition(merged_polygon_closed.A))"))
  (merge_subseq_edges_do_not_cross_TCC1-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (merge_subseq_edges_do_not_cross subtype "merged_polygon_closed.B"
    "(injection_props.merge_pre_condition(merged_polygon_closed.A))")))
 (merge_subseq_edges_do_not_cross_TCC2 0
  (merge_subseq_edges_do_not_cross_TCC2-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (merge_subseq_edges_do_not_cross subtype "merged_polygon_closed.i"
    "below[merge_seq(A, B)`length]"))
  (merge_subseq_edges_do_not_cross_TCC2-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (merge_subseq_edges_do_not_cross subtype "merged_polygon_closed.i"
    "below[merge_seq(A, B)`length]")))
 (merge_subseq_edges_do_not_cross_TCC3 0
  (merge_subseq_edges_do_not_cross_TCC3-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (merge_subseq_edges_do_not_cross subtype
    "(number_fields.+)(merged_polygon_closed.j, 1)"
    "below[merge_seq(A, B)`length]"))
  (merge_subseq_edges_do_not_cross_TCC3-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (merge_subseq_edges_do_not_cross subtype
    "(number_fields.+)(merged_polygon_closed.j, 1)"
    "below[merge_seq(A, B)`length]")))
 (merge_subseq_edges_do_not_cross_TCC4 0
  (merge_subseq_edges_do_not_cross_TCC4-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (merge_subseq_edges_do_not_cross subtype
    "merged_polygon_closed.M`length" "integers.upfrom(3)"))
  (merge_subseq_edges_do_not_cross_TCC4-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (merge_subseq_edges_do_not_cross subtype
    "merged_polygon_closed.M`length" "integers.upfrom(3)")))
 (merge_subseq_edges_do_not_cross 0
  (merge_subseq_edges_do_not_cross-1 nil 3874129021
   ("" (skeep + t)
    (("" (skoletin)
      ((""
        (name-replace*
         ("Am" "inject_vertices_into_polygon(A, B)`1" "Bm"
          "inject_vertices_into_polygon(A, B)`2"))
        (("" (case "(Am, Bm) = inject_vertices_into_polygon(A, B)")
          (("1"
            (case "ccw_vertex_order?(Am) AND ccw_vertex_order?(Bm) AND merge_pre_condition(Am)(Bm)")
            (("1" (flatten)
              (("1"
                (name-replace*
                 ("IVA" "injected_vertices(A, B, A`num_vertices)" "IVB"
                  "injected_vertices(B, A, B`num_vertices)"))
                (("1"
                  (case "Am = (# num_vertices := IVA`length, vertices := IVA`seq #) and
                                                                                                     Bm = (# num_vertices := IVB`length, vertices := IVB`seq #)")
                  (("1" (flatten)
                    (("1" (expand "polygon_edges_do_not_cross?")
                      (("1" (skeep* + t)
                        (("1"
                          (name-replace "C"
                           "(# num_vertices := M`length, vertices := M`seq #)"
                           :hide? nil)
                          (("1" (lemma "merge_path_props")
                            (("1"
                              (inst - "A" "B" "Am" "Bm"
                               "merge_seq(A,B)")
                              (("1"
                                (replace -13 :dir rl)
                                (("1"
                                  (inst-cp - "i + i!1")
                                  (("1"
                                    (inst - "i + j!1")
                                    (("1"
                                      (skoletin*)
                                      (("1"
                                        (name-replace
                                         "MS"
                                         "merge_seq(A,B)"
                                         :hide?
                                         nil)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (case-replace
                                             "edges_of_polygon(C)(i!1) = S_1")
                                            (("1"
                                              (case-replace
                                               "edges_of_polygon(C)(j!1) = S")
                                              (("1"
                                                (ground)
                                                (("1"
                                                  (lemma
                                                   "injected_vertex_edges_do_not_cross")
                                                  (("1"
                                                    (inst - "A" "B")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (replace -16)
                                                        (("1"
                                                          (replace
                                                           -13
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (expand
                                                             "polygon_edges_do_not_cross?")
                                                            (("1"
                                                              (expand
                                                               "edge_of_polygon?")
                                                              (("1"
                                                                (skeep*
                                                                 -
                                                                 t)
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "i!3"
                                                                   "i!2")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "q")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (case
                                                                         "M`seq(i!1) = M`seq(j!1)")
                                                                        (("1"
                                                                          (expand
                                                                           "uniq_vertex_list?")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "i!1"
                                                                             "j!1")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (replace
                                                                           -3
                                                                           -5)
                                                                          (("2"
                                                                            (replace
                                                                             -4
                                                                             -5)
                                                                            (("2"
                                                                              (replace
                                                                               -5
                                                                               -10)
                                                                              (("2"
                                                                                (replace
                                                                                 -9
                                                                                 -10)
                                                                                (("2"
                                                                                  (decompose-equality
                                                                                   -10)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -30
                                                                                     1)
                                                                                    (("2"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        1))
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand
                                                   "edge_of_polygon?")
                                                  (("2"
                                                    (skeep* - t)
                                                    (("2"
                                                      (case
                                                       "are_segments_overlapping?(S_1)(S)")
                                                      (("1"
                                                        (lemma
                                                         "injected_overlaps_equal")
                                                        (("1"
                                                          (inst
                                                           -
                                                           "A"
                                                           "B"
                                                           "Am"
                                                           "Bm"
                                                           "S_1"
                                                           "S")
                                                          (("1"
                                                            (ground)
                                                            (("1"
                                                              (replace
                                                               -1)
                                                              (("1"
                                                                (replace
                                                                 -10
                                                                 -11)
                                                                (("1"
                                                                  (decompose-equality
                                                                   -11)
                                                                  (("1"
                                                                    (expand
                                                                     "uniq_vertex_list?")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "i!1"
                                                                       "j!1")
                                                                      (("1"
                                                                        (replace
                                                                         -31
                                                                         -28)
                                                                        (("1"
                                                                          (hide-all-but
                                                                           (-1
                                                                            -28))
                                                                          (("1"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (lemma
                                                               "same_edge_equiv_same_points")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "C"
                                                                 "i!1"
                                                                 "j!1")
                                                                (("2"
                                                                  (replace
                                                                   -1
                                                                   :hide?
                                                                   t)
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (replace
                                                                       -7)
                                                                      (("2"
                                                                        (replace
                                                                         -8)
                                                                        (("2"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (rewrite
                                                                               "point_on_reverse_segment")
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (use
                                                         "injected_intersections_only_at_endpoints")
                                                        (("2"
                                                          (ground)
                                                          (("2"
                                                            (expand
                                                             "segment_endpoint?")
                                                            (("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (expand
                                                   "edge_of_polygon?")
                                                  (("3"
                                                    (skeep* - t)
                                                    (("3"
                                                      (case
                                                       "are_segments_overlapping?(S)(S_1)")
                                                      (("1"
                                                        (lemma
                                                         "injected_overlaps_equal")
                                                        (("1"
                                                          (inst
                                                           -
                                                           "A"
                                                           "B"
                                                           "Am"
                                                           "Bm"
                                                           "S"
                                                           "S_1")
                                                          (("1"
                                                            (ground)
                                                            (("1"
                                                              (replace
                                                               -1)
                                                              (("1"
                                                                (replace
                                                                 -10
                                                                 -11)
                                                                (("1"
                                                                  (decompose-equality
                                                                   -11)
                                                                  (("1"
                                                                    (expand
                                                                     "uniq_vertex_list?")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "i!1"
                                                                       "j!1")
                                                                      (("1"
                                                                        (replace
                                                                         -31
                                                                         -28)
                                                                        (("1"
                                                                          (hide-all-but
                                                                           (-1
                                                                            -28))
                                                                          (("1"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (lemma
                                                               "same_edge_equiv_same_points")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "C"
                                                                 "i!1"
                                                                 "j!1")
                                                                (("2"
                                                                  (replace
                                                                   -1
                                                                   :hide?
                                                                   t)
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (replace
                                                                       -7)
                                                                      (("2"
                                                                        (replace
                                                                         -8)
                                                                        (("2"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (rewrite
                                                                               "point_on_reverse_segment")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (use
                                                         "injected_intersections_only_at_endpoints")
                                                        (("2"
                                                          (ground)
                                                          (("2"
                                                            (expand
                                                             "segment_endpoint?")
                                                            (("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("4"
                                                  (lemma
                                                   "injected_vertex_edges_do_not_cross")
                                                  (("4"
                                                    (inst - "B" "A")
                                                    (("4"
                                                      (assert)
                                                      (("4"
                                                        (replace -15)
                                                        (("4"
                                                          (replace
                                                           -14
                                                           :dir
                                                           rl)
                                                          (("4"
                                                            (expand
                                                             "polygon_edges_do_not_cross?")
                                                            (("4"
                                                              (expand
                                                               "edge_of_polygon?")
                                                              (("4"
                                                                (skeep*
                                                                 -
                                                                 t)
                                                                (("4"
                                                                  (inst
                                                                   -
                                                                   "i!3"
                                                                   "i!2")
                                                                  (("4"
                                                                    (inst
                                                                     -
                                                                     "q")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (case
                                                                         "M`seq(i!1) = M`seq(j!1)")
                                                                        (("1"
                                                                          (expand
                                                                           "uniq_vertex_list?")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "i!1"
                                                                             "j!1")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (replace
                                                                           -3
                                                                           -5)
                                                                          (("2"
                                                                            (replace
                                                                             -4
                                                                             -5)
                                                                            (("2"
                                                                              (replace
                                                                               -5
                                                                               -10)
                                                                              (("2"
                                                                                (replace
                                                                                 -9
                                                                                 -10)
                                                                                (("2"
                                                                                  (decompose-equality
                                                                                   -10)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -30
                                                                                     1)
                                                                                    (("2"
                                                                                      (hide-all-but
                                                                                       (-1
                                                                                        1))
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but
                                                 (-6
                                                  -7
                                                  -10
                                                  -19
                                                  -20
                                                  -23
                                                  -25
                                                  1))
                                                (("2"
                                                  (replace -7 :hide? t)
                                                  (("2"
                                                    (replace
                                                     -2
                                                     :dir
                                                     rl
                                                     :hide?
                                                     t)
                                                    (("2"
                                                      (replace
                                                       -1
                                                       :hide?
                                                       t)
                                                      (("2"
                                                        (expand
                                                         "edges_of_polygon")
                                                        (("2"
                                                          (ground)
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide-all-but
                                               (-3
                                                -6
                                                -8
                                                -20
                                                -21
                                                -24
                                                -26
                                                1))
                                              (("2"
                                                (replace -7 :hide? t)
                                                (("2"
                                                  (replace
                                                   -2
                                                   :dir
                                                   rl
                                                   :hide?
                                                   t)
                                                  (("2"
                                                    (replace
                                                     -1
                                                     :hide?
                                                     t)
                                                    (("2"
                                                      (expand
                                                       "edges_of_polygon")
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide-all-but (-5 -16 -17 -22 1))
                                      (("2"
                                        (replace -4 :hide? t)
                                        (("2"
                                          (expand "^" -1)
                                          (("2"
                                            (lift-if)
                                            (("2"
                                              (expand "empty_seq")
                                              (("2" (ground) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide-all-but (-3 -15 -16 -21 1))
                                    (("2"
                                      (replace -4 :hide? t)
                                      (("2"
                                        (expand "^" -1)
                                        (("2"
                                          (lift-if)
                                          (("2"
                                            (expand "empty_seq")
                                            (("2" (ground) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2"
                    (typepred "inject_vertices_into_polygon(A, B)`1")
                    (("2"
                      (typepred "inject_vertices_into_polygon(A, B)`2")
                      (("2" (expand "inject_post_condition?")
                        (("2" (replace -5)
                          (("2" (replace -6)
                            (("2" (replace -2 :dir rl)
                              (("2"
                                (replace -4 :dir rl)
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (expand "ccw_merge_pre_condition")
              (("2" (use "injected_polygons_have_ccw_order")
                (("2" (use "injected_polygon_has_merge_precondition")
                  (("2" (ground) nil nil)) nil))
                nil))
              nil))
            nil)
           ("2" (hide-all-but (-1 -2 1)) (("2" (grind) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (merge_seq_uniq_case_Am_TCC1 0
  (merge_seq_uniq_case_Am_TCC1-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (merge_seq_uniq_case_Am subtype "merged_polygon_closed.i0"
    "below[M`length]"))
  (merge_seq_uniq_case_Am_TCC1-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (merge_seq_uniq_case_Am subtype "merged_polygon_closed.i0"
    "below[M`length]")))
 (merge_seq_uniq_case_Am_TCC2 0
  (merge_seq_uniq_case_Am_TCC2-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (merge_seq_uniq_case_Am subtype
    "(number_fields.+)(merged_polygon_closed.k, merged_polygon_closed.i0)"
    "below[M`length]"))
  (merge_seq_uniq_case_Am_TCC2-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (merge_seq_uniq_case_Am subtype
    "(number_fields.+)(merged_polygon_closed.k, merged_polygon_closed.i0)"
    "below[M`length]")))
 (merge_seq_uniq_case_Am_TCC3 0
  (merge_seq_uniq_case_Am_TCC3-2 nil 3874129021
   ("" (skeep) (("" (assert) nil nil)) nil) nil shostak
   (merge_seq_uniq_case_Am subtype
    "(number_fields.-)(merged_polygon_closed.i0, 1)"
    "below[M`length]"))
  (merge_seq_uniq_case_Am_TCC3-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (merge_seq_uniq_case_Am subtype
    "(number_fields.-)(merged_polygon_closed.i0, 1)"
    "below[M`length]")))
 (merge_seq_uniq_case_Am_TCC4 0
  (merge_seq_uniq_case_Am_TCC4-2 nil 3874129021
   ("" (skeep)
    (("" (use "adj_merge_seq_vertices_distinct")
      (("" (ground)
        (("" (inst - "i0 - 1") (("" (ground) nil nil)) nil)) nil))
      nil))
    nil)
   nil shostak
   (merge_seq_uniq_case_Am subtype
    "merged_polygon_closed.M`seq(merged_polygon_closed.i0)"
    "{p: vectors_cross_2d.point_2d | p /= merged_polygon_closed.M`seq((number_fields.-)(merged_polygon_closed.i0, 1))}"))
  (merge_seq_uniq_case_Am_TCC4-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (merge_seq_uniq_case_Am subtype
    "merged_polygon_closed.M`seq(merged_polygon_closed.i0)"
    "{p: vectors_cross_2d.point_2d | p /= merged_polygon_closed.M`seq((number_fields.-)(merged_polygon_closed.i0, 1))}")))
 (merge_seq_uniq_case_Am_TCC5 0
  (merge_seq_uniq_case_Am_TCC5-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (merge_seq_uniq_case_Am subtype "merged_polygon_closed.k"
    "naturalnumbers.below(merged_polygon_closed.C`num_vertices)"))
  (merge_seq_uniq_case_Am_TCC5-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (merge_seq_uniq_case_Am subtype "merged_polygon_closed.k"
    "naturalnumbers.below(merged_polygon_closed.C`num_vertices)")))
 (merge_seq_uniq_case_Am_TCC6 0
  (merge_seq_uniq_case_Am_TCC6-2 nil 3874129021
   ("" (then (skeep* + t) (assert) (subtype-tcc)) nil nil) nil shostak
   (merge_seq_uniq_case_Am subtype
    "(number_fields.+)((number_fields.+)(1, merged_polygon_closed.k), merged_polygon_closed.i0)"
    "below[M`length]"))
  (merge_seq_uniq_case_Am_TCC6-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (merge_seq_uniq_case_Am subtype
    "(number_fields.+)((number_fields.+)(1, merged_polygon_closed.k), merged_polygon_closed.i0)"
    "below[M`length]")))
 (merge_seq_uniq_case_Am_TCC7 0
  (merge_seq_uniq_case_Am_TCC7-2 nil 3874129021
   ("" (skeep*) (("" (assert) nil nil)) nil) nil shostak
   (merge_seq_uniq_case_Am subtype "merged_polygon_closed.l"
    "below[M`length]"))
  (merge_seq_uniq_case_Am_TCC7-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (merge_seq_uniq_case_Am subtype "merged_polygon_closed.l"
    "below[M`length]")))
 (merge_seq_uniq_case_Am_TCC8 0
  (merge_seq_uniq_case_Am_TCC8-2 nil 3874129021
   ("" (skeep)
    (("" (expand "nonempty?")
      (("" (expand "empty?")
        (("" (inst -11 "j0")
          (("" (expand "member")
            (("" (inst + "i0") (("" (ground) nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak
   (merge_seq_uniq_case_Am subtype
    "{j: naturalnumbers.below(merged_polygon_closed.M`length) | EXISTS (l: naturalnumbers.nat): booleans.AND(reals.<(l, j), merged_polygon_closed.M`seq(j) = merged_polygon_closed.M`seq(l))}"
    "(sets[naturalnumbers.below(merged_polygon_closed.M`length)].nonempty?)"))
  (merge_seq_uniq_case_Am_TCC8-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (merge_seq_uniq_case_Am subtype
    "{j: naturalnumbers.below(merged_polygon_closed.M`length) | EXISTS (l: naturalnumbers.nat): booleans.AND(reals.<(l, j), merged_polygon_closed.M`seq(j) = merged_polygon_closed.M`seq(l))}"
    "(sets[naturalnumbers.below(merged_polygon_closed.M`length)].nonempty?)")))
 (merge_seq_uniq_case_Am_TCC9 0
  (merge_seq_uniq_case_Am_TCC9-2 nil 3874129021
   ("" (skeep)
    (("" (expand "nonempty?")
      (("" (expand "empty?")
        (("" (inst -12 "i0")
          (("" (expand "member") (("" (ground) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   nil shostak
   (merge_seq_uniq_case_Am subtype
    "{i: naturalnumbers.below(merged_polygon_closed.M`length) | booleans.AND(reals.<(i, merged_polygon_closed.j0), merged_polygon_closed.M`seq(i) = merged_polygon_closed.M`seq(merged_polygon_closed.j0))}"
    "(sets[naturalnumbers.below(merged_polygon_closed.M`length)].nonempty?)"))
  (merge_seq_uniq_case_Am_TCC9-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (merge_seq_uniq_case_Am subtype
    "{i: naturalnumbers.below(merged_polygon_closed.M`length) | booleans.AND(reals.<(i, merged_polygon_closed.j0), merged_polygon_closed.M`seq(i) = merged_polygon_closed.M`seq(merged_polygon_closed.j0))}"
    "(sets[naturalnumbers.below(merged_polygon_closed.M`length)].nonempty?)")))
 (merge_seq_uniq_case_Am_TCC10 0
  (merge_seq_uniq_case_Am_TCC10-2 nil 3874129021
   ("" (skeep*)
    (("" (use "adj_merge_seq_vertices_distinct")
      (("" (ground) (("" (inst - "i") (("" (ground) nil nil)) nil))
        nil))
      nil))
    nil)
   nil shostak
   (merge_seq_uniq_case_Am subtype
    "polygon_merge.merge_seq(merged_polygon_closed.A, merged_polygon_closed.B)"
    "{V: finite_sequences[point_2d].finseq | FORALL (i: naturalnumbers.below((number_fields.-)(V`length, 1))): (booleans.NOT)(V`seq(i) = V`seq((number_fields.+)(1, i)))}"))
  (merge_seq_uniq_case_Am_TCC10-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (merge_seq_uniq_case_Am subtype
    "polygon_merge.merge_seq(merged_polygon_closed.A, merged_polygon_closed.B)"
    "{V: finite_sequences[point_2d].finseq | FORALL (i: naturalnumbers.below((number_fields.-)(V`length, 1))): (booleans.NOT)(V`seq(i) = V`seq((number_fields.+)(1, i)))}")))
 (merge_seq_uniq_case_Am_TCC11 0
  (merge_seq_uniq_case_Am_TCC11-2 nil 3874129021
   ("" (skeep*)
    (("" (use "adj_merge_seq_vertices_distinct")
      (("" (ground) (("" (inst - "i") (("" (ground) nil nil)) nil))
        nil))
      nil))
    nil)
   nil shostak
   (merge_seq_uniq_case_Am subtype
    "polygon_merge.merge_seq(merged_polygon_closed.A, merged_polygon_closed.B)"
    "{V: finite_sequences[point_2d].finseq | FORALL (i: naturalnumbers.below((number_fields.-)(V`length, 1))): (booleans.NOT)(V`seq(i) = V`seq((number_fields.+)(1, i)))}"))
  (merge_seq_uniq_case_Am_TCC11-1 nil 3874128969
   ("" (subtype-tcc) nil nil) nil nil
   (merge_seq_uniq_case_Am subtype
    "polygon_merge.merge_seq(merged_polygon_closed.A, merged_polygon_closed.B)"
    "{V: finite_sequences[point_2d].finseq | FORALL (i: naturalnumbers.below((number_fields.-)(V`length, 1))): (booleans.NOT)(V`seq(i) = V`seq((number_fields.+)(1, i)))}")))
 (merge_seq_uniq_case_Am 0
  (merge_seq_uniq_case_Am-1 nil 3874129021
   ("" (skeep*)
    (("" (lemma "merge_path_props")
      (("" (inst - "A" "B" "Am" "Bm" "M")
        (("" (ground)
          ((""
            (case "(FORALL (e: (edge_of_polygon?(Am))):
                                                                                                          only_vertex_intersections?(C, Am, e)) and
                                                                                                        (FORALL (e: (edge_of_polygon?(Bm))):
                                                                                                          only_vertex_intersections?(C, Bm, e))")
            (("1" (flatten)
              (("1"
                (case "forall (h: (edge_of_polygon?(C))): edge_of_polygon?(Bm)(h)")
                (("1" (typepred "Bm")
                  (("1" (expand "ccw_merge_pre_condition")
                    (("1" (expand "merge_pre_condition")
                      (("1" (skeep)
                        (("1" (lemma "in_out_for_overlapping_polygons")
                          (("1" (inst - "Am" "C" "p" "M`seq(i0 - 1)")
                            (("1" (assert)
                              (("1"
                                (lemma
                                 "same_perim_pts_imp_same_interior_pts")
                                (("1"
                                  (inst - "Bm" "C")
                                  (("1"
                                    (split -1)
                                    (("1"
                                      (ground)
                                      (("1"
                                        (skeep)
                                        (("1"
                                          (case-replace "j = 0")
                                          (("1"
                                            (expand "vertex?")
                                            (("1"
                                              (skeep*)
                                              (("1"
                                                (inst
                                                 -
                                                 "Am`vertices(prev_index(Am, i!2))")
                                                (("1"
                                                  (ground)
                                                  (("1"
                                                    (expand
                                                     "edge_of_polygon?"
                                                     -23)
                                                    (("1"
                                                      (skeep)
                                                      (("1"
                                                        (expand
                                                         "edges_of_polygon"
                                                         -23)
                                                        (("1"
                                                          (hide -3)
                                                          (("1"
                                                            (rewrite
                                                             -25)
                                                            (("1"
                                                              (case
                                                               "next_index(Am, i!3) = i!2")
                                                              (("1"
                                                                (replace
                                                                 -1
                                                                 1
                                                                 :dir
                                                                 rl)
                                                                (("1"
                                                                  (ground)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (typepred
                                                                 "Am`vertices")
                                                                (("2"
                                                                  (expand
                                                                   "uniq_vertex_list?")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "next_index(Am, i!3)"
                                                                     "i!2")
                                                                    (("1"
                                                                      (ground)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (ground)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand
                                                     "on_perimeter_vertex_path?")
                                                    (("2"
                                                      (rewrite
                                                       "rem_minus_1_eq_prev_index"
                                                       :dir
                                                       rl)
                                                      (("2"
                                                        (inst
                                                         +
                                                         "rem(Am`num_vertices)(i!2 - 1 - find_index(Am, u))")
                                                        (("1"
                                                          (rewrite
                                                           "rem_sum1")
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (replace
                                                           -4
                                                           1
                                                           :dir
                                                           rl)
                                                          (("2"
                                                            (rewrite
                                                             "find_index_self_index")
                                                            (("2"
                                                              (replace
                                                               -2
                                                               1
                                                               :dir
                                                               rl)
                                                              (("2"
                                                                (rewrite
                                                                 "find_index_self_index")
                                                                (("2"
                                                                  (lemma
                                                                   "rem_sum1")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "Am`num_vertices"
                                                                     "-1"
                                                                     "i!2 - i!1")
                                                                    (("2"
                                                                      (replace
                                                                       -1
                                                                       1
                                                                       :dir
                                                                       rl)
                                                                      (("2"
                                                                        (rewrite
                                                                         "rem_minus_one")
                                                                        (("2"
                                                                          (lemma
                                                                           "rem_add_one")
                                                                          (("2"
                                                                            (inst
                                                                             -
                                                                             "Am`num_vertices"
                                                                             "Am`num_vertices - 1 + (i!2 - i!1)")
                                                                            (("2"
                                                                              (ground)
                                                                              (("2"
                                                                                (hide-all-but
                                                                                 (-2
                                                                                  -5
                                                                                  -7
                                                                                  2))
                                                                                (("2"
                                                                                  (lemma
                                                                                   "rem_sum1")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "Am`num_vertices"
                                                                                     "Am`num_vertices"
                                                                                     "i!2 - i!1")
                                                                                    (("2"
                                                                                      (rewrite
                                                                                       "rem_self")
                                                                                      (("2"
                                                                                        (replace
                                                                                         -1
                                                                                         :dir
                                                                                         rl
                                                                                         :hide?
                                                                                         t)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (use
                                                                                             "rem_diff_eq_0_shift")
                                                                                            (("2"
                                                                                              (ground)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "vertex?")
                                                  (("2"
                                                    (inst
                                                     +
                                                     "prev_index(Am, i!2)")
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "prev_index")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (lemma
                                                 "no_outgoing_edges_from_M")
                                                (("2"
                                                  (inst
                                                   -
                                                   "A"
                                                   "B"
                                                   "Am"
                                                   "Bm"
                                                   "M"
                                                   "edges_of_polygon(C)(j - 1)"
                                                   "edges_of_polygon(C)(j)"
                                                   "i0 + j")
                                                  (("2"
                                                    (ground)
                                                    (("1"
                                                      (inst + "e")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (hide -2)
                                                          (("1"
                                                            (rewrite
                                                             -25)
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (rewrite -25)
                                                      nil
                                                      nil)
                                                     ("3"
                                                      (rewrite -25)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide-all-but (-1 -2 -7 3))
                                        (("2"
                                          (lemma
                                           "injected_polygons_contained")
                                          (("2"
                                            (inst - "A" "B" "Am" "Bm")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (hide 1 3)
                                                  (("1"
                                                    (expand
                                                     "polygon_contained?")
                                                    (("1"
                                                      (skeep)
                                                      (("1"
                                                        (lemma
                                                         "same_perim_pts_imp_same_interior_pts")
                                                        (("1"
                                                          (inst
                                                           -
                                                           "C"
                                                           "Bm")
                                                          (("1"
                                                            (case
                                                             "FORALL (p: point_2d):
                                                                                                                                                                                                                                                                                              point_on_polygon_perimeter?(C)(p) IFF
                                                                                                                                                                                                                                                                                               point_on_polygon_perimeter?(Bm)(p)")
                                                            (("1"
                                                              (ground)
                                                              (("1"
                                                                (inst
                                                                 -4
                                                                 "p!1")
                                                                (("1"
                                                                  (ground)
                                                                  (("1"
                                                                    (inst?
                                                                     -2)
                                                                    (("1"
                                                                      (ground)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               (-5 1))
                                                              (("2"
                                                                (skeep)
                                                                (("2"
                                                                  (lemma
                                                                   "edges_included_imp_edge_sets_eq")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "C"
                                                                     "Bm")
                                                                    (("2"
                                                                      (split
                                                                       -1)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (ground)
                                                                          (("1"
                                                                            (expand
                                                                             "point_on_polygon_perimeter?")
                                                                            (("1"
                                                                              (skeep)
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (inst?
                                                                                   -4)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "point_on_polygon_perimeter?")
                                                                            (("2"
                                                                              (skeep)
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (inst?)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (typepred "B")
                                              (("2"
                                                (expand
                                                 "ccw_merge_pre_condition")
                                                (("2"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3"
                                        (inst - "p")
                                        (("3" (assert) nil nil))
                                        nil)
                                       ("4"
                                        (hide-all-but (-16 1))
                                        (("4"
                                          (expand "edge_of_polygon?")
                                          (("4"
                                            (skeep)
                                            (("4"
                                              (expand
                                               "edges_of_polygon")
                                              (("4"
                                                (flatten)
                                                (("4"
                                                  (expand "vertex?")
                                                  (("4"
                                                    (inst?)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide-all-but (-6 1))
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (ground)
                                          (("1"
                                            (expand
                                             "point_on_polygon_perimeter?")
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (lemma
                                                   "edges_included_imp_edge_sets_eq")
                                                  (("1"
                                                    (inst - "C" "Bm")
                                                    (("1"
                                                      (ground)
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (skeep)
                                                        (("2"
                                                          (inst?)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand
                                             "point_on_polygon_perimeter?")
                                            (("2"
                                              (skeep)
                                              (("2"
                                                (inst?)
                                                (("2" (inst?) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (lemma "ccw_shared_edges_imp_ccw")
                              (("2"
                                (inst - "A" "B" "C" "M" "i0")
                                (("2"
                                  (assert)
                                  (("2"
                                    (replace -14 1)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (lemma
                                         "edges_included_imp_ccw_eqv")
                                        (("2"
                                          (inst - "C" "Bm")
                                          (("2"
                                            (ground)
                                            (("2"
                                              (hide-all-but (-5 1))
                                              (("2"
                                                (skeep)
                                                (("2" (inst?) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (skeep + t)
                  (("2" (expand "edge_of_polygon?" (-1 1))
                    (("2" (skeep)
                      (("2" (rewrite -13)
                        (("2" (inst-cp -4 "i0 + i")
                          (("2" (split -5)
                            (("1" (typepred "h")
                              (("1"
                                (typepred "i")
                                (("1"
                                  (lemma
                                   "edge_on_perim_imp_outgoing_edge")
                                  (("1"
                                    (inst
                                     -
                                     "Am"
                                     "C"
                                     "M`seq(i0 - 1)"
                                     "h")
                                    (("1"
                                      (ground)
                                      (("1"
                                        (skeep - t)
                                        (("1"
                                          (case-replace "i!1 = 0")
                                          (("1"
                                            (expand "vertex?" -4)
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (inst
                                                 -
                                                 "Am`vertices(prev_index(Am, i!2))")
                                                (("1"
                                                  (split -8)
                                                  (("1"
                                                    (lemma
                                                     "shared_endpoints_imp_same_edge")
                                                    (("1"
                                                      (inst
                                                       -
                                                       "Am"
                                                       "(# p1 := M`seq(i0 - 1), p2 := M`seq(i0) #)"
                                                       "edges_of_polygon(Am)(prev_index(Am, i!2))")
                                                      (("1"
                                                        (ground)
                                                        (("1"
                                                          (expand
                                                           "edges_of_polygon")
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "edges_of_polygon")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (rewrite
                                                               -24)
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (lemma
                                                         "adj_merge_seq_vertices_distinct")
                                                        (("2"
                                                          (inst
                                                           -
                                                           "A"
                                                           "B"
                                                           "Am"
                                                           "Bm"
                                                           "M")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (inst
                                                               -
                                                               "i0 - 1")
                                                              (("2"
                                                                (ground)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (case "h`p2 = v")
                                                    (("1"
                                                      (lemma
                                                       "shared_endpoints_imp_same_edge")
                                                      (("1"
                                                        (inst
                                                         -
                                                         "Am"
                                                         "(# p1 := M`seq(i + i0), p2 := M`seq(1 + i + i0) #)"
                                                         "(# p1 := M`seq(i0 - 1), p2 := M`seq(i0) #)")
                                                        (("1"
                                                          (ground)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (typepred
                                                               "min[below(M`length)]
                                                                                                          ({j: below(M`length) |
                                                                                                              EXISTS (l: nat): l < j AND M`seq(j) = M`seq(l)})")
                                                              (("1"
                                                                (skeep)
                                                                (("1"
                                                                  (replace
                                                                   -32)
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "i0 + i")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (inst
                                                                         +
                                                                         "i0 - 1")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "nonempty?")
                                                                (("2"
                                                                  (expand
                                                                   "empty?")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "j0")
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (inst
                                                                         +
                                                                         "i0")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (skeep)
                                                                (("3"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (replace
                                                             -12
                                                             -1
                                                             :dir
                                                             rl)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (rewrite
                                                                 -25)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (lemma
                                                           "adj_merge_seq_vertices_distinct")
                                                          (("2"
                                                            (inst
                                                             -
                                                             "A"
                                                             "B"
                                                             "Am"
                                                             "Bm"
                                                             "M")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "i0 - 1")
                                                                (("2"
                                                                  (ground)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (lemma
                                                           "adj_merge_seq_vertices_distinct")
                                                          (("3"
                                                            (inst
                                                             -
                                                             "A"
                                                             "B"
                                                             "Am"
                                                             "Bm"
                                                             "M")
                                                            (("3"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "on_perimeter_vertex_path?")
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (hide 2)
                                                          (("2"
                                                            (rewrite
                                                             "rem_minus_1_eq_prev_index"
                                                             2
                                                             :dir
                                                             rl)
                                                            (("2"
                                                              (inst
                                                               +
                                                               "rem(Am`num_vertices)(i!2 - find_index(Am, h`p2) - 1)")
                                                              (("1"
                                                                (rewrite
                                                                 "rem_sum1")
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (replace
                                                                 -4
                                                                 1
                                                                 :dir
                                                                 rl)
                                                                (("2"
                                                                  (rewrite
                                                                   "find_index_self_index")
                                                                  (("2"
                                                                    (lemma
                                                                     "rem_sum1")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "Am`num_vertices"
                                                                       "Am`num_vertices"
                                                                       "i!2 - find_index(Am, h`p2)")
                                                                      (("2"
                                                                        (rewrite
                                                                         "rem_self")
                                                                        (("2"
                                                                          (replace
                                                                           -1
                                                                           :dir
                                                                           rl
                                                                           :hide?
                                                                           t)
                                                                          (("2"
                                                                            (lemma
                                                                             "rem_add_one")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "Am`num_vertices"
                                                                               "i!2 - find_index(Am, h`p2) - 1")
                                                                              (("2"
                                                                                (ground)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "rem_diff_eq_0_shift")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "Am`num_vertices"
                                                                                     "find_index(Am, h`p2)"
                                                                                     "i!2")
                                                                                    (("1"
                                                                                      (ground)
                                                                                      (("1"
                                                                                        (use
                                                                                         "find_index_self")
                                                                                        (("1"
                                                                                          (ground)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (typepred
                                                                                       "find_index(Am, h`p2)")
                                                                                      (("2"
                                                                                        (ground)
                                                                                        (("2"
                                                                                          (use
                                                                                           "vertex_find_index")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "vertex?")
                                                                                              (("2"
                                                                                                (hide-all-but
                                                                                                 (-13
                                                                                                  -14
                                                                                                  1))
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "edge_of_polygon?")
                                                                                                  (("2"
                                                                                                    (skeep)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       +
                                                                                                       "next_index(Am, i_1)")
                                                                                                      (("2"
                                                                                                        (grind)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "vertex?")
                                                  (("2"
                                                    (inst
                                                     +
                                                     "prev_index(Am, i!2)")
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (lemma
                                             "no_outgoing_edges_from_M")
                                            (("2"
                                              (inst
                                               -
                                               "A"
                                               "B"
                                               "Am"
                                               "Bm"
                                               "M"
                                               "edges_of_polygon(C)(prev_index(C, i!1))"
                                               "edges_of_polygon(C)(i!1)"
                                               "i0 + i!1")
                                              (("2"
                                                (ground)
                                                (("1"
                                                  (inst + "s")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (rewrite -24)
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "prev_index")
                                                  (("2"
                                                    (rewrite -23)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (rewrite -23)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide-all-but (-14 1))
                                        (("2"
                                          (expand "edge_of_polygon?")
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (expand
                                               "edges_of_polygon")
                                              (("2"
                                                (expand "vertex?")
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (ground)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (lemma
                                       "ccw_shared_edges_imp_ccw")
                                      (("2"
                                        (inst - "A" "B" "C" "M" "i0")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (rewrite -17)
                                            (("2"
                                              (ground)
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (inst -16 "k")
                                                  (("1"
                                                    (hide-all-but
                                                     (-16 1))
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 "uniq_vertex_list?")
                                                (("2"
                                                  (hide-all-but
                                                   (-13 -17 1))
                                                  (("2"
                                                    (skeep + t)
                                                    (("2"
                                                      (typepred
                                                       "min[below(M`length)]
                      ({j: below(M`length) |
                          EXISTS (l: nat): l < j AND M`seq(j) = M`seq(l)})")
                                                      (("1"
                                                        (skeep)
                                                        (("1"
                                                          (replace -9)
                                                          (("1"
                                                            (expand
                                                             "^")
                                                            (("1"
                                                              (case
                                                               "j < i!1")
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "i!1")
                                                                (("1"
                                                                  (ground)
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (inst
                                                                 -
                                                                 "j")
                                                                (("2"
                                                                  (ground)
                                                                  (("2"
                                                                    (inst
                                                                     +
                                                                     "i!1")
                                                                    (("2"
                                                                      (ground)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "nonempty?")
                                                        (("2"
                                                          (expand
                                                           "empty?")
                                                          (("2"
                                                            (inst
                                                             -
                                                             "j0")
                                                            (("2"
                                                              (expand
                                                               "member")
                                                              (("2"
                                                                (inst
                                                                 +
                                                                 "i0")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (skeep)
                                                        (("3"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "edge_of_polygon?" -1)
                              (("2"
                                (skeep)
                                (("2"
                                  (hide-all-but (-1 -2 1))
                                  (("2"
                                    (inst?)
                                    (("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (lemma "merge_seq_only_vertex_int_subseq")
              (("2" (inst - "A" "B" "Am" "Bm" "M^(i0,j0)" "i0" "j0")
                (("2" (assert)
                  (("2" (flatten)
                    (("2" (lemma "only_vertex_int_seq_imp_polygon")
                      (("2" (split 1)
                        (("1" (skeep)
                          (("1" (inst - "M ^ (i0, j0)" "C" "Am" "e")
                            (("1" (inst -2 "e")
                              (("1"
                                (assert)
                                (("1"
                                  (expand "^" 2)
                                  (("1"
                                    (expand "min")
                                    (("1"
                                      (rewrite -13)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (apply-extensionality
                                           :hide?
                                           t)
                                          (("1"
                                            (hide-all-but (-13 1))
                                            (("1"
                                              (typepred "x!1")
                                              (("1"
                                                (expand "min")
                                                (("1"
                                                  (rewrite -2)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (skeep)
                                            (("2"
                                              (expand "min")
                                              (("2"
                                                (replace -9 1)
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (skeep + t)
                                            (("3"
                                              (expand "min")
                                              (("3" (assert) nil nil))
                                              nil))
                                            nil)
                                           ("4"
                                            (expand "min")
                                            (("4" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (skeep + t)
                              (("2"
                                (expand "^" (-1 -2))
                                (("2"
                                  (lemma
                                   "adj_merge_seq_vertices_distinct")
                                  (("2"
                                    (inst - "A" "B" "Am" "Bm" "M")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (inst - "i + i0")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (skeep)
                          (("2" (inst - "M ^ (i0, j0)" "C" "Bm" "e")
                            (("1" (inst -3 "e")
                              (("1"
                                (assert)
                                (("1"
                                  (expand "^" 2)
                                  (("1"
                                    (expand "min")
                                    (("1"
                                      (rewrite -13)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (apply-extensionality
                                           :hide?
                                           t)
                                          (("1"
                                            (hide-all-but (-13 1))
                                            (("1"
                                              (typepred "x!1")
                                              (("1"
                                                (expand "min")
                                                (("1"
                                                  (rewrite -2)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (skeep)
                                            (("2"
                                              (expand "min")
                                              (("2"
                                                (replace -9 1)
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (skeep + t)
                                            (("3"
                                              (expand "min")
                                              (("3" (assert) nil nil))
                                              nil))
                                            nil)
                                           ("4"
                                            (expand "min")
                                            (("4" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (skeep + t)
                              (("2"
                                (expand "^" (-1 -2))
                                (("2"
                                  (lemma
                                   "adj_merge_seq_vertices_distinct")
                                  (("2"
                                    (inst - "A" "B" "Am" "Bm" "M")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (inst - "i + i0")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)))

